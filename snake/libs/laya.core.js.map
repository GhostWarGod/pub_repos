{"version":3,"names":["ClassUtils","static","className","classDef","_classMap","compClass","getClass","console","warn","dummy","Config","isAntialias","useWebGL2","FPS","useRetinalCanvas","animationInterval","webGL2D_MeshAllocMaxMem","defaultFontSize","defaultFont","isAlpha","isDepth","isfailIfMajorPerformanceCaveat","powerPreference","premultipliedAlpha","isStencil","preserveDrawingBuffer","printWebglOrder","fontFamilyMap","fixedFrames","destroyResourceImmediatelyDefault","Const","ENUM_TEXTALIGN_DEFAULT","ENUM_TEXTALIGN_CENTER","ENUM_TEXTALIGN_RIGHT","BYTES_PE","BYTES_PIDX","MAX_CLIP_SIZE","NodeFlags","NOT_ACTIVE","ACTIVE_INHIERARCHY","AWAKED","NOT_READY","DISPLAY","HAS_ZORDER","HAS_MOUSE","DISPLAYED_INSTAGE","DRAWCALL_OPTIMIZE","PROCESS_COLLISIONS","PROCESS_TRIGGERS","HAS_SCRIPT","ESCAPE_DRAWING_TO_TEXTURE","DISABLE_INNER_CLIPPING","DISABLE_OUTER_CLIPPING","DISABLE_VISIBILITY","EDITING_NODE","HIDE_BY_EDITOR","LOCK_BY_EDITOR","HideFlags","HideInHierarchy","HideInInspector","DontSave","HideAndDontSave","ILaya","Loader","Context","Browser","Laya","loader","timer","systemTimer","physicsTimer","stage","LayaEnv","version","isPlaying","isPreview","isConch","window","conch","Pool","sign","_poolDic","length","item","POOLSIGN","getPoolBySign","push","instance","constructor","_$gid","recover","cla","_CLSID","cls","getItemByClass","_getClassSign","rst","pool","pop","createFun","caller","call","_gid","_pi","Math","PI","_pi2","Utils","angle","radian","color","isNaN","str","toString","value","indexOf","p1","p2","arr","substring","split","len","i","parseFloat","round","charAt","temp","parseInt","source","array","points","x","y","radix","result","path","lastIndexOf","ext","toLowerCase","j","k","ext2","newExt","excludeDot","Component","hideFlags","this","_hideFlags","_status","_enabled","_singleton","_id","getGID","_initialize","_extra","hasHideFlag","flag","id","enabled","owner","_setActive","activeInHierarchy","awaked","destroyed","_isScript","_resetComp","_enableState","_setOwner","node","_setBit","_onAdded","onAdded","_onAwake","_onEnable","onEnable","_onDisable","onDisable","_onDestroy","_parse","data","interactMap","_parseInteractive","spriteMap","_cloneTo","dest","runInEditor","onAwake","_a","_is3D","_scene","_componentDriver","add","setupScript","_b","remove","offAllCaller","destroy","_destroyComponent","_destroy","second","onDestroy","onReset","recoverByClass","_toDestroys","Matrix","a","b","c","d","tx","ty","nums","_bTransform","_createFun","_checkTransform","identity","setTranslate","translate","scale","rotate","cos","sin","a1","c1","tx1","skew","tanX","tan","tanY","b1","invertTransformPoint","out","d1","n","a2","b2","c2","d2","tx2","ty2","setTo","transformPoint","transformPointN","getScaleX","sqrt","getScaleY","invert","concat","matrix","m1","m2","aa","ab","ac","ad","atx","aty","ba","bb","bc","bd","btx","bty","scaleEx","rotateEx","clone","dec","create","copyTo","EMPTY","TEMP","Point","reset","distance","normalize","copy","point","Rectangle","width","height","right","bottom","copyFrom","contains","intersects","rect","intersection","max","min","union","addPoint","equals","_getBoundPoints","_temB","sp","_temA","pointList","minX","maxX","minY","maxY","tPoint","isEmpty","HDREncodeFormat","TextureFormat","LayaGL","Delegate","_flag","_items","callback","target","args","index","findIndex","once","splice","clear","forEach","clearForTarget","count","invoke","cnt","fixedArgs","err","error","Event","type","MOUSE_EVENTS","has","touchId","delta","button","touchPos","currentTarget","stopPropagation","_stopped","touches","_touches","altKey","nativeEvent","ctrlKey","shiftKey","metaKey","key","keyCode","charCode","code","keyLocation","location","stageX","stageY","MOUSE_DOWN","MOUSE_UP","RIGHT_MOUSE_DOWN","RIGHT_MOUSE_UP","CLICK","RIGHT_CLICK","MOUSE_MOVE","MOUSE_OVER","MOUSE_OUT","MOUSE_WHEEL","ROLL_OVER","ROLL_OUT","DOUBLE_CLICK","MOUSE_DRAG","MOUSE_DRAG_END","DRAG_START","DRAG_MOVE","DRAG_END","KEY_DOWN","KEY_PRESS","KEY_UP","CHANGE","CHANGED","WILL_RESIZE","RESIZE","ADDED","REMOVED","UNDISPLAY","ERROR","COMPLETE","LOADED","READY","PROGRESS","INPUT","RENDER","OPEN","MESSAGE","CLOSE","FRAME","ENTER","SELECT","BLUR","FOCUS","VISIBILITY_CHANGE","FOCUS_CHANGE","PLAYED","PAUSED","STOPPED","START","END","LINK","LABEL","FULL_SCREEN_CHANGE","DEVICE_LOST","TRANSFORM_CHANGED","LAYERCHANGE","staticMask","TRIGGER_ENTER","TRIGGER_STAY","TRIGGER_EXIT","COLLISION_ENTER","COLLISION_STAY","COLLISION_EXIT","JOINT_BREAK","_Add_Script","Set","eventPool","EventDispatcher","onStartListeningToType","hasListener","listeners","_events","event","ret","Array","isArray","undefined","ev","on","listener","arguments","off","offAll","FilterMode","RenderCapable","_idCounter","_disposingCounter","_clearRetry","Resource","cpuMemory","_cpuMemory","gpuMemory","_gpuMemory","size","cpuSize","gpuSize","loading","frameLoop","_destroyUnusedResources","force","destroyCnt","_idResourcesMap","res","lock","_referenceCount","DEBUG","debug","_destroyed","obsolute","_obsolute","referenceCount","managed","super","destroyedImmediately","_setCPUMemory","offsetValue","_addCPUMemory","_setGPUMemory","_addGPUMemory","_setCreateURL","url","uuid","isCreateFromURL","endsWith","_addReference","_removeReference","_clearReference","_recoverResource","_disposeResource","_activeResource","Object","getPrototypeOf","name","clearRes","BaseTexture","_width","_height","dimension","_dimension","format","_format","mipmap","_texture","mipmapCount","anisoLevel","filterMode","wrapModeU","wrapU","wrapModeV","wrapV","wrapModeW","wrapW","compareMode","textureContext","setTextureCompareMode","gammaCorrection","baseMipmapLevel","maxMipmapLevel","gammaSpace","useSRGBLoad","_gammaSpace","hdrEncodeFormat","NONE","gpuCompressFormat","R8G8B8","R8G8B8A8","R16G16B16","R16G16B16A16","R32G32B32","R32G32B32A32","R5G6B5","Alpha8","DXT1","DXT3","DXT5","ETC1RGB","ETC2RGB","ETC2RGBA","ETC2SRGB_Alpha8","ETC2SRGB","PVRTCRGB_2BPPV","PVRTCRGBA_2BPPV","PVRTCRGB_4BPPV","PVRTCRGBA_4BPPV","ASTC4x4","ASTC4x4SRGB","ASTC6x6","ASTC6x6SRGB","ASTC8x8","ASTC8x8SRGB","ASTC10x10","ASTC10x10SRGB","ASTC12x12","ASTC12x12SRGB","_getFormatByteCount","_getSource","resource","defaultTexture","dispose","Byte","_sysEndian","buffer","ArrayBuffer","DataView","setInt16","Int16Array","LITTLE_ENDIAN","BIG_ENDIAN","_xd_","_allocated_","_pos_","_length","_u8d_","Uint8Array","_d_","byteLength","_resizeBuffer","rstBuffer","slice","endian","floor","newByteView","set","subarray","getString","readString","_rUTF","getUint16","getFloat32Array","start","readFloat32Array","end","v","Float32Array","getUint8Array","readUint8Array","getInt16Array","readInt16Array","getFloat32","readFloat32","getFloat64","readFloat64","writeFloat32","_ensureWrite","setFloat32","writeFloat64","setFloat64","getInt32","readInt32","float","getUint32","readUint32","writeInt32","setInt32","writeUint32","setUint32","getInt16","readInt16","us","readUint16","writeUint16","setUint16","writeInt16","getUint8","readUint8","writeUint8","setUint8","_getUInt8","pos","_readUInt8","_getUint16","_readUint16","_getMatrix","_readMatrix","f","String","fromCharCode","u","strs","_code","_offset","_lead","_trail","join","getCustomString","readCustomString","ulen","bytesAvailable","__getBuffer","writeUTFBytes","sz","charCodeAt","writeByte","Number","_p1","_p2","_b1","_b2","_b3","_b4","writeUTFString","tPos","dPos","writeUTFString32","readUTFString","readUTFBytes","readUTFString32","getUTFString","lastBytes","getUTFBytes","setInt8","readByte","getInt8","getByte","lengthToEnsure","writeArrayBuffer","arraybuffer","offset","uint8array","readArrayBuffer","HalfFloatUtils","e","_baseTable","_shiftTable","_mantissaTable","m","_exponentTable","_offsetTable","num","_floatView","_uint32View","float16bits","_buffer","Uint32Array","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","DDPF_LUMINANCE","DDSTextureInfo","isCube","bpp","blockBytes","dataOffset","compressed","sourceData","header","Int32Array","fourCC","isFourCC","isRGB","isLuminance","isCompressed","layaTexFormat","renderEngine","getCapable","COMPRESS_TEXTURE_S3TC","COMPRESS_TEXTURE_S3TC_SRGB","TextureDimension","GL_FORMAT_RGBA","GL_FORMAT_RGB","GL_DATATYPE_UNSIGNED_BYTE","KTXTextureInfo","glFormat","glInternalFormat","glType","glTypeSize","sRGB","FileIdentifier","createKTX1Info","dataSize","BYTES_PER_ELEMENT","headerDataView","littleEndian","pixelWidth","pixelHeight","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","formatInfo","getLayaFormat","layaFormat","sRGBData","layaDemision","Tex2D","CubeArray","Cube","Texture2DArray","IdentifierByteSize","compress","headerOffset","Texture2D","pixels","grayTexture","setPixelsData","whiteTexture","blackTexture","TextureFormat_R16G16B16A16","floatPixle","Uint16Array","normalTexture","errorTexture","propertyParams","constructParams","pixelDataArrays","usePixelData","byte","texture","textureWidth","pixelDataLength","log","TextureFormat_R32G32B32A32","convertToNumber","imageSource","canread","srgb","pma","premultiplyAlpha","setImageData","setProperties","_nativeObj","_pixels","getImageData","canvas","context","drawImage","ddsInfo","getDDSTextureInfo","setDDSData","ktxInfo","getKTXTextureInfo","setKTXData","complete","load","TEXTURE2D","canRead","_canRead","createTextureInternal","invertY","setTextureImageData","setTexturePixelsData","setSubPixelsData","xOffset","yOffset","mipmapLevel","generateMipmap","setTextureSubPixelsData","setTextureDDSData","setTextureKTXData","setHDRData","hdrInfo","setTextureHDRData","getPixels","Error","BaseShader","RenderState2D","mat","matArray","m4","EMPTYMAT4_ARRAY","TEMPMAT4_ARRAY","worldScissorTest","worldAlpha","RenderTargetFormat","RenderClearFlag","BlendFactor","_MAXSIZE","worldMatrix4","worldMatrix","matWVP","InvertY","Color","pow","r","g","equal","toFIxed","toLinear","gammaToLinearSpace","toGamma","linearToGammaSpace","cloneTo","destObject","destColor","setValue","fromArray","toArray","RED","GREEN","BLUE","CYAN","YELLOW","MAGENTA","GRAY","WHITE","BLACK","CLEAR","NativeRenderTexture2D","currentActive","_currentActive","depthStencilFormat","_depthStencilFormat","getIsReady","sourceWidth","sourceHeight","offsetX","offsetY","DEPTH_16","_mgrKey","_colorFormat","_create","samples","_start","_end","conchRenderTexture2D","_renderTarget","_textures","restore","getData","recycle","_clearColor","rtStack","defuv","flipyuv","RenderTexture2D","None","_invertY","_isCube","_samples","_generateMipmap","createRenderTargetInternal","rt","w","h","top","bindRenderTarget","bindoutScreenTarget","viewport","scissor","_lastRT","_lastWidth","_lastHeight","activeShader","unbindRenderTarget","clearRenderTexture","Depth","getRenderTextureData","_clearLinearColor","conchConfig","conchWebGL","WebGLRTMgr","dict","RenderStateContext","DepthTestCMD","createRenderStateComand","DepthMaskCMD","DepthFuncCMD","StencilTestCMD","StencilMaskCMD","StencilFuncCMD","stencilOpCMD","BlendCMD","BlendEquationCMD","BlendEquationSeparateCMD","BlendFuncCMD","BlendFuncSeperateCMD","CullFaceCMD","FrontFaceCMD","_GLRenderState","setDepthTest","setDepthMask","setDepthFunc","setStencilTest","setStencilMask","fun","ref","setStencilFunc","fail","zfail","zpass","setstencilOp","setBlend","blendEquation","setBlendEquation","blendEquationRGB","blendEquationAlpha","setBlendEquationSeparate","sFactor","dFactor","setBlendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","setBlendFuncSeperate","setCullFace","setFrontFace","stencilFuncArray","blendEquationSeparateArray","blenfunArray","blendFuncSeperateArray","stencilOpArray","BlendMode","fns","BlendNormal","BlendAdd","BlendMultiply","BlendScreen","BlendOverlay","BlendLight","BlendMask","BlendDestinationOut","BlendAddOld","BlendSourceAlpha","targetFns","BlendNormalTarget","BlendAddTarget","BlendMultiplyTarget","BlendScreenTarget","BlendOverlayTarget","BlendLightTarget","BlendAddTargetOld","One","OneMinusSourceAlpha","DestinationAlpha","DestinationColor","OneMinusSourceColor","Zero","SourceAlpha","activeBlendFunction","NAMES","TOINT","normal","multiply","screen","overlay","light","mask","lighter","lighter_old","add_old","NORMAL","MASK","LIGHTER","_rect1","_rect2","Texture","outTexture","tex","btex","uv","DEF_UV","bitmap","dwidth","dheight","u1","v1","u2","v2","inAltasUVWidth","inAltasUVHeight","oriUV","moveUV","bitmapScale","scaleRate","texScaleRate","_uv","uvrect","_w","_h","_bitmap","cb","recoverBitmap","Promise","resolve","then","bit","run","getTexturePixels","st","dst","tex2d","texw","texh","tex2dw","tex2dh","draww","drawh","marginL","marginT","rePosX","rePosY","wstride","pix","atlasPosX","atlasPosY","ctx","asBitmap","stu","stv","uk","vk","_drawTextureM","_targets","flush","dt","disposeBitmap","valid","getCachedClip","_clipCache","Map","get","createFromTexture","_sizeGrid","BlendEquationSeparate","BlendType","CompareFunction","CullMode","StencilOperation","NO_UV","INV_UV","AssetDb","uuidMap","shaderNameMap","metaMap","UUID_to_URL","UUID_to_URL_async","URL_to_UUID_async","resolveURL","onResolve","startsWith","inst","shaderName_to_URL","shaderName","shaderName_to_URL_async","getMeta","getSubAssetURL","subAssetName","subAssetExt","replaceFileExtension","URL","rootPath","basePath","protocol","getPath","host","pathname","overrideExtension","_url","formatURL","_path","base","url2","char1","customFormat","ver","basePaths","hasExtOverrides","extold","getFileExtension","overrideFileExts","parts","ofs","originalExts","targetExt","IncludeFile","block","word","substr","ofs2","useFuns","txt","codes","funs","curUseID","funnames","script","begin","words","splitToWords","getWith","getFunsScript","funsdef","ShaderNode","includefiles","childs","text","z","setParent","parent","setCondition","condition","conditionType","replace","__condition","toscript","def","_toscript","__id","ifdef","__noCompileEnable","noCompile","o","funsCode","file","_clearCR","RegExp","_splitToWordExps3","CullStateMap","Back","Front","Off","BlendStateMap","Disable","BLEND_DISABLE","All","BLEND_ENABLE_ALL","Seperate","BLEND_ENABLE_SEPERATE","BlendFactorMap","SourceColor","OneMinusDestinationColor","OneMinusDestinationAlpha","SourceAlphaSaturate","BlendColor","OneMinusBlendColor","BlendEquationMap","Add","ADD","Subtract","SUBTRACT","Reverse_substract","REVERSE_SUBTRACT","Min","MIN","Max","MAX","CompareFunctionMap","Never","Less","Equal","LessEqual","Greater","NotEqual","GreaterEqual","Always","StencilOperationMap","Keep","Replace","IncrementSaturate","DecrementSaturate","Invert","IncrementWrap","DecrementWrap","ShaderCompile","fileName","allowReplace","includes","vs","ps","vsNode","psNode","includeNames","defs","_compileToTree","inc","_loadIncludesDeep","toLoad","includesCnt","map","tc","files","codeName","preNode","fname","lines","src","match","IFDEF_YES","IFDEF_ELSE","includeFile","includeName","loadIncludeFileSync","obj","renderState","cull","blend","srcBlend","dstBlend","srcBlendRGB","dstBlendRGB","srcBlendAlpha","dstBlendAlpha","depthTest","depthWrite","stencilRef","stencilTest","stencilWrite","stencilOp","stencilFail","stencilZFail","stencilZPass","IFDEF_NO","IFDEF_PARENT","DefineDatas","_mask","_intersectionDefineDatas","define","unionMask","_index","maskStart","_value","endIndex","newValue","addDefineDatas","addMask","removeDefineDatas","removeMask","destDefineData","destMask","ShaderDefine","_texGammaDefine","ShaderVariant","shader","_shader","subShaderIndex","_subShaderIndex","passIndex","_passIndex","defineNames","_defineNames","defines","subShader","getSubShaderAt","pass","_passes","validDefine","_validDefine","defname","Shader3D","getDefineByName","_name","other","otherDefines","ShaderVariantCollection","_allCompiled","_variants","allCompiled","variantCount","variant","contatins","getByIndex","compile","variants","compileShaderByDefineNames","MathUtils3D","abs","zeroTolerance","n1","n2","isZero","MaxValue","MinValue","Deg2Rad","Vector2","nearEqual","writeTo","destVector2","s","forNativeElement","nativeElements","elements","rewriteNumProperty","proto","ZERO","ONE","TempVector2","Vector4","destVector4","t","ax","ay","az","aw","vector4","m4x4","vx","vy","vz","vw","me","lengthSquared","inverse","mineX","mineY","mineZ","mineW","maxeX","maxeY","maxeZ","maxeW","value1","value2","UnitX","UnitY","UnitZ","UnitW","tempVec4","Vector3","rotation","qx","qy","qz","qw","ix","iy","iz","iw","vector","transform","intermediate","_tempVector4","transformV3ToV4","vectorX","vectorY","vectorZ","transformElem","normalX","normalY","normalZ","coordinate","coordinateX","coordinateY","coordinateZ","bx","by","bz","vsub","vadd","dot","cross","destVector3","toDefault","_tempVector3","NegativeUnitX","ForwardRH","ForwardLH","Up","_DEFAULTELEMENTS","_tempV30","_tempV31","_tempV32","Matrix3x3","rotX","rotY","rotZ","rotW","xx","yy","zz","xy","zw","zx","yw","yz","xw","resultE","trans","rad","sou","souE","outE","left","l","l11","l12","l13","l21","l22","l23","l31","l32","l33","r11","r12","r13","r21","r22","r23","r31","r32","r33","createElement","cloneByArray","determinant","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","transpose","eye","up","subtract","v0","DEFAULT","Temp","TEMPVector30","TEMPVector31","TEMPVector32","TEMPVector33","_tempMatrix3x3","Quaternion","yaw","pitch","roll","halfRoll","halfPitch","halfYaw","sinRoll","cosRoll","sinPitch","cosPitch","sinYaw","cosYaw","lx","ly","lz","lw","rx","ry","rz","rw","axis","normalAxis","atan","from","asin","arcTanAngle","half","omega","cosom","sinom","scale0","scale1","bw","acos","amount","scaling","rotateX","rotateY","rotateZ","getYawPitchRoll","transformQuat","upe","angleTo","Matrix4x4","createRotationY","TEMPMatrix0","createRotationX","TEMPMatrix1","transformCoordinate","oe","a0","a3","invDot","forward","lookAt","rotationMatrix","forwardLookAt","lengthSq","matrix3x3","m11","m12","m13","m21","m22","m23","m31","m32","m33","NAN","NaN","_tempVector0","_tempVector1","_tempVector2","DEFAULTARRAY","createFromYawPitchRoll","createRotationQuaternion","xz","rotationX","rotationY","rotationZ","rotationW","l14","l24","l34","l41","l42","l43","l44","r14","r24","r34","r41","r42","r43","r44","x2","y2","z2","yx","zy","wx","wy","wz","rot","sx","sy","oE","xaxis","yaxis","zaxis","fov","aspect","znear","zfar","yScale","halfWidth","halfHeight","createPerspectiveOffCenter","zRange","m14","m24","m34","m41","m42","m43","m44","getElementByRowColumn","row","column","setElementByRowColumn","setRotation","setPosition","position","equalsOtherMatrix","decomposeTransRotScale","translation","_tempMatrix4x4","decomposeTransRotMatScale","createFromMatrix4x4","te","re","se","sX","sY","sZ","at","tempRight","decomposeYawPitchRoll","yawPitchRoll","atan2","ae","a03","a13","a23","a30","a31","a32","a33","b00","b02","b03","b04","b05","b06","b07","b08","b09","b10","objectPosition","cameraPosition","cameraUp","cameraForward","scalarLengthSquared","crosse","finale","diffee","obpose","mate","isIdentity","defined","num0","num1","v3","getTranslationVector","setTranslationVector","ve","getForward","setForward","getInvertFront","isInvert","DEFAULTINVERT","_defaultTexture","Texture3D","depth","createTexture3DInternal","sources","setTexture3DImageData","setTexture3DPixelsData","zOffset","setTexture3DSubPixelsData","ShaderDataType","UniformBufferParamsType","RenderParams","WrapMode","ShaderDataDefaultValue","Int","Bool","Float","ShaderData","uniformBufferDatas","_uniformBufferDatas","uniformBuffersMap","_uniformBuffersMap","ownerResource","_ownerResource","applyUBO","_data","_defineDatas","_initData","_addCheckUBO","ubo","uboData","uboBuffer","_uniformParamsState","setDataByUniformBufferData","_gammaColorMap","applyUBOData","addDefine","removeDefine","hasDefine","clearDefine","getBool","setBool","getInt","setInt","_setData","getNumber","setNumber","getVector2","setVector2","getVector3","setVector3","getVector","setVector","getColor","setColor","gammaColor","linearColor","getLinearColor","getMatrix4x4","setMatrix4x4","getMatrix3x3","setMatrix3x3","getBuffer","setBuffer","setTexture","lastValue","shaderDefine","getTexture","getSourceIndex","setValueData","getValueData","setUniformBuffer","getUniformBuffer","setShaderData","uniformIndex","TextureCube","Buffer","getShaderData","destData","clonecolor","v4","_cloneUBO","uboDatas","UnifromBufferData","uniformParamsStat","_createBuffer","_updateFlag","_resetUpdateFlag","dataPos","_layoutMap","_addUniformParams","_bytelength","ceil","_getArraySize","uniformID","offsetadd","posAdd","posG","Vector4Array","propertyIDToName","MatrixArray","paramsInfo","_getParamsInfo","_setUpdateFlag","_has","setNumberbyIndex","setVector2byIndex","setVector3byIndex","setVector4byIndex","setMatrixbyIndex","setVector4ArraybyIndex","setMatrixArraybyIndex","getbyteLength","setVector4Array","propertyNameToID","info","vec","setMatrixArray","setVector4","setColorbyIndex","setMatrix","ubd","ShaderProcessInfo","ShaderCompileDefineBase","compiledObj","_cacheShaderHierarchy","_cacheSharders","_owner","_VS","_PS","_defs","_resizeCacheShaderMap","cacheMap","hierarchy","resizeLength","withCompile","compileDefine","debugMaskLength","debugDefineString","_debugDefineString","debugDefineMask","_debugDefineMask","debugMode","cacheShaders","maskLength","maxEndIndex","subMask","subCacheShaders","cacheKey","defineString","_defineString","_getNamesByDefineData","shaderProcessInfo","is2D","attributeMap","_attributeMap","uniformMap","_uniformMap","renderOBJCreate","createShaderInstance","defStr","defMask","ShaderPass","_renderState","_tags","statefirst","createRenderState","setNull","_addDebugShaderVariantCollection","outDebugDefines","outDebugDefineMask","dbugShaderVariantInfo","_debugShaderVariantInfo","debugSubShader","debugShader","_subShaders","debugShaderVariantCollection","IS2d","_debugDefineStrings","_debugDefineMasks","_defineStrings","defCommonStr","spriteCommonNode","_configDefineValues","nodeCommonMap","VertexElement","elementFormat","_elementFormat","elementUsage","_elementUsage","VertexElementFormat","_elementInfos","single","getParams","FLOAT","vector2","vector3","byte4","UNSIGNED_BYTE","byte3","byte2","short2","UNSIGNED_SHORT","short4","normalizedshort2","normalizedshort4","halfvector2","halfvector4","nbyte4","BYTE","ubyte4","element","Single","Byte4","Byte3","Byte2","ByteOne","Short2","Short4","NormalizedShort2","NormalizedShort4","HalfVector2","HalfVector4","NorByte4","NorUByte4","VertexDeclaration","vertexStride","_vertexStride","vertexElementCount","_vertexElements","vertexElements","_uniqueIDCounter","_vertexElementsDic","_VAElements","_shaderValues","vertexElement","elmentInfo","getElementInfos","stride","shaderLocation","getVertexElementByIndex","getVertexElementByUsage","usage","VertexMesh","instanceWorldMatrixDeclaration","MESH_WORLDMATRIX_ROW0","MESH_WORLDMATRIX_ROW1","MESH_WORLDMATRIX_ROW2","MESH_WORLDMATRIX_ROW3","instanceSimpleAnimatorDeclaration","MESH_SIMPLEANIMATOR","instanceLightMapScaleOffsetDeclaration","MESH_LIGHTMAPSCALEOFFSET","vertexFlag","compatible","verDec","_vertexDeclarationMap","subFlags","MESH_POSITION0","MESH_NORMAL0","MESH_COLOR0","MESH_TEXTURECOORDINATE0","MESH_TEXTURECOORDINATE1","MESH_BLENDWEIGHT0","MESH_BLENDINDICES0","MESH_TANGENT0","MESH_CUSTOME0","MESH_CUSTOME1","MESH_CUSTOME2","MESH_CUSTOME3","SubShader","defaultValue","assign","IncludeUniformMap","DefaultAttributeMap","uniformDefaultValue","_uniformBufferDataMap","_flags","_uniformDefaultValue","_uniformTypeMap","blockUniformMap","uniformName","uniformType","ShaderDataTypeToUniformBufferType","blockUniformIndexMap","blockData","unifromType","textureGammaDefine","setFlag","getFlag","addShaderPass","pipelineMode","_addShaderPass","shaderPass","_pipelineMode","_addIncludeUniform","includemap","ele","includeBindInfo","bindtypeMap","bindDefaultValue","shaderDataType","a_Position","a_Normal","a_Tangent0","a_Texcoord0","a_Texcoord1","a_Color","a_BoneWeights","a_BoneIndices","a_WorldMat","a_SimpleTextureParams","a_LightmapScaleOffset","defineData","maskMap","_maskMap","subMaskMap","_defineMap","counter","_defineCounter","addInclude","find","compileDefineDatas","_compileDefineDatas","enableInstancing","supportReflectionProbe","_preCompileShader","_surportVolumetricGI","surportVolumetricGI","subshader","addSubShader","passDataArray","passData","VS","FS","pipeline","getRenderState","_enableInstancing","_supportReflectionProbe","PERIOD_CUSTOM","PERIOD_MATERIAL","PERIOD_SPRITE","PERIOD_CAMERA","PERIOD_SCENE","_propertyNameMap","_propertyNameCounter","ShaderDefines2D","PRIMITIVE","FILTERGLOW","FILTERBLUR","FILTERCOLOR","COLORADD","WORLDMAT","FILLTEXTURE","MVP3D","GAMMASPACE","INVERTY","GAMMATEXTURE","TEXTURESHADER","PRIMITIVESHADER","initSprite2DCommandEncoder","UNIFORM_MMAT","UNIFORM_CLIPMATDIR","UNIFORM_CLIPMATPOS","UNIFORM_MMAT2","UNIFORM_SIZE","UNIFORM_CLIPOFF","UNIFORM_MVPMatrix","UNIFORM_SPRITETEXTURE","UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1","UNIFORM_BLURINFO","UNIFORM_COLORALPHA","UNIFORM_COLORMAT","UNIFORM_COLOR","UNIFORM_BLURINFO1","UNIFORM_BLURINFO2","UNIFORM_COLORADD","UNIFORM_TEXRANGE","commandUniform","createGlobalUniformMap","addShaderUniform","RenderInfo","loopStTm","loopCount","AtlasGrid","atlasID","_texCount","_rowInfo","_cells","_used","_init","addRect","pt","_get","_fill","_release","_clear","nWidth","nHeight","pCellBox","tm","nHeghit","_check","FontInfo","font","_lastFont","_lastFontInfo","_cache","_family","_size","_italic","_bold","setFont","_font","szpos","fpos","familys","RenderSpriteData","WordText","pagecharsCtx","_conchWordText","pageChars","scalex","scaley","setText","_text","cleanCache","chars","p","ri","splitRender","_splitRender","CharRenderInfo","char","deleted","orix","oriy","touchTick","isSpace","touch","curLoop","touchRect","ICharRender","fontsz","getWidth","canvasWidth","getCharBmp","lineWidth","colStr","strokeColStr","margin_left","margin_top","margin_right","margin_bottom","_window","win","doc","_document","document","userAgent","navigator","maxTouchPoints","platform","wxMiniGame","enable","tbMiniGame","aliPayMiniGame","isWXMiMi","ttMiniGame","biliMiniGame","qqMiniGame","hwMiniGame","bdMiniGame","miMiniGame","qgMiniGame","vvMiniGame","trace","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","bodyStyle","body","style","margin","overflow","metas","getElementsByTagName","viewportContent","meta","content","arr2","trim","appendChild","keys","onMobile","onIOS","onIPhone","onMac","onIPad","onAndroid","onWP","onQQBrowser","onMQQBrowser","onIE","ActiveXObject","onWeiXin","onSafari","onChrome","onPC","onFirefox","onEdge","onMiniGame","onBDMiniGame","onLayaRuntime","onQGMiniGame","onQQMiniGame","onBLMiniGame","onTTMiniGame","onHWMiniGame","onVVMiniGame","onKGMiniGame","onAlipayMiniGame","onTBMiniGame","PLATFORM_ANDROID","PLATFORM_IOS","PLATFORM_PC","_isMiniGame","__init__","getElementById","parentNode","removeChild","Date","now","clientWidth","_clientWidth","innerWidth","clientHeight","_clientHeight","innerHeight","documentElement","canvasRotation","pixelRatio","_pixelRatio","devicePixelRatio","container","_container","search","reg","unescape","__innerHeight","mainCanvas","hanzi","fontMap","measureText","isChinese","test","CharRender_Canvas","maxw","maxh","scalefont","useImageData","showdbg","lastScaleX","lastScaleY","maxTexW","maxTexH","scaleFontSize","showDbgInfo","supportImageData","getContext","willReadFrequently","setTransform","cri","getCharCanvas","clearW","clearH","clearRect","save","textBaseline","lineJoin","strokeStyle","strokeText","fillStyle","fillText","strokeRect","imgdt","bmpWidth","bmpHeight","textAlign","fillAndStrokeText","TextRender","fontSizeInfo","mapFont","fontID","fontScaleX","fontScaleY","_curStrPos","textAtlases","isoTextures","lastFont","fontSizeW","fontSizeH","fontSizeOffX","fontSizeOffY","renderPerChar","tmpAtlasPos","textureMem","bugIOS","miniadp","systemInfo","system","isWan1Wan","charRender","scaleFontWithCtx","textRenderInst","atlasWidth2","atlasWidth","getFontSizeInfo","offx","offy","fw","fh","standardFontSize","fontStr","getNextChar","state","filltext","strokeColor","parse","nTextAlign","_fast_filltext","getMatScaleX","getMatScaleY","maxFontScale","_italicDeg","wt","isWT","sameTexData","strWidth","hasFreedText","splitTex","forceSplitRender","curstr","stx","getCharRenderInfo","o1","texgen","genID","isotex","noAtlas","_drawResortedWords","startx","starty","samePagesData","isLastRender","_charSubmitCache","_enable","_curMat","pri","pisz","riSaved","drawTexAlign","_inner_drawTexture","txts","isoTexture","fid","atlas","charMaps","w1","TextTexture","getTextTexture","addChar","lineExt","imgdtRect","addBmpData","getAEmpty","TextAtlas","cleanAtlases","GC","destroyDt","destroyAtlasDt","totalUsedRateAtlas","curloop","maxWasteRateID","maxWasteRate","curatlas","curUsedCovRate","curUsedCovRateAtlas","waste","usedRate","lastTouchTm","showLog","destroyUnusedTextureDt","needGC","cleanMem","simClean","clean","checkBmpLine","ex","bmpData32","stpos","updateBbx","curbbx","onlyH","ey","minx","maxx","finfo","fontstr","szinfo","pixelBBX","tmpRI","bmpdt","sizeinfo","printDbgInfo","totalUsedRate","dtstr","_texW","_texH","showAtlas","bgcolor","Sprite","texttex","graphics","drawRect","drawTexture","addChild","filltext_native","useOldCharBook","forceWholeRender","checkCleanTextureDt","debugUV","texWidth","texHeight","atlasGridW","atlasgrid","setProtecteDist","discard","printDebugInfo","_glTexture","textureW","textureH","_discardTm","_render2DContext","render2DContext","recreateResource","_source","glTex","Bilinear","Clamp","fillWhite","addCharCanvas","u0","Uint8ClampedArray","canv","setTextureSubImageData","fill","setGlobalRepaint","curtm","cleanTm","poolLen","texw2","gridw2","drawOnScreen","Value2D","classT","_typeClass","globalShaderData","mainType","types","mmat","u_MvpMatrix","textureHost","_textureHost","colorAdd","clipMatDir","clipMatPos","clipOff","mainID","alpha","ALPHA","_cacheID","_mmat","_clipMatDir","_clipMatpos","_clipOff","_inClassCache","updateShaderData","renderstate2d","returnGamma","textrueReadGamma","Primitive","upload","material","_compileDefine","shaderIns","bind","uploadUniforms","_sprite2DUniformParamsMap","_sceneUniformParamsMap","_materialUniformParamsMap","shaderData","_defaultShader","setFilters","filters","typeDefine","action","release","SubmitKey","submitType","blendShader","copyFrom2","equal3_2","next","equal4_2","equal_3","SubmitCMD","_ref","_key","renderSubmit","apply","_this","getRenderType","releaseRender","POOL","thisobj","Filter","COLOR","GLOW","_filter","sprite","webglctx","_next","setColorFilter","_fun","svCP","tMatrix","tPadding","tHalfPadding","_cacheStyle","filterCache","getRepaint","_isHaveGlowFilter","getBounds","pivotX","pivotY","getSelfBounds","tSX","tSY","releaseRT","getRT","outRT","_getCacheStyle","pushRT","useRT","tX","tY","drawTarget","fil","_glRender","render","popRT","_drawRenderTexture","submit","addRenderObject","_COLOR_MAP","purple","orange","white","red","green","blue","black","yellow","gray","ColorUtils","arrColor","strColor","numColor","fromStringColor","toHexColor","_DEFAULT","_SAVE","_SAVE_SIZE","_initSaveMap","_initDefault","DELTA_INDEX","GRAY_MATRIX","IDENTITY_MATRIX","ColorFilter","_copyMatrix","_mat","_alpha","setByMatrix","mt","_matrix","adjustColor","brightness","contrast","saturation","hue","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_clampValue","_multiplyMatrix","x1","dx","col","_fixMatrix","val","limit","onAfterDeserialize","_color","_brightness","_contrast","_saturation","_hue","GrahamScan","p0","tempUse","_mPointList","getFrom","getFromR","pList","_getPoints","_tempPointList","_temPList","copyArray","pointListToPlist","scan","pListToPointList","PointSet","tmp","ch","_tmpDic","_temArr","dis","SpriteConst","RenderStatisticsInfo","BufferTargetType","BufferUsage","IndexFormat","TRANSFORM","BLEND","CANVAS","FILTERS","CLIP","STYLE","TEXTURE","GRAPHICS","LAYAGL3D","CUSTOM","ONECHILD","HITAREA","CHILDS","REPAINT_NONE","REPAINT_NODE","REPAINT_CACHE","REPAINT_ALL","Stat","views","checkUI","hide","_show","_currentShowArray","AllShow","_statUI","show","loop","_currentToggleArray","showToggle","_count","_timer","updateEngineData","delay","_fpsStr","renderSlow","update","trianglesFaces","getStatisticsInfo","Triangle","drawCall","DrawCall","instanceDrawCall","InstanceDrawCall","GPUMemory","textureMemory","TextureMemeory","renderTextureMemory","RenderTextureMemory","bufferMemory","BufferMemory","mode","clearStatisticsInfo","FPSStatUIParams","title","units","NodeStatUIParams","Sprite3DStatUIParams","TriangleFace","RenderNode","SkinRenderNode","ParticleRenderNode","FrustumCulling","UniformUpload","OpaqueDrawCall","TransDrawCall","DepthCastDrawCall","CMDDrawCall","BlitDrawCall","uploadUniformNum","memoryShow","renderShow","toogle_Shadow","toogle_MulLight","toogle_Light","toogle_Postprocess","toogle_AnimatorUpdate","toogle_PhysicsUpdate","toogle_Skin","toogle_Transparent","toogle_Particle","toogle_msaa","toogle_CameraCMD","toogle_Opaque","AllToggle","RenderModeToggle","RenderFuncToggle","spriteRenderUseCacheCount","canvasNormal","canvasBitmap","canvasReCache","spriteCount","sprite3DCount","renderNode","skinRenderNode","particleRenderNode","frustumCulling","uniformUpload","opaqueDrawCall","transDrawCall","depthCastDrawCall","cmdDrawCall","blitDrawCall","uploadUniform","enableShadow","enableMulLight","enableLight","enableCameraCMD","enablePostprocess","enableSkin","enableTransparent","enableParticle","enableAnimatorUpdate","enablePhysicsUpdate","enablemsaa","enableOpaque","SubmitBase","RENDERBASE","shaderValue","renderType","TYPE_2D","clipInfoID","_mesh","_blendFn","_renderType","_parent","_startIdx","_numEle","ID","getID","TYPE_CANVAS","TYPE_CMDSETRT","TYPE_CUSTOM","TYPE_BLURRT","TYPE_CMDDESTORYPRERT","TYPE_DISABLESTENCIL","TYPE_OTHERIBVB","TYPE_PRIMITIVE","TYPE_RT","TYPE_BLUR_RT","TYPE_TARGET","TYPE_CHANGE_VALUE","TYPE_SHAPE","TYPE_TEXTURE","TYPE_FILLTEXTURE","KEY_ONCE","KEY_FILLRECT","KEY_DRAWTEXTURE","KEY_VG","KEY_TRIANGLES","preRender","VertexAttributeLayout","vertexs","_pool","layout","deepthEqaul","VAElements","attributeByteSize","instanceMode","vaelements","oneAttributeSize","vertexDeclaration","vdec","instanceBuffer","IPoint","vaelemets","_vertexDeclaration","thisVaeEs","ii","nn","BufferState","_nativeVertexArrayObject","createVertexState","applyVertexBuffers","applyVertexBuffer","_vertexBuffers","applyIndexBuffers","applyIndexBuffer","_bindedIndexBuffer","applyState","vertexBuffers","indexBuffer","vertexlayout","getVertexLayoutByPool","unbind","unBind","bindVertexArray","_curBindedBufferState","unbindVertexArray","isbind","unbindVertexState","bufferUsage","_bufferUsage","targetType","bufferUsageType","_byteLength","_glBuffer","createBuffer","_bufferType","bindBuffer","unbindBuffer","IndexBuffer","_indexType","UInt16","_setIndexData","bufferOffset","curBufSta","setDataLength","setData","Buffer2D","bufferLength","constBuffer","setByteLength","_bufferSize","needSize","old","needsz","_maxsize","_upload","_uploadSize","_u8Array","_floatArray32","_bufferData","_checkArrayUse","buff","_uint32Array","_uint16Array","_bufferSubData","dataStart","dataLength","subBuffer","_bind_upload","_bind_subUpload","nsz","oldU8Arr","newbuffer","append","byteLen","appendU16Array","setNeedUpload","subUpload","scuess","FLOAT32","SHORT","IndexBuffer2D","Static","ELEMENT_ARRAY_BUFFER","buffer2D","_bindForVAO","destory","disposeResource","VertexBuffer","_instanceBuffer","VertexBuffer2D","ARRAY_BUFFER","appendArray","oldoff","deleteBuffer","Dynamic","Mesh2D","vballoc","iballoc","_stride","vertNum","indexNum","_applied","_quadNum","canReuse","_vb","_ib","createQuadIB","QuadNum","idx","curvert","setAttributes","attribs","_attribInfo","configVAO","_vao","useMesh","releaseMesh","clearVB","_gvaoid","MeshQuadTexture","_fixattriInfo","const_stride","_fixib","_maxIB","VertexDeclarition","mainctx","_POOL","addQuad","useTex","vb","vpos","vbdata","vbu32Arr","cpos","useTexVal","MeshTexture","addData","vertices","uvs","rgba","ib","vertsz","f32pos","ci","m00","m01","m10","vertN","stib","cidx","stibid","si","MeshVG","addVertAndIBToMesh","NativeWebGLCacheAsNormalCanvas","_context","_conchWebGLCacheAsNormalCanvas","startRec","endRec","isCacheValid","isTextNeedRestore","WebGLCacheAsNormalCanvas","submitStartPos","submitEndPos","submits","meshlist","cachedClipInfo","oldTx","oldTy","invMat","_globalClipMatrix","_incache","_submits","curm","getAMesh","_pathMesh","_triangleMesh","_curSubmit","_oldMesh","_oldPathMesh","_oldTriMesh","_oldMeshList","parsubmits","curclip","textNeedRestore","charRIs","flushsubmit","curSubmit","subm","releaseMem","matI","LayaGLQuickRunner","alpha_transform_drawLayaGL","alpha_drawLayaGL","transform_drawLayaGL","transform_drawNodes","alpha_transform_drawTexture","alpha_drawTexture","transform_drawTexture","drawLayaGL_drawNodes","_style","saveTransform","curMat","transformByMatrix","_isWidthSet","_isHeightSet","wRate","hRate","px","py","_getBit","restoreTransform","_needRepaint","globalAlpha","_graphics","_render","textLastRender","drawCallOptimize","drawingToTexture","_drawingToTexture","_children","_x","_y","visFlag","_visible","NativeFilter","drawTargetBlurFilter","strength","drawFilter","RenderSprite","initRender","renders","_getTypeRender","tType","NORENDER","_no","_transform","_blend","_canvas","_maskNative","_clip","_custom","_hitarea","_initRenderFun","onCreate","customRender","scrollRect","clipRect","hitArea","_hit","_unHit","enableCanvasRender","cacheAs","cacheNeedRebuild","isGlobalRepaint","_canvas_webgl_normal_repaint","_canvas_repaint","tRec","cacheRect","drawCanvas","scaleX","scaleY","scaleInfo","tCacheType","_calculateCacheRect","releaseContext","createContext","_applyFilters","staticCache","reCache","blendMode","globalCompositeOperation","preBlendMode","tRect","tmpRT","breakNextMerge","tmpTarget","shrink","getStyle","setBlendMode","recycleTarget","drawMask","drawMasked","drawMaskComposite","Bezier","_controlPoints","_calFun","getPoint2","_switchPoint","shift","p3","lineX","lineY","getPoint3","p4","insertPoints","dLen","getBezierPoints","inSertCount","RenderStateType","I","DrawStyle","_drawStyle","toInt","toColorStr","Path","_lastOriX","_lastOriY","paths","_curPath","beginPath","convex","renderPath","closePath","newPath","pointX","pointY","rp","SaveBase","namemap","_namemap","TYPE_ALPHA","TYPE_FILESTYLE","TYPE_FONT","TYPE_LINEWIDTH","TYPE_STROKESTYLE","TYPE_ENABLEMERGE","TYPE_MARK","TYPE_TRANSFORM","TYPE_TRANSLATE","TYPE_TEXTBASELINE","TYPE_TEXTALIGN","TYPE_GLOBALCOMPOSITEOPERATION","TYPE_SHADER","TYPE_FILTERS","TYPE_COLORFILTER","isSaveMark","_dataObj","_valueName","_newSubmit","dataObj","newSubmit","_saveMark","_saveuse","cache","_save","TYPE_CLIPRECT","TYPE_CLIPRECT_STENCIL","TYPE_IBVB","TYPE_FILTERS_TYPE","_createArray","SaveClipRect","_clipInfoID","_clipRect","incache","_clipInCache","SaveMark","_preSaveMark","no","SaveTransform","_savematrix","SaveTranslate","MeshTopology","CONTEXT2D_FUNCTION_ID","Shader2D","shaderType","textureShader","textureAttribute","primitiveShader","primitiveAttribute","a_position","a_attribColor","a_posuv","a_attribFlags","SkinMeshBuffer","addSkinMesh","skinMesh","getData2","BasePoly","indices","indexBase","outVertex","tempData","newlen","p1x","p1y","p2x","p2y","p3x","p3y","startIndex","vec2","getNormal","_setMiddleVertexs","y1","x3","y3","perpx","perpy","perp2x","perp2y","denom","dist","outvb","vbstride","outib","ptlen","dy","pointnum","tmpData","realPtNum","EarcutNode","prev","prevZ","nextZ","steiner","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","again","area","ear","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","filterPoints","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","locallyInside","isValidDiagonal","splitPolygon","list","queue","getLeftmost","sort","compareX","eliminateHole","hole","findHoleBridge","hx","hy","Infinity","mx","my","tanMin","sortLinked","q","tail","numMerges","pSize","qSize","inSize","leftmost","cx","cy","intersectsPolygon","middleInside","q1","q2","inside","an","bp","sum","Submit","_tex","renderDrawContext","drawElements2DTemp","Triangles","_poolSize","mesh","sv","blendType","_nBlendType","_shader2D","numEle","SubmitCanvas","_matrix4","preAlpha","preMatrix4","preMatrix","preFilters","worldFilters","preWorldShaderDefines","worldShaderDefines","mout","mul","SubmitTarget","srcRT","_colorFiler","ft","colorMat","colorAlpha","SubmitTexture","CharSubmitCache","_ndata","_clipid","_clipMatrix","_imgId","imgid","getPos","__nPosPool","__posPool","colorFiler","_copyClipInfo","_drawCount","Config3D","customResolution","_resoluWidth","_resoluHeight","enableDynamicBatch","enableStaticBatch","enableUniformBufferObject","defaultCacheRTMemory","defaultPhysicsMemory","enableMultiLight","maxLightCount","lightClusterCount","maxMorphTargetCount","useBVHCull","BVH_max_SpatialCount","BVH_limit_size","BVH_Min_Build_nums","debugFrustumCulling","RenderTexture","_configInstance","colorFormat","depthFormat","multiSamples","depthTexture","generateDepthTexture","_inPool","_poolMemory","bindCanvasRender","_bindCanvasRender","_generateDepthTexture","_depthStencilTexture","createRenderTextureInternal","setupRendertargetTextureAttachment","depthStencilTexture","_isCameraTarget","_multiSamples","_createRenderTarget","recreate","readRenderTargetPixelData","NativeContext","_byteLen","_renderObject3DList","_tmpMatrix","_conchContext","_tempRenderTexture2D","isSyncToRenderThread","_idata","_fdata","_byteArray","bufferConchRef","webglPlus","createArrayBufferRef","ARRAY_BUFFER_TYPE_CMD","ARRAY_BUFFER_REF_REFERENCE","setSharedCommandBuffer","_need","flushCommand","lineCap","miterLimit","isMain","_target","add_i","keepRT","_deleteRT","const2DRenderCMD","cmd","addCMD","BlendEquation","BlendFunc","DepthTest","DepthMask","CullFace","FrontFace","applyCMD","set2DRenderConfig","add_i_String","SET_GLOBAL_COMPOSITE_OPERTAION","add_ii","FILL_STYLE","add_if","SAVE","RESTORE","add_iffffff","add_iffff","CLIP_RECT","add_iff","SCALE","checkTexture","add_iiffffffffffffi","DRAW_TEXTURE","drawTextureWithTransform","drawTextureWithSizeGrid","sizeGrid","gx","gy","repeat","add_iiffffffffiffffffffffi","DRAW_TEXTURE_SIZE_GRID","TRANSLATE","_rotate","ROTATE","_scale","_drawLine","fromX","fromY","toX","toY","lineColor","vid","add_iffffffif","DRAW_LINE","_drawLines","add_iffif_ab","DRAW_LINES","_drawCircle","radius","fillColor","add_ifffiiiif","DRAW_CIRCLE","_drawPie","startAngle","endAngle","add_ifffffiiiif","DRAW_PIE","_drawPoly","isConvexPolygon","add_iffiiiifi_ab","DRAW_POLY","fillRect","FILL_RECT","fillTexture","typeValue","add_iiffffiffi","FILL_TEXTURE","STROKE_STYLE","LINE_WIDTH","STROKE_RECT","_drawPath","brush","pen","BEGIN_PATH","MOVE_TO","LINE_TO","add_ifffff","ARC_TO","CLOSE_PATH","FILL","STROKE","drawCurves","DRAW_CURVES","drawCanvasNormal","drawCanvasBitmap","align","borderColor","add_iiiifff_String_String","FILL_WORDS","add_iiffiifi_String","FILL_WORD_TEXT","drawText","strokeWord","fillBorderText","filltext11","fontObj","underLine","drawTriangles","colorNum","add_iiifffffffff_ab_ab_ab","DRAW_TRANGLES","DRAW_MASKED","SET_AS_BITMAP","add_iii","SIZE","filter","addRenderObject3D","scene3D","cs","repaint","add_iffif","fdata","idata","add_iiffff","add_String","add_iffiiiifi","add_iiffiifi","strTobufer","add_iiiifff","str0","str1","ab0","ab1","add_iiifffffffff","arraybuffer0","arraybuffer1","arraybuffer2","nAlignLength0","getAlignLength","nAlignLength1","nAlignLength2","wab","nAlignLength","byteOffset","add_iif_ab","ARRAY_BUFFER_TYPE_DATA","ARRAY_BUFFER_REF_COPY","defaultClipMatrix","MAXCLIPRECT","ContextParams","$transform","_drawRect","drawTexture2","args2","moveTo","lineTo","stroke","addPath","quadraticCurveTo","_fillAndStroke","arc","PI2","_drawEllipse","_drawRoundRect","lt","lb","rb","tPath","_getPath","HPI","startX","startY","arcTo","scissorTest","_drawTexToDrawTri_Vert","_drawTexToDrawTri_Index","_tempUV","_drawTriUseAbsMatrix","_COUNT","_other","_renderNextSubmitIndex","_renderCount","_submitKey","_transedPoints","_temp4Points","_clipID_Gen","_lastMatScaleX","_lastMatScaleY","_lastMat_a","_lastMat_b","_lastMat_c","_lastMat_d","_lastTex","_fillColor","_flushCnt","defTexture","clearColor","_contextcount","_textRender","defTex2d","clearBG","_getSubmits","_releaseMem","Create","getFillColor","make","lastBlend","_fillRect","sameKey","isSameClipInfo","_MAXVERTNUM","transformQuad","clipedOff","drawstyle","mixRGBandAlpha","_fillTexture","callLater","_repaintSprite","texuvRect","offsetx","offsety","repeatx","repeaty","sty","edx","edy","edu","edv","_mixRGBandAlpha","arry","u_TexRange","drawTextures","colors","ipos","bmpid","submitDebugger","clipInfo","cm","cmp","_useNewTex2DSubmit","minVertNum","_drawTexRect","ops","lastRender","preKey","tv","tuv","transform4Points","ma","mb","mc","md","a4","a5","a6","a7","italicDeg","xoff","maxy","RTRestore","oldcomp","tmpMat","_flushToTarget","restoreTempArray","triMesh","webGLImg","_transformByMatrix","setTransformByMatrix","escape","miny","cmaxx","cmaxy","submitElement","renderList","getInstance","close","addVGSubmit","curEleNum","xp","yp","cpath","pi","faceNum","idxpos","fi","earcut","createShape","vertex","maxVertexNum","createLine2","ptnum","len1","ndx","ndy","dx2","dy2","len22","len2","ndx2","ndy2","odx","ody","olen","nOdx","nOdy","halfAng","ptx1","pty1","orilen","sinx","cosx","fda","SEGNUM","lastx","lasty","_x1","_y1","cvx","cvy","counterclockwise","minNum","ndivs","da","sr","cl","cpx","cpy","tArray","parameterLineWidth","hw","clip","drawParticle","_fillTexture_h","oriw","orih","du","uvr","tmpuv1","_fillTexture_v","dv","uvb","ox","oy","sw","sh","ow","oh","d_top","d_left","d_right","d_bottom","scale_x","scale_y","uvl","uvt","uvl_","uvt_","uvr_","uvb_","tuvr","tmpUVRect","_SUBMITVBSIZE","tmpUV","HTMLCanvas","createCanvas","_ctx","_setContext","contextID","getMemSize","toBase64","encoderOptions","conchToBase64FlipY","conchToBase64","toDataURL","toBase64Async","callBack","getDataAsync","base64","BoundsStyle","bounds","userBounds","temBM","CacheStyle","needBitmapCache","cacheForFilters","needEnableCanvasRender","userSetCache","getItem","releaseFilterCache","fc","maskParent","hasGlowFilter","CANVAS_EXTEND_EDGE","_scaleInfo","SpriteStyle","skewX","skewY","dragging","AlphaCmd","cmdID","DrawCircleCmd","percent","getBoundPoints","_getBoundPointS","regClass","DrawCurvesCmd","DrawImageCmd","DrawLineCmd","_tempPoints","DrawLinesCmd","DrawPathCmd","tCMD","DrawPieCmd","_startAngle","_endAngle","lineOffset","end1","ed","s1","s2","csr","DrawPolyCmd","DrawRectCmd","DrawTextureCmd","FillTextureCmd","RestoreCmd","RotateCmd","ScaleCmd","TransformCmd","TranslateCmd","DrawTrianglesCmd","vert","vnum","Draw9GridTextureCmd","EMPTY_SIZE_GRID","SaveCmd","_tempMatrix","_initMatrix","_tempMatrixArrays","GraphicsBounds","_cacheBoundsType","_temp","_rstBoundPoints","_bounds","realSize","_getWrapRec","_getCmdPoints","cmds","_sp","_affectBySize","matrixs","tempMatrix","_switchMatrix","addPointArrToRst","scanPList","tMatix","addPointToRst","_tempPoint","ClipRectCmd","DrawTexturesCmd","FillTextCmd","_strokeColor","_stroke","_align","_wordText","_fontObj","CacheManger","disposeFunction","getCacheListFunction","unRegCacheByFunction","tryDispose","getCacheList","_cacheList","waitTime","_checkLoop","cacheList","tTime","loopTimeLimit","VectorGraphManager","useDic","shapeDic","shapeLineDic","_checkKey","_freeIdArray","regCacheByFunction","startDispose","getId","addShape","shape","addLine","Line","getShape","deleteShape","endDispose","DrawEllipseCmd","DrawRoundRectCmd","Graphics","propertyID","propertyKey","uniformtype","_renderEmpty","_cmds","_vectorgraphArray","_graphicBounds","_createData","_clearData","_destroyData","recoverCmds","_repaint","_clearBoundsCache","onSizeChanged","_initGraphicBounds","_isOnlyOne","_renderOne","_renderAll","addCmd","removeCmd","_material","replaceTextColor","loadImage","getRes","drawLine","drawLines","drawRoundRect","drawCircle","drawEllipse","drawPie","toRadian","drawPoly","drawPath","draw9Grid","ARRAY_EMPTY","Node","is3D","_bits","_updateDisplayedInstage","_setUpNoticeChain","_setBitUp","bubbleEvent","_bubbleChainPool","destroyChild","destroyAllComponent","destroyChildren","removeChildren","_zOrder","getChildIndex","_childChanged","_setParent","addChildren","addChildAt","oldIndex","getChildByName","child","getChildAt","setChildIndex","removeChildAt","removeSelf","removeChildByName","beginIndex","replaceChild","newNode","oldNode","numChildren","isAncestorOf","displayedInStage","_displayChild","_onRemoved","_setDisplay","display","timerLoop","method","coverBefore","jumpFrame","timerOnce","frameOnce","clearTimer","runCallLater","scene","active","_activeChangeScripts","_processActive","_onActive","_onInActive","_onActiveInScene","EVENT_SET_ACTIVESCENE","_onInActiveInScene","EVENT_SET_IN_ACTIVESCENE","_setBelongScene","_setUnBelongScene","fromSetter","_activeHierarchy","_inActiveHierarchy","comp","activeChangeScripts","_components","parentScene","_addComponentInstance","_componentsChanged","srcRoot","dstRoot","destNode","destComponent","addComponent","addComponentInstance","component","getComponent","componentType","createByClass","components","getComponents","HALF_PI","Ease","bounceOut","bounceIn","Handler","runWith","unshift","Tween","gid","props","duration","ease","autoRecover","to","isTo","usePool","runNow","_duration","_ease","easeNone","_complete","_delay","_props","_usedTimer","_startTimer","_usedPool","_delayParam","$_GID","tweenMap","clearTween","firstStart","_initProps","_beginLoop","_doEase","_updateEase","time","usedTimer","ratio","prop","progress","uTime","runTimer","handler","restart","pause","dTime","setStartTime","startTime","tweens","tween","clearAll","_remove","resume","Dragging","maxOffset","_dragging","_clickOnly","hasInertia","elasticDistance","elasticBackTime","_elasticRateX","_elasticRateY","_lastX","mouseX","_lastY","mouseY","onStageMouseUp","tweenMove","_tween","backToArea","getMousePoint","_canvasTransform","_offsets","checkArea","_offsetX","_offsetY","checkElastic","sineOut","SpriteUtils","x0","y0","newLTPoint","newRBPoint","localToGlobal","getGlobalRecByPoints","coordinateSpace","globalTransform","getGlobalPosAndScale","canvasMatrix","canvasLeft","canvasTop","canvasDegree","clientScaleX","clientScaleY","domScaleX","domScaleY","perpendicular","dom","_fitLayaAirInitialized","transformOrigin","webKittransformOrigin","getTransformRelativeToWindow","webkitTransform","_boundStyle","_ownGraphics","_anchorX","_anchorY","_mouseState","_tfChanged","_sizeFlag","mouseThrough","autoSize","hitTestPrior","_globalDeltaFlages","_cacheGlobal","_globalPosx","_globalPosy","_globalRotate","_globalScalex","_globalScaley","updateZOrder","updateOrder","_getBoundsStyle","_setCustomRender","customRenderEnable","_setCacheAs","_checkCanvasEnable","tEnable","_setX","_setY","cacheGlobal","_setGlobalCacheFlag","Sprite_GlobalDeltaFlage_Position_X","Sprite_GlobalDeltaFlage_Matrix","_syncGlobalFlag","parentRepaint","Sprite_GlobalDeltaFlage_Position_Y","get_width","set_width","_setWidth","_setPivotX","_setTranformChange","_shouldRefreshLayout","get_height","set_height","_setHeight","_setPivotY","displayWidth","displayHeight","setSelfBounds","bound","_boundPointsToParent","_getBoundPointsM","ifRotate","pX","pY","transPointList","toParentPoint","getGraphicBounds","rec","chidren","cList","setStyle","set_scaleX","set_scaleY","Sprite_GlobalDeltaFlage_Scale_X","_setScaleX","get_scaleX","Sprite_GlobalDeltaFlage_Scale_Y","_setScaleY","get_scaleY","Sprite_GlobalDeltaFlage_Rotation","_setRotation","_setSkewX","_setSkewY","_createTransform","_adjustTransform","sskx","ssky","skx","sky","ssx","ssy","_setTransform","set_transform","get_transform","_getPivotX","_getPivotY","anchorX","get_anchorX","set_anchorX","anchorY","get_anchorY","set_anchorY","_setAlpha","_getAlpha","visible","get_visible","set_visible","setGraphics","transferOwnership","speedMode","pivot","drawToCanvas","canvasHeight","drawToTexture","drawToTexture3D","imgdata","ImageData","lineLen","srcoff","putImageData","drawtocanvCtx","texRT","rtex","createNewPoint","globalNode","globalToLocal","fromParentPoint","scroll","isMouseEvent","mouseEnabled","_onDisplay","_skinBaseUrl","_setMask","startDrag","stopDrag","hitTestPoint","_setTexture","recArr","_gcmds","_filters","getGlobalMatrix","_globalMatrix","_getGlobalCacheFlag","globalRotation","globalScaleX","globalScaleY","globalPosX","globalPosY","CustomMaterial","setGlobalPos","globalx","globaly","globalDeltaFlages","AnimationBase","wrapMode","_interval","_isReverse","_frameRateChanged","play","_isPlaying","_actionName","_getFrameByLabel","WRAP_REVERSE","interval","_frameLoop","label","_labels","_controlNode","WRAP_PINGPONG","_setControlNode","_resumePlay","addLabel","removeLabel","_removeLabelFromList","gotoAndStop","_displayToIndex","tArr","WRAP_POSITIVE","AtlasInfoManager","infoFile","fetch","addAtlases","dic","_fileLoadDic","prefix","frames","entry","atlasUrl","WorkerLoader","Worker","_worker","workerPath","onmessage","workerMessage","_dispatcher","options","postMessage","evt","imageBitmap","AtlasResource","dir","textures","BatchProgress","_callback","_weights","_progress","itemCount","createCallback","weight","np","ws","perc","ImgUtils","curVersion","needVersion","curVersionArr","needVersionArr","num2","isSupport","getSystemInfoSync","SDKVersion","compareVersion","Blob","arrayBuffer","newurl","createBufferURL","blob","createObjectURL","isSavaData","revokeBufferURL","revokeObjectURL","XMLUtils","aSource","sb","pos1","pos2","entity","attrs","attrName","defValue","XMLTagType","XMLIterator","lowerCaseName","sourceLen","parsePos","lastTagEnd","tagPos","tagLength","tagName","tagType","Start","attrParsed","lastTagName","CDATA","Comment","Instruction","End","singleQuoted","doubleQuoted","possibleEnd","Void","decodeString","trimEnd","attributes","_attrs","parseAttributes","valueStart","valueEnd","waitValue","quoted","attrEnd","prototype","XML","XmlString","getAttrString","getAttrInt","getAttrFloat","getFloat","getAttrBool","setAttribute","attrValue","getNode","selector","lastOpenNode","nodeStack","nextTag","childNode","getText","HttpRequest","_http","XMLHttpRequest","send","responseType","headers","_responseType","_urlEncode","http","open","setRequestHeader","JSON","stringify","restype","dataType","onerror","_onError","onabort","_onAbort","onprogress","_onProgress","onload","_onLoad","lengthComputable","loaded","total","status","statusText","responseURL","message","responseText","response","encodeURI","Downloader","httpRequestPool","common","originalUrl","contentType","onProgress","onComplete","getRequestInst","returnRequestInst","$ref","image","Image","crossOrigin","imageWithBlob","arrayBufferToURL","imageWithWorker","workerLoaderOptions","audio","oncanplaythrough","typeIdCounter","NullURLInfo","typeId","main","loaderType","exts","typeEntry","typeMap","extMap","retryNum","retryDelay","maxLoader","_loadings","_queue","_downloadings","arg1","arg2","arg3","priority","group","ignoreCache","useWorkerLoader","promise","dummyOptions","pd","promises","_load1","all","_load2","silent","warnFailed","getURLInfo","obsoluteRes","formattedUrl","groupMap","cacheRes","_getRes","loadingKey","task","initiator","atlasInfo","getFileLoadPath","ATLAS","baseUrl","loadTaskPool","LoadTask","obsoluteInst","assetLoader","_cacheRes","catch","delete","retryCnt","noRetry","queueToDownload","download","postFormatURL","preloadedContent","preLoadedMap","completeItem","downloader","extEntry","msg","resArr","loadedMap","urlInfo","checkObj","_clearRes","clearTextureRes","clearUnLoaded","cancelLoadByUrls","urls","cancelLoadByUrl","loadPackage","remoteUrl","tmpPath","_loadSubFileConfig","plat","tt","qg","_loadMiniPackage","mini","packName","reject","loadTask","loadSubpackage","success","onProgressUpdate","fileConfig","hash","indice","configs","config","addAtlas","TEXT","BUFFER","IMAGE","SOUND","VIDEO","FONT","TTF","HIERARCHY","MESH","MATERIAL","TEXTURECUBE","TEXTURE2DARRAY","ANIMATIONCLIP","TERRAINHEIGHTDATA","TERRAINRES","SPINE","MathUtil","Offset1","Offset2","Offset3","bigFirst","forceNum","_sortFun","sortNumBigFirst","sortBigFirst","sortNumSmallFirst","sortSmallFirst","FrameAnimation","objpre","objnext","_sortIndexFun","sortByKey","_setUp","targetDic","animationData","_targetDic","_animationData","frameRate","parsed","labels","_usedFrames","animationNewFrames","_calculateDatas","nodes","_displayNodeToFrame","frame","propFrames","funFrames","funkeys","tNode","_calculateKeyFrames","tKeyFrames","keyFrames","keyframes","initValues","isFun","_calculateNodePropFrames","resetNodes","_dealKeyFrame","_calculateFrameValues","keyFrame","startFrame","endFrame","easeFun","startValue","dValue","tweenMethod","linearNone","GraphicAnimation","_nodeIDAniDic","_parseNodeList","uiView","_nodeList","_nodeDefaultProps","compId","_calGraphicData","aniData","_createGraphicData","preGraphic","gList","animationDataNew","_createFrameGraphic","_gList","_rootMatrix","_updateNodeGraphic","_rootNode","parentTransfrom","tNodeG","tResultTransform","tTex","_nodeGDic","_getNodeGraphicData","resultTransform","tGraphicAlpha","skin","_getTextureByUrl","_updateNoChilds","tTransform","_updateNodeGraphic2","onlyTranslate","hasTrans","ifSave","getNodeDataByID","nodeID","_getParams","params","obj2","_temParam","_getObjVar","noValue","vArr","GraphicNode","frameData","_drawTextureCmd","aX","aY","_tempMt","setAniData","aniName","animations","tAniO","aniDic","anilist","frameO","animationList","animationDic","parseByData","rootNode","aniO","nodeRoot","setUpAniData","animationObject","_I","Animation","_autoPlay","_frames","_setFramesFromCache","showWarn","framesMap","parseAnimationByData","_copyLabels","loadAnimation","loadAtlas","loadImages","autoPlay","cacheName","createFrames","onLoaded","loadUrl","getAtlas","_loadAnimationData","parseAnimationData","defaultO","aniList","key2","images","BitmapFont","fontSize","autoScaleSize","tint","maxWidth","lineHeight","letterSpacing","parseFont","xml","paddingArray","padding","ct","advance","getTextWidth","getMaxWidth","getMaxHeight","EffectAnimation","EFFECT_BEGIN","_onOtherBegin","_addEvent","effect","playEvent","_playEvent","_onPlayAction","_recordInitData","_aniKeys","effectClass","classStr","_effectClass","uiData","effectData","tSecondFrame","secondFrames","TextStyle","bold","italic","underline","underlineColor","valign","alignItems","leading","HtmlElementType","HtmlElement","getAttr","setAttr","fetchAttributes","Text","HtmlImage","_element","objContainer","loadTexture","refreshLayout","HtmlLink","_shape","_rects","_rectCnt","resetArea","HtmlParseOptions","linkUnderline","defaultLinkUnderline","linkColor","defaultLinkColor","s_list1","s_list2","HtmlParser","_styleStack","_options","_elements","_styleStackTop","colorChanged","skipText","ignoreWhiteSpace","skipNextCR","appendText","pushStyle","popStyle","strikethrough","getAttribute","getFromPool","Link","LinkEnd","Input","Select","isNewLine","tf","equalStyle","defaultParser","classMap","UBBParser","_readPos","defaultImgWidth","defaultImgHeight","_handlers","onTag_URL","onTag_IMG","onTag_B","onTag_I","onTag_U","onTag_Simple","onTag_COLOR","onTag_FONT","onTag_SIZE","attr","getTagText","lastColor","lastSize","pos3","tag","repl","func","_overflow","VISIBLE","_singleCharRender","_prompt","_textWidth","_textHeight","_textStyle","_lines","_padding","_fontSizeScale","bitmapFont","_bitmapFonts","recoverLines","returnToPool","textWidth","_updatingLayout","drawBg","markChanged","textHeight","typeset","ignoreLang","langPacks","changeText","_realFont","_bitmapFont","family","set_color","_isChanged","wordWrap","_wordWrap","bgColor","_bgColor","_borderColor","singleCharRender","html","_html","ubb","_ubb","_maxWidth","htmlParseOptions","_htmlParseOptions","parseTemplate","template","_templateVars","templateVars","setVar","scrollX","_scrollPos","maxScrollX","renderText","scrollY","maxScrollY","_typeset","doLayout","_objContainer","_hideText","isPrompt","_onPostLayout","saveColor","normalizeCR","_parseEscapeChars","escapeCharsPattern","getReplaceStr","_asPassword","_passwordChar","_promptColor","rectWidth","ELLIPSIS","MAX_VALUE","curLine","lastCmd","charWidth","charHeight","rectHeight","bfont","buildLines","ctxFont","_ctxFont","mr","_testWord","line","wrapText","endLine","startLine","cmdPool","linkEnd","linePool","remainWidth","tw","maybeIndex","wordWidth","isEmoji","testEmoji","isEmojiChar","newLine","ccode","unicode","execResult","wordBoundaryTest","exec","calcTextSize","nw","nh","lastLine","htmlObj","SHRINK","low","high","cur","linesDeleted","done","ellipsisStr","SCROLL","HIDDEN","paddingLeft","paddingTop","scrollPos","clipped","curLink","linkStartX","lineCnt","lineClipped","thickness","_bgDrawCmd","RightToLeft","emojiTest","escapeSequence","_isFirstTouch","_tempRect","_rollOverChain","_rollOutChain","_inst","InputManager","_touchPool","_mouseTouch","TouchInfo","_pressKeys","_keyEvent","getTouch","touchTarget","_touchTarget","touchCount","clickCancelled","_stage","oncontextmenu","addEventListener","preventDefault","_touchInput","handleMouse","passive","isTextInputting","handleTouch","setPointerCapture","pointerId","releasePointerCapture","handleKeys","_eventType","_nativeEvent","pageX","clientX","pageY","clientY","mouseEventsEnabled","getNodeUnderPoint","_mouseMoveTime","move","downTargets","lastRollOver","handleRollOver","began","handleFocus","_c","_d","moved","clickTarget","clickTest","isDblClick","clickCount","deltaY","_e","changedTouches","uTouch","multiTouchEnabled","identifier","shouldCreate","focus","pre_input","new_input","nativeInput","multiline","keyEventsEnabled","getSpriteUnderPoint","getSprite3DUnderPoint","editing","hitTest","childEditing","isHit","clickTestThreshold","isiOSWKwebView","clickTrack","downPos","performance","lastClick","Render","loopFun","_customRequestAnimationFrame","_loopFunction","customRenderEngine","engine","_customEngine","mainCanv","_first","_startTm","_timeId","_Render","_mainCanvas","stamp","ifps","frm","lastFrm","_loop","fps","_onVisibilitychange","isVisibility","clearInterval","setInterval","_enterFrame","_rendercontex","_init_","TypedArrayClasses","Int8Array","Float64Array","_errors","_getNodeByRef","_getNodeData","SerializeUtil","outErrors","getNodeByRef","getNodeData","isDeserializing","_decodeObj","_$uuid","getResURLByUUID","getLoadTypeByEngineType","_$type","_$ref","typedArray","_$tmpl","childObj","overrideData","dataMap","od","_$override","_$parent","nodeData","overrideDataMap","_$id","children","_$child","cloneTree","comps","_$comp","visit","idPath","toWrite","arrayEquals","mergeData","compType","_$prefab","_$index","overrided","_multiline","_editable","_maxChars","_type","IOS_IFRAME","self","_onMouseDown","_onUnDisplay","_createInputElement","isTrue","_popupInputMethod","inputElement","_initInput","input","inputContainer","zIndex","setPos","cssText","resize","backgroundColor","border","outline","_processInputting","_stopEvent","setFontFace","fontFace","fontFamily","isAppUseNewInput","setFontSize","_restrictPattern","setSelection","selectionStart","selectionEnd","_syncInputTransform","inputWid","inputHei","setScale","setSize","select","_focus","_focusOut","_setInputMethod","_focusIn","scrollTop","blur","parentElement","direction","cssStyle","whiteSpace","_setPromptColor","readOnly","setType","setForbidEdit","maxLength","placeholder","_onKeyDown","setMultiAble","fontStyle","fontWeight","promptStyleDOM","head","innerText","miniGameTxt","setBgColor","restrict","_restrict","editable","maxChars","prompt","promptColor","TYPE_TEXT","TYPE_PASSWORD","TYPE_EMAIL","TYPE_URL","TYPE_NUMBER","TYPE_RANGE","TYPE_DATE","TYPE_MONTH","TYPE_WEEK","TYPE_TIME","TYPE_DATE_TIME","TYPE_DATE_TIME_LOCAL","TYPE_SEARCH","Widget","_top","_bottom","_left","_right","_centerX","_centerY","_onParentResize","resetLayoutX","resetLayoutY","flagX","flagY","resetLayout","centerX","centerY","_rect","_ptPoint","HitArea","_isHitGraphic","graphic","_isHitCmd","_ptInPolygon","areaPoints","nCross","hit","unHit","_hitCmds","_unHitCmds","WeakObject","supportWeakMap","delInterval","clearCache","_maps","_obj","del","Prefab","_deps","errors","json","LegacyUIParser","createByData","deps","addDep","onDepObsolute","addDeps","_listClass","_viewClass","HierarchyResource","PrefabImpl","api","root","runtime","clas","_viewCreated","_funMap","_runScript","tInitTool","InitTool","createComp","_idMap","tAni","_aniList","Scene","finish","view","initTool","getCompInstance","isList","_addGraphicsToSprite","_isDrawType","_addGraphicToSprite","tChild","addNodeRef","setCompValue","_afterInited","_sheet","one","watcher","DataWatcher","exe","_parseWatchData","key1","_parseKeyWord","_watchMap","notifer","changeData","pageData","_doAwake","innerUrls","addInnerUrl","loadList","loadList3D","check","customHandler","instanceHandler","createByJson","itemRender","Function","customProps","created","graphicO","_getGraphicsFromSprite","_addGraphicToGraphics","isChild","dataO","propsName","propsO","drawConfig","DrawTypeDic","_tM","_getPointListByStr","xPos","adptFun","_getTransformData","pointArr","Rect","Circle","Pie","FillTexture","FillText","Lines","Curves","Poly","getBindFun","_nodeRefList","_initList","tool","referStr","setNodeRef","tRefInfo","getReferData","tStr","list2","addInitItem","doInits","createChildren","autoDestroyAtClosed","_widget","uimap","loadScene","unDestroyedScenes","_loadPage","hideLoadingPage","createView","getNodeByID","closeOther","param","closeAll","_scene3D","onOpened","onClosed","_getWidget","_sizeChanged","freshLayout","_root","_scene2D","showLoadingPage","_onSceneLoaded","destroyUnusedResources","loadPage","_showLoading","_hideLoading","Timer","autoActive","currFrame","_delta","_map","gSysTimer","_update","currTimer","_getNowData","_lastTimer","awake","handlers","userFrame","exeTime","_clearHandlers","_recoverHandler","useFrame","_getHandler","TimerHandler","_indexHandler","cid","mid","$_TID","_mid","CallLater","clearCallLater","withClear","_laters","laters","LaterHandler","WebGL","isNativeRender_enable","RunDriver","changeWebGLSize","onStageResize","ComponentDriver","_onUpdates","_onLateUpdates","_onPreRenders","_onPostRenders","_toStarts","callStart","onStart","callUpdate","onUpdate","callLateUpdate","onLateUpdate","callPreRender","onPreRender","callPostRender","onPostRender","callDestroy","Stage","_frameRate","designWidth","designHeight","renderingEnabled","screenAdaptationEnabled","_screenMode","_scaleMode","_alignV","_alignH","_safariOffsetY","_frameStartTime","_previousOrientation","orientation","_wgColor","_scene3Ds","_globalRepaintSet","_globalRepaintGet","_needUpdateCanvasSize","_isFocused","_isVisibility","_isInputting","visibilityChange","hidden","mozHidden","msHidden","webkitHidden","getSafariToolbarOffset","updateCanvasSize","needUpdateCanvasSize","isFocused","setScreenSize","screenWidth","screenHeight","SCREEN_NONE","SCREEN_VERTICAL","SCREEN_HORIZONTAL","scaleMode","realWidth","realHeight","SCALE_NOSCALE","SCALE_SHOWALL","SCALE_NOBORDER","SCALE_FULL","SCALE_FIXED_WIDTH","SCALE_FIXED_HEIGHT","SCALE_FIXED_AUTO","SCALE_FIXED_AUTO_LAYAME","SCALE_FIXED_AUTO_LAYAVERSE","_formatData","ALIGN_LEFT","ALIGN_RIGHT","ALIGN_TOP","ALIGN_BOTTOM","_setStageStyle","canvasStyle","webkitTransformOrigin","msTransformOrigin","mozTransformOrigin","oTransformOrigin","msTransform","mozTransform","oTransform","setScreenSizeForScene","stageWidth","stageHeight","alignH","alignV","_setStyleBgColor","background","screenMode","getFrameTm","getTimeFromFrameStart","_setVisibleStyle","visibility","renderToNative","FRAME_SLEEP","_runComponents","_updateTimers","isFastMode","FRAME_MOUSE","FRAME_FAST","FRAME_SLOW","isDoubleLoop","fullScreenEnabled","requestFullscreen","fullScreenChanged","removeEventListener","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","_frameRateNative","setLimitFPS","setMouseFrame","setSlowFrame","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","SCALE_EXACTFIT","ALIGN_CENTER","ALIGN_MIDDLE","BlurFilterGLRender","setShaderInfo","blurinfo","blurInfo","sigma","sigma2","strength_sig2_2sig2_gauss1","BlurFilter","getStrenth_sig2_2sig2_native","strength_sig2_native","GlowFilterGLRender","_sv_blurInfo1","u_blurInfo1","info2","_sv_blurInfo2","u_blurInfo2","svBlur","GlowFilter","offX","offY","getColorNative","_color_native","getBlurInfo1Native","_blurInof1_native","getBlurInfo2Native","_blurInof2_native","SoundChannel","isStopped","volume","completeHandler","__runComplete","AudioSoundChannel","_audio","_onEnd","__onEnd","__resumePlay","_src","loops","LayaEvent","currentTime","playbackRate","SoundManager","addChannel","removeChannel","AudioSound","_musicAudio","removeElement","autoReleaseSound","disposeSoundLater","readyState","_audioCache","clearBySign","_makeMusicOK","_bgMusic","_initMusicAudio","onErr","offs","tAd","cloneNode","channel","WebAudioSoundChannel","bufferSource","_currentTime","_volume","_startTime","_pauseTime","WebAudioSound","_onPlayEnd","__onPlayEnd","gain","_clearBufferSource","audioBuffer","createBufferSource","connect","disconnect","destination","onended","setTargetAtTime","SetTargetDelay","sourceNode","noteOff","_tryCleanFailed","_tryClearBuffer","_disposed","_miniBuffer","_unlocked","_playEmptySound","_unlock","_loaded","__playAfterLoaded","__toPlays","toPlays","tParams","supportWebAudio","initWebAudio","_soundClass","_musicClass","_channels","_lastSoundUsedTimeDic","_isCheckingDispose","_checkDisposeSound","hasCheck","disposeSoundIfNotUsed","destroySound","autoStopMusic","_stageOnBlur","_stageOnFocus","_visibilityChange","_autoStopMusic","_isActive","_musicChannel","_blurPaused","stopAllSound","_recoverWebAudio","muted","_muted","musicMuted","soundMuted","_soundMuted","_musicMuted","useAudioMusic","_useAudioMusic","soundClass","tSound","_soundCache","musicVolume","soundVolume","playSound","_setVolume","SoundNode","_onParentChange","_channel","isMusic","_isMusic","playMusic","_setPlayAction","tar","_setPlayActions","events","eventArr","_playEvents","_tar","_stopEvents","stopEvent","VideoTexture","videoWidth","videoHeight","_requestVideoFrame","_frameRender","_isLoaded","_needUpdate","immediatelyPlay","_listeningEvents","x5PlaysInline","playsInline","webkitPlaysInline","playsinline","autoplay","loadedmetadata","scope","updateVideo","requestVideoFrameCallback","isNeedUpdate","initVideoTextureData","childElementCount","firstChild","appendSource","sourceElement","extension","updateVideoTexture","frameRender","canPlayType","buffered","currentSrc","ended","paused","preload","seekable","seeking","videoEvents","VideoNode","_internalTex","_videoTexture","videoTexture","onVideoMetaLoaded","reload","detroyChildren","AnimatorPlayState2D","animatorState","_currentState","_frontPlay","_resetPlayState","clipDuration","_finish","_startPlayTime","_elapsedTime","_lastIsFront","_parentPlayTime","_playNum","_playAllTime","playTime","_normalizedPlayTime","AnimatorControllerLayer2D","_playStateInfo","_crossPlayStateInfo","_crossMark","_crossNodesOwnersCount","_crossNodesOwnersIndicesMap","_srcCrossClipNodeIndices","_destCrossClipNodeIndices","playOnWake","defaultWeight","blendingMode","BLENDINGMODE_OVERRIDE","_states","_playType","states","removeState","addState","defaultStateName","_defaultState","getStateByName","_defaultStateNameCatch","defaultState","_removeClip","clipStateInfos","_getReferenceCount","getCurrentPlayState","stateName","AniParmType","AniStateConditionType","AniStateConditionNumberCompressType","AnimatorUpdateMode","AniConditionType","TextResourceFormat","BLENDINGMODE_ADDTIVE","AnimatorControllerParse","layers","controllerLayers","clipsID","retobj","checkStates","enterName","clipState","enterState","checkNext","defName","checkDefault","nexts","soloTransitions","nState","getStateByID","conditions","checkConditions","animatorParams","parms","parm","checkValue","defState","Animator2D","_speed","_updateMode","Normal","_lowUpdateDelty","_controllerLayers","_parameters","controller","_controller","updateTo","parameters","speed","_updateStateFinish","playState","_eventExit","_setClipDatasToNode","stateInfo","additive","controllerLayer","realtimeDatas","_realtimeDatas","_nodes","getNodeByIndex","getOwner","_applyFloat","pro","ower","defVal","_ownerMap","property","ownerPathCount","ownPat","getOwnerPathByIndex","pobj","propertyCount","pname","getPropertyByIndex","classObj","_updateClipDatas","addtive","playStateInfo","curPlayTime","clipStart","currentFrameIndices","_currentFrameIndices","_evaluateClipDatasRealTime","_updatePlayer","elapsedTime","layerIndex","isReplay","clipEnd","lastElapsedTime","pAllTime","_lastElapsedTime","normalizedTime","yoyo","pTime","normalizedPlayTime","_eventStateUpdate","_applyTransition","_eventtransition","absTime","_eventLoop","_updateEventScript","_animationEvents","frontPlay","parentPlayTime","_eventScript","currPlayTime","scripts","eventName","layerindex","transition","crossFade","destState","transduration","transstartoffset","_applyUpdateMode","LowFrame","UnScaleTime","gotoAndStopByFrame","curPlayState","calclipduration","_eventStart","NEGATIVE_INFINITY","_checkEnterIndex","_enterTransition","defaultClip","getDefaultState","cycleOffset","islooping","addControllerLayer","controllderLayer","transitionDuration","layer","enterTransition","setParamsTrigger","Trigger","setParamsNumber","setParamsBool","getParamsvalue","AnimatorState2D","transitions","_scripts","_resetFrameIndices","EVENT_OnStateUpdate","onStateUpdate","animator","EVENT_OnStateEnter","setPlayScriptInfo","onStateEnter","EVENT_OnStateExit","onStateExit","EVENT_OnStateLoop","onStateLoop","normalizeTime","paramsMap","soloNums","transNums","addScript","getScript","getScripts","coms","KeyframeNode2D","_ownerPath","_propertys","_keyFrames","keyFramesCount","_setOwnerPathCount","_setOwnerPathByIndex","_setPropertyCount","_setPropertyByIndex","_setKeyframeCount","_joinOwnerPath","sep","_joinProperty","getKeyframeByIndex","Keyframe2D","Animation2DEvent","AnimationClip2DParse01","_DATA","_reader","_BLOCK","blockStarts","blockLengths","prePos","_strings","reader","_version","READ_DATA","READ_BLOCK","READ_STRINGS","blockName","fn","numList","numCount","nodeCount","nodesMap","_nodesMap","nodesDic","_nodesDic","setNodeByIndex","_indexInList","pathLength","nodePath","mapArray","propertyLength","fullPath","keyframeCount","timeToFrame","tweenType","tweenInfo","inTangent","outTangent","inWeight","outWeight","extend","eventCount","paramCount","addEvent","KeyframeNodeList2D","AnimationClip2D","playCurTime","realTimeCurrentFrameIndexes","outDatas","nextFrameIndex","frameIndex","isEnd","nextFarme","_getTweenVal","nextFrame","dur","tweenFun","poval","oval","hermiteInterpolate","hermiteCurveSplineWeight","_binarySearchEventIndex","midValue","frameValue","frametime","frameOutWeight","frameOutTangent","nextframeValue","nextframetime","nextframeInweight","nextframeIntangent","Eps","wt1","wt2","yp1","yp2","isFinite","wt2s","t2","fg","fpg","fppg","Linear","Quad_EaseIn","Quad_EaseOut","Quad_EaseInOut","Cubic_EaseIn","Cubic_EaseOut","Cubic_EaseInOut","Quart_EaseIn","Quart_EaseOut","Quart_EaseInOut","Quint_EaseIn","Quint_EaseOut","Quint_EaseInOut","Sine_EaseIn","Sine_EaseOut","Sine_EaseInOut","Expo_EaseIn","Expo_EaseOut","Expo_EaseInOut","Circ_EaseIn","Circ_EaseOut","Circ_EaseInOut","Elastic_EaseIn","Elastic_EaseOut","Elastic_EaseInOut","Back_EaseIn","Back_EaseOut","Back_EaseInOut","Bounce_EaseIn","Bounce_EaseOut","Bounce_EaseInOut","endValue","t3","Animation2DParm","Animation2DCondition","AnimatorStateCondition","_conditionNameMap","conditionNameToID","checkState","AnimatorStateNumberCondition","_numberValue","_numberCompareFlag","numberValue","compareFlag","AnimatorStateBoolCondition","_compareFlag","AnimatorStateTriggerCondition","AnimatorTransition2D","exitByTime","exitTime","mute","addCondition","removeCondition","con","AnimatorController2D","getLayers","lArr","acl","getState","createState","idCatch","defID","childStates","groupRet","setTransitions","setExitTransition","exitRet","pExitRet","ats","sts","linArr","ato","addConditions","solo","_getAnimatorTransition2D","pState","exitTransition","idk","Boolean","currLayer","setParm","Script","onTriggerEnter","onTriggerStay","onTriggerExit","onCollisionEnter","onCollisionStay","onCollisionExit","onJointBreak","onMouseDown","onMouseUp","onRightMouseDown","onRightMouseUp","onMouseMove","onMouseDrag","onMouseDragEnd","onMouseOver","onMouseOut","onMouseClick","onMouseDoubleClick","onMouseRightClick","onKeyDown","onKeyPress","onKeyUp","TextResource","registerLoader","Plain","toloadPics","folderPath","query","pics","pic","directory","subTextures","tPic","filename","spriteSourceSize","sourceSize","_stateNum","stateNum","errorList","HierarchyParser","inPrefab","prefabNodeDict","skinBaseUrl","bakedOverrideData","nodeMap","dataList","allNodes","outNodes","prefab","createNode","pstr","overrideData2","testId","findNodeInPrefab","_$runtime","outNodeData","nodeData2","topNode","compInitList","compData","decodeOptions","bakeOverrideData","applyOverrideData","decodeObj","_$var","_$preloads","HierarchyLoader","_$ver","_load","legacySceneOrPrefab","links","collectResourceLinks","resArray","HDRTextureInfo","getHDRInfo","readByteOffset","readLine","lineStr","getLineString","commandsMap","commands","resolutions","decreaseY","decreaseX","get_32_bit_rle_rgbe","dataIndex","rgbeBuffer","rgbeArray","pixelBuffer","pixelArray","scanlineLength","Ldexp","mantissa","exponent","readScanLine","scanlineArray","getc","wrong","readcolors","byter","byteg","byteb","bytee","pixelIndex","ldexp","setScanLineData","unnormalizedr","unnormalizedg","unnormalizedb","unnormalizede","olddreadcolors","rshift","scanIndex","lastIndex","color_color","clr","internalResources","HDRTEXTURE","propertyParams2d","constructParams2d","compressedFormats","videoFormats","wrapTex2D","tex2D","getBaseName","load2","fileIndex","platforms","fileInfo","readWrite","_parseDDS","_parseKTX","_parsePVR","_parseHDRTexture","_SimpleAnimatorTextureParse","img","needBitmap","ImageBitmap","createImageBitmap","bitmapimage","_parseImage","loadStates","NullLoader","picUrl","testString","fontName","registerFont","FontFace","fonts","fontTxt","txtWidth","textContent","checkComplete","RenderState","CULL_BACK","BLENDPARAM_ONE","BLENDPARAM_ZERO","BLENDEQUATION_ADD","DEPTHTEST_LEQUAL","STENCILTEST_OFF","STENCILOP_KEEP","STENCILOP_REPLACE","CULL_NONE","CULL_FRONT","BLENDPARAM_SRC_COLOR","BLENDPARAM_ONE_MINUS_SRC_COLOR","BLENDPARAM_DST_COLOR","BLENDPARAM_ONE_MINUS_DST_COLOR","BLENDPARAM_SRC_ALPHA","BLENDPARAM_ONE_MINUS_SRC_ALPHA","BLENDPARAM_DST_ALPHA","BLENDPARAM_ONE_MINUS_DST_ALPHA","BLENDPARAM_SRC_ALPHA_SATURATE","BLENDPARAM_BLENDCOLOR","BLENDPARAM_BLEND_ONEMINUS_COLOR","BLENDEQUATION_SUBTRACT","BLENDEQUATION_REVERSE_SUBTRACT","BLENDEQUATION_MIN","BLENDEQUATION_MAX","DEPTHTEST_OFF","DEPTHTEST_NEVER","DEPTHTEST_LESS","DEPTHTEST_EQUAL","DEPTHTEST_GREATER","DEPTHTEST_NOTEQUAL","DEPTHTEST_GEQUAL","DEPTHTEST_ALWAYS","STENCILTEST_NEVER","STENCILTEST_LESS","STENCILTEST_EQUAL","STENCILTEST_LEQUAL","STENCILTEST_GREATER","STENCILTEST_NOTEQUAL","STENCILTEST_GEQUAL","STENCILTEST_ALWAYS","STENCILOP_ZERO","STENCILOP_INCR","STENCILOP_INCR_WRAP","STENCILOP_DECR","STENCILOP_DECR_WRAP","STENCILOP_INVERT","Default","UniformBufferBase","pointer","_mapArray","_blockName","_singgle","_glPointerID","splitBuffer","UniformBufferObject","bytelength","isSingle","_Map","getUBOPointer","bufferBase","createUniformBufferObject","glPointer","UNIFORM_BUFFER","_isSingle","_glPointer","_bindUniformBufferBase","bindBufferBase","_bindBufferRange","byteCount","bindBufferRange","_reset","MAX_SAFE_INTEGER","subData","setDataEx","bufferData","_updateDataInfo","setDataByByUniformBufferDataOffset","datalength","reallength","_realByte","MaterialRenderMode","TextureCubeFace","UBONAME_SCENE","UBONAME_CAMERA","UBONAME_SPRITE3D","UBONAME_SHADOW","commonMap","Material","SHADERDEFINE_ALPHATEST","SHADERDEFINE_MAINTEXTURE","SHADERDEFINE_ADDTIVEFOG","ALPHATESTVALUE","CULL","BLEND_SRC","BLEND_DST","BLEND_SRC_RGB","BLEND_DST_RGB","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","BLEND_EQUATION","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","DEPTH_TEST","DEPTH_WRITE","STENCIL_Ref","STENCIL_TEST","STENCIL_WRITE","STENCIL_Op","alphaTestValue","alphaTest","setDefine","blendSrc","blendDst","blendSrcAlpha","blendSrcRGB","blendDstRGB","blendDstAlpha","MaterialProperty","propertyMap","shaderValues","MaterialDefine","shaderDefineArray","materialRenderMode","_matRenderNode","RENDERMODE_OPAQUE","renderQueue","RENDERQUEUE_OPAQUE","RENDERMODE_CUTOUT","RENDERQUEUE_ALPHATEST","RENDERMODE_TRANSPARENT","RENDERQUEUE_TRANSPARENT","RENDERMODE_ADDTIVE","RENDERMODE_ALPHABLENDED","RENDERMODE_CUSTOME","createShaderData","_bindShaderInfo","shaderUBODatas","_releaseUBOData","values","effectiveProperty","setShaderName","_uniformBlock","applyUniformDefaultValue","getBoolByIndex","setBoolByIndex","getFloatByIndex","setFloatByIndex","setFloat","getIntByIndex","setIntByIndex","getVector2ByIndex","setVector2ByIndex","getVector3ByIndex","setVector3ByIndex","setVector4ByIndex","getVector4ByIndex","getVector4","getColorByIndex","setColorByIndex","getMatrix4x4ByIndex","setMatrix4x4ByIndex","getMatrix3x3ByIndex","setMatrix3x3ByIndex","setTextureByIndex","reSetTexture","getTextureByIndex","getBufferByIndex","setBufferByIndex","setShaderDataByIndex","getShaderDataByIndex","destBaseMaterial","setShaderPropertyValue","getShaderPropertyValue","oldparseEndEvent","MaterialParser","parseLegacy","getBaseTexture","uniName","vectorValue","matrix3","matrix4","tex2DPath","jsonData","classType","vectors","renderStateData","_getRenderStateParams","collectLinks","shaderPath","ParseJSON","parseStart","fstr","cobj","currArr","numVal","currStr","formatVal","finCurrObj","cNext","cstr","finCurrStr","pcobj","DEFAULT_PIXELS","_blackTexture","_grayTexture","_whiteTexture","_errorTexture","writeTexture","every","setCubePixelsData","setCubeImageData","updateSubPixelsData","setCubeSubPixelData","setCubeDDSData","setCubeKTXData","CGBlock","shaderBlock","shaderDataOBJ","ShaderParser","getShaderBlock","cgmap","getCGBlock","bindCG","sliceFlag","sliceIndex","slicedata","splitmap","compileToTree","shaderObj","i1","i2","cgdata","datavalue","getMapKey","passArray","attributemap","indexofAttribute","dataArray","getShaderDataType","defaultmap","newUniformMap","serializable","default","getDefaultData","mat3","texcube","compileAsync","compiledObjs","decodeAudioData","LocalStorage","_baseClass","Storage","init","items","support","setItem","setJSON","getJSON","removeItem","localStorage","PrimitiveSV","TextureSV","_blurInfo","_u_blurInfo1","_u_blurInfo2","_u_TexRange","_colorMat","_colorAlpha","_strength_sig2_2sig2_gauss1","Mouse","cursor","cursorStr","_preCursor","MeshParticle2D","glfloat","maxNum","setMaxParticleNum","_inited","stageConfig","laya3D","_changeWebGLSize","is3DMode","_setStyleInfo","supportLocalStorage","enableNative","beginCheck","steps","beforeInit","_beforeInitCallbacks","createEngine","initRender2D","_initCallbacks","_afterInitCallbacks","afterInit","step","__int__","createRender","__initDefine__","_initone","erralert","detail","alert","stack","_evcode","debugJsPath","DrawType","RenderDrawMode","RenderIndexMode","TextureCompareMode","TextureDecodeFormat","alertGlobalError","enableDebugPanel","addInitCallback","addBeforeInitCallback","addAfterInitCallback","BlendState","colorBlendhash","alphaBlendComponent","_blend_All_pool","_blend_seperate_pool","BlendComponent","blendOperationGLData","sourceBlendFactor","destinationFactor","getHash","hashindex","_hashIndex","_blendOperationGLData","_sourceBlendFactor","_destinationFactor","CommandUniformMap","_stateName","hasPtrID","getMap","propertyName","addShaderBlockUniform","blockname","blockProperty","RenderStateCommand","cmdArray","renderstate","applyRenderStateCMD","EffectBase","autoDestroyAtComplete","_comlete","_exeTween","_doTween","Keyboard","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","A","B","C","D","E","F","G","H","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","NUMPAD","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","SEMICOLON","EQUAL","COMMA","MINUS","PERIOD","SLASH","BACKQUOTE","LEFTBRACKET","BACKSLASH","RIGHTBRACKET","QUOTE","ALTERNATE","BACKSPACE","CAPS_LOCK","COMMAND","CONTROL","DELETE","ESCAPE","PAGE_UP","PAGE_DOWN","HOME","LEFT","UP","RIGHT","DOWN","SHIFT","SPACE","TAB","INSERT","KeyLocation","STANDARD","NUM_PAD","CommandEncoder","getArrayData","getCount","variable","QuickTestTool","_typeToNameDic","showedDic","_rendertypeToStrDic","getMCDName","_addType","showRenderTypeInfo","_stageRender","_countStart","_PreStageRender","_countEnd","_countDic","_i","showCountInfo","Socket","_input","output","_output","connected","_connected","_endian","port","byteClass","protocols","isSecure","disableInput","_byteClass","connectByUrl","_socket","cleanSocket","WebSocket","binaryType","_addInputPosition","onopen","_onOpen","_onMessage","onclose","_onClose","pre","GLSLCodeGenerator","getAttributeType","uniformsMap","useUniformBlock","blocksStr","uniformsStr","blockUniforms","typeStr","ShaderInstance","_customUniformParamsMap","_uploadMark","_uploadRenderType","_webGLShaderLanguageProcess3D","_renderShaderInstance","_shaderPass","_create2D","vertexHead","fragmentHead","clusterSlices","defMap","defineStr","attributeglsl","glslAttributeString","uniformglsl","glslUniformString","isWebGL2","_maxAreaLightCountPerClusterAverage","SHADER_CAPAILITY_LEVEL","vsVersion","psVersion","dstVS","detFS","_webGLShaderLanguageProcess2D","_cameraUniformParamsMap","_spriteUniformParamsMap","sceneParams","cameraParams","customParams","getUniformMap","hasSpritePtrID","sprite2DParms","sceneParms","commap","_uploadMaterial","_uploadRender","_uploadCameraShaderValue","_uploadScene","shaderUniform","shaderDatas","uploadUnTexture","uploadRenderStateBlendDepth","uploadRenderStateBlendDepthByShader","uploadRenderStateBlendDepthByMaterial","datas","_f","_g","_k","_j","_m","_l","_p","_o","_r","_q","_t","_s","_v","_u","_z","_1","_0","_3","_2","_5","_4","_7","_6","uploadRenderStateFrontFace","isTarget","invertFront","forntFace","uploadCustomUniform","uploadCustomUniforms","ShaderVariable","onID","pointID","textureID","Tex3D","Base64Tool","lookup","bytes","encoded1","encoded2","encoded3","encoded4","reghead","arrU8List","newU8List","arg","Log","_logdiv","_btn","onclick","toggle","maxCount","autoScrollToBottom","scrollHeight","PerfData","datapos","PerfHUD","xdata","DATANUM","ydata","hud_width","hud_height","gMinV","gMaxV","textSpace","sttm","addDataDef","_now","updateValue","v2y","drawHLine","_lastTm","di","cd","dtlen","_cx","dtsz","drawTexTm","PoolCache","SingletonList","_add","indexof","TimeLine","_tweenDic","_tweenDataList","_currTime","_lastTime","_gidIndex","_firstTweenDic","_startTimeSort","_endTimeSort","_loopKey","_frameIndex","_total","tTweenData","tweenData","endTime","_labelDic","tIndex","gotoTime","tTween","tObject","tTweenDataCopyList","tDataP","diyTarget","_endTweenDataList","Compare","paraA","paraB","tP","_animComplete","gotoLabel","Label","tLabelData","timeOrLabel","tTarget","tSrcData","tNow","tFrameTime","tCurrTime","DrawParticleCmd","_templ","NativeCommandUniformMap","NativeGLObject","_engine","_gl","gl","_IDCounter","setResourceManager","NativeGLTextureContext","native","_native","conchImgId","setTexture3DPixlesData","renderTarget","faceIndex","createRenderTargetCubeInternal","createRenderTextureCubeInternal","video","internalTex","NativeGL2TextureContext","NativeGLRenderDrawContext","conchGLRenderDrawContext","drawElementsInstanced","instanceCount","drawArraysInstanced","first","drawArrays","drawElements","drawGeometryElement","geometryElement","NativeRenderStateCommand","conchRenderStateCommand","DepthFunc","StencilTest","StencilMask","addCMDInt1","StencilFunc","addCMDInt2","StencilOp","addCMDInt3","BlendFuncSeperate","addCMDInt4","NativeRenderState","setStencilOp","conchRenderState","MemoryDataType","NativeShaderDataType","WebGLMode","WebGLExtension","CommonMemoryAllocater","NativeMemory","shared","_sharedBuffer","creatBlock","_f64data","float32Array","float64Array","uint8Array","int32Array","freeMemoryBlock","NativeSourceID","UploadMemory","_currentOffsetInByte","addBlockCell","dataSizeInByte","uploadDataTOShareMemory","UploadMemoryManager","_dataNodeList","_commandNums","_currentBlock","UploadMemorySize","_conchUploadMemoryManager","conchUploadMemoryManager","_instance","_addNodeCommand","sizeInByte","_serialiseData","getUploadMemoryLength","uploadData","NativeShaderData","inUploadList","payload32bitNum","conchShaderData","setApplyUBOData","nativeObjID","nativeID","_dataType","updateMap","updataSizeMap","memoryBlock","strideInByte","strideFloat","clearUpload","compressNumber","Number32","compressVector2","compressVector3","compressVector4","compressMatrix4x4","compressNumberArray","Number32Array","compressTexture","compressUBO","UBO","_conchUniformBufferObject","configMotionProperty","NativeUniformBufferObject","conchUniformBufferObject","setGLBuffer","NativeGLVertexState","conchGLVertexState","_nativeVertexBuffers","vertexBuffer","_conchVertexBuffer3D","_conchIndexBuffer3D","GLObject","WebGLInternalTex","_mipmap","_mipmapCount","_addStatisticsInfo","useSRGBLoader","_baseMipmapLevel","_maxMipmapLevel","createTexture","isPot","isPotSize","log2","Repeat","_filterMode","getFilteMinrParam","_setTexParameteri","TEXTURE_MIN_FILTER","mag","getFilterMagParam","TEXTURE_MAG_FILTER","_warpU","warpParam","getWrapParam","_setWrapMode","TEXTURE_WRAP_S","_warpV","TEXTURE_WRAP_T","_warpW","TEXTURE_WRAP_R","_anisoLevel","anisoExt","_supportCapatable","getExtension","EXT_texture_filter_anisotropic","maxAnisoLevel","Max_AnisoLevel_Count","level","_setTexParametexf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","_compareMode","_bindTexture","texParameteri","texParameterf","NEAREST_MIPMAP_NEAREST","NEAREST","LINEAR_MIPMAP_NEAREST","LINEAR","Trilinear","LINEAR_MIPMAP_LINEAR","REPEAT","CLAMP_TO_EDGE","Mirrored","MIRRORED_REPEAT","deleteTexture","WebGLInternalRT","_depthTexture","_framebuffer","createFramebuffer","_msaaFramebuffer","deleteFramebuffer","_depthbuffer","deleteRenderbuffer","_msaaRenderbuffer","GLTextureContext","_glParam","internalFormat","_sRGB","EXT_sRGB","_oesTextureHalfFloat","OES_texture_half_float","_compressdTextureS3tc_srgb","WEBGL_compressed_texture_s3tc_srgb","_compressedTextureEtc1","WEBGL_compressed_texture_etc1","_compressedTextureS3tc","WEBGL_compressed_texture_s3tc","_compressedTextureETC","WEBGL_compressed_texture_etc","_compressedTextureASTC","WEBGL_compressed_texture_astc","_webgl_depth_texture","WEBGL_depth_texture","glTextureParam","useSRGB","SRGB_EXT","RGB","SRGB_ALPHA_EXT","RGBA","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","glRenderTextureParam","DEPTH_COMPONENT","DEPTHSTENCIL_24_8","DEPTH_STENCIL","UNSIGNED_INT_24_8_WEBGL","DEPTH_32","UNSIGNED_INT","STENCIL_8","glRenderBufferParam","DEPTH_COMPONENT16","attachment","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","STENCIL_INDEX8","STENCIL_ATTACHMENT","glRenderTargetAttachment","COLOR_ATTACHMENT0","getTarget","TEXTURE_2D","TEXTURE_CUBE_MAP","getFormatPixelsParams","formatParams","channels","bytesPerPixel","dataTypedCons","typedSize","getGLtexMemory","singlebyte","srgb_alpha","getGLRTTexMemory","cube","getpixelbyte","rtFormat","pixelByte","colorPixelbyte","supportSRGB","Texture_SRGB","supportGenerateMipmap","isSRGBFormat","useSRGBExt","glParam","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","texImage2D","texSubImage2D","fourSize","UNPACK_ALIGNMENT","mipmapWidth","mipmapHeight","memory","compressedTexImage2D","imageSize","pixelParams","hdrPixelData","cubeFace","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","channelsByte","dataTypeConstur","face","framebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","colorAttachment","depthBufferParam","depthbuffer","createRenderbuffer","framebufferRenderbuffer","RENDERBUFFER","renderbuffer","bindRenderbuffer","renderbufferStorage","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","UNSIGNED_SHORT_4_4_4_4","GL2TextureContext","TEXTURE_2D_ARRAY","TEXTURE_3D","SRGB8","RGB8","SRGB8_ALPHA8","RGBA8","RGB565","RGBA32F","RGB32F","RGB16F","HALF_FLOAT","RGBA16F","DEPTH24_STENCIL8","DEPTH_COMPONENT32F","UNSIGNED_INT_24_8","texStorage2D","texStorage3D","texSubImage3D","getCubeKTXRGBMData","LEQUAL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","GEQUAL","LESS","GREATER","NOTEQUAL","ALWAYS","NEVER","renderbufferStorageMultisample","msaaFramebuffer","renderbufferParam","msaaRenderbuffer","isSRGB","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","biltMask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","blitFramebuffer","GLBuffer","_glTargetType","_glBufferUsageType","_getGLTarget","_getGLUsage","_glUsage","STATIC_DRAW","DYNAMIC_DRAW","Stream","STREAM_DRAW","_glTarget","_memorychange","_getbindBuffer","_setbindBuffer","orphanStorage","srcData","bufferSubData","_getBindUBOBuffer","_setBindUBOBuffer","resizeBuffer","glErrorShadow","synthesizeGLError","opt_msg","WebGLVertexArrayObjectOES","isAlive","hasBeenBound","elementArrayBuffer","maxVertexAttribs","attrib","VertexAttrib","maxAttrib","normalized","cached","recache","OESVertexArrayObject","getError","NO_ERROR","err1","wrapGLError","original","getParameter","enableVertexAttribArray","disableVertexAttribArray","getVertexAttrib","vertexAttribPointer","VERTEX_ARRAY_BINDING_OES","currentVertexArrayObject","defaultVertexArrayObject","vao","currentArrayBuffer","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_ARRAY_NORMALIZED","indx","instrumentExtension","reset_","vertexArrayObjects","MAX_VERTEX_ATTRIBS","bindVertexArrayOES","createVertexArrayOES","arrayObject","deleteVertexArrayOES","isVertexArrayOES","oldVAO","newVAO","currentBinding","oldAttrib","bufferChanged","INVALID_OPERATION","_setupVertexArrayObject","original_getSupportedExtensions","getSupportedExtensions","original_getExtension","__OESVertexArrayObject","GlCapable","glEngine","_extentionVendorPrefixes","initExtension","initCapable","isWebgl2","_capabilityMap","OES_element_index_uint","Element_Index_Uint32","OES_texture_float","Texture_anisotropic","EXT_color_buffer_float","EXT_color_buffer_half_float","OES_texture_half_float_linear","RenderTextureFormat_R16G16B16A16","OES_texture_float_linear","RenderTextureFormat_R32G32B32A32","RenderTextureFormat_Depth","RenderTextureFormat_ShadowMap","OES_vertex_array_object","Vertex_VAO","ANGLE_instanced_arrays","DrawElement_Instance","EXT_shader_texture_lod","Shader_TextureLod","WEBGL_compressed_texture_pvrtc","COMPRESS_TEXTURE_PVRTC","COMPRESS_TEXTURE_ETC1","COMPRESS_TEXTURE_ETC","COMPRESS_TEXTURE_ASTC","Texture_FloatLinearFiltering","Texture_HalfFloatLinearFiltering","MSAA","UnifromBufferObject","_extensionMap","setExtensionMap","_extTextureFilterAnisotropic","_getExtension","_compressedTexturePvrtc","_oesTextureFloatLinear","_extColorBufferHalfFloat","_extColorBufferFloat","_vaoExt","_angleInstancedArrays","_oesTextureHalfFloatLinear","_oesTextureFloat","_oes_element_index_uint","_extShaderTextureLod","OES_standard_derivatives","prefixes","GLParams","_initParams","_glParamsData","Max_Active_Texture_Count","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxVertexUniform","MAX_VERTEX_UNIFORM_VECTORS","maxFragUniform","MAX_FRAGMENT_UNIFORM_VECTORS","Max_Uniform_Count","MAX_Texture_Size","MAX_TEXTURE_SIZE","MAX_Texture_Image_Uint","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_MAX_ANISOTROPY_EXT","GLRender2DContext","activeTexture","_activedTextureID","bindTexture","bindUseProgram","webglProgram","cacheShaderProgram","useProgram","_glUseProgram","GLRenderDrawContext","getMeshTopology","Points","POINTS","LINES","LineLoop","LINE_LOOP","LineStrip","LINE_STRIP","TRIANGLES","TriangleStrip","TRIANGLE_STRIP","TriangleFan","TRIANGLE_FAN","getIndexType","UInt8","UInt32","drawElementsInstancedANGLE","drawArraysInstancedANGLE","bufferState","drawParams","drawType","DrawArray","_glmode","DrawElement","_glindexFormat","DrawArrayInstance","DrawElementInstance","GLRenderState","_depthTest","_depthMask","_stencilTest","_cullFace","_initState","_blendEquation","_sFactor","_dFactor","_sFactorAlpha","_dFactorAlpha","_getBlendFactor","factor","SRC_COLOR","ONE_MINUS_SRC_COLOR","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","SRC_ALPHA_SATURATE","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","_getBlendOperation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","_getGLCompareFunction","compareFunction","_getGLStencilOperation","KEEP","REPLACE","INCR","DECR","INVERT","INCR_WRAP","DECR_WRAP","_getGLFrontfaceFactor","cullmode","CCW","CW","disable","depthMask","_depthFunc","depthFunc","_stencilMask","stencilMask","_stencilFunc","_stencilRef","stencilFunc","_stencilOp_fail","_stencilOp_zfail","_stencilOp_zpass","_blendEquationRGB","_blendEquationAlpha","blendEquationSeparate","_sFactorRGB","_dFactorRGB","blendFunc","blendFuncSeparate","CULL_FACE","_frontFace","frontFace","applyRenderStateCommand","GLShaderInstance","_vs","_ps","_program","createProgram","_vshader","_createShader","VERTEX_SHADER","_pshader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","nUniformNum","ACTIVE_UNIFORMS","_curActTexIndex","uniformData","getActiveUniform","getUniformLocation","_addShaderUnifiormFun","_uniformObjectMap","nUniformBlock","ACTIVE_UNIFORM_BLOCKS","gl2","uniformBlockName","getActiveUniformBlockName","getUniformBlockIndex","uniformBlockBinding","_legalUBObyteLength","createShader","shaderSource","compileShader","_isShaderDebugMode","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","BOOL","_uniform1i","uploadedValue","INT","_uniform1iv","_uniform1fv","_uniform1f","FLOAT_VEC2","_uniform_vec2v","_uniform_vec2","FLOAT_VEC3","_uniform_vec3v","_uniform_vec3","FLOAT_VEC4","_uniform_vec4v","_uniform_vec4","FLOAT_MAT2","_uniformMatrix2fv","FLOAT_MAT3","_uniformMatrix3fv","FLOAT_MAT4","_uniformMatrix4fv","_uniformMatrix4f","SAMPLER_2D","SAMPLER_2D_SHADOW","uniform1i","_glTextureIDParams","_uniform_sampler2D","SAMPLER_2D_ARRAY","_uniform_sampler2DArray","_uniform_sampler3D","SAMPLER_CUBE","_uniform_samplerCube","_uniform_UniformBuffer","uniform1f","uniform1fv","uniform2f","uniform2fv","uniform3f","uniform3fv","uniform4f","uniform4fv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniform1iv","_uniform_ivec2","uniform2i","_uniform_ivec2v","uniform2iv","_uniform_vec3i","uniform3i","_uniform_vec3vi","uniform3iv","_uniform_vec4i","uniform4i","_uniform_vec4vi","uniform4iv","texID","TEXTURE0","_activeTextures","deleteShader","deleteProgram","GLVertexState","createVertexArray","deleteVertexArray","_GLBindVertexArray","isVertexArray","clearVAO","valueData","loc","attribute","vertexAttribDivisor","divisor","vertexAttribDivisorANGLE","WebGLEngine","webglMode","Auto","_curUBOPointer","_GLUBOPointerMap","_GLBindPointerUBOMap","_lastClearColor","_lastClearDepth","_GLStatisticsInfo","_config","_isWebGL2","_lastViewport","_lastScissor","_webglMode","_initStatisticsInfo","webglConfig","initRenderEngine","names","WebGL1","WebGL2","_initBindBufferMap","_GLParams","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE30","TEXTURE31","_GLTextureContext","_GLRenderDrawContext","_GL2DRenderContext","_GLBufferBindMap","capatableType","lv","SCISSOR_TEST","clearFlag","clearcolor","clearDepth","Stencil","clearStencil","STENCIL_BUFFER_BIT","copySubFrameBuffertoTex","xoffset","yoffset","copyTexSubImage2D","colorMask","getTextureContext","getDrawContext","get2DRenderContext","getCreateRenderOBJContext","_renderOBJCreateContext","commandEncoder","shaderCall","custom","ArabicReshaper","characterMapContains","charsMap","getCharRep","getCombCharRep","combCharsMap","isTransparent","transChars","getOriginalCharsFromCode","convertArabic","crep","combcrep","shaped","current","prevID","nextID","convertArabicBack","apfb","selectedChar","toReturn","MatirxArray","ai0","ai1","ai2","ai3","_curState","effectScale","tweenTime","toChangedState","toInitState","_curTween","effectEase","tweenComplete","backEase","conchCommandUniformMap","conchWebGLEngine","addStatisticsInfo","conchGL2TextureContext","conchGLTextureContext","conchGLBuffer","_strsToID","_idToStrs","getName","_isInPool","globalBlockMap","comMap","glConfig","stencil","antialias","failIfMajorPerformanceCaveat","_replaceWebglcall","tempgl","assetId"],"sources":["../../src/layaAir/laya/utils/ClassUtils.ts","../../src/layaAir/Decorators.ts","../../src/layaAir/Config.ts","../../src/layaAir/laya/Const.ts","../../src/layaAir/ILaya.ts","../../src/layaAir/LayaEnv.ts","../../src/layaAir/laya/utils/Pool.ts","../../src/layaAir/laya/utils/Utils.ts","../../src/layaAir/laya/components/Component.ts","../../src/layaAir/laya/maths/Matrix.ts","../../src/layaAir/laya/maths/Point.ts","../../src/layaAir/laya/maths/Rectangle.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/HDREncodeFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureFormat.ts","../../src/layaAir/laya/layagl/LayaGL.ts","../../src/layaAir/laya/utils/Delegate.ts","../../src/layaAir/laya/events/Event.ts","../../src/layaAir/laya/events/EventDispatcher.ts","../../src/layaAir/laya/resource/Resource.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/FilterMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderCapable.ts","../../src/layaAir/laya/resource/BaseTexture.ts","../../src/layaAir/laya/utils/Byte.ts","../../src/layaAir/laya/utils/HalfFloatUtils.ts","../../src/layaAir/laya/RenderEngine/DDSTextureInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDimension.ts","../../src/layaAir/laya/RenderEngine/KTXTextureInfo.ts","../../src/layaAir/laya/resource/Texture2D.ts","../../src/layaAir/laya/webgl/shader/BaseShader.ts","../../src/layaAir/laya/webgl/utils/RenderState2D.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderTargetFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderClearFlag.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendFactor.ts","../../src/layaAir/laya/maths/Color.ts","../../src/layaAir/laya/resource/NativeRenderTexture2D.ts","../../src/layaAir/laya/resource/RenderTexture2D.ts","../../src/layaAir/laya/resource/WebGLRTMgr.ts","../../src/layaAir/laya/RenderEngine/RenderStateContext.ts","../../src/layaAir/laya/webgl/canvas/BlendMode.ts","../../src/layaAir/laya/resource/Texture.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendEquationSeparate.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CompareFunction.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CullMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/StencilOperation.ts","../../src/layaAir/laya/resource/AssetDb.ts","../../src/layaAir/laya/net/URL.ts","../../src/layaAir/laya/webgl/utils/IncludeFile.ts","../../src/layaAir/laya/webgl/utils/ShaderNode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompile.ts","../../src/layaAir/laya/RenderEngine/RenderShader/DefineDatas.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderDefine.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariantCollection.ts","../../src/layaAir/laya/maths/MathUtils3D.ts","../../src/layaAir/laya/maths/Vector2.ts","../../src/layaAir/laya/maths/Vector4.ts","../../src/layaAir/laya/maths/Vector3.ts","../../src/layaAir/laya/maths/Matrix3x3.ts","../../src/layaAir/laya/maths/Quaternion.ts","../../src/layaAir/laya/maths/Matrix4x4.ts","../../src/layaAir/laya/resource/Texture2DArray.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderData.ts","../../src/layaAir/laya/RenderEngine/UniformBufferData.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderParams.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/WrapMode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompileDefineBase.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderPass.ts","../../src/layaAir/laya/renders/VertexElement.ts","../../src/layaAir/laya/renders/VertexElementFormat.ts","../../src/layaAir/laya/RenderEngine/VertexDeclaration.ts","../../src/layaAir/laya/RenderEngine/RenderShader/VertexMesh.ts","../../src/layaAir/laya/RenderEngine/RenderShader/SubShader.ts","../../src/layaAir/laya/RenderEngine/RenderShader/Shader3D.ts","../../src/layaAir/laya/webgl/shader/d2/ShaderDefines2D.ts","../../src/layaAir/laya/renders/RenderInfo.ts","../../src/layaAir/laya/webgl/text/AtlasGrid.ts","../../src/layaAir/laya/utils/FontInfo.ts","../../src/layaAir/laya/webgl/shader/d2/value/Value2D.ts","../../src/layaAir/laya/utils/WordText.ts","../../src/layaAir/laya/webgl/text/CharRenderInfo.ts","../../src/layaAir/laya/webgl/text/ICharRender.ts","../../src/layaAir/laya/utils/Browser.ts","../../src/layaAir/laya/webgl/text/CharRender_Canvas.ts","../../src/layaAir/laya/webgl/text/TextRender.ts","../../src/layaAir/laya/webgl/text/TextAtlas.ts","../../src/layaAir/laya/webgl/text/TextTexture.ts","../../src/layaAir/laya/webgl/submit/SubmitKey.ts","../../src/layaAir/laya/webgl/submit/SubmitCMD.ts","../../src/layaAir/laya/filters/Filter.ts","../../src/layaAir/laya/utils/ColorUtils.ts","../../src/layaAir/laya/filters/ColorFilter.ts","../../src/layaAir/laya/maths/GrahamScan.ts","../../src/layaAir/laya/display/SpriteConst.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStatInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BufferTargetType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/IndexFormat.ts","../../src/layaAir/laya/utils/Stat.ts","../../src/layaAir/laya/webgl/submit/SubmitBase.ts","../../src/layaAir/laya/RenderEngine/VertexAttributeLayout.ts","../../src/layaAir/laya/webgl/utils/BufferState.ts","../../src/layaAir/laya/RenderEngine/Buffer.ts","../../src/layaAir/laya/RenderEngine/IndexBuffer.ts","../../src/layaAir/laya/webgl/utils/Buffer2D.ts","../../src/layaAir/laya/webgl/utils/IndexBuffer2D.ts","../../src/layaAir/laya/RenderEngine/VertexBuffer.ts","../../src/layaAir/laya/webgl/utils/VertexBuffer2D.ts","../../src/layaAir/laya/webgl/utils/Mesh2D.ts","../../src/layaAir/laya/webgl/utils/MeshQuadTexture.ts","../../src/layaAir/laya/webgl/utils/MeshTexture.ts","../../src/layaAir/laya/webgl/utils/MeshVG.ts","../../src/layaAir/laya/webgl/canvas/NativeWebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/webgl/canvas/WebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/renders/LayaGLQuickRunner.ts","../../src/layaAir/laya/filters/NativeFilter.ts","../../src/layaAir/laya/renders/RenderSprite.ts","../../src/layaAir/laya/maths/Bezier.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStateType.ts","../../src/layaAir/laya/webgl/canvas/DrawStyle.ts","../../src/layaAir/laya/webgl/canvas/Path.ts","../../src/layaAir/laya/webgl/canvas/save/SaveBase.ts","../../src/layaAir/laya/webgl/canvas/save/SaveClipRect.ts","../../src/layaAir/laya/webgl/canvas/save/SaveMark.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTransform.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTranslate.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.vs.glsl","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderPologyMode.ts","../../src/layaAir/laya/resource/NativeContext.ts","../../src/layaAir/laya/webgl/shader/d2/Shader2D.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DFrag.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DVertex.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DShaderInfo.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.ps.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.ps.glsl","../../src/layaAir/laya/webgl/shader/d2/skinAnishader/SkinMeshBuffer.ts","../../src/layaAir/laya/webgl/shapes/BasePoly.ts","../../src/layaAir/laya/webgl/shapes/EarcutNode.ts","../../src/layaAir/laya/webgl/shapes/Earcut.ts","../../src/layaAir/laya/webgl/submit/Submit.ts","../../src/layaAir/laya/webgl/submit/SubmitCanvas.ts","../../src/layaAir/laya/webgl/submit/SubmitTarget.ts","../../src/layaAir/laya/webgl/submit/SubmitTexture.ts","../../src/layaAir/laya/webgl/text/CharSubmitCache.ts","../../src/layaAir/Config3D.ts","../../src/layaAir/laya/resource/RenderTexture.ts","../../src/layaAir/laya/resource/Context.ts","../../src/layaAir/laya/resource/HTMLCanvas.ts","../../src/layaAir/laya/display/css/BoundsStyle.ts","../../src/layaAir/laya/display/css/CacheStyle.ts","../../src/layaAir/laya/display/css/SpriteStyle.ts","../../src/layaAir/laya/display/cmd/AlphaCmd.ts","../../src/layaAir/laya/display/cmd/DrawCircleCmd.ts","../../src/layaAir/laya/display/cmd/DrawCurvesCmd.ts","../../src/layaAir/laya/display/cmd/DrawImageCmd.ts","../../src/layaAir/laya/display/cmd/DrawLineCmd.ts","../../src/layaAir/laya/display/cmd/DrawLinesCmd.ts","../../src/layaAir/laya/display/cmd/DrawPathCmd.ts","../../src/layaAir/laya/display/cmd/DrawPieCmd.ts","../../src/layaAir/laya/display/cmd/DrawPolyCmd.ts","../../src/layaAir/laya/display/cmd/DrawRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTextureCmd.ts","../../src/layaAir/laya/display/cmd/FillTextureCmd.ts","../../src/layaAir/laya/display/cmd/RestoreCmd.ts","../../src/layaAir/laya/display/cmd/RotateCmd.ts","../../src/layaAir/laya/display/cmd/ScaleCmd.ts","../../src/layaAir/laya/display/cmd/TransformCmd.ts","../../src/layaAir/laya/display/cmd/TranslateCmd.ts","../../src/layaAir/laya/display/cmd/DrawTrianglesCmd.ts","../../src/layaAir/laya/display/cmd/Draw9GridTextureCmd.ts","../../src/layaAir/laya/display/cmd/SaveCmd.ts","../../src/layaAir/laya/display/GraphicsBounds.ts","../../src/layaAir/laya/display/cmd/ClipRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTexturesCmd.ts","../../src/layaAir/laya/display/cmd/FillTextCmd.ts","../../src/layaAir/laya/utils/CacheManger.ts","../../src/layaAir/laya/utils/VectorGraphManager.ts","../../src/layaAir/laya/display/cmd/DrawEllipseCmd.ts","../../src/layaAir/laya/display/cmd/DrawRoundRectCmd.ts","../../src/layaAir/laya/display/Graphics.ts","../../src/layaAir/laya/display/Node.ts","../../src/layaAir/laya/utils/Ease.ts","../../src/layaAir/laya/utils/Handler.ts","../../src/layaAir/laya/utils/Tween.ts","../../src/layaAir/laya/utils/Dragging.ts","../../src/layaAir/laya/utils/SpriteUtils.ts","../../src/layaAir/laya/display/Sprite.ts","../../src/layaAir/laya/display/AnimationBase.ts","../../src/layaAir/laya/net/AtlasInfoManager.ts","../../src/layaAir/laya/net/WorkerLoader.ts","../../src/layaAir/laya/resource/AtlasResource.ts","../../src/layaAir/laya/net/BatchProgress.ts","../../src/layaAir/laya/utils/ImgUtils.ts","../../src/layaAir/laya/html/XMLUtils.ts","../../src/layaAir/laya/html/XMLIterator.ts","../../src/layaAir/laya/html/XML.ts","../../src/layaAir/laya/net/HttpRequest.ts","../../src/layaAir/laya/net/Downloader.ts","../../src/layaAir/laya/net/Loader.ts","../../src/layaAir/laya/maths/MathUtil.ts","../../src/layaAir/laya/display/FrameAnimation.ts","../../src/layaAir/laya/display/GraphicAnimation.ts","../../src/layaAir/laya/display/Animation.ts","../../src/layaAir/laya/display/BitmapFont.ts","../../src/layaAir/laya/display/EffectAnimation.ts","../../src/layaAir/laya/display/css/TextStyle.ts","../../src/layaAir/laya/html/HtmlElement.ts","../../src/layaAir/laya/html/HtmlImage.ts","../../src/layaAir/laya/html/HtmlLink.ts","../../src/layaAir/laya/html/HtmlParseOptions.ts","../../src/layaAir/laya/html/HtmlParser.ts","../../src/layaAir/laya/html/UBBParser.ts","../../src/layaAir/laya/display/Text.ts","../../src/layaAir/laya/events/InputManager.ts","../../src/layaAir/laya/renders/Render.ts","../../src/layaAir/laya/loaders/SerializeUtil.ts","../../src/layaAir/laya/display/Input.ts","../../src/layaAir/laya/components/Widget.ts","../../src/layaAir/laya/utils/HitArea.ts","../../src/layaAir/laya/utils/WeakObject.ts","../../src/layaAir/laya/resource/HierarchyResource.ts","../../src/layaAir/laya/loaders/LegacyUIParser.ts","../../src/layaAir/laya/resource/PrefabImpl.ts","../../src/layaAir/laya/display/Scene.ts","../../src/layaAir/laya/utils/Timer.ts","../../src/layaAir/laya/utils/CallLater.ts","../../src/layaAir/laya/webgl/WebGL.ts","../../src/layaAir/laya/utils/RunDriver.ts","../../src/layaAir/laya/components/ComponentDriver.ts","../../src/layaAir/laya/display/Stage.ts","../../src/layaAir/laya/filters/BlurFilterGLRender.ts","../../src/layaAir/laya/filters/BlurFilter.ts","../../src/layaAir/laya/filters/GlowFilterGLRender.ts","../../src/layaAir/laya/filters/GlowFilter.ts","../../src/layaAir/laya/media/SoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSound.ts","../../src/layaAir/laya/media/webaudio/WebAudioSoundChannel.ts","../../src/layaAir/laya/media/webaudio/WebAudioSound.ts","../../src/layaAir/laya/media/SoundManager.ts","../../src/layaAir/laya/media/SoundNode.ts","../../src/layaAir/laya/media/VideoTexture.ts","../../src/layaAir/laya/media/VideoNode.ts","../../src/layaAir/laya/components/AnimatorPlayState2D.ts","../../src/layaAir/laya/components/AnimatorControllerLayer2D.ts","../../src/layaAir/laya/components/AnimatorControllerParse.ts","../../src/layaAir/laya/components/AnimatorUpdateMode.ts","../../src/layaAir/laya/components/Animation2DCondition.ts","../../src/layaAir/laya/resource/TextResource.ts","../../src/layaAir/laya/components/Animator2D.ts","../../src/layaAir/laya/components/AnimatorState2D.ts","../../src/layaAir/laya/components/KeyframeNode2D.ts","../../src/layaAir/laya/components/KeyFrame2D.ts","../../src/layaAir/laya/components/Animation2DEvent.ts","../../src/layaAir/laya/components/AnimationClip2DParser01.ts","../../src/layaAir/laya/components/KeyframeNodeList2D.ts","../../src/layaAir/laya/components/AnimationClip2D.ts","../../src/layaAir/laya/components/Animation2DParm.ts","../../src/layaAir/laya/components/AnimatorStateCondition.ts","../../src/layaAir/laya/components/AnimatorTransition2D.ts","../../src/layaAir/laya/components/AnimatorController2D.ts","../../src/layaAir/laya/components/Script.ts","../../src/layaAir/laya/loaders/TextResourceLoader.ts","../../src/layaAir/laya/loaders/AtlasLoader.ts","../../src/layaAir/laya/loaders/HierarchyParser.ts","../../src/layaAir/laya/loaders/HierarchyLoader.ts","../../src/layaAir/laya/RenderEngine/HDRTextureInfo.ts","../../src/layaAir/laya/loaders/TextureLoader.ts","../../src/layaAir/laya/loaders/AnimationClip2DLoader.ts","../../src/layaAir/laya/loaders/AnimationController2DLoader.ts","../../src/layaAir/laya/loaders/NullLoader.ts","../../src/layaAir/laya/loaders/BitmapFontLoader.ts","../../src/layaAir/laya/loaders/TTFFontLoader.ts","../../src/layaAir/laya/RenderEngine/RenderShader/RenderState.ts","../../src/layaAir/laya/RenderEngine/UniformBufferBase.ts","../../src/layaAir/laya/RenderEngine/UniformBufferObject.ts","../../src/layaAir/laya/resource/Material.ts","../../src/layaAir/laya/resource/TextureCube.ts","../../src/layaAir/laya/loaders/MaterialParser.ts","../../src/layaAir/laya/loaders/MaterialLoader.ts","../../src/layaAir/laya/utils/ParseJSON.ts","../../src/layaAir/laya/loaders/ShaderParser.ts","../../src/layaAir/laya/loaders/ShaderLoader.ts","../../src/layaAir/laya/media/webaudio/WebAudioLoader.ts","../../src/layaAir/laya/ModuleDef.ts","../../src/layaAir/laya/net/LocalStorage.ts","../../src/layaAir/laya/webgl/shader/d2/value/PrimitiveSV.ts","../../src/layaAir/laya/webgl/shader/d2/value/TextureSV.ts","../../src/layaAir/laya/utils/Mouse.ts","../../src/layaAir/laya/webgl/utils/MeshParticle2D.ts","../../src/layaAir/Laya.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/DrawType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderDrawMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderIndexMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureCompareMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDecodeFormat.ts","../../src/layaAir/laya/RenderEngine/BlendState.ts","../../src/layaAir/laya/RenderEngine/CommandUniformMap.ts","../../src/layaAir/laya/RenderEngine/RenderStateCommand.ts","../../src/layaAir/laya/effect/EffectBase.ts","../../src/layaAir/laya/events/Keyboard.ts","../../src/layaAir/laya/events/KeyLocation.ts","../../src/layaAir/laya/layagl/CommandEncoder.ts","../../src/layaAir/laya/layagl/QuickTestTool.ts","../../src/layaAir/laya/net/Socket.ts","../../src/layaAir/laya/RenderEngine/RenderShader/GLSLCodeGenerator.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariable.ts","../../src/layaAir/laya/resource/Texture3D.ts","../../src/layaAir/laya/utils/Base64Tool.ts","../../src/layaAir/laya/utils/BufferSliceUtils.ts","../../src/layaAir/laya/utils/Log.ts","../../src/layaAir/laya/utils/PerfData.ts","../../src/layaAir/laya/utils/PerfHUD.ts","../../src/layaAir/laya/utils/PoolCache.ts","../../src/layaAir/laya/utils/SingletonList.ts","../../src/layaAir/laya/utils/TimeLine.ts","../../src/layaAir/laya/display/cmd/DrawParticleCmd.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeCommandUniformMap.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeRenderStateCommand.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeRenderState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/MemoryDataType.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeShaderData.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLExtension.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/CommonMemoryAllocater.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/NativeMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemoryManager.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeUniformBufferObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalTex.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalRT.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLBuffer.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/VertexArrayObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GlCapable.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLParams.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLEngine.ts","../../src/layaAir/laya/webgl/text/ArabicReshaper.ts","../../src/layaAir/laya/webgl/utils/MatirxArray.ts","../../src/layaAir/laya/components/AnimatorState2DScript.ts","../../src/layaAir/laya/effect/ButtonEffect.ts","../../src/layaAir/laya/effect/FadeIn.ts","../../src/layaAir/laya/effect/FadeOut.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRenderEngineFactory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeWebGLEngine.ts","../../src/layaAir/laya/resource/RenderTextureCube.ts","../../src/layaAir/laya/media/Sound.ts","../../src/layaAir/laya/utils/StringKey.ts","../../src/layaAir/laya/RenderEngine/SubUniformBufferData.ts","../../src/layaAir/laya/system/System.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLRenderEngineFactory.ts"],"sourcesContent":["/**\r\n * <code>ClassUtils</code> 是一个类工具类。\r\n */\r\nexport class ClassUtils {\r\n    static _classMap: Record<string, any> = {};\r\n\r\n    /**\r\n     * 注册 Class 映射，方便在class反射时获取。\r\n     * @param\tclassName 映射的名字或者别名。\r\n     * @param\tclassDef 类的全名或者类的引用，全名比如:\"laya.Sprite\"。\r\n     */\r\n    static regClass(className: string, classDef: any): void {\r\n        ClassUtils._classMap[className] = classDef;\r\n    }\r\n\r\n    /**\r\n     * 根据名字返回类对象。\r\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\r\n     * @return 类对象\r\n     */\r\n    static getClass(className: string): any {\r\n        return ClassUtils._classMap[className];\r\n    }\r\n\r\n    /**\r\n     * 根据名称创建 Class 实例。\r\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\r\n     * @return\t返回类的实例。\r\n     */\r\n    static getInstance(className: string): any {\r\n        var compClass: any = ClassUtils.getClass(className);\r\n        if (compClass) return new compClass();\r\n        else console.warn(\"[error] Undefined class:\", className);\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { ClassUtils } from \"./laya/utils/ClassUtils\";\r\n\r\nexport type FEnumDescriptor = {\r\n    name: string,\r\n    value: any,\r\n    extend?: FEnumDescriptor,\r\n    [index: string]: any,\r\n}[] | any[] | Object | string;\r\n\r\nexport type FPropertyType = string | Function | Object | [FPropertyType] | [\"Record\", FPropertyType];\r\n\r\nexport interface FPropertyDescriptor {\r\n    /** 属性名称。一般不需要设定。 */\r\n    name: string;\r\n    /** \r\n     * 属性类型。\r\n     * 基础类型有：number,string,boolean,any，注意是使用字符串，不是类型。\r\n     * 复合类型有：数组，使用类似[\"number\"]这样的方式表达；字典，使用类似[\"Record\", \"number\"]这样的方式表达，第一个元素固定为Record，第二个元素为实际类型。\r\n     * 其他对象类型可以直接使用类名，但要注意该类必须有使用regClass装饰器。也支持枚举类型。枚举类型不需要regClass。\r\n     * 如果不提供type，表示只用于ui样式，没有实际对应数据，和不会序列化\r\n     */\r\n    type: FPropertyType;\r\n    /** 标题。如果不提供，则使用name。 */\r\n    caption: string;\r\n    /** 提示文字 */\r\n    tips: string;\r\n\r\n    /** 属性栏目。为多个属性设置相同的值，可以将它们显示在同一个Inspector栏目内。 */\r\n    catalog: string;\r\n    /* 栏目标题。不提供则直接使用栏目名称。 */\r\n    catalogCaption: string;\r\n    /* 栏目的显示顺序，数值越小显示在前面。不提供则按属性出现的顺序。*/\r\n    catalogOrder: number;\r\n\r\n    /**\r\n     * 编辑这个属性的控件。内置有：number,string,boolean,color,vec2,vec3,vec4,asset\r\n     * \r\n     *      number : 数字输入。\r\n     *      string : 字符串输入。默认为单行输入，如果是多行，需要激活multiline选项。\r\n     *      boolean : 布尔值输入，用于单选框或多选框。\r\n     *      color : 一个颜色框+调色盘+拾色器\r\n     *      vec2 : XY输入的组合\r\n     *      vec3 : XYZ输入的组合\r\n     *      vec4 : XYZW输入的组合\r\n     *      asset : 选择资源\r\n     * \r\n     * 一般来说，不需要设置这个选项，编辑器会自动根据属性类型选择适合的控件，但在某些情况下可以需要强制指定。\r\n     * 例如，如果数据类型是Vector4，但其实它表达的是颜色，用默认编辑Vector4的控件不适合，需要在这里设置为“color”。\r\n     * \r\n     * 显式设置inspector为null，则不会为属性构造inspector。这与hidden设置为true不同。hidden为true是创建但不可见，\r\n     * inspector为null的话则是完全不创建。\r\n     */\r\n    inspector: string;\r\n\r\n    /** 隐藏控制:true隐藏，false显示。常用于关联属性的情况。\r\n     * 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），隐藏这个属性。\r\n     * 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\r\n     */\r\n    hidden: boolean | string;\r\n\r\n    /** 只读控制。\r\n     * 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），该属性只读。\r\n     * 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\r\n     */\r\n    readonly: boolean | string;\r\n\r\n    /** 数据检查机制。\r\n     * 1. 将包括表达式的字符串传入，用于判断检查是否符合表达式的条件。符合条件，需要返回报错信息。\r\n     * 2. 使用示例为：\"if(value == data.a) return '不能与a的值相同'\"\r\n     * 其中的value为当前用户在该属性输入的值，data为当前组件的对象数据，data.a是当前组件中的a属性值\r\n     */\r\n    validator: string;\r\n    /** 是否允许数据为空值。\r\n     * 可以用表达式，返回true或者false的结果。\r\n     */\r\n    required: boolean | string;\r\n\r\n    /** 是否序列化 */\r\n    serializable: boolean;\r\n    /** 属性在不参与序列化时，如果它的数据可能受其他可序列化的属性影响，在这里填写其他属性名称。这通常用于判断预制体属性是否覆盖。*/\r\n    affectBy: string;\r\n    /** 默认值。这个值只在面板中使用，它指从界面上创建对象时赋予属性的初始值。*/\r\n    init: any;\r\n\r\n    /** 是否多行文本输入 */\r\n    multiline: boolean;\r\n    /** 是否密码输入 */\r\n    password: boolean;\r\n    /** 如果true或者缺省，文本输入每次输入都提交；否则只有在失焦时才提交 */\r\n    submitOnTyping: boolean;\r\n    /** 如果是文本类型，是输入文本的提示信息；如果是布尔类型，是多选框的标题。 */\r\n    prompt: string;\r\n\r\n    /** 定义枚举 */\r\n    enumSource: FEnumDescriptor;\r\n    /** 当数据源为空时，隐藏这个属性 */\r\n    hideIfEnumSourceEmpty: boolean;\r\n\r\n    /** 是否反转布尔值。例如当属性值为true时，多选框显示为不勾选。 */\r\n    reverseBool: boolean;\r\n\r\n    /** 是否允许null值。默认为true。*/\r\n    nullable: boolean;\r\n\r\n    /** 数字的最小值 */\r\n    min: number,\r\n    /** 数字的最大值 */\r\n    max: number,\r\n    /** 数值范围，等同于一次性设置min和max。 */\r\n    range: [number, number];\r\n    /** 拖动方式改变数值时，每次数值改变的幅度。 */\r\n    step: number;\r\n    /** 小数点后的位数 */\r\n    fractionDigits: number;\r\n    /** 显示为百分比 */\r\n    percentage: boolean;\r\n\r\n    /** 对数组类型属性适用。表示数组是固定长度，不允许修改。*/\r\n    fixedLength: boolean;\r\n    /** 对数组类型属性适用。如果不提供，则表示数组允许所有操作，如果提供，则只允许列出的操作。*/\r\n    arrayActions: Array<\"append\" | \"insert\" | \"delete\" | \"move\">;\r\n    /** 对数组类型属性适用。这里可以定义数组元素的属性 */\r\n    elementProps: Partial<FPropertyDescriptor>;\r\n\r\n    /** 对颜色类型属性适用。表示是否提供透明度a值的修改。 */\r\n    showAlpha: boolean;\r\n    /** 对颜色类型属性适用。它与default值不同的是，当default是null时，可以用defaultColor定义一个非null时的默认值。*/\r\n    defaultColor: any;\r\n    /** 对颜色类型属性适用。允许显示一个checkbox决定颜色是否为null。 */\r\n    colorNullable: boolean;\r\n\r\n    /** 对对象类型属性适用。如果为true，隐藏对象的标题，同时对象下的属性的显示缩进会减少一级。*/\r\n    hideHeader: boolean;\r\n    /** 对对象类型属性适用。对象创建时可以下拉选择一个类型。如果显示设置为null，则禁止菜单。默认是显示一个创建基类的菜单。*/\r\n    createObjectMenu: Array<string>;\r\n    /** 对对象类型属性适用。表示这个属性类型有类似结构体的行为特性，即总是作为一个整体使用。\r\n     * 例如，obj对象的某个属性b的值是a1，a1是T类型的实例，且T类型的structLike为true，那么当a1的属性改变时，编辑器将同时调用obj.b = a1。\r\n     * 默认为false。\r\n     */\r\n    structLike: boolean;\r\n\r\n    /** 说明此属性是引用一个资源 */\r\n    isAsset: boolean;\r\n    /** 对资源类型的属性适用。多个资源类型用逗号分隔，例如“Image,Audio\"。*/\r\n    assetTypeFilter: string;\r\n    /** 如果属性类型是string，并且进行资源选择时，这个选项决定属性值是资源原始路径还是res://uuid这样的格式。如果是true，则是资源原始路径。默认false。*/\r\n    useAssetPath: boolean;\r\n    /** 对资源类型的属性适用。选择资源时是否允许选择内部资源 */\r\n    allowInternalAssets: boolean;\r\n    /** 对资源类型的属性适用。可以设置一个自定义的过滤器。过滤器需要先通过EditorEnv.assetMgr.customAssetFilters注册。 */\r\n    customAssetFilter: string;\r\n\r\n    /** 对类型是Node或者Component的属性适用。如果不为null，当在实际运行环境里执行反序列化时，引用对象不再实例化，而是将它的序列化数据原样保存到指定的属性中。*/\r\n    toTemplate: string;\r\n\r\n    /** 显示位置。语法：before xxx/after xxx/first/last。 */\r\n    position: string;\r\n\r\n    /** 表示属性是私有属性。私有属性不会显示在Inspector里，但会序列化保存。 */\r\n    \"private\": boolean;\r\n\r\n    /** 增加缩进，单位是层级，不是像素。 */\r\n    addIndent: number;\r\n\r\n    /** 表示属性是否允许多选情况下编辑。默认true。 */\r\n    allowMultipleObjects: boolean;\r\n\r\n    /** 表示属性不显示在派生类的属性表中 */\r\n    hideInDeriveType: boolean;\r\n\r\n    /** 属性改变时额外调用对象的一个函数，这里是函数名称。\r\n     * 函数原型是func(key?:string)。其中key在改变成员内部属性时会传递。\r\n     * 例如改变数据某个元素的内部属性，则key是这个元素的索引。 \r\n     */\r\n    onChange: string;\r\n\r\n    /** 额外的选项 */\r\n    options: Record<string, any>;\r\n}\r\n\r\nexport interface FTypeDescriptor {\r\n    /** 标题。如果不提供，则使用name。 */\r\n    caption: string;\r\n    /**帮助文档url地址 */\r\n    help: string;\r\n    /** 添加到组件菜单。 */\r\n    menu: string;\r\n    /** 图标。*/\r\n    icon: string;\r\n    /** 是否资源类型 */\r\n    isAsset: boolean;\r\n    /** 对资源类型的属性适用。多个资源类型用逗号分隔，例如“Image,Audio\"。可用值参考editor/public/IAssetInfo.ts。 */\r\n    assetTypeFilter: string;\r\n    /** 表示这个类型有类似结构体的行为特性，即总是作为一个整体使用。\r\n     * 例如，obj对象的某个属性b的值是a1，a1是T类型的实例，且T类型的structLike为true，那么当a1的属性改变时，编辑器将同时调用obj.b = a1。\r\n     * 默认为false。\r\n     */\r\n    structLike: boolean;\r\n    /** 属性列表 */\r\n    properties: Array<Partial<FPropertyDescriptor>>;\r\n    /** 编辑这个类实例的控件 */\r\n    inspector: string;\r\n    /** 对Component使用，表示这个组件允许挂载的节点类型。默认null */\r\n    worldType: \"2d\" | \"3d\" | null;\r\n    /** 对Component使用，如果为true，并且定义了menu属性，则这个组件还会显示在层级面板的新建对象菜单上。 */\r\n    inHierarchyMenu: boolean;\r\n    /** 额外的选项 */\r\n    options: Record<string, any>;\r\n}\r\n\r\nfunction dummy() { }\r\n\r\n/**\r\n * 注册一个类型，注册后才能被序列化系统自动保存和载入。\r\n */\r\nexport function regClass(assetId?: string): any {\r\n    return function (constructor: Function) {\r\n        ClassUtils.regClass(assetId, constructor);\r\n    };\r\n}\r\n\r\n/**\r\n * 设置类型的额外信息。\r\n * @param info 类型的额外信息\r\n */\r\nexport function classInfo(info?: Partial<FTypeDescriptor>): any { return dummy; }\r\n\r\n/**\r\n * 设置组件可以在编辑器环境中执行完整声明周期。\r\n */\r\nexport function runInEditor(constructor: Function): void { }\r\n\r\n/**\r\n * 使用这个装饰器，可以使属性显示在编辑器属性设置面板上，并且能序列化保存。\r\n * @param info 属性的类型，如: Number,\"number\",[Number],[\"Record\", Number]等。或传递对象描述详细信息，例如{ type: \"string\", multiline: true }。\r\n */\r\nexport function property(info: FPropertyType | Partial<FPropertyDescriptor>): any { return dummy; }\r\n","/**\r\n *  Config 用于配置一些全局参数。如需更改，请在初始化引擎之前设置。\r\n */\r\nexport class Config {\r\n    /**\r\n    * 画布设置是否抗锯齿，只对2D(WebGL)有效,3D抗锯齿在camera或RT上面控制。\r\n    */\r\n    static isAntialias: boolean = true;\r\n    /**\r\n     * 是否使用webgl2\r\n     */\r\n    static useWebGL2: boolean = true;\r\n    /*\r\n     * 限制fps \r\n     */\r\n    static FPS = 60;\r\n    /**\r\n     * 是否使用视网膜模式，在iOS上面可能会创建更大的RT，来达到更佳的效果\r\n     */\r\n    static useRetinalCanvas: boolean = false;\r\n\r\n    //-------------2D设置---------------------\r\n    /**\r\n     * 2D动画 Animation 的默认播放时间间隔，单位为毫秒。\r\n     */\r\n    static animationInterval: number = 50;\r\n\r\n    /**\r\n       * 当使用webGL渲染2d的时候，每次创建vb是否直接分配足够64k个顶点的缓存。这样可以提高效率。\r\n       */\r\n    static webGL2D_MeshAllocMaxMem: boolean = true;\r\n\r\n    /*\r\n     *默认文本大小，默认为12\r\n     */\r\n    static defaultFontSize: number = 12;\r\n    /*\r\n     *默认文本字体，默认为Arial\r\n     */\r\n    static defaultFont: string = \"Arial\";\r\n\r\n    //-------------引擎内部使用-------------\r\n    /**\r\n     * 设置画布是否透明，只对2D(WebGL)、3D有效。\r\n     */\r\n    static isAlpha: boolean = false;\r\n    /**\r\n     * 设置画布是否包含深度\r\n     */\r\n    static isDepth: boolean = false;\r\n    /**\r\n     * 表明在一个系统性能低的环境是否创建该上下文的boolean值\r\n     */\r\n    static isfailIfMajorPerformanceCaveat: boolean = false;\r\n\r\n    static powerPreference: WebGLPowerPreference = \"default\";\r\n    /**\r\n     * 设置画布是否预乘，只对2D(WebGL)、3D有效。\r\n     */\r\n    static premultipliedAlpha: boolean = true;\r\n    /**\r\n     * 设置画布的是否开启模板缓冲，只对2D(WebGL)、3D有效。\r\n     */\r\n    static isStencil: boolean = false;\r\n    /**\r\n     * 是否保留渲染缓冲区。\r\n     */\r\n    static preserveDrawingBuffer: boolean = false;\r\n    /**\r\n     * 是否打印Webgl指令，同时定位webgl报错\r\n     */\r\n    static printWebglOrder: boolean = false;\r\n    \r\n    /**在IOS下，一些字体会找不到，引擎提供了字体映射功能，比如默认会把 \"黑体\" 映射为 \"黑体-简\"，更多映射，可以自己添加*/\r\n    static fontFamilyMap: any = { \"报隶\": \"报隶-简\", \"黑体\": \"黑体-简\", \"楷体\": \"楷体-简\", \"兰亭黑\": \"兰亭黑-简\", \"隶变\": \"隶变-简\", \"凌慧体\": \"凌慧体-简\", \"翩翩体\": \"翩翩体-简\", \"苹方\": \"苹方-简\", \"手札体\": \"手札体-简\", \"宋体\": \"宋体-简\", \"娃娃体\": \"娃娃体-简\", \"魏碑\": \"魏碑-简\", \"行楷\": \"行楷-简\", \"雅痞\": \"雅痞-简\", \"圆体\": \"圆体-简\" };\r\n\r\n    /**tempConfig Fixed number of frames */\r\n    static fixedFrames: boolean = true;\r\n\t/*资源引用参数为0是否立即删除资源，如果不立即删除请调用DestrotyUnUse*/\r\n    static destroyResourceImmediatelyDefault = true;\r\n\r\n}\r\n\r\n","/**\r\n * @private\r\n * 静态常量集合\r\n */\r\nexport class Const {\r\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\r\n    static ENUM_TEXTALIGN_CENTER: number = 1;\r\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\r\n\r\n    static BYTES_PE: number = 4;\r\n    static BYTES_PIDX: number = 2;\r\n\r\n    static MAX_CLIP_SIZE: number = 99999999;\r\n}\r\n\r\n/**\r\n * 节点标志\r\n */\r\nexport class NodeFlags {\r\n    static NOT_ACTIVE = 0x01;\r\n    static ACTIVE_INHIERARCHY = 0x02;\r\n    static AWAKED = 0x04;\r\n    static NOT_READY = 0x08;\r\n    static DISPLAY = 0x10;\r\n    static HAS_ZORDER = 0x20;\r\n    static HAS_MOUSE = 0x40;\r\n    static DISPLAYED_INSTAGE = 0x80;\r\n    static DRAWCALL_OPTIMIZE = 0x100;\r\n    static PROCESS_COLLISIONS = 0x200;\r\n    static PROCESS_TRIGGERS = 0x400;\r\n    static HAS_SCRIPT = 0x800;\r\n    static ESCAPE_DRAWING_TO_TEXTURE = 0x1000;\r\n    static DISABLE_INNER_CLIPPING = 0x2000;\r\n    static DISABLE_OUTER_CLIPPING = 0x4000;\r\n    static DISABLE_VISIBILITY = 0x8000;\r\n    static EDITING_NODE = 0x10000;\r\n    static HIDE_BY_EDITOR = 0x20000;\r\n    static LOCK_BY_EDITOR = 0x40000;\r\n}\r\n\r\nexport class HideFlags {\r\n    static HideInHierarchy = 0x1;\r\n    static HideInInspector = 0x2;\r\n    static DontSave = 0x4;\r\n    static HideAndDontSave = 0x7;\r\n}","import { Timer } from \"./laya/utils/Timer\";\r\nimport { Loader } from \"./laya/net/Loader\";\r\nimport { Context } from \"./laya/resource/Context\";\r\nimport { Browser } from \"./laya/utils/Browser\";\r\nimport { Stage } from \"./laya/display/Stage\";\r\n\r\n/**\r\n * @internal\r\n * 使用全局类的时候，避免引用其他模块\r\n */\r\nexport class ILaya {\r\n    static Loader: typeof Loader = null;\r\n    static Context: typeof Context = null;\r\n    static Browser: typeof Browser = null;\r\n\r\n    static Laya: any = null;\r\n    static loader: Loader = null;\r\n    static timer: Timer = null;\r\n    static systemTimer: Timer = null;\r\n    static physicsTimer: Timer = null;\r\n    static stage: Stage = null;\r\n}\r\n","export class LayaEnv {\r\n    static version: string = \"3.1.2\";\r\n    static isPlaying: boolean = true;\r\n    static isPreview: boolean = false;\r\n    static isConch: boolean = (<any>window).conch != null;\r\n\r\n    /** @deprecated Uses Laya.addBeforeInitCallback */\r\n    static beforeInit: (stageConfig: IStageConfig) => void;\r\n    /** @deprecated Use Laya.addAfterInitCallback */\r\n    static afterInit: () => void;\r\n}\r\n\r\nexport interface IStageConfig {\r\n    designWidth?: number;\r\n    designHeight?: number;\r\n    scaleMode?: string;\r\n    screenMode?: string;\r\n    alignV?: string;\r\n    alignH?: string;\r\n    backgroundColor?: string;\r\n}","/**\r\n * <p> <code>Pool</code> 是对象池类，用于对象的存储、重复使用。</p>\r\n * <p>合理使用对象池，可以有效减少对象创建的开销，避免频繁的垃圾回收，从而优化游戏流畅度。</p>\r\n */\r\nexport class Pool {\r\n    /**@private */\r\n    private static _CLSID: number = 0;\r\n    /**@private */\r\n    private static POOLSIGN: string = \"__InPool\";\r\n    /**@private  对象存放池。*/\r\n    private static _poolDic: any = {};\r\n\r\n    /**\r\n     * 根据对象类型标识字符，获取对象池。\r\n     * @param sign 对象类型标识字符。\r\n     * @return 对象池。\r\n     */\r\n    static getPoolBySign(sign: string): any[] {\r\n        return Pool._poolDic[sign] || (Pool._poolDic[sign] = []);\r\n    }\r\n\r\n    /**\r\n     * 清除对象池的对象。\r\n     * @param sign 对象类型标识字符。\r\n     */\r\n    static clearBySign(sign: string): void {\r\n        if (Pool._poolDic[sign]) Pool._poolDic[sign].length = 0;\r\n    }\r\n\r\n    /**\r\n     * 将对象放到对应类型标识的对象池中。\r\n     * @param sign 对象类型标识字符。\r\n     * @param item 对象。\r\n     */\r\n    static recover(sign: string, item: any): void {\r\n        if (item[Pool.POOLSIGN] !== false) //有这个标志，才表明对象是从Pool里获取的，允许recover\r\n            return;\r\n        item[Pool.POOLSIGN] = true;\r\n        Pool.getPoolBySign(sign).push(item);\r\n    }\r\n\r\n    /**\r\n     * 根据类名进行回收，如果类有类名才进行回收，没有则不回收\r\n     * @param\tinstance 类的具体实例\r\n     */\r\n    static recoverByClass(instance: any): void {\r\n        if (instance) {\r\n            var className: string = instance[\"__className\"] || instance.constructor._$gid;\r\n            if (className) Pool.recover(className, instance);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 返回类的唯一标识\r\n     */\r\n    private static _getClassSign(cla: any): string {\r\n        var className = cla[\"__className\"] || cla[\"_$gid\"];\r\n        if (!className) {\r\n            cla[\"_$gid\"] = className = Pool._CLSID + \"\";\r\n            Pool._CLSID++;\r\n        }\r\n        return className;\r\n    }\r\n\r\n    /**\r\n     * 根据类型创建对象\r\n     * @param\tcls 类型\r\n     */\r\n    static createByClass<T>(cls: new () => T): T {\r\n        return Pool.getItemByClass(Pool._getClassSign(cls), cls);\r\n    }\r\n\r\n    /**\r\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\r\n     * <p>当对象池中无此类型标识的对象时，则根据传入的类型，创建一个新的对象返回。</p>\r\n     * @param sign 对象类型标识字符。\r\n     * @param cls 用于创建该类型对象的类。\r\n     * @return 此类型标识的一个对象。\r\n     */\r\n    static getItemByClass<T>(sign: string, cls: new () => T): T {\r\n        let rst: any;\r\n        let pool = Pool.getPoolBySign(sign);\r\n        if (pool.length)\r\n            rst = pool.pop();\r\n        else\r\n            rst = new cls();\r\n        rst[Pool.POOLSIGN] = false;\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\r\n     * <p>当对象池中无此类型标识的对象时，则使用传入的创建此类型对象的函数，新建一个对象返回。</p>\r\n     * @param sign 对象类型标识字符。\r\n     * @param createFun 用于创建该类型对象的方法。\r\n     * @param caller this对象\r\n     * @return 此类型标识的一个对象。\r\n     */\r\n    static getItemByCreateFun(sign: string, createFun: Function, caller: any = null): any {\r\n        var pool: any[] = Pool.getPoolBySign(sign);\r\n        var rst: any = pool.length ? pool.pop() : createFun.call(caller);\r\n        rst[Pool.POOLSIGN] = false;\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 根据传入的对象类型标识字符，获取对象池中已存储的此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\r\n     * @param sign 对象类型标识字符。\r\n     * @return 对象池中此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\r\n     */\r\n    static getItem(sign: string): any {\r\n        var pool: any[] = Pool.getPoolBySign(sign);\r\n        var rst: any = pool.length ? pool.pop() : null;\r\n        if (rst) {\r\n            rst[Pool.POOLSIGN] = false;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n}\r\n\r\n\r\n","var _gid: number = 1;\r\nconst _pi: number = 180 / Math.PI;\r\nconst _pi2: number = Math.PI / 180;\r\n\r\n/**\r\n * <code>Utils</code> 是工具类。\r\n */\r\nexport class Utils {\r\n\r\n    /**\r\n     * 角度转弧度。\r\n     * @param\tangle 角度值。\r\n     * @return\t返回弧度值。\r\n     */\r\n    static toRadian(angle: number): number {\r\n        return angle * _pi2;\r\n    }\r\n\r\n    /**\r\n     * 弧度转换为角度。\r\n     * @param\tradian 弧度值。\r\n     * @return\t返回角度值。\r\n     */\r\n    static toAngle(radian: number): number {\r\n        return radian * _pi;\r\n    }\r\n\r\n    /**\r\n     * 将传入的 uint 类型颜色值转换为字符串型颜色值。\r\n     * @param color 颜色值。\r\n     * @return 字符串型颜色值。\r\n     */\r\n    static toHexColor(color: number): string {\r\n        if (color < 0 || isNaN(color)) return null;\r\n        var str: string = color.toString(16);\r\n        while (str.length < 6) str = \"0\" + str;\r\n        return \"#\" + str;\r\n    }\r\n\r\n    static fromStringColor(value: string): number {\r\n        if (!value)\r\n            return 0;\r\n\r\n        if (value.indexOf(\"rgba(\") >= 0 || value.indexOf(\"rgb(\") >= 0) {\r\n            let p1 = value.indexOf(\"(\");\r\n            let p2 = value.indexOf(\")\");\r\n            if (p1 == -1 || p2 == -1)\r\n                return 0;\r\n\r\n            value = value.substring(p1 + 1, p2);\r\n            let arr: any[] = value.split(\",\");\r\n            let len = arr.length;\r\n            for (let i = 0; i < len; i++) {\r\n                arr[i] = parseFloat(arr[i]);\r\n                if (isNaN(arr[i]))\r\n                    arr[i] = 0;\r\n            }\r\n            if (arr.length == 4)\r\n                return (arr[0] << 24) + (arr[1] << 16) + (arr[2] << 8) + Math.round(arr[3] * 255);\r\n            else\r\n                return (arr[0] << 16) + (arr[1] << 8) + arr[2];\r\n        } else {\r\n            value.charAt(0) === '#' && (value = value.substring(1));\r\n            let len = value.length;\r\n            if (len === 3 || len === 4) {\r\n                let temp: string = \"\";\r\n                for (let i = 0; i < len; i++) {\r\n                    temp += (value[i] + value[i]);\r\n                }\r\n                value = temp;\r\n            }\r\n            return parseInt(value, 16);\r\n        }\r\n    }\r\n\r\n    /**获取一个全局唯一ID。*/\r\n    static getGID(): number {\r\n        return _gid++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清空source数组，复制array数组的值。\r\n     * @param\tsource 需要赋值的数组。\r\n     * @param\tarray 新的数组值。\r\n     * @return \t复制后的数据 source 。\r\n     */\r\n    static copyArray(source: any[], array: any[]): any[] {\r\n        source || (source = []);\r\n        if (!array) return source;\r\n        source.length = array.length;\r\n        var len: number = array.length;\r\n        for (let i = 0; i < len; i++) {\r\n            source[i] = array[i];\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 批量移动点坐标。\r\n     * @param points 坐标列表。\r\n     * @param x x轴偏移量。\r\n     * @param y y轴偏移量。\r\n     */\r\n    static transPointList(points: any[], x: number, y: number): void {\r\n        var i: number, len: number = points.length;\r\n        for (i = 0; i < len; i += 2) {\r\n            points[i] += x;\r\n            points[i + 1] += y;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 解析一个字符串，并返回一个整数。和JS原生的parseInt不同：如果str为空或者非数字，原生返回NaN，这里返回0。\r\n     * @param\tstr\t\t要被解析的字符串。\r\n     * @param\tradix\t表示要解析的数字的基数。默认值为0，表示10进制，其他值介于 2 ~ 36 之间。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。如果该参数不在上述范围内，则此方法返回 0。\r\n     * @return\t返回解析后的数字。\r\n     */\r\n    static parseInt(str: string, radix: number = 0): number {\r\n        var result: any = parseInt(str, radix);\r\n        if (isNaN(result)) return 0;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 获得路径中的文件名（包含扩展名）\r\n     */\r\n    static getBaseName(path: string): string {\r\n        let i = path.lastIndexOf(\"/\");\r\n        if (i != -1)\r\n            path = path.substring(i + 1);\r\n        i = path.indexOf(\"?\");\r\n        if (i != -1)\r\n            path = path.substring(0, i);\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * 获取文件名的扩展名，并转换为小写字母。例如\"1.abc\"将返回abc。\r\n     */\r\n    static getFileExtension(path: string): string {\r\n        let i = path.lastIndexOf(\".\");\r\n\r\n        if (i != -1) {\r\n            let ext = path.substring(i + 1).toLowerCase();\r\n            let j = ext.indexOf(\"?\");\r\n            if (j != -1)\r\n                ext = ext.substring(0, j);\r\n            if (ext === \"ls\") { //lanit.ls ltcb.ls 这类特殊扩展名的支持\r\n                let k = path.lastIndexOf(\".\", i - 1);\r\n                if (k != -1) {\r\n                    let ext2 = path.substring(k + 1, i + 1) + ext;\r\n                    if (ext2 === \"lanit.ls\" || ext2 === \"ltcb.ls\")\r\n                        return ext2;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        else\r\n            return \"\";\r\n    }\r\n\r\n    /**\r\n     * 更改文件名的扩展名。\r\n     */\r\n    static replaceFileExtension(path: string, newExt: string, excludeDot?: boolean): string {\r\n        if (!path)\r\n            return path;\r\n        let i = path.lastIndexOf(\".\");\r\n        if (newExt.length > 0 && !excludeDot)\r\n            newExt = \".\" + newExt;\r\n        if (i != -1) {\r\n            let j = path.indexOf(\"?\", i);\r\n            if (j != -1)\r\n                return path.substring(0, i) + newExt + path.substring(j);\r\n            else\r\n                return path.substring(0, i) + newExt;\r\n        }\r\n        else\r\n            return path + newExt;\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\n/**\r\n * <code>Component</code> 类用于创建组件的基类。\r\n */\r\nexport class Component {\r\n    /** @private */\r\n    _id: number;\r\n    /**@private */\r\n    private _hideFlags: number = 0;\r\n    /**@private */\r\n    private _enableState: boolean;\r\n    /** @internal */\r\n    _status: number = 0; //1-awaked,2-starting,3-started,4-destroyed\r\n\r\n    /**\r\n     * 获取所属Node节点。\r\n     */\r\n    owner: Node;\r\n    /** @internal */\r\n    _enabled: boolean = true;\r\n    /**\r\n     * 是否单例，即同一个节点只能添加此类型的脚本一次\r\n     */\r\n    _singleton?: boolean = true;\r\n    /**\r\n     * 是否可以在IDE环境中运行\r\n     */\r\n    runInEditor: boolean;\r\n    scriptPath: string;\r\n    _extra: IComponentExtra;\r\n\r\n    get hideFlags(): number {\r\n        return this._hideFlags;\r\n    }\r\n\r\n    set hideFlags(value: number) {\r\n        this._hideFlags = value;\r\n    }\r\n\r\n    /**\r\n     * 创建一个新的 <code>Component</code> 实例。\r\n     */\r\n    constructor() {\r\n        this._id = Utils.getGID();\r\n\r\n        this._initialize();\r\n    }\r\n\r\n    //@internal\r\n    _initialize(): void {\r\n        this._extra = {};\r\n    }\r\n\r\n    hasHideFlag(flag: number): boolean {\r\n        return (this._hideFlags & flag) != 0;\r\n    }\r\n\r\n    /**\r\n     * 唯一标识ID。\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 是否启用组件。\r\n     */\r\n    get enabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled(value: boolean) {\r\n        if (this._enabled != value) {\r\n            this._enabled = value;\r\n            if (this.owner)\r\n                this._setActive(value && this.owner.activeInHierarchy);\r\n        }\r\n    }\r\n\r\n    get awaked(): boolean {\r\n        return this._status > 0;\r\n    }\r\n\r\n    /**\r\n     * 是否已经销毁 。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._status == 4;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _isScript(): boolean {\r\n        return false;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _resetComp(): void {\r\n        this._enabled = true;\r\n        this._status = 0;\r\n        this._enableState = false;\r\n        this.owner = null;\r\n    }\r\n\r\n    _setOwner(node: Node) {\r\n        if (this._status != 0) {\r\n            throw 'reuse a destroyed component';\r\n        }\r\n        this.owner = node;\r\n\r\n        if (this._isScript())\r\n            node._setBit(NodeFlags.HAS_SCRIPT, true);\r\n\r\n        this._onAdded();\r\n        this.onAdded();\r\n    }\r\n\r\n    /**\r\n     * 被添加到节点后调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onAdded(): void {\r\n    }\r\n\r\n    /**\r\n   * 被激活后调用，可根据需要重写此方法\r\n   * @internal\r\n   */\r\n    protected _onAwake(): void {\r\n    }\r\n\r\n    /**\r\n     * 被激活后调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onEnable(): void {\r\n        this.onEnable();\r\n    }\r\n\r\n    /**\r\n    * 被禁用时调用，可根据需要重写此方法\r\n    * @internal\r\n    * 销毁组件\r\n    */\r\n    protected _onDisable(): void {\r\n        this.onDisable();\r\n    }\r\n\r\n    /**\r\n     * 被销毁时调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onDestroy(): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parse(data: any, interactMap: any = null): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parseInteractive(data: any = null, spriteMap: any = null) {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _cloneTo(dest: Component): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setActive(value: boolean): void {\r\n        if (value) {\r\n            if (this._status == 0) {\r\n                this._status = 1;\r\n\r\n                if (LayaEnv.isPlaying || this.runInEditor) {\r\n                    this._onAwake();\r\n                    this.onAwake();\r\n                }\r\n            }\r\n            if (this._enabled && !this._enableState) {\r\n                this._enableState = true;\r\n\r\n                if (LayaEnv.isPlaying || this.runInEditor) {\r\n                    let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n                    driver.add(this);\r\n\r\n                    if (LayaEnv.isPlaying && this._isScript())\r\n                        this.setupScript();\r\n\r\n                    this._onEnable();\r\n                }\r\n            }\r\n        } else if (this._enableState) {\r\n            this._enableState = false;\r\n            if (LayaEnv.isPlaying || this.runInEditor) {\r\n                let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n                driver.remove(this);\r\n\r\n                ILaya.stage.offAllCaller(this);\r\n\r\n                this._onDisable();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setupScript() {\r\n    }\r\n\r\n    /**\r\n     * 销毁组件\r\n     */\r\n    destroy(): void {\r\n        if (this._status == 4)\r\n            return;\r\n\r\n        if (this.owner)\r\n            this.owner._destroyComponent(this);\r\n        else if(!this.destroyed)\r\n            this._destroy(true);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _destroy(second?: boolean): void {\r\n        if (second) {\r\n            this._onDestroy();\r\n            this.onDestroy();\r\n            if (this.onReset) {\r\n                this.onReset();\r\n                this._resetComp();\r\n                Pool.recoverByClass(this);\r\n            }\r\n            return;\r\n        }\r\n\r\n        this._setActive(false);\r\n        this._status = 4;\r\n\r\n        let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n        driver._toDestroys.add(this);\r\n    }\r\n\r\n    /**\r\n     * 被添加到节点后调用，和Awake不同的是即使节点未激活onAdded也会调用。\r\n     */\r\n    onAdded(): void {\r\n    }\r\n\r\n    /**\r\n     * 重置组件参数到默认值，如果实现了这个函数，则组件会被重置并且自动回收到对象池，方便下次复用\r\n     * 如果没有重置，则不进行回收复用\r\n\r\n     */\r\n    onReset?(): void;\r\n\r\n    /**\r\n     * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\r\n     */\r\n    onAwake(): void {\r\n    }\r\n\r\n    /**\r\n     * 组件被启用后执行，比如节点被添加到舞台后\r\n     */\r\n    onEnable(): void {\r\n    }\r\n\r\n    /**\r\n     * 第一次执行update之前执行，只会执行一次\r\n     */\r\n    onStart?(): void;\r\n\r\n    /**\r\n     * 每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n     */\r\n    onUpdate?(): void;\r\n\r\n    /**\r\n     * 每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n     */\r\n    onLateUpdate?(): void;\r\n\r\n    /**\r\n     * 渲染之前执行\r\n     */\r\n    onPreRender?(): void;\r\n\r\n    /**\r\n     * 渲染之后执行\r\n     */\r\n    onPostRender?(): void;\r\n\r\n    /**\r\n     * 组件被禁用时执行，比如从节点从舞台移除后\r\n     */\r\n    onDisable(): void {\r\n    }\r\n\r\n    /**\r\n     * 手动调用节点销毁时执行\r\n     */\r\n    onDestroy(): void {\r\n    }\r\n}\r\n\r\nexport interface IComponentExtra { }","import { Point } from \"./Point\";\r\nimport { Pool } from \"../utils/Pool\"\r\n\r\n/**\r\n * <p> <code>Matrix</code> 类表示一个转换矩阵，它确定如何将点从一个坐标空间映射到另一个坐标空间。</p>\r\n * <p>您可以对一个显示对象执行不同的图形转换，方法是设置 Matrix 对象的属性，将该 Matrix 对象应用于 Transform 对象的 matrix 属性，然后应用该 Transform 对象作为显示对象的 transform 属性。这些转换函数包括平移（x 和 y 重新定位）、旋转、缩放和倾斜。</p>\r\n */\r\nexport class Matrix {\r\n\r\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\r\n    static EMPTY: Matrix = new Matrix();\r\n    /**用于中转使用的 <code>Matrix</code> 对象。*/\r\n    static TEMP: Matrix = new Matrix();\r\n    /**@internal */\r\n    static _createFun: Function|null = null;\r\n\r\n    /**缩放或旋转图像时影响像素沿 x 轴定位的值。*/\r\n    a: number;\r\n    /**旋转或倾斜图像时影响像素沿 y 轴定位的值。*/\r\n    b: number;\r\n    /**旋转或倾斜图像时影响像素沿 x 轴定位的值。*/\r\n    c: number;\r\n    /**缩放或旋转图像时影响像素沿 y 轴定位的值。*/\r\n    d: number;\r\n    /**沿 x 轴平移每个点的距离。*/\r\n    tx: number;\r\n    /**沿 y 轴平移每个点的距离。*/\r\n    ty: number;\r\n    /**@internal 是否有旋转缩放操作*/\r\n    _bTransform: boolean = false;\r\n\r\n    /**\r\n     * 使用指定参数创建新的 <code>Matrix</code> 对象。\r\n     * @param a\t\t（可选）缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     * @param b\t\t（可选）旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     * @param c\t\t（可选）旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     * @param d\t\t（可选）缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     * @param tx\t（可选）沿 x 轴平移每个点的距离。\r\n     * @param ty\t（可选）沿 y 轴平移每个点的距离。\r\n     */\r\n    constructor(a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0, nums: number = 0) {\r\n        if (Matrix._createFun != null) {\r\n            return Matrix._createFun(a, b, c, d, tx, ty, nums);\r\n        }\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n        this._checkTransform();\r\n    }\r\n\r\n    /**\r\n     * 将本矩阵设置为单位矩阵。\r\n     * @return 返回当前矩形。\r\n     */\r\n    identity(): Matrix {\r\n        this.a = this.d = 1;\r\n        this.b = this.tx = this.ty = this.c = 0;\r\n        this._bTransform = false;\r\n        return this;\r\n    }\r\n\r\n    /**@internal */\r\n    _checkTransform(): boolean {\r\n        return this._bTransform = (this.a !== 1 || this.b !== 0 || this.c !== 0 || this.d !== 1);\r\n    }\r\n\r\n    /**\r\n     * 设置沿 x 、y 轴平移每个点的距离。\r\n     * @param\tx 沿 x 轴平移每个点的距离。\r\n     * @param\ty 沿 y 轴平移每个点的距离。\r\n     * @return\t返回对象本身\r\n     */\r\n    setTranslate(x: number, y: number): Matrix {\r\n        this.tx = x;\r\n        this.ty = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 沿 x 和 y 轴平移矩阵，平移的变化量由 x 和 y 参数指定。\r\n     * @param\tx 沿 x 轴向右移动的量（以像素为单位）。\r\n     * @param\ty 沿 y 轴向下移动的量（以像素为单位）。\r\n     * @return 返回此矩形对象。\r\n     */\r\n    translate(x: number, y: number): Matrix {\r\n        this.tx += x;\r\n        this.ty += y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对矩阵应用缩放转换。\r\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\r\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\r\n     * @return\t返回矩阵对象本身\r\n     */\r\n    scale(x: number, y: number): Matrix {\r\n        this.a *= x;\r\n        this.d *= y;\r\n        this.c *= x;\r\n        this.b *= y;\r\n        this.tx *= x;\r\n        this.ty *= y;\r\n        this._bTransform = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对 Matrix 对象应用旋转转换。\r\n     * @param\tangle 以弧度为单位的旋转角度。\r\n     * @return\t返回矩阵对象本身\r\n     */\r\n    rotate(angle: number): Matrix {\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var a1: number = this.a;\r\n        var c1: number = this.c;\r\n        var tx1: number = this.tx;\r\n\r\n        this.a = a1 * cos - this.b * sin;\r\n        this.b = a1 * sin + this.b * cos;\r\n        this.c = c1 * cos - this.d * sin;\r\n        this.d = c1 * sin + this.d * cos;\r\n        this.tx = tx1 * cos - this.ty * sin;\r\n        this.ty = tx1 * sin + this.ty * cos;\r\n        this._bTransform = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对 Matrix 对象应用倾斜转换。\r\n     * @param\tx 沿着 X 轴的 2D 倾斜弧度。\r\n     * @param\ty 沿着 Y 轴的 2D 倾斜弧度。\r\n     * @return 当前 Matrix 对象。\r\n     */\r\n    skew(x: number, y: number): Matrix {\r\n        var tanX: number = Math.tan(x);\r\n        var tanY: number = Math.tan(y);\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        this.a += tanY * this.c;\r\n        this.b += tanY * this.d;\r\n        this.c += tanX * a1;\r\n        this.d += tanX * b1;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对指定的点应用当前矩阵的逆转化并返回此点。\r\n     * @param\tout 待转化的点 Point 对象。\r\n     * @return\t返回out\r\n     */\r\n    invertTransformPoint(out: Point): Point {\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        var c1: number = this.c;\r\n        var d1: number = this.d;\r\n        var tx1: number = this.tx;\r\n        var n: number = a1 * d1 - b1 * c1;\r\n\r\n        var a2: number = d1 / n;\r\n        var b2: number = -b1 / n;\r\n        var c2: number = -c1 / n;\r\n        var d2: number = a1 / n;\r\n        var tx2: number = (c1 * this.ty - d1 * tx1) / n;\r\n        var ty2: number = -(a1 * this.ty - b1 * tx1) / n;\r\n        return out.setTo(a2 * out.x + c2 * out.y + tx2, b2 * out.x + d2 * out.y + ty2);\r\n    }\r\n\r\n    /**\r\n     * 将 Matrix 对象表示的几何转换应用于指定点。\r\n     * @param\tout 用来设定输出结果的点。\r\n     * @return\t返回out\r\n     */\r\n    transformPoint(out: Point): Point {\r\n        return out.setTo(this.a * out.x + this.c * out.y + this.tx, this.b * out.x + this.d * out.y + this.ty);\r\n    }\r\n\r\n    /**\r\n     * 将 Matrix 对象表示的几何转换应用于指定点，忽略tx、ty。\r\n     * @param\tout 用来设定输出结果的点。\r\n     * @return\t返回out\r\n     */\r\n    transformPointN(out: Point): Point {\r\n        return out.setTo(this.a * out.x + this.c * out.y /*+ tx*/, this.b * out.x + this.d * out.y /*+ ty*/);\r\n    }\r\n\r\n    /**\r\n     * 获取 X 轴缩放值。\r\n     * @return  X 轴缩放值。\r\n     */\r\n    getScaleX(): number {\r\n        return this.b === 0 ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);\r\n    }\r\n\r\n    /**\r\n     * 获取 Y 轴缩放值。\r\n     * @return Y 轴缩放值。\r\n     */\r\n    getScaleY(): number {\r\n        return this.c === 0 ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);\r\n    }\r\n\r\n    /**\r\n     * 执行原始矩阵的逆转换。\r\n     * @return 当前矩阵对象。\r\n     */\r\n    invert(): Matrix {\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        var c1: number = this.c;\r\n        var d1: number = this.d;\r\n        var tx1: number = this.tx;\r\n        var n: number = a1 * d1 - b1 * c1;\r\n        this.a = d1 / n;\r\n        this.b = -b1 / n;\r\n        this.c = -c1 / n;\r\n        this.d = a1 / n;\r\n        this.tx = (c1 * this.ty - d1 * tx1) / n;\r\n        this.ty = -(a1 * this.ty - b1 * tx1) / n;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *  将 Matrix 的成员设置为指定值。\r\n     * @param\ta 缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     * @param\tb 旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     * @param\tc 旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     * @param\td 缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     * @param\ttx 沿 x 轴平移每个点的距离。\r\n     * @param\tty 沿 y 轴平移每个点的距离。\r\n     * @return 当前矩阵对象。\r\n     */\r\n    setTo(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix {\r\n        this.a = a, this.b = b, this.c = c, this.d = d, this.tx = tx, this.ty = ty;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将指定矩阵与当前矩阵连接，从而将这两个矩阵的几何效果有效地结合在一起。\r\n     * @param\tmatrix 要连接到源矩阵的矩阵。\r\n     * @return\t当前矩阵。\r\n     */\r\n    concat(matrix: Matrix): Matrix {\r\n        var a: number = this.a;\r\n        var c: number = this.c;\r\n        var tx: number = this.tx;\r\n        this.a = a * matrix.a + this.b * matrix.c;\r\n        this.b = a * matrix.b + this.b * matrix.d;\r\n        this.c = c * matrix.a + this.d * matrix.c;\r\n        this.d = c * matrix.b + this.d * matrix.d;\r\n        this.tx = tx * matrix.a + this.ty * matrix.c + matrix.tx;\r\n        this.ty = tx * matrix.b + this.ty * matrix.d + matrix.ty;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将指定的两个矩阵相乘后的结果赋值给指定的输出对象。\r\n     * @param\tm1 矩阵一。\r\n     * @param\tm2 矩阵二。\r\n     * @param\tout 输出对象。\r\n     * @return\t结果输出对象 out。\r\n     */\r\n    static mul(m1: Matrix, m2: Matrix, out: Matrix): Matrix {\r\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\r\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\r\n        if (bb !== 0 || bc !== 0) {\r\n            out.a = aa * ba + ab * bc;\r\n            out.b = aa * bb + ab * bd;\r\n            out.c = ac * ba + ad * bc;\r\n            out.d = ac * bb + ad * bd;\r\n            out.tx = ba * atx + bc * aty + btx;\r\n            out.ty = bb * atx + bd * aty + bty;\r\n        } else {\r\n            out.a = aa * ba;\r\n            out.b = ab * bd;\r\n            out.c = ac * ba;\r\n            out.d = ad * bd;\r\n            out.tx = ba * atx + btx;\r\n            out.ty = bd * aty + bty;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 将指定的两个矩阵相乘，结果赋值给指定的输出数组，长度为16。\r\n     * @param m1\t矩阵一。\r\n     * @param m2\t矩阵二。\r\n     * @param out\t输出对象Array。\r\n     * @return 结果输出对象 out。\r\n     */\r\n    static mul16(m1: Matrix, m2: Matrix, out: any[]): any[] {\r\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\r\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\r\n        if (bb !== 0 || bc !== 0) {\r\n            out[0] = aa * ba + ab * bc;\r\n            out[1] = aa * bb + ab * bd;\r\n            out[4] = ac * ba + ad * bc;\r\n            out[5] = ac * bb + ad * bd;\r\n            out[12] = ba * atx + bc * aty + btx;\r\n            out[13] = bb * atx + bd * aty + bty;\r\n        } else {\r\n            out[0] = aa * ba;\r\n            out[1] = ab * bd;\r\n            out[4] = ac * ba;\r\n            out[5] = ad * bd;\r\n            out[12] = ba * atx + btx;\r\n            out[13] = bd * aty + bty;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对矩阵应用缩放转换。反向相乘\r\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\r\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\r\n     */\r\n    scaleEx(x: number, y: number): void {\r\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\r\n        if (bb !== 0 || bc !== 0) {\r\n            this.a = x * ba;\r\n            this.b = x * bb;\r\n            this.c = y * bc;\r\n            this.d = y * bd;\r\n        } else {\r\n            this.a = x * ba;\r\n            this.b = 0 * bd;\r\n            this.c = 0 * ba;\r\n            this.d = y * bd;\r\n        }\r\n        this._bTransform = true;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对 Matrix 对象应用旋转转换。反向相乘\r\n     * @param\tangle 以弧度为单位的旋转角度。\r\n     */\r\n    rotateEx(angle: number): void {\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\r\n        if (bb !== 0 || bc !== 0) {\r\n            this.a = cos * ba + sin * bc;\r\n            this.b = cos * bb + sin * bd;\r\n            this.c = -sin * ba + cos * bc;\r\n            this.d = -sin * bb + cos * bd;\r\n        } else {\r\n            this.a = cos * ba;\r\n            this.b = sin * bd;\r\n            this.c = -sin * ba;\r\n            this.d = cos * bd;\r\n        }\r\n        this._bTransform = true;\r\n    }\r\n\r\n    /**\r\n     * 返回此 Matrix 对象的副本。\r\n     * @return 与原始实例具有完全相同的属性的新 Matrix 实例。\r\n     */\r\n    clone(): Matrix {\r\n        var dec: Matrix = Matrix.create();\r\n        dec.a = this.a;\r\n        dec.b = this.b;\r\n        dec.c = this.c;\r\n        dec.d = this.d;\r\n        dec.tx = this.tx;\r\n        dec.ty = this.ty;\r\n        dec._bTransform = this._bTransform;\r\n        return dec;\r\n    }\r\n\r\n    /**\r\n     * 将当前 Matrix 对象中的所有矩阵数据复制到指定的 Matrix 对象中。\r\n     * @param\tdec 要复制当前矩阵数据的 Matrix 对象。\r\n     * @return\t已复制当前矩阵数据的 Matrix 对象。\r\n     */\r\n    copyTo(dec: Matrix): Matrix {\r\n        dec.a = this.a;\r\n        dec.b = this.b;\r\n        dec.c = this.c;\r\n        dec.d = this.d;\r\n        dec.tx = this.tx;\r\n        dec.ty = this.ty;\r\n        dec._bTransform = this._bTransform;\r\n        return dec;\r\n    }\r\n\r\n    /**\r\n     * 返回列出该 Matrix 对象属性的文本值。\r\n     * @return 一个字符串，它包含 Matrix 对象的属性值：a、b、c、d、tx 和 ty。\r\n     */\r\n    toString(): string {\r\n        return this.a + \",\" + this.b + \",\" + this.c + \",\" + this.d + \",\" + this.tx + \",\" + this.ty;\r\n    }\r\n\r\n    /**\r\n     * 销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.recover();\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池，方便复用\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"Matrix\", this.identity());\r\n    }\r\n\r\n    /**\r\n     * 从对象池中创建一个 <code>Matrix</code> 对象。\r\n     * @return <code>Matrix</code> 对象。\r\n     */\r\n    static create(): Matrix {\r\n        return Pool.getItemByClass(\"Matrix\", Matrix);\r\n    }\r\n}\r\n\r\n","import { Pool } from \"../utils/Pool\"\r\n\r\n/**\r\n * <code>Point</code> 对象表示二维坐标系统中的某个位置，其中 x 表示水平轴，y 表示垂直轴。\r\n */\r\nexport class Point {\r\n\r\n    /**临时使用的公用对象。*/\r\n    static TEMP: Point = new Point();\r\n    /**@private 全局空的point对象(x=0，y=0)，不允许修改此对象内容*/\r\n    static EMPTY: Point = new Point();\r\n\r\n    /**该点的水平坐标。*/\r\n    x: number;\r\n    /**该点的垂直坐标。*/\r\n    y: number;\r\n\r\n    /**\r\n     * 根据指定坐标，创建一个新的 <code>Point</code> 对象。\r\n     * @param x\t（可选）水平坐标。\r\n     * @param y\t（可选）垂直坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * 从对象池创建\r\n     */\r\n    static create(): Point {\r\n        return Pool.getItemByClass(\"Point\", Point);\r\n    }\r\n\r\n    /**\r\n     * 将 <code>Point</code> 的成员设置为指定值。\r\n     * @param\tx 水平坐标。\r\n     * @param\ty 垂直坐标。\r\n     * @return 当前 Point 对象。\r\n     */\r\n    setTo(x: number, y: number): Point {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): Point {\r\n        this.x = this.y = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池，方便复用\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"Point\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 计算当前点和目标点(x，y)的距离。\r\n     * @param\tx 水平坐标。\r\n     * @param\ty 垂直坐标。\r\n     * @return\t返回当前点和目标点之间的距离。\r\n     */\r\n    distance(x: number, y: number): number {\r\n        return Math.sqrt((this.x - x) * (this.x - x) + (this.y - y) * (this.y - y));\r\n    }\r\n\r\n    /**返回包含 x 和 y 坐标的值的字符串。*/\r\n    toString(): string {\r\n        return this.x + \",\" + this.y;\r\n    }\r\n\r\n    /**\r\n     * 标准化向量。\r\n     */\r\n    normalize(): void {\r\n        var d: number = Math.sqrt(this.x * this.x + this.y * this.y);\r\n        if (d > 0) {\r\n            var id: number = 1.0 / d;\r\n            this.x *= id;\r\n            this.y *= id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * copy point坐标\r\n     * @param\tpoint 需要被copy的point\r\n     */\r\n    copy(point: Point): Point {\r\n        return this.setTo(point.x, point.y);\r\n    }\r\n}\r\n\r\n","import { Pool } from \"../utils/Pool\";\r\nimport { Point } from \"./Point\";\r\n\r\n/**\r\n * <p><code>Rectangle</code> 对象是按其位置（由它左上角的点 (x, y) 确定）以及宽度和高度定义的区域。</p>\r\n * <p>Rectangle 类的 x、y、width 和 height 属性相互独立；更改一个属性的值不会影响其他属性。</p>\r\n */\r\nexport class Rectangle {\r\n\r\n    /**@private 全局空的矩形区域x=0,y=0,width=0,height=0，不允许修改此对象内容*/\r\n    static EMPTY: Rectangle = new Rectangle();\r\n    /**全局临时的矩形区域，此对象用于全局复用，以减少对象创建*/\r\n    static TEMP: Rectangle = new Rectangle();\r\n\r\n    /** @private */\r\n    private static _temB: number[] = [];\r\n    /** @private */\r\n    private static _temA: number[] = [];\r\n\r\n    /** 矩形左上角的 X 轴坐标。*/\r\n    x: number;\r\n    /** 矩形左上角的 Y 轴坐标。*/\r\n    y: number;\r\n    /** 矩形的宽度。*/\r\n    width: number;\r\n    /** 矩形的高度。*/\r\n    height: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Rectangle</code> 对象。\r\n     * @param\tx 矩形左上角的 X 轴坐标。\r\n     * @param\ty 矩形左上角的 Y 轴坐标。\r\n     * @param\twidth 矩形的宽度。\r\n     * @param\theight 矩形的高度。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    /** 此矩形右侧的 X 轴坐标。 x 和 width 属性的和。*/\r\n    get right(): number {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    /** 此矩形底端的 Y 轴坐标。y 和 height 属性的和。*/\r\n    get bottom(): number {\r\n        return this.y + this.height;\r\n    }\r\n\r\n    /**\r\n     * 将 Rectangle 的属性设置为指定值。\r\n     * @param\tx\tx 矩形左上角的 X 轴坐标。\r\n     * @param\ty\tx 矩形左上角的 Y 轴坐标。\r\n     * @param\twidth\t矩形的宽度。\r\n     * @param\theight\t矩形的高。\r\n     * @return\t返回属性值修改后的矩形对象本身。\r\n     */\r\n    setTo(x: number, y: number, width: number, height: number): Rectangle {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): Rectangle {\r\n        this.x = this.y = this.width = this.height = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this == Rectangle.TEMP || this == Rectangle.EMPTY) {\r\n            //console.log(\"recover Temp or Empty:\", this);\r\n            return;\r\n        }\r\n        Pool.recover(\"Rectangle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): Rectangle {\r\n        return Pool.getItemByClass(\"Rectangle\", Rectangle);\r\n    }\r\n\r\n    /**\r\n     * 复制 source 对象的属性值到此矩形对象中。\r\n     * @param\tsourceRect\t源 Rectangle 对象。\r\n     * @return\t返回属性值修改后的矩形对象本身。\r\n     */\r\n    copyFrom(source: Rectangle): Rectangle {\r\n        this.x = source.x;\r\n        this.y = source.y;\r\n        this.width = source.width;\r\n        this.height = source.height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 确定由此 Rectangle 对象定义的矩形区域内是否包含指定的点。\r\n     * @param x\t点的 X 轴坐标值（水平位置）。\r\n     * @param y\t点的 Y 轴坐标值（垂直位置）。\r\n     * @return\t如果 Rectangle 对象包含指定的点，则值为 true；否则为 false。\r\n     */\r\n    contains(x: number, y: number): boolean {\r\n        if (this.width <= 0 || this.height <= 0) return false;\r\n\r\n        if (x >= this.x && x < this.right) {\r\n            if (y >= this.y && y < this.bottom) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 确定在 rect 参数中指定的对象是否与此 Rectangle 对象相交。此方法检查指定的 Rectangle 对象的 x、y、width 和 height 属性，以查看它是否与此 Rectangle 对象相交。\r\n     * @param\trect Rectangle 对象。\r\n     * @return\t如果传入的矩形对象与此对象相交，则返回 true 值，否则返回 false。\r\n     */\r\n    intersects(rect: Rectangle): boolean {\r\n        return !(rect.x > (this.x + this.width) || (rect.x + rect.width) < this.x || rect.y > (this.y + this.height) || (rect.y + rect.height) < this.y);\r\n    }\r\n\r\n    /**\r\n     * 如果在 rect 参数中指定的 Rectangle 对象与此 Rectangle 对象相交，则返回交集区域作为 Rectangle 对象。如果矩形不相交，则此方法返回null。\r\n     * @param rect\t待比较的矩形区域。\r\n     * @param out\t（可选）待输出的矩形区域。如果为空则创建一个新的。建议：尽量复用对象，减少对象创建消耗。\r\n     * @return\t返回相交的矩形区域对象。\r\n     */\r\n    intersection(rect: Rectangle, out: Rectangle | null = null): Rectangle | null {\r\n        if (!this.intersects(rect)) return null;\r\n        out || (out = new Rectangle());\r\n        out.x = Math.max(this.x, rect.x);\r\n        out.y = Math.max(this.y, rect.y);\r\n        out.width = Math.min(this.right, rect.right) - out.x;\r\n        out.height = Math.min(this.bottom, rect.bottom) - out.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * <p>矩形联合，通过填充两个矩形之间的水平和垂直空间，将这两个矩形组合在一起以创建一个新的 Rectangle 对象。</p>\r\n     * <p>注意：union() 方法忽略高度或宽度值为 0 的矩形，如：var rect2:Rectangle = new Rectangle(300,300,50,0);</p>\r\n     * @param\t要添加到此 Rectangle 对象的 Rectangle 对象。\r\n     * @param\tout\t用于存储输出结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。Rectangle.TEMP对象用于对象复用。\r\n     * @return\t充当两个矩形的联合的新 Rectangle 对象。\r\n     */\r\n    union(source: Rectangle, out: Rectangle | null = null): Rectangle {\r\n        out || (out = new Rectangle());\r\n        this.clone(out);\r\n        if (source.width <= 0 || source.height <= 0) return out;\r\n        out.addPoint(source.x, source.y);\r\n        out.addPoint(source.right, source.bottom);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 返回一个 Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\r\n     * @param out\t（可选）用于存储结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。。Rectangle.TEMP对象用于对象复用。\r\n     * @return Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\r\n     */\r\n    clone(out: Rectangle | null = null): Rectangle {\r\n        out || (out = new Rectangle());\r\n        out.x = this.x;\r\n        out.y = this.y;\r\n        out.width = this.width;\r\n        out.height = this.height;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 当前 Rectangle 对象的水平位置 x 和垂直位置 y 以及高度 width 和宽度 height 以逗号连接成的字符串。\r\n     */\r\n    toString(): string {\r\n        return this.x + \",\" + this.y + \",\" + this.width + \",\" + this.height;\r\n    }\r\n\r\n    /**\r\n     * 检测传入的 Rectangle 对象的属性是否与当前 Rectangle 对象的属性 x、y、width、height 属性值都相等。\r\n     * @param\trect 待比较的 Rectangle 对象。\r\n     * @return\t如果判断的属性都相等，则返回 true ,否则返回 false。\r\n     */\r\n    equals(rect: Rectangle): boolean {\r\n        if (!rect || rect.x !== this.x || rect.y !== this.y || rect.width !== this.width || rect.height !== this.height) return false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>为当前矩形对象加一个点，以使当前矩形扩展为包含当前矩形和此点的最小矩形。</p>\r\n     * <p>此方法会修改本对象。</p>\r\n     * @param x\t点的 X 坐标。\r\n     * @param y\t点的 Y 坐标。\r\n     * @return 返回此 Rectangle 对象。\r\n     */\r\n    addPoint(x: number, y: number): Rectangle {\r\n        this.x > x && (this.width += this.x - x, this.x = x);//左边界比较\r\n        this.y > y && (this.height += this.y - y, this.y = y);//上边界比较\r\n        if (this.width < x - this.x) this.width = x - this.x;//右边界比较\r\n        if (this.height < y - this.y) this.height = y - this.y;//下边界比较\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回代表当前矩形的顶点数据。\r\n     * @return 顶点数据。\r\n     */\r\n    _getBoundPoints() {\r\n        var rst = Rectangle._temB;\r\n        rst.length = 0;\r\n        if (this.width == 0 || this.height == 0) return rst;\r\n        rst.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height);\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回矩形的顶点数据。\r\n     */\r\n    static _getBoundPointS(x: number, y: number, width: number, height: number, sp?: { width: number, height?: number }): number[] {\r\n        var rst: any[] = Rectangle._temA;\r\n        rst.length = 0;\r\n        if (width == 0 || height == 0) return rst;\r\n        if (sp) {\r\n            x *= sp.width;\r\n            y *= sp.height;\r\n            width *= sp.width;\r\n            height *= sp.height;\r\n        }\r\n        rst.push(x, y, x + width, y, x, y + height, x + width, y + height);\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回包含所有点的最小矩形。\r\n     * @param pointList 点列表。\r\n     * @return 包含所有点的最小矩形矩形对象。\r\n     */\r\n    static _getWrapRec(pointList: ArrayLike<number>, rst: Rectangle | null = null): Rectangle {\r\n\r\n        if (!pointList || pointList.length < 1) return rst ? rst.setTo(0, 0, 0, 0) : Rectangle.TEMP.setTo(0, 0, 0, 0);\r\n        rst = rst ? rst : Rectangle.create();\r\n        var i: number, len: number = pointList.length, minX: number, maxX: number, minY: number, maxY: number, tPoint: Point = Point.TEMP;\r\n        minX = minY = 99999;\r\n        maxX = maxY = -minX;\r\n        for (i = 0; i < len; i += 2) {\r\n            tPoint.x = pointList[i];\r\n            tPoint.y = pointList[i + 1];\r\n            minX = minX < tPoint.x ? minX : tPoint.x;\r\n            minY = minY < tPoint.y ? minY : tPoint.y;\r\n            maxX = maxX > tPoint.x ? maxX : tPoint.x;\r\n            maxY = maxY > tPoint.y ? maxY : tPoint.y;\r\n        }\r\n        return rst.setTo(minX, minY, maxX - minX, maxY - minY);\r\n    }\r\n\r\n    /**\r\n     * 确定此 Rectangle 对象是否为空。\r\n     * @return 如果 Rectangle 对象的宽度或高度小于等于 0，则返回 true 值，否则返回 false。\r\n     */\r\n    isEmpty(): boolean {\r\n        if (this.width <= 0 || this.height <= 0) return true;\r\n        return false;\r\n    }\r\n}","export enum HDREncodeFormat{\r\n    NONE,\r\n    RGBM,\r\n    RGBD\r\n   \r\n}","/**\r\n * 纹理格式\r\n */\r\nexport enum TextureFormat {\r\n    /**纹理格式_R8G8B8。*/\r\n    R8G8B8 = 0,\r\n    /**纹理格式_R8G8B8A8。*/\r\n    R8G8B8A8 = 1,\r\n    /**RGB格式纹理,R通道5位，G通道6位，B通道5位。*/\r\n    R5G6B5 = 16,\r\n    /**纹理格式_ALPHA8。*/\r\n    Alpha8 = 2,\r\n    /**纹理格式_DXT1。*/\r\n    DXT1 = 3,\r\n    /**纹理格式_DXT3 */\r\n    DXT3 = 29,\r\n    /**纹理格式_DXT5。*/\r\n    DXT5 = 4,\r\n    /**纹理格式_ETC2RGB。*/\r\n    ETC1RGB = 5,\r\n    ///**纹理格式_ETC2RGB。*/\r\n    ETC2RGB = 6,\r\n    ///**纹理格式_ETC2RGBA。*/\r\n    ETC2RGBA = 7,\r\n    /**纹理格式_ETC2RGB_PUNCHTHROUGHALPHA。*/\r\n    //ETC2RGB_PUNCHTHROUGHALPHA:int = 8;\r\n    /**纹理格式_PVRTCRGB_2BPPV。*/\r\n    ETC2SRGB_Alpha8 = 8,\r\n    /** 纹理格式_ETC2SRGB*/\r\n    ETC2SRGB = 28,\r\n    /** 纹理格式_PVRTCRGB_2BPPV*/\r\n    PVRTCRGB_2BPPV = 9,\r\n    /**纹理格式_PVRTCRGBA_2BPPV。*/\r\n    PVRTCRGBA_2BPPV = 10,\r\n    /**纹理格式_PVRTCRGB_4BPPV。*/\r\n    PVRTCRGB_4BPPV = 11,\r\n    /**纹理格式_PVRTCRGBA_4BPPV。*/\r\n    PVRTCRGBA_4BPPV = 12,\r\n    /**RGBA格式纹理,每个通道32位浮点数。*/\r\n    R32G32B32A32 = 15,\r\n    /**R32G32B32 */\r\n    R32G32B32 = 30,\r\n    /**RGBA格式纹理，每个通道16位浮点数。 */\r\n    R16G16B16A16 = 17,\r\n    /**R16 G16 B6 */\r\n    R16G16B16 = 31,\r\n    /**ASTC 4x4*/\r\n    ASTC4x4 = 18,\r\n    /**ASTC sRGB 4x4 */\r\n    ASTC4x4SRGB = 23,\r\n    /**ASTC 6x6*/\r\n    ASTC6x6 = 19,\r\n    /**ASTC  6x6*/\r\n    ASTC6x6SRGB = 24,\r\n    /**ASTC 8x8 */\r\n    ASTC8x8 = 20,\r\n    /**ASTC srgb 8x8 */\r\n    ASTC8x8SRGB = 25,\r\n    /**ASTC 10x10 */\r\n    ASTC10x10 = 21,\r\n    /**ASTC srgb 10x10 */\r\n    ASTC10x10SRGB = 26,\r\n    /**ASTC 12x12 */\r\n    ASTC12x12 = 22,\r\n    /**ASTC srgb 12x12 */\r\n    ASTC12x12SRGB = 27,\r\n    /**ktx图片 */\r\n    KTXTEXTURE = -1,\r\n    /**pvr图片 */\r\n    PVRTEXTURE = -2\r\n}","import { IRender2DContext } from \"../RenderEngine/RenderInterface/IRender2DContext\";\r\nimport { IRenderDrawContext } from \"../RenderEngine/RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\r\nimport { IRenderEngineFactory } from \"../RenderEngine/RenderInterface/IRenderEngineFactory\";\r\nimport { ITextureContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\n\r\n/**\r\n * 封装GL命令\r\n */\r\nexport class LayaGL {\r\n    static textureContext: ITextureContext;\r\n    static renderEngine: IRenderEngine;\r\n    static render2DContext: IRender2DContext;\r\n    static renderDrawContext: IRenderDrawContext;\r\n    static renderOBJCreate: IRenderEngineFactory;\r\n}","const ITEM_LAYOUT = 4; //callback,target,args,flag(0-deleted,1-normal,2-once) \r\n\r\nexport class Delegate {\r\n    private _flag: number;\r\n    private _items: Array<any>;\r\n\r\n    public constructor() {\r\n        this._flag = 0;\r\n        this._items = [];\r\n    }\r\n\r\n    public add(callback: Function, target?: any, args?: any[]): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            arr[index + 2] = args;\r\n            arr[index + 3] = 1;\r\n        }\r\n        else\r\n            arr.push(callback, target, args, 1);\r\n    }\r\n\r\n    public once(callback: Function, target?: any, args?: any[]): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            arr[index + 2] = args;\r\n            arr[index + 3] = 2;\r\n        }\r\n        else\r\n            arr.push(callback, target, args, 2);\r\n    }\r\n\r\n    public remove(callback: Function, target?: any): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            if (this._flag != 0) {\r\n                arr[index + 3] = 0;\r\n                this._flag = 2;\r\n            }\r\n            else\r\n                arr.splice(index, ITEM_LAYOUT);\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        let arr = this._items;\r\n        if (this._flag != 0) {\r\n            arr.forEach((value, index, arr) => { if (index % ITEM_LAYOUT == 3) arr[index] = 0; });\r\n            this._flag = 2;\r\n        }\r\n        else {\r\n            arr.length = 0;\r\n        }\r\n    }\r\n\r\n    public clearForTarget(target: any): void {\r\n        if (!target)\r\n            return;\r\n\r\n        let arr = this._items;\r\n        if (this._flag != 0) {\r\n            arr.forEach((value, index, arr) => { if ((index % ITEM_LAYOUT == 1) && arr[index] == target) arr[index + 2] = 0; });\r\n            this._flag = 2;\r\n        }\r\n        else {\r\n            let i: number = arr.length - ITEM_LAYOUT;\r\n            while (i >= 0) {\r\n                if (arr[i + 1] == target)\r\n                    arr.splice(i, ITEM_LAYOUT);\r\n                i -= ITEM_LAYOUT;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get count(): number {\r\n        return this._items.length / ITEM_LAYOUT;\r\n    }\r\n\r\n    public invoke(...args: any[]): void {\r\n        if (this._flag != 0)\r\n            return;\r\n\r\n        this._flag = 1;\r\n        let arr = this._items;\r\n        let cnt = arr.length;\r\n        for (let i = 0; i < cnt; i += ITEM_LAYOUT) {\r\n            if (0 == arr[i + 3]) continue;\r\n            let fixedArgs = arr[i + 2];\r\n            try {\r\n                if (fixedArgs != null)\r\n                    arr[i].call(arr[i + 1], ...fixedArgs, ...args);\r\n                else\r\n                    arr[i].call(arr[i + 1], ...args);\r\n            }\r\n            catch (err: any) {\r\n                console.error(err);\r\n            }\r\n            if (arr[i + 3] == 2) {\r\n                arr[i + 3] = 0;\r\n                this._flag = 2;\r\n            }\r\n        }\r\n\r\n        if (this._flag == 2) {\r\n            let cnt = arr.length;\r\n            let i = 0;\r\n            while (i < cnt) {\r\n                if (arr[i + 3] == 0) {\r\n                    arr.splice(i, ITEM_LAYOUT);\r\n                    cnt -= ITEM_LAYOUT;\r\n                    continue;\r\n                }\r\n                else\r\n                    i += ITEM_LAYOUT;\r\n            }\r\n        }\r\n        this._flag = 0;\r\n    }\r\n}","import { Point } from \"../maths/Point\"\r\n\r\nexport interface ITouchInfo {\r\n    touchId: number;\r\n    readonly pos: Point;\r\n}\r\n\r\n/**\r\n * <code>Event</code> 是事件类型的集合。一般当发生事件时，<code>Event</code> 对象将作为参数传递给事件侦听器。\r\n */\r\nexport class Event {\r\n\r\n    /** 一个空的 Event 对象。用于事件派发中转使用。*/\r\n    static readonly EMPTY: Readonly<Event> = new Event();\r\n\r\n    /** 定义 mousedown 事件对象的 type 属性值。*/\r\n    static MOUSE_DOWN = \"mousedown\";\r\n    /** 定义 mouseup 事件对象的 type 属性值。*/\r\n    static MOUSE_UP = \"mouseup\";\r\n    /** 定义 rightmousedown 事件对象的 type 属性值。*/\r\n    static RIGHT_MOUSE_DOWN: string = \"rightmousedown\";\r\n    /** 定义 rightmouseup 事件对象的 type 属性值。*/\r\n    static RIGHT_MOUSE_UP: string = \"rightmouseup\";\r\n    /** 定义 click 事件对象的 type 属性值。*/\r\n    static CLICK = \"click\";\r\n    /** 定义 rightclick 事件对象的 type 属性值。*/\r\n    static RIGHT_CLICK = \"rightclick\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_MOVE = \"mousemove\";\r\n    /** 定义 mouseover 事件对象的 type 属性值。*/\r\n    static MOUSE_OVER = \"mouseover\";\r\n    /** 定义 mouseout 事件对象的 type 属性值。*/\r\n    static MOUSE_OUT = \"mouseout\";\r\n    /** 定义 mousewheel 事件对象的 type 属性值。*/\r\n    static MOUSE_WHEEL = \"mousewheel\";\r\n    /** 定义 mouseover 事件对象的 type 属性值。*/\r\n    static ROLL_OVER = \"mouseover\";\r\n    /** 定义 mouseout 事件对象的 type 属性值。*/\r\n    static ROLL_OUT = \"mouseout\";\r\n    /** 定义 doubleclick 事件对象的 type 属性值。*/\r\n    static DOUBLE_CLICK = \"doubleclick\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_DRAG = \"mousedrag\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_DRAG_END = \"mousedragend\";\r\n\r\n    /** 定义 dragstart 事件对象的 type 属性值。*/\r\n    static DRAG_START = \"dragstart\";\r\n    /** 定义 dragmove 事件对象的 type 属性值。*/\r\n    static DRAG_MOVE = \"dragmove\";\r\n    /** 定义 dragend 事件对象的 type 属性值。*/\r\n    static DRAG_END = \"dragend\";\r\n\r\n    /** 定义 keydown 事件对象的 type 属性值。*/\r\n    static KEY_DOWN = \"keydown\";\r\n    /** 定义 keypress 事件对象的 type 属性值。*/\r\n    static KEY_PRESS = \"keypress\";\r\n    /** 定义 keyup 事件对象的 type 属性值。*/\r\n    static KEY_UP = \"keyup\";\r\n\r\n    /** 定义 change 事件对象的 type 属性值。*/\r\n    static CHANGE = \"change\";\r\n    /** 定义 changed 事件对象的 type 属性值。*/\r\n    static CHANGED = \"changed\";\r\n    /** 定义 willResize 事件对象的 type 属性值。*/\r\n    static WILL_RESIZE = \"willResize\";\r\n    /** 定义 resize 事件对象的 type 属性值。*/\r\n    static RESIZE = \"resize\";\r\n\r\n    /** 定义 added 事件对象的 type 属性值。*/\r\n    static ADDED = \"added\";\r\n    /** 定义 removed 事件对象的 type 属性值。*/\r\n    static REMOVED = \"removed\";\r\n    /** 定义 display 事件对象的 type 属性值。*/\r\n    static DISPLAY = \"display\";\r\n    /** 定义 undisplay 事件对象的 type 属性值。*/\r\n    static UNDISPLAY = \"undisplay\";\r\n\r\n    /** 定义 error 事件对象的 type 属性值。*/\r\n    static ERROR = \"error\";\r\n    /** 定义 complete 事件对象的 type 属性值。*/\r\n    static COMPLETE = \"complete\";\r\n    /** 定义 loaded 事件对象的 type 属性值。*/\r\n    static LOADED = \"loaded\";\r\n    /** 定义 loaded 事件对象的 type 属性值。*/\r\n    static READY = \"ready\";\r\n    /** 定义 progress 事件对象的 type 属性值。*/\r\n    static PROGRESS = \"progress\";\r\n    /** 定义 input 事件对象的 type 属性值。*/\r\n    static INPUT = \"input\";\r\n    /** 定义 render 事件对象的 type 属性值。*/\r\n    static RENDER = \"render\";\r\n    /** 定义 open 事件对象的 type 属性值。*/\r\n    static OPEN = \"open\";\r\n    /** 定义 message 事件对象的 type 属性值。*/\r\n    static MESSAGE = \"message\";\r\n    /** 定义 close 事件对象的 type 属性值。*/\r\n    static CLOSE = \"close\";\r\n\r\n    /** 定义 frame 事件对象的 type 属性值。*/\r\n    static FRAME = \"enterframe\";\r\n    /** 定义 enter 事件对象的 type 属性值。*/\r\n    static ENTER = \"enter\";\r\n    /** 定义 select 事件对象的 type 属性值。*/\r\n    static SELECT = \"select\";\r\n    /** 定义 blur 事件对象的 type 属性值。*/\r\n    static BLUR = \"blur\";\r\n    /** 定义 focus 事件对象的 type 属性值。*/\r\n    static FOCUS = \"focus\";\r\n    /** 定义 visibilitychange 事件对象的 type 属性值。*/\r\n    static VISIBILITY_CHANGE = \"visibilitychange\";\r\n    /** 定义 focuschange 事件对象的 type 属性值。*/\r\n    static FOCUS_CHANGE = \"focuschange\";\r\n    /** 定义 played 事件对象的 type 属性值。*/\r\n    static PLAYED = \"played\";\r\n    /** 定义 paused 事件对象的 type 属性值。*/\r\n    static PAUSED = \"paused\";\r\n    /** 定义 stopped 事件对象的 type 属性值。*/\r\n    static STOPPED = \"stopped\";\r\n    /** 定义 start 事件对象的 type 属性值。*/\r\n    static START = \"start\";\r\n    /** 定义 end 事件对象的 type 属性值。*/\r\n    static END = \"end\";\r\n    /** 定义 link 事件对象的 type 属性值。*/\r\n    static LINK = \"link\";\r\n    /** 定义 label 事件对象的 type 属性值。*/\r\n    static LABEL = \"label\";\r\n    /**浏览器全屏更改时触发*/\r\n    static FULL_SCREEN_CHANGE = \"fullscreenchange\";\r\n    /**显卡设备丢失时触发*/\r\n    static DEVICE_LOST = \"devicelost\";\r\n    /**世界矩阵更新时触发。*/\r\n    static TRANSFORM_CHANGED = \"transformchanged\";\r\n    /**3D layer改变时触发。*/\r\n    static LAYERCHANGE = \"layerChange\";\r\n    /**3D Static改变时触发 */\r\n    static staticMask = \"staticMask\";\r\n\r\n    /**物理碰撞开始*/\r\n    static TRIGGER_ENTER = \"triggerenter\";\r\n    /**物理碰撞持续*/\r\n    static TRIGGER_STAY = \"triggerstay\";\r\n    /**物理碰撞结束*/\r\n    static TRIGGER_EXIT = \"triggerexit\";\r\n\r\n    /**物理碰撞开始*/\r\n    static COLLISION_ENTER = \"collisionenter\";\r\n    /**物理碰撞持续*/\r\n    static COLLISION_STAY = \"collisionstay\";\r\n    /**物理碰撞结束*/\r\n    static COLLISION_EXIT = \"collisionexit\";\r\n    /**关节破坏 */\r\n    static JOINT_BREAK = \"jointbreak\";\r\n\r\n    /**@internal */\r\n    static _Add_Script= \"addscript\";\r\n    /**\r\n     * 检测指定事件类型是否是鼠标事件。\r\n     * @param\ttype 事件的类型。\r\n     * @return\t如果是鼠标事件，则值为 true;否则，值为 false。\r\n     */\r\n    static isMouseEvent(type: string): boolean {\r\n        return MOUSE_EVENTS.has(type);\r\n    }\r\n\r\n    /** 事件类型。*/\r\n    type: string;\r\n    /** 事件目标触发对象。*/\r\n    target: any;\r\n    /** 事件当前冒泡对象。*/\r\n    currentTarget: any;\r\n\r\n    /** 分配给触摸点的唯一标识号（作为 int）。*/\r\n    touchId: number = 0;\r\n    /** 点击坐标 */\r\n    readonly touchPos: Point;\r\n    /** 是否双击 */\r\n    isDblClick: boolean;\r\n    /**滚轮滑动增量*/\r\n    delta: number = 0;\r\n    /** \r\n     * 鼠标按键，\r\n     * 0：主按键，通常指鼠标左键\r\n     * 1：辅助按键，通常指鼠标滚轮中键\r\n     * 2：次按键，通常指鼠标右键\r\n     * 3：第四个按钮，通常指浏览器后退按钮\r\n     * 4：第五个按钮，通常指浏览器的前进按钮\r\n     */\r\n    button: number = 0;\r\n\r\n    /** 原生浏览器事件。*/\r\n    nativeEvent: MouseEvent | TouchEvent | WheelEvent | KeyboardEvent;\r\n\r\n    /** @internal */\r\n    _stopped: boolean;\r\n    /** @internal */\r\n    _touches: ReadonlyArray<Readonly<ITouchInfo>>;\r\n\r\n    constructor() {\r\n        this.touchPos = new Point();\r\n    }\r\n\r\n    /**\r\n     * 设置事件数据。\r\n     * @param\ttype 事件类型。\r\n     * @param\tcurrentTarget 事件目标触发对象。\r\n     * @param\ttarget 事件当前冒泡对象。\r\n     * @return 返回当前 Event 对象。\r\n     */\r\n    setTo(type: string, currentTarget: any, target: any): Event {\r\n        this.type = type;\r\n        this.currentTarget = currentTarget;\r\n        this.target = target;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 阻止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。此方法不会影响当前节点 (currentTarget) 中的任何事件侦听器。\r\n     */\r\n    stopPropagation(): void {\r\n        this._stopped = true;\r\n    }\r\n\r\n    /**\r\n     * 触摸点列表。\r\n     */\r\n    get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\r\n        return this._touches;\r\n    }\r\n\r\n    /**\r\n     * 表示 Alt 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get altKey(): boolean {\r\n        return this.nativeEvent?.altKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Ctrl 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get ctrlKey(): boolean {\r\n        return this.nativeEvent?.ctrlKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get shiftKey(): boolean {\r\n        return this.nativeEvent?.shiftKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get metaKey(): boolean {\r\n        return this.nativeEvent?.metaKey;\r\n    }\r\n\r\n    get key(): string {\r\n        return (<KeyboardEvent>this.nativeEvent).key;\r\n    }\r\n\r\n    get keyCode(): number {\r\n        return (<KeyboardEvent>this.nativeEvent).keyCode;\r\n    }\r\n\r\n    /**\r\n     * 包含按下或释放的键的字符代码值。字符代码值为英文键盘值。\r\n     */\r\n    get charCode(): string {\r\n        return (<KeyboardEvent>this.nativeEvent)?.code;\r\n    }\r\n\r\n    /**\r\n     * 表示键在键盘上的位置。这对于区分在键盘上多次出现的键非常有用。<br>\r\n     * 例如，您可以根据此属性的值来区分左 Shift 键和右 Shift 键：左 Shift 键的值为 KeyLocation.LEFT，右 Shift 键的值为 KeyLocation.RIGHT。另一个示例是区分标准键盘 (KeyLocation.STANDARD) 与数字键盘 (KeyLocation.NUM_PAD) 上按下的数字键。\r\n     */\r\n    get keyLocation(): number {\r\n        if (this.nativeEvent)\r\n            return (<KeyboardEvent>this.nativeEvent).location || (<any>this.nativeEvent).keyLocation;\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 X 轴坐标*/\r\n    get stageX(): number {\r\n        return this.touchPos.x;\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 Y 轴坐标*/\r\n    get stageY(): number {\r\n        return this.touchPos.y;\r\n    }\r\n}\r\n\r\nconst MOUSE_EVENTS = new Set<string>([\r\n    Event.MOUSE_DOWN, Event.MOUSE_UP, Event.MOUSE_MOVE, Event.CLICK, Event.DOUBLE_CLICK,\r\n    Event.RIGHT_CLICK, Event.RIGHT_MOUSE_DOWN, Event.RIGHT_MOUSE_UP,\r\n    Event.MOUSE_OVER, Event.MOUSE_OUT, Event.MOUSE_WHEEL, Event.MOUSE_DRAG, Event.MOUSE_DRAG_END\r\n]);","import { Delegate } from \"../utils/Delegate\";\r\nimport { Event } from \"./Event\";\r\n\r\nconst eventPool: Array<Event> = [];\r\n\r\n/**\r\n * <code>EventDispatcher</code> 类是可调度事件的所有类的基类。\r\n */\r\nexport class EventDispatcher {\r\n    /**@private */\r\n    private _events: Record<string, Delegate>;\r\n\r\n    protected onStartListeningToType(type: string) {\r\n    }\r\n\r\n    /**\r\n     * 检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。\r\n     * @param\ttype 事件的类型。\r\n     * @return 如果指定类型的侦听器已注册，则值为 true；否则，值为 false。\r\n     */\r\n    hasListener(type: string): boolean {\r\n        let listeners = this._events && this._events[type];\r\n        return !!listeners && listeners.count > 0;\r\n    }\r\n\r\n    /**\r\n     * 派发事件。\r\n     * @param type\t事件类型。\r\n     * @param data\t（可选）回调数据。<b>注意：</b>如果是需要传递多个参数 p1,p2,p3,...可以使用数组结构如：[p1,p2,p3,...] ；如果需要回调单个参数 p ，且 p 是一个数组，则需要使用结构如：[p]，其他的单个参数 p ，可以直接传入参数 p。\r\n     * @return 此事件类型是否有侦听者，如果有侦听者则值为 true，否则值为 false。\r\n     */\r\n    event(type: string, data?: any): boolean {\r\n        let listeners = this._events && this._events[type];\r\n        if (!listeners) return false;\r\n        let ret = listeners.count > 0;\r\n\r\n        if (Array.isArray(data))\r\n            listeners.invoke(...data);\r\n        else if (data !== undefined)\r\n            listeners.invoke(data);\r\n        else if (data === Event.EMPTY) {\r\n            let ev = eventPool.length > 0 ? eventPool.pop() : new Event();\r\n            listeners.invoke(ev.setTo(type, this, this));\r\n            ev.target = ev.currentTarget = null;\r\n            eventPool.push(ev);\r\n        }\r\n        else\r\n            listeners.invoke();\r\n\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @param args\t\t（可选）事件侦听函数的回调参数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    on(type: string, listener: Function): EventDispatcher;\r\n    on(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\r\n    on(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        if (!this._events) this._events = {};\r\n        let listeners = this._events[type];\r\n        if (!listeners) {\r\n            this.onStartListeningToType(type);\r\n            this._events[type] = listeners = new Delegate();\r\n        }\r\n\r\n        listeners.add(listener, caller, args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知，此侦听事件响应一次后自动移除。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @param args\t\t（可选）事件侦听函数的回调参数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    once(type: string, listener: Function): EventDispatcher;\r\n    once(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\r\n    once(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        if (!this._events) this._events = {};\r\n        let listeners = this._events[type];\r\n        if (!listeners) {\r\n            this.onStartListeningToType(type);\r\n            this._events[type] = listeners = new Delegate();\r\n        }\r\n\r\n        listeners.once(listener, caller, args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从 EventDispatcher 对象中删除侦听器。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    off(type: string, listener: Function): EventDispatcher;\r\n    off(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher;\r\n    off(type: string, caller: any, listener?: Function): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        let listeners = this._events && this._events[type];\r\n        if (listeners)\r\n            listeners.remove(listener, caller);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从 EventDispatcher 对象中删除指定事件类型的所有侦听器。\r\n     * @param type\t（可选）事件类型，如果值为 null，则移除本对象所有类型的侦听器。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    offAll(type?: string): EventDispatcher {\r\n        if (type == null)\r\n            this._events = null;\r\n        else {\r\n            let listeners = this._events && this._events[type];\r\n            if (listeners)\r\n                listeners.clear();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 移除caller为target的所有事件监听\r\n     * @param\tcaller caller对象\r\n     */\r\n    offAllCaller(caller: any): EventDispatcher {\r\n        if (caller && this._events) {\r\n            for (let type in this._events)\r\n                this._events[type].clearForTarget(caller);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\n\r\nvar _idCounter: number = 0;\r\nvar _disposingCounter: number = 0;\r\nvar _clearRetry: number = 0;\r\n\r\n/**\r\n * <code>Resource</code> 资源存取类。\r\n */\r\nexport class Resource extends EventDispatcher {\r\n    /** @private */\r\n    static _idResourcesMap: any = {};\r\n    /** @private 以字节为单位。*/\r\n    private static _cpuMemory: number = 0;\r\n    /** @private 以字节为单位。*/\r\n    private static _gpuMemory: number = 0;\r\n    /**是否开启debug模式 */\r\n    static DEBUG: boolean = false;\r\n\r\n    /**\r\n     * 当前内存，以字节为单位。\r\n     */\r\n    static get cpuMemory(): number {\r\n        return Resource._cpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 当前显存，以字节为单位。\r\n     */\r\n    static get gpuMemory(): number {\r\n        return Resource._gpuMemory;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addCPUMemory(size: number): void {\r\n        Resource._cpuMemory += size;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addGPUMemory(size: number): void {\r\n        Resource._gpuMemory += size;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addMemory(cpuSize: number, gpuSize: number): void {\r\n        Resource._cpuMemory += cpuSize;\r\n        Resource._gpuMemory += gpuSize;\r\n    }\r\n\r\n    /**\r\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\r\n     */\r\n    static destroyUnusedResources(): void {\r\n        _disposingCounter = 0; //复位一下，避免异常造成的标志错误\r\n        _clearRetry = 0;\r\n\r\n        if (!ILaya.loader.loading)\r\n            Resource._destroyUnusedResources(true);\r\n        else\r\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\r\n    }\r\n\r\n    /** @private */\r\n    private static _destroyUnusedResources(force: boolean): void {\r\n        if (!force && ILaya.loader.loading)\r\n            return;\r\n\r\n        ILaya.timer.clear(Resource, Resource._destroyUnusedResources);\r\n        let destroyCnt = 0;\r\n\r\n        for (let k in Resource._idResourcesMap) {\r\n            let res: Resource = Resource._idResourcesMap[k];\r\n            if (!res.lock && res._referenceCount === 0) {\r\n                res.destroy();\r\n                destroyCnt++;\r\n            }\r\n        }\r\n\r\n        if (Resource.DEBUG && destroyCnt > 0)\r\n            console.debug(`destroyUnusedResources(${destroyCnt})`);\r\n\r\n        if (destroyCnt > 0 && _clearRetry < 5) {\r\n            _clearRetry++;\r\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\r\n        }\r\n    }\r\n\r\n    private _cpuMemory: number = 0;\r\n    private _gpuMemory: number = 0;\r\n    _id: number = 0;\r\n    protected _destroyed?: boolean;\r\n    protected _referenceCount: number = 0;\r\n    protected _obsolute: boolean;\r\n\r\n    /**是否加锁，如果true为不能使用自动释放机制。*/\r\n    lock?: boolean;\r\n    /**名称。 */\r\n    name?: string;\r\n    /**获取资源的URL地址。 */\r\n    url: string;\r\n    /**获取资源的UUID。 */\r\n    uuid: string;\r\n\r\n    /**是否在引用计数为0的时候立马删除他 */\r\n    destroyedImmediately: boolean;\r\n\r\n    /**\r\n     * 获取唯一标识ID,通常用于识别。\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 内存大小。\r\n     */\r\n    get cpuMemory(): number {\r\n        return this._cpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 显存大小。\r\n     */\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 是否已销毁。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._destroyed;\r\n    }\r\n\r\n\r\n    /** 如果设置一个已缓存的资源obsolute为true，则\r\n     * 1）getRes仍然可以返回这个资源；\r\n     * 2）下次加载时会忽略这个缓存而去重新加载。。\r\n     */\r\n    get obsolute(): boolean {\r\n        return this._obsolute;\r\n    }\r\n\r\n    set obsolute(value: boolean) {\r\n        this._obsolute = value;\r\n    }\r\n\r\n    /**\r\n     * 获取资源的引用计数。\r\n     */\r\n    get referenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Resource</code> 实例。\r\n     * @param managed 如果设置为true，则在destroyUnusedResources时会检测引用计数并自动释放如果计数为0。默认为true。\r\n     */\r\n    protected constructor(managed?: boolean) {\r\n        super();\r\n\r\n        this._id = ++_idCounter;\r\n        this._destroyed = false;\r\n        this._referenceCount = 0;\r\n        if (managed == null || managed)\r\n            Resource._idResourcesMap[this._id] = this;\r\n        this.lock = false;\r\n        this.destroyedImmediately = true;\r\n    }\r\n\r\n    _setCPUMemory(value: number): void {\r\n        var offsetValue: number = value - this._cpuMemory;\r\n        this._cpuMemory = value;\r\n        Resource._addCPUMemory(offsetValue);\r\n    }\r\n\r\n    _setGPUMemory(value: number): void {\r\n        var offsetValue: number = value - this._gpuMemory;\r\n        this._gpuMemory = value;\r\n        Resource._addGPUMemory(offsetValue);\r\n    }\r\n\r\n    _setCreateURL(url: string, uuid?: string): void {\r\n        this.url = url;\r\n        this.uuid = uuid;\r\n    }\r\n\r\n    /**\r\n     * 返回资源是否从指定url创建\r\n     */\r\n    isCreateFromURL(url: string): boolean {\r\n        return this.uuid && url.length === this.uuid.length + 6 && url.endsWith(this.uuid)\r\n            || this.url === url;\r\n    }\r\n\r\n    _addReference(count: number = 1): void {\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    _removeReference(count: number = 1): void {\r\n        this._referenceCount -= count;\r\n        //如果_removeReference发生在destroy中，可能是在collect或者处理内嵌资源的释放\r\n        if (_disposingCounter > 0 && this._referenceCount <= 0 && !this.lock && this.destroyedImmediately) {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清除引用\r\n     */\r\n    _clearReference(): void {\r\n        this._referenceCount = 0;\r\n    }\r\n\r\n    protected _recoverResource(): void {\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n    }\r\n\r\n    protected _activeResource(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁资源,销毁后资源不能恢复。\r\n     */\r\n    destroy(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._destroyed = true;\r\n        this.lock = false; //解锁资源，强制清理\r\n        _disposingCounter++;\r\n        this._disposeResource();\r\n        _disposingCounter--;\r\n        this.offAll();\r\n        delete Resource._idResourcesMap[this.id];\r\n        if (this.url) {\r\n            if (Resource.DEBUG)\r\n                console.debug(`destroy ${Object.getPrototypeOf(this).constructor.name} ${this.url}`);\r\n            ILaya.loader.clearRes(this.url, this);\r\n        }\r\n    }\r\n}","/**\r\n * 纹理的过滤模式。\r\n */\r\nexport enum FilterMode {\r\n    /**点过滤。*/\r\n    Point = 0,\r\n    /**双线性过滤。*/\r\n    Bilinear = 1,\r\n    /**三线性过滤。*/\r\n    Trilinear = 2,\r\n}","export enum RenderCapable {\r\n    Element_Index_Uint32,//Index Usage 32\r\n    TextureFormat_R32G32B32A32,//Texturefloat32\r\n    TextureFormat_R16G16B16A16,//TextureFloat16\r\n    Texture_anisotropic,//anisotropic function\r\n    RenderTextureFormat_R16G16B16A16,//Rendertexture Float16\r\n    RenderTextureFormat_R32G32B32A32, // rendertexture float32\r\n    RenderTextureFormat_Depth,//depthTexture\r\n    RenderTextureFormat_ShadowMap,//shadowMap Texture\r\n    Vertex_VAO,//VAO\r\n    DrawElement_Instance,//Instance\r\n    Shader_TextureLod,//Texture lod sampler\r\n    COMPRESS_TEXTURE_S3TC,//compress Texture dds\r\n    COMPRESS_TEXTURE_S3TC_SRGB,//Compress Texture dds srgb\r\n    COMPRESS_TEXTURE_PVRTC,//Compress Texture PVR\r\n    COMPRESS_TEXTURE_ETC1,//Compress Texture ktx\r\n    COMPRESS_TEXTURE_ETC,//Compress Texture ktx\r\n    COMPRESS_TEXTURE_ASTC,//Compress Texture astc\r\n    Texture_SRGB,//Textrue srgb   \r\n    MSAA,//MSAA\r\n    UnifromBufferObject,\r\n    Texture3D,\r\n    Texture_FloatLinearFiltering,\r\n    Texture_HalfFloatLinearFiltering,\r\n}","import { Config } from \"../../Config\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\r\nimport { TextureCompareMode } from \"../RenderEngine/RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\r\nimport { InternalTexture } from \"../RenderEngine/RenderInterface/InternalTexture\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Resource } from \"./Resource\";\r\n\r\n/**\r\n * <code>BaseTexture</code> 纹理的父类，抽象类，不允许实例。\r\n */\r\nexport class BaseTexture extends Resource {\r\n    /**\r\n     * @internal\r\n     */\r\n    _texture: InternalTexture;\r\n    /**@internal */\r\n    hdrEncodeFormat: HDREncodeFormat;\r\n    /**@private */\r\n    protected _width: number;\r\n    /**@private */\r\n    protected _height: number;\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this._width = width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this._height = height;\r\n    }\r\n\r\n    protected _dimension: TextureDimension;\r\n\r\n    /**\r\n     * 纹理几何属性\r\n     */\r\n    public get dimension(): TextureDimension {\r\n        return this._dimension;\r\n    }\r\n\r\n    protected _format: TextureFormat;\r\n    /**\r\n     * 纹理格式\r\n     */\r\n    public get format(): TextureFormat {\r\n        return this._format;\r\n    }\r\n\r\n    /**\r\n     * 是否生成mipmap\r\n     */\r\n    public get mipmap(): boolean {\r\n        return this._texture.mipmap;\r\n    }\r\n\r\n    public get mipmapCount(): number {\r\n        return this._texture.mipmapCount;\r\n    }\r\n\r\n    /**\r\n     * 各向异性值\r\n     */\r\n    public get anisoLevel(): number {\r\n        return this._texture.anisoLevel;\r\n    }\r\n    public set anisoLevel(value: number) {\r\n        this._texture.anisoLevel = value;\r\n    }\r\n\r\n    /**\r\n     * 采样过滤模式\r\n     */\r\n    public get filterMode(): FilterMode {\r\n        return this._texture.filterMode;\r\n    }\r\n    public set filterMode(value: FilterMode) {\r\n        this._texture.filterMode = value;\r\n    }\r\n\r\n    /**\r\n     * U方向采样模式\r\n     */\r\n    public get wrapModeU(): WrapMode {\r\n        return this._texture.wrapU;\r\n    }\r\n    public set wrapModeU(value: WrapMode) {\r\n        this._texture.wrapU = value;\r\n    }\r\n\r\n    /**\r\n     * V方向采样模式\r\n     */\r\n    public get wrapModeV(): WrapMode {\r\n        return this._texture.wrapV;\r\n    }\r\n    public set wrapModeV(value: WrapMode) {\r\n        this._texture.wrapV = value;\r\n    }\r\n\r\n    /**\r\n     * W方向采样模式\r\n     */\r\n    public get wrapModeW(): WrapMode {\r\n        return this._texture.wrapW;\r\n    }\r\n    public set wrapModeW(value: WrapMode) {\r\n        this._texture.wrapW = value;\r\n    }\r\n\r\n    /**\r\n     * 贴图压缩格式\r\n     */\r\n    public get compareMode(): TextureCompareMode {\r\n        return this._texture.compareMode;\r\n    }\r\n\r\n    public set compareMode(value: TextureCompareMode) {\r\n        this._texture.compareMode = LayaGL.textureContext.setTextureCompareMode(this._texture, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * gamma矫正值\r\n     * 如果是1.0  texture2D直接采样就是linear \r\n     */\r\n    public get gammaCorrection(): number {\r\n        return this._texture.gammaCorrection;\r\n    }\r\n\r\n    /**\r\n     * mipmap起始等级\r\n     */\r\n    public set baseMipmapLevel(value: number) {\r\n        this._texture.baseMipmapLevel = value;\r\n    }\r\n\r\n    public get baseMipmapLevel(): number {\r\n        return this._texture.baseMipmapLevel;\r\n    }\r\n\r\n    /**\r\n     * 最大Mipmap等级\r\n     */\r\n    public set maxMipmapLevel(value: number) {\r\n        this._texture.maxMipmapLevel = value;\r\n    }\r\n\r\n    public get maxMipmapLevel(): number {\r\n        return this._texture.maxMipmapLevel;\r\n    }\r\n\r\n    /**@internal */\r\n    _gammaSpace: boolean = false;\r\n    // todo\r\n    public get gammaSpace(): boolean {\r\n        // return this._gammaSpace;\r\n        return this._texture.useSRGBLoad || this._texture.gammaCorrection > 1;\r\n    }\r\n\r\n    /**\r\n     * 实例化一个纹理\r\n     * @param width 长\r\n     * @param height 宽\r\n     * @param format 格式\r\n     */\r\n    constructor(width: number, height: number, format: number) {\r\n        super();\r\n        this._width = width;\r\n        this._height = height;\r\n        this._format = format;\r\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\r\n        this.hdrEncodeFormat = HDREncodeFormat.NONE;\r\n    }\r\n\r\n    /**\r\n     * 是否是gpu压缩纹理格式\r\n     * @returns \r\n     */\r\n    gpuCompressFormat(): boolean {\r\n        let format = this._format;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n            case TextureFormat.R8G8B8A8:\r\n            case TextureFormat.R16G16B16:\r\n            case TextureFormat.R16G16B16A16:\r\n            case TextureFormat.R32G32B32:\r\n            case TextureFormat.R32G32B32A32:\r\n            case TextureFormat.R5G6B5:\r\n            case TextureFormat.Alpha8:\r\n                return false;\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n            case TextureFormat.ETC1RGB:\r\n            case TextureFormat.ETC2RGB:\r\n            case TextureFormat.ETC2RGBA:\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n            case TextureFormat.ETC2SRGB:\r\n            case TextureFormat.PVRTCRGB_2BPPV:\r\n            case TextureFormat.PVRTCRGBA_2BPPV:\r\n            case TextureFormat.PVRTCRGB_4BPPV:\r\n            case TextureFormat.PVRTCRGBA_4BPPV:\r\n            case TextureFormat.ASTC4x4:\r\n            case TextureFormat.ASTC4x4SRGB:\r\n            case TextureFormat.ASTC6x6:\r\n            case TextureFormat.ASTC6x6SRGB:\r\n            case TextureFormat.ASTC8x8:\r\n            case TextureFormat.ASTC8x8SRGB:\r\n            case TextureFormat.ASTC10x10:\r\n            case TextureFormat.ASTC10x10SRGB:\r\n            case TextureFormat.ASTC12x12:\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取纹理格式的字节数\r\n     * @internal\r\n     */\r\n    _getFormatByteCount(): number {\r\n        switch (this._format) {\r\n            case TextureFormat.R8G8B8:\r\n                return 3;\r\n            case TextureFormat.R8G8B8A8:\r\n                return 4;\r\n            case TextureFormat.R5G6B5:\r\n                return 1;\r\n            case TextureFormat.Alpha8:\r\n                return 1;\r\n            case TextureFormat.R16G16B16A16:\r\n                return 2;\r\n            case TextureFormat.R32G32B32A32:\r\n                return 4;\r\n            default:\r\n                throw \"Texture2D: unknown format.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getSource() {\r\n        return this._texture.resource;\r\n    }\r\n\r\n    /**\r\n     * 默认贴图\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        throw \"defaulte\"\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n        this._texture.dispose();\r\n    }\r\n}","import { Matrix } from \"../maths/Matrix\"\r\n\r\n/**\r\n * <p> <code>Byte</code> 类提供用于优化读取、写入以及处理二进制数据的方法和属性。</p>\r\n * <p> <code>Byte</code> 类适用于需要在字节层访问数据的高级开发人员。</p>\r\n */\r\nexport class Byte {\r\n\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    static BIG_ENDIAN: string = \"bigEndian\";\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。<br/>\r\n     * <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     */\r\n    static LITTLE_ENDIAN: string = \"littleEndian\";\r\n    /**@private */\r\n    private static _sysEndian: string = null;\r\n    /**@private 是否为小端数据。*/\r\n    protected _xd_: boolean = true;\r\n    /**@private */\r\n    private _allocated_: number = 8;\r\n    /**@private 原始数据。*/\r\n    protected _d_: any\r\n    /**@private DataView*/\r\n    protected _u8d_: any;\r\n    /**@private */\r\n    protected _pos_: number = 0;\r\n    /**@private */\r\n    protected _length: number = 0;\r\n\r\n    /**\r\n     * <p>获取当前主机的字节序。</p>\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * @return 当前系统的字节序。\r\n     */\r\n    static getSystemEndian(): string {\r\n        if (!Byte._sysEndian) {\r\n            var buffer: any = new ArrayBuffer(2);\r\n            new DataView(buffer).setInt16(0, 256, true);\r\n            Byte._sysEndian = (new Int16Array(buffer))[0] === 256 ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\r\n        }\r\n        return Byte._sysEndian;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Byte</code> 类的实例。\r\n     * @param\tdata\t用于指定初始化的元素数目，或者用于初始化的TypedArray对象、ArrayBuffer对象。如果为 null ，则预分配一定的内存空间，当可用空间不足时，优先使用这部分内存，如果还不够，则重新分配所需内存。\r\n     */\r\n    constructor(data: any = null) {\r\n        if (data) {\r\n            this._u8d_ = new Uint8Array(data);\r\n            this._d_ = new DataView(this._u8d_.buffer);\r\n            this._length = this._d_.byteLength;\r\n        } else {\r\n            this._resizeBuffer(this._allocated_);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取此对象的 ArrayBuffer 数据，数据只包含有效数据部分。\r\n     */\r\n    get buffer(): ArrayBuffer {\r\n        var rstBuffer: ArrayBuffer = this._d_.buffer;\r\n        if (rstBuffer.byteLength === this._length) return rstBuffer;\r\n        return rstBuffer.slice(0, this._length);\r\n    }\r\n\r\n    /**\r\n     * <p> <code>Byte</code> 实例的字节序。取值为：<code>BIG_ENDIAN</code> 或 <code>BIG_ENDIAN</code> 。</p>\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     *  <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    get endian(): string {\r\n        return this._xd_ ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\r\n    }\r\n\r\n    set endian(value: string) {\r\n        this._xd_ = (value === Byte.LITTLE_ENDIAN);\r\n    }\r\n\r\n    /**\r\n     * <p> <code>Byte</code> 对象的长度（以字节为单位）。</p>\r\n     * <p>如果将长度设置为大于当前长度的值，则用零填充字节数组的右侧；如果将长度设置为小于当前长度的值，将会截断该字节数组。</p>\r\n     * <p>如果要设置的长度大于当前已分配的内存空间的字节长度，则重新分配内存空间，大小为以下两者较大者：要设置的长度、当前已分配的长度的2倍，并将原有数据拷贝到新的内存空间中；如果要设置的长度小于当前已分配的内存空间的字节长度，也会重新分配内存空间，大小为要设置的长度，并将原有数据从头截断为要设置的长度存入新的内存空间中。</p>\r\n     */\r\n    set length(value: number) {\r\n        if (this._allocated_ < value) this._resizeBuffer(this._allocated_ = Math.floor(Math.max(value, this._allocated_ * 2)));\r\n        else if (this._allocated_ > value) this._resizeBuffer(this._allocated_ = value);\r\n        this._length = value;\r\n    }\r\n\r\n    get length(): number {\r\n        return this._length;\r\n    }\r\n\r\n    /**@private */\r\n    private _resizeBuffer(len: number): void {\r\n        try {\r\n            var newByteView: any = new Uint8Array(len);\r\n            if (this._u8d_ != null) {\r\n                if (this._u8d_.length <= len) newByteView.set(this._u8d_);\r\n                else newByteView.set(this._u8d_.subarray(0, len));\r\n            }\r\n            this._u8d_ = newByteView;\r\n            this._d_ = new DataView(newByteView.buffer);\r\n        } catch (err) {\r\n            throw \"Invalid typed array length:\" + len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>常用于解析固定格式的字节流。</p>\r\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    getString(): string {\r\n        return this.readString();\r\n    }\r\n\r\n    /**\r\n     * <p>常用于解析固定格式的字节流。</p>\r\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    readString(): string {\r\n        return this._rUTF(this.getUint16());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。</p>\r\n     * <p><b>注意：</b>返回的 Float32Array 对象，在 JavaScript 环境下，是原生的 HTML5 Float32Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Float32Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Float32Array 对象。\r\n     */\r\n    getFloat32Array(start: number, len: number): any {\r\n        return this.readFloat32Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Float32Array 对象。\r\n     */\r\n    readFloat32Array(start: number, len: number): any {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Float32Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    getUint8Array(start: number, len: number): Uint8Array {\r\n        return this.readUint8Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    readUint8Array(start: number, len: number): Uint8Array {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Uint8Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。</p>\r\n     * <p><b>注意：</b>返回的 Int16Array 对象，在 JavaScript 环境下，是原生的 HTML5 Int16Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Int16Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\r\n     * @param\tstart\t开始读取的字节偏移量位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Int16Array 对象。\r\n     */\r\n    getInt16Array(start: number, len: number): any {\r\n        return this.readInt16Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始读取的字节偏移量位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    readInt16Array(start: number, len: number): any {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Int16Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @return 单精度（32 位）浮点数。\r\n     */\r\n    getFloat32(): number {\r\n        return this.readFloat32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @return 单精度（32 位）浮点数。\r\n     */\r\n    readFloat32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getFloat32 error - Out of bounds\";\r\n        var v: number = this._d_.getFloat32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @return 双精度（64 位）浮点数。\r\n     */\r\n    getFloat64(): number {\r\n        return this.readFloat64();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @return 双精度（64 位）浮点数。\r\n     */\r\n    readFloat64(): number {\r\n        if (this._pos_ + 8 > this._length) throw \"getFloat64 error - Out of bounds\";\r\n        var v: number = this._d_.getFloat64(this._pos_, this._xd_);\r\n        this._pos_ += 8;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @param\tvalue\t单精度（32 位）浮点数。\r\n     */\r\n    writeFloat32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setFloat32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @param\tvalue\t双精度（64 位）浮点数。\r\n     */\r\n    writeFloat64(value: number): void {\r\n        this._ensureWrite(this._pos_ + 8);\r\n        this._d_.setFloat64(this._pos_, value, this._xd_);\r\n        this._pos_ += 8;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\r\n     * @return Int32 值。\r\n     */\r\n    getInt32(): number {\r\n        return this.readInt32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\r\n     * @return Int32 值。\r\n     */\r\n    readInt32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getInt32 error - Out of bounds\";\r\n        var float: number = this._d_.getInt32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return float;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\r\n     * @return Uint32 值。\r\n     */\r\n    getUint32(): number {\r\n        return this.readUint32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\r\n     * @return Uint32 值。\r\n     */\r\n    readUint32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getUint32 error - Out of bounds\";\r\n        var v: number = this._d_.getUint32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Int32 值。\r\n     * @param\tvalue\t需要写入的 Int32 值。\r\n     */\r\n    writeInt32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setInt32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入 Uint32 值。\r\n     * @param\tvalue\t需要写入的 Uint32 值。\r\n     */\r\n    writeUint32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setUint32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\r\n     * @return Int16 值。\r\n     */\r\n    getInt16(): number {\r\n        return this.readInt16();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\r\n     * @return Int16 值。\r\n     */\r\n    readInt16(): number {\r\n        if (this._pos_ + 2 > this._length) throw \"getInt16 error - Out of bounds\";\r\n        var us: number = this._d_.getInt16(this._pos_, this._xd_);\r\n        this._pos_ += 2;\r\n        return us;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\r\n     * @return Uint16 值。\r\n     */\r\n    getUint16(): number {\r\n        return this.readUint16();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\r\n     * @return Uint16 值。\r\n     */\r\n    readUint16(): number {\r\n        if (this._pos_ + 2 > this._length) throw \"getUint16 error - Out of bounds\";\r\n        var us: number = this._d_.getUint16(this._pos_, this._xd_);\r\n        this._pos_ += 2;\r\n        return us;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint16 值。\r\n     * @param\tvalue\t需要写入的Uint16 值。\r\n     */\r\n    writeUint16(value: number): void {\r\n        this._ensureWrite(this._pos_ + 2);\r\n        this._d_.setUint16(this._pos_, value, this._xd_);\r\n        this._pos_ += 2;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Int16 值。\r\n     * @param\tvalue\t需要写入的 Int16 值。\r\n     */\r\n    writeInt16(value: number): void {\r\n        this._ensureWrite(this._pos_ + 2);\r\n        this._d_.setInt16(this._pos_, value, this._xd_);\r\n        this._pos_ += 2;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\r\n     * @return Uint8 值。\r\n     */\r\n    getUint8(): number {\r\n        return this.readUint8();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\r\n     * @return Uint8 值。\r\n     */\r\n    readUint8(): number {\r\n        if (this._pos_ + 1 > this._length) throw \"getUint8 error - Out of bounds\";\r\n        return this._u8d_[this._pos_++];\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint8 值。\r\n     * @param\tvalue\t需要写入的 Uint8 值。\r\n     */\r\n    writeUint8(value: number): void {\r\n        this._ensureWrite(this._pos_ + 1);\r\n        this._d_.setUint8(this._pos_, value);\r\n        this._pos_++;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint8 值。\r\n     */\r\n    //TODO:coverage\r\n    _getUInt8(pos: number): number {\r\n        return this._readUInt8(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint8 值。\r\n     */\r\n    //TODO:coverage\r\n    _readUInt8(pos: number): number {\r\n        return this._d_.getUint8(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint16 值。\r\n     */\r\n    //TODO:coverage\r\n    _getUint16(pos: number): number {\r\n        return this._readUint16(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint16 值。\r\n     */\r\n    //TODO:coverage\r\n    _readUint16(pos: number): number {\r\n        return this._d_.getUint16(pos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\r\n     * @return  Matrix 对象。\r\n     */\r\n    //TODO:coverage\r\n    _getMatrix(): Matrix {\r\n        return this._readMatrix();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\r\n     * @return  Matrix 对象。\r\n     */\r\n    //TODO:coverage\r\n    _readMatrix(): Matrix {\r\n        var rst: Matrix = new Matrix(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取指定长度的 UTF 型字符串。\r\n     * @param\tlen 需要读取的长度。\r\n     * @return 读取的字符串。\r\n     */\r\n    private _rUTF(len: number): string {\r\n        var v: string = \"\", max: number = this._pos_ + len, c: number, c2: number, c3: number, f: Function = String.fromCharCode;\r\n        var u: any = this._u8d_, i: number = 0;\r\n        var strs: any[] = [];\r\n        var n: number = 0;\r\n        strs.length = 1000;\r\n        while (this._pos_ < max) {\r\n            c = u[this._pos_++];\r\n            if (c < 0x80) {\r\n                if (c != 0)\r\n                    //v += f(c);\\\r\n                    strs[n++] = f(c);\r\n            } else if (c < 0xE0) {\r\n                //v += f(((c & 0x3F) << 6) | (u[_pos_++] & 0x7F));\r\n                strs[n++] = f(((c & 0x3F) << 6) | (u[this._pos_++] & 0x7F));\r\n            } else if (c < 0xF0) {\r\n                c2 = u[this._pos_++];\r\n                //v += f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[_pos_++] & 0x7F));\r\n                strs[n++] = f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[this._pos_++] & 0x7F));\r\n            } else {\r\n                c2 = u[this._pos_++];\r\n                c3 = u[this._pos_++];\r\n                //v += f(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (u[_pos_++] & 0x7F));\r\n                const _code = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (u[this._pos_++] & 0x7F);\r\n                if (_code >= 0x10000) {\r\n                    const _offset = _code - 0x10000;\r\n                    const _lead = 0xd800 | (_offset >> 10);\r\n                    const _trail = 0xdc00 | (_offset & 0x3ff);\r\n                    strs[n++] = f(_lead);\r\n                    strs[n++] = f(_trail);\r\n                }\r\n                else {\r\n                    strs[n++] = f(_code);\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n        strs.length = n;\r\n        return strs.join('');\r\n        //return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取 <code>len</code> 参数指定的长度的字符串。\r\n     * @param\tlen\t要读取的字符串的长度。\r\n     * @return 指定长度的字符串。\r\n     */\r\n    //TODO:coverage\r\n    getCustomString(len: number): string {\r\n        return this.readCustomString(len);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取 <code>len</code> 参数指定的长度的字符串。\r\n     * @param\tlen\t要读取的字符串的长度。\r\n     * @return 指定长度的字符串。\r\n     */\r\n    //TODO:coverage\r\n    readCustomString(len: number): string {\r\n        var v: string = \"\", ulen: number = 0, c: number, c2: number, f: Function = String.fromCharCode;\r\n        var u: any = this._u8d_, i: number = 0;\r\n        while (len > 0) {\r\n            c = u[this._pos_];\r\n            if (c < 0x80) {\r\n                v += f(c);\r\n                this._pos_++;\r\n                len--;\r\n            } else {\r\n                ulen = c - 0x80;\r\n                this._pos_++;\r\n                len -= ulen;\r\n                while (ulen > 0) {\r\n                    c = u[this._pos_++];\r\n                    c2 = u[this._pos_++];\r\n                    v += f((c2 << 8) | c);\r\n                    ulen--;\r\n                }\r\n            }\r\n        }\r\n\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 移动或返回 Byte 对象的读写指针的当前位置（以字节为单位）。下一次调用读取方法时将在此位置开始读取，或者下一次调用写入方法时将在此位置开始写入。\r\n     */\r\n    get pos(): number {\r\n        return this._pos_;\r\n    }\r\n\r\n    set pos(value: number) {\r\n        this._pos_ = value;\r\n        //$MOD byteOffset是只读的，这里进行赋值没有意义。\r\n        //_d_.byteOffset = value;\r\n    }\r\n\r\n    /**\r\n     * 可从字节流的当前位置到末尾读取的数据的字节数。\r\n     */\r\n    get bytesAvailable(): number {\r\n        return this._length - this._pos_;\r\n    }\r\n\r\n    /**\r\n     * 清除字节数组的内容，并将 length 和 pos 属性重置为 0。调用此方法将释放 Byte 实例占用的内存。\r\n     */\r\n    clear(): void {\r\n        this._pos_ = 0;\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取此对象的 ArrayBuffer 引用。\r\n     * @return\r\n     */\r\n    __getBuffer(): ArrayBuffer {\r\n        //this._d_.buffer.byteLength = this.length;\r\n        return this._d_.buffer;\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。类似于 writeUTF() 方法，但 writeUTFBytes() 不使用 16 位长度的字为字符串添加前缀。</p>\r\n     * <p>对应的读取方法为： getUTFBytes 。</p>\r\n     * @param value 要写入的字符串。\r\n     */\r\n    writeUTFBytes(value: string): void {\r\n        // utf8-decode\r\n        value = value + \"\";\r\n        for (var i: number = 0, sz: number = value.length; i < sz; i++) {\r\n            var c: number = value.charCodeAt(i);\r\n\r\n            if (c <= 0x7F) {\r\n                this.writeByte(c);\r\n            } else if (c <= 0x7FF) {\r\n                //优化为直接写入多个字节，而不必重复调用writeByte，免去额外的调用和逻辑开销。\r\n                this._ensureWrite(this._pos_ + 2);\r\n                this._u8d_.set([0xC0 | (c >> 6), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 2;\r\n            } else if (c >= 0xD800 && c <= 0xDBFF) {\r\n                i++;\r\n                const c2 = value.charCodeAt(i);\r\n                if (!Number.isNaN(c2) && c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                    const _p1 = (c & 0x3FF) + 0x40;\r\n                    const _p2 = c2 & 0x3FF;\r\n\r\n                    const _b1 = 0xF0 | ((_p1 >> 8) & 0x3F);\r\n                    const _b2 = 0x80 | ((_p1 >> 2) & 0x3F);\r\n                    const _b3 = 0x80 | ((_p1 & 0x3) << 4) | ((_p2 >> 6) & 0xF);\r\n                    const _b4 = 0x80 | (_p2 & 0x3F);\r\n\r\n                    this._ensureWrite(this._pos_ + 4);\r\n                    this._u8d_.set([_b1, _b2, _b3, _b4], this._pos_);\r\n                    this._pos_ += 4;\r\n                }\r\n            } else if (c <= 0xFFFF) {\r\n                this._ensureWrite(this._pos_ + 3);\r\n                this._u8d_.set([0xE0 | (c >> 12), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 3;\r\n            } else {\r\n                this._ensureWrite(this._pos_ + 4);\r\n                this._u8d_.set([0xF0 | (c >> 18), 0x80 | ((c >> 12) & 0x3F), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 4;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 16 位整数），然后写入表示字符串字符的字节。</p>\r\n     * <p>对应的读取方法为： getUTFString 。</p>\r\n     * @param\tvalue 要写入的字符串值。\r\n     */\r\n    writeUTFString(value: string): void {\r\n        var tPos: number = this.pos;\r\n        this.writeUint16(1);\r\n        this.writeUTFBytes(value);\r\n        var dPos: number = this.pos - tPos - 2;\r\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\r\n        this._d_.setUint16(tPos, dPos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 32 位整数），然后写入表示字符串字符的字节。</p>\r\n     * @param\tvalue 要写入的字符串值。\r\n     */\r\n    writeUTFString32(value: string): void {\r\n        var tPos = this.pos;\r\n        this.writeUint32(1);\r\n        this.writeUTFBytes(value);\r\n        var dPos = this.pos - tPos - 4;\r\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\r\n        this._d_.setUint32(tPos, dPos, this._xd_);\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 读取 UTF-8 字符串。\r\n     * @return 读取的字符串。\r\n     */\r\n    readUTFString(): string {\r\n        //var tPos:int = pos;\r\n        //var len:int = getUint16();\r\n        ////trace(\"readLen:\"+len,\"pos,\",tPos);\r\n        return this.readUTFBytes(this.getUint16());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    readUTFString32(): string {\r\n        return this.readUTFBytes(this.getUint32());\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取一个 UTF-8 字符串。假定字符串的前缀是一个无符号的短整型（以此字节表示要读取的长度）。</p>\r\n     * <p>对应的写入方法为： writeUTFString 。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    getUTFString(): string {\r\n        return this.readUTFString();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读字符串，必须是 writeUTFBytes 方法写入的字符串。\r\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\r\n     * @return 读取的字符串。\r\n     */\r\n    readUTFBytes(len: number = -1): string {\r\n        if (len === 0) return \"\";\r\n        var lastBytes: number = this.bytesAvailable;\r\n        if (len > lastBytes) throw \"readUTFBytes error - Out of bounds\";\r\n        len = len > 0 ? len : lastBytes;\r\n        return this._rUTF(len);\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取一个由 length 参数指定的长度的 UTF-8 字节序列，并返回一个字符串。</p>\r\n     * <p>一般读取的是由 writeUTFBytes 方法写入的字符串。</p>\r\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\r\n     * @return 读取的字符串。\r\n     */\r\n    getUTFBytes(len: number = -1): string {\r\n        return this.readUTFBytes(len);\r\n    }\r\n\r\n    /**\r\n     * <p>在字节流中写入一个字节。</p>\r\n     * <p>使用参数的低 8 位。忽略高 24 位。</p>\r\n     * @param\tvalue\r\n     */\r\n    writeByte(value: number): void {\r\n        this._ensureWrite(this._pos_ + 1);\r\n        this._d_.setInt8(this._pos_, value);\r\n        this._pos_ += 1;\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取带符号的字节。</p>\r\n     * <p>返回值的范围是从 -128 到 127。</p>\r\n     * @return 介于 -128 和 127 之间的整数。\r\n     */\r\n    readByte(): number {\r\n        if (this._pos_ + 1 > this._length) throw \"readByte error - Out of bounds\";\r\n        return this._d_.getInt8(this._pos_++);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流中读取带符号的字节。\r\n     */\r\n    getByte(): number {\r\n        return this.readByte();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * <p>保证该字节流的可用长度不小于 <code>lengthToEnsure</code> 参数指定的值。</p>\r\n     * @param\tlengthToEnsure\t指定的长度。\r\n     */\r\n    _ensureWrite(lengthToEnsure: number): void {\r\n        if (this._length < lengthToEnsure) this._length = lengthToEnsure;\r\n        if (this._allocated_ < lengthToEnsure) this.length = lengthToEnsure;\r\n    }\r\n\r\n    /**\r\n     * <p>将指定 arraybuffer 对象中的以 offset 为起始偏移量， length 为长度的字节序列写入字节流。</p>\r\n     * <p>如果省略 length 参数，则使用默认长度 0，该方法将从 offset 开始写入整个缓冲区；如果还省略了 offset 参数，则写入整个缓冲区。</p>\r\n     * <p>如果 offset 或 length 小于0，本函数将抛出异常。</p>\r\n     * @param\tarraybuffer\t需要写入的 Arraybuffer 对象。\r\n     * @param\toffset\t\tArraybuffer 对象的索引的偏移量（以字节为单位）\r\n     * @param\tlength\t\t从 Arraybuffer 对象写入到 Byte 对象的长度（以字节为单位）\r\n     */\r\n    writeArrayBuffer(arraybuffer: any, offset: number = 0, length: number = 0): void {\r\n        if (offset < 0 || length < 0) throw \"writeArrayBuffer error - Out of bounds\";\r\n        if (length == 0) length = arraybuffer.byteLength - offset;\r\n        this._ensureWrite(this._pos_ + length);\r\n        var uint8array: any = new Uint8Array(arraybuffer);\r\n        this._u8d_.set(uint8array.subarray(offset, offset + length), this._pos_);\r\n        this._pos_ += length;\r\n    }\r\n\r\n    /**\r\n     * 读取ArrayBuffer数据\r\n     * @param\tlength\r\n     * @return\r\n     */\r\n    readArrayBuffer(length: number): ArrayBuffer {\r\n        var rst: ArrayBuffer;\r\n        rst = this._u8d_.buffer.slice(this._pos_, this._pos_ + length);\r\n        this._pos_ = this._pos_ + length\r\n        return rst;\r\n    }\r\n}\r\n\r\n","/**\r\n * <code>HalfFloatUtils</code> 类用于创建HalfFloat工具。\r\n */\r\nexport class HalfFloatUtils {\r\n    /**@internal */\r\n    private static _buffer: ArrayBuffer = new ArrayBuffer(4);\r\n    /**@internal */\r\n    private static _floatView: Float32Array = new Float32Array(HalfFloatUtils._buffer);\r\n    /**@internal */\r\n    private static _uint32View: Uint32Array = new Uint32Array(HalfFloatUtils._buffer);\r\n\r\n    /**@internal */\r\n    private static _baseTable: Uint32Array = new Uint32Array(512);\r\n    /**@internal */\r\n    private static _shiftTable: Uint32Array = new Uint32Array(512);\r\n\r\n    /**@internal */\r\n    private static _mantissaTable: Uint32Array = new Uint32Array(2048);\r\n    /**@internal */\r\n    private static _exponentTable: Uint32Array = new Uint32Array(64);\r\n    /**@internal */\r\n    private static _offsetTable: Uint32Array = new Uint32Array(64);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__(): void {\r\n        for (var i: number = 0; i < 256; ++i) {\r\n            var e: number = i - 127;\r\n            // very small number (0, -0)\r\n            if (e < -27) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0000;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\r\n\r\n                // small number (denorm)\r\n            } else if (e < -14) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0400 >> (-e - 14);\r\n                HalfFloatUtils._baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = -e - 1;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = -e - 1;\r\n\r\n                // normal number\r\n            } else if (e <= 15) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = (e + 15) << 10;\r\n                HalfFloatUtils._baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\r\n\r\n                // large number (Infinity, -Infinity)\r\n            } else if (e < 128) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\r\n\r\n                // stay (NaN, Infinity, -Infinity)\r\n            } else {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\r\n            }\r\n        }\r\n\r\n        HalfFloatUtils._mantissaTable[0] = 0;\r\n        for (i = 1; i < 1024; ++i) {\r\n            var m: number = i << 13;    // zero pad mantissa bits\r\n            e = 0;          // zero exponent\r\n\r\n            // normalized\r\n            while ((m & 0x00800000) === 0) {\r\n                e -= 0x00800000;    // decrement exponent\r\n                m <<= 1;\r\n            }\r\n\r\n            m &= ~0x00800000;   // clear leading 1 bit\r\n            e += 0x38800000;    // adjust bias\r\n\r\n            HalfFloatUtils._mantissaTable[i] = m | e;\r\n        }\r\n        for (i = 1024; i < 2048; ++i) {\r\n            HalfFloatUtils._mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\r\n        }\r\n\r\n        HalfFloatUtils._exponentTable[0] = 0;\r\n        for (i = 1; i < 31; ++i) {\r\n            HalfFloatUtils._exponentTable[i] = i << 23;\r\n        }\r\n        HalfFloatUtils._exponentTable[31] = 0x47800000;\r\n        HalfFloatUtils._exponentTable[32] = 0x80000000;\r\n        for (i = 33; i < 63; ++i) {\r\n            HalfFloatUtils._exponentTable[i] = 0x80000000 + ((i - 32) << 23);\r\n        }\r\n        HalfFloatUtils._exponentTable[63] = 0xc7800000;\r\n\r\n        HalfFloatUtils._offsetTable[0] = 0;\r\n        for (i = 1; i < 64; ++i) {\r\n            if (i === 32) {\r\n                HalfFloatUtils._offsetTable[i] = 0;\r\n            } else {\r\n                HalfFloatUtils._offsetTable[i] = 1024;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * round a number to a half float number bits.\r\n     * @param {number} num\r\n     */\r\n    static roundToFloat16Bits(num: number): number {\r\n        HalfFloatUtils._floatView[0] = num;\r\n        var f: number = HalfFloatUtils._uint32View[0];\r\n        var e: number = (f >> 23) & 0x1ff;\r\n        return HalfFloatUtils._baseTable[e] + ((f & 0x007fffff) >> HalfFloatUtils._shiftTable[e]);\r\n    }\r\n\r\n    /**\r\n     * convert a half float number bits to a number.\r\n     * @param {number} float16bits - half float number bits\r\n     */\r\n    static convertToNumber(float16bits: number): number {\r\n        var m: number = float16bits >> 10;\r\n        HalfFloatUtils._uint32View[0] = HalfFloatUtils._mantissaTable[HalfFloatUtils._offsetTable[m] + (float16bits & 0x3ff)] + HalfFloatUtils._exponentTable[m];\r\n        return HalfFloatUtils._floatView[0];\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nconst FOURCC_DXT1: number = 827611204;\r\nconst FOURCC_DXT3 = 861165636;\r\nconst FOURCC_DXT4 = 877942852;\r\nconst FOURCC_DXT5: number = 894720068;\r\nconst FOURCC_DX10 = 808540228;\r\nconst DDPF_FOURCC: number = 0x4;\r\nconst DDPF_RGB = 0x40;\r\nconst DDSCAPS2_CUBEMAP = 0x200;\r\nconst DDPF_LUMINANCE = 0x20000;\r\nconst DDSD_MIPMAPCOUNT: number = 0x20000;\r\nconst DDS_MAGIC: number = 0x20534444;\r\nconst DDS_HEADER_LENGTH: number = 31;\r\nconst DDS_DXGI_FORMAT: number = 32;\r\nconst DDS_HEADER_MAGIC: number = 0;\r\nconst DDS_HEADER_SIZE: number = 1;\r\nconst DDS_HEADER_FLAGS: number = 2;\r\nconst DDS_HEADER_HEIGHT: number = 3;\r\nconst DDS_HEADER_WIDTH: number = 4;\r\nconst DDS_HEADER_MIPMAPCOUNT: number = 7;\r\nconst DDS_HEADER_PF_FLAGS: number = 20;\r\nconst DDS_HEADER_PF_FOURCC: number = 21;\r\nconst DDS_HEADER_PF_RGBBPP: number = 22;\r\nconst DDS_HEADER_PF_CAPS2: number = 28;\r\nconst FOURCC_D3DFMT_R16G16B16A16F = 113;\r\nconst FOURCC_D3DFMT_R32G32B32A32F = 116;\r\n\r\nconst Int32ToFourCC = (value: number) => {\r\n    return String.fromCharCode(\r\n        value & 0xff,\r\n        (value >> 8) & 0xff,\r\n        (value >> 16) & 0xff,\r\n        (value >> 24) & 0xff\r\n    );\r\n}\r\n\r\n/**\r\n * dds 未存储 color space 需要手动指定\r\n */\r\nexport class DDSTextureInfo {\r\n\r\n    width: number;\r\n    height: number;\r\n    mipmapCount: number;\r\n    isCube: boolean;\r\n    bpp: number;\r\n    blockBytes: number;\r\n    format: TextureFormat;\r\n    compressed: boolean;\r\n    dataOffset: number;\r\n    source: ArrayBuffer;\r\n\r\n    constructor(width: number, height: number, mipmapCount: number, isCube: boolean, bpp: number, blockBytes: number, dataOffset: number, format: TextureFormat, compressed: boolean, sourceData: ArrayBuffer) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.mipmapCount = mipmapCount;\r\n        this.isCube = isCube;\r\n        this.blockBytes = blockBytes;\r\n        this.dataOffset = dataOffset;\r\n        this.format = format;\r\n        this.source = sourceData;\r\n        this.bpp = bpp;\r\n        this.compressed = compressed;\r\n    }\r\n\r\n    static getDDSTextureInfo(source: ArrayBuffer): DDSTextureInfo {\r\n        let header = new Int32Array(source, 0, DDS_HEADER_LENGTH);\r\n\r\n        let width = header[DDS_HEADER_WIDTH];\r\n        let height = header[DDS_HEADER_HEIGHT];\r\n\r\n        let mipmapCount = 1;\r\n        if (header[DDS_HEADER_FLAGS] & DDSD_MIPMAPCOUNT) {\r\n            mipmapCount = Math.max(1, header[DDS_HEADER_MIPMAPCOUNT]);\r\n        }\r\n\r\n        let fourCC = header[DDS_HEADER_PF_FOURCC];\r\n\r\n        // let extendedHeader = new Int32Array(source, 0, DDS_HEADER_LENGTH + 4);\r\n        // let dxgiFormat = (fourCC == FOURCC_DX10) ? header[32] : 0;\r\n\r\n        let isFourCC = (header[DDS_HEADER_PF_FLAGS] & DDPF_FOURCC) === DDPF_FOURCC;\r\n\r\n        let isRGB = (header[DDS_HEADER_PF_FLAGS] & DDPF_RGB) === DDPF_RGB;\r\n        let isLuminance = (header[DDS_HEADER_PF_FLAGS] & DDPF_LUMINANCE) === DDPF_LUMINANCE;\r\n        let isCube = (header[DDS_HEADER_PF_CAPS2] & DDSCAPS2_CUBEMAP) === DDSCAPS2_CUBEMAP;\r\n        let isCompressed = (fourCC === FOURCC_DXT1 || fourCC === FOURCC_DXT3 || fourCC === FOURCC_DXT5);\r\n\r\n        let layaTexFormat = TextureFormat.DXT1;\r\n        let dataOffset = header[DDS_HEADER_SIZE] + 4;\r\n        let blockBytes = 1;\r\n        // todo  DXT10  unCompressed texture ?\r\n        switch (fourCC) {\r\n            case FOURCC_DXT1:\r\n                layaTexFormat = TextureFormat.DXT1;\r\n                blockBytes = 8;\r\n                break;\r\n            case FOURCC_DXT3:\r\n                layaTexFormat = TextureFormat.DXT3;\r\n                blockBytes = 16;\r\n                break;\r\n            case FOURCC_DXT4:\r\n            case FOURCC_DXT5:\r\n                layaTexFormat = TextureFormat.DXT5;\r\n                blockBytes = 16;\r\n                break;\r\n            case FOURCC_D3DFMT_R16G16B16A16F:\r\n                layaTexFormat = TextureFormat.R16G16B16A16;\r\n                blockBytes = 4;\r\n                break;\r\n            case FOURCC_D3DFMT_R32G32B32A32F:\r\n                layaTexFormat = TextureFormat.R32G32B32A32;\r\n                blockBytes = 4;\r\n                break;\r\n            default:\r\n                throw \"Unsupported format \" + Int32ToFourCC(fourCC)\r\n        }\r\n\r\n        if (header[DDS_HEADER_MAGIC] !== DDS_MAGIC) {\r\n            throw \"Invalid magic number in DDS header\";\r\n        }\r\n        if (!isFourCC && !isRGB && !isLuminance) {\r\n            throw \"Unsupported format, must contain a FourCC, RGB or LUMINANCE code\";\r\n        }\r\n\r\n        let ext = LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC) || LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB);\r\n\r\n        if (isCompressed && !ext) {\r\n            throw \"Compressed textures are not supported on this platform.\";\r\n        }\r\n\r\n        return new DDSTextureInfo(width, height, mipmapCount, isCube, 0, blockBytes, dataOffset, layaTexFormat, isCompressed, source);\r\n    }\r\n\r\n}","\r\nexport enum TextureDimension {\r\n    Tex2D,\r\n    Cube,\r\n    Tex3D,\r\n    Texture2DArray,\r\n    CubeArray,\r\n    Unkonw,\r\n    None\r\n}","import { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\n\r\nconst KTX1FileIdentifier = [\r\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\r\n];\r\n\r\nconst KTX2FileIdentifier = [\r\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x32, 0x30, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\r\n];\r\n\r\nconst IdentifierByteSize = 12;\r\nconst HeaderSize = 13;\r\n\r\n/** etc1 */\r\nconst COMPRESSED_RGB_ETC1_WEBGL = 36196;\r\n\r\n/** etc2 */\r\nconst COMPRESSED_R11_EAC = 37488;\r\nconst COMPRESSED_RG11_EAC = 37490;\r\nconst COMPRESSED_RGB8_ETC2 = 37492;\r\nconst COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494;\r\nconst COMPRESSED_RGBA8_ETC2_EAC = 37496;\r\nconst COMPRESSED_SIGNED_R11_EAC = 37489;\r\nconst COMPRESSED_SIGNED_RG11_EAC = 37491;\r\nconst COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497;\r\nconst COMPRESSED_SRGB8_ETC2 = 37493;\r\nconst COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495;\r\n\r\n/** astc */\r\nconst COMPRESSED_RGBA_ASTC_4x4_KHR = 37808;\r\nconst COMPRESSED_RGBA_ASTC_5x4_KHR = 37809;\r\nconst COMPRESSED_RGBA_ASTC_5x5_KHR = 37810;\r\nconst COMPRESSED_RGBA_ASTC_6x5_KHR = 37811;\r\nconst COMPRESSED_RGBA_ASTC_6x6_KHR = 37812;\r\nconst COMPRESSED_RGBA_ASTC_8x5_KHR = 37813;\r\nconst COMPRESSED_RGBA_ASTC_8x6_KHR = 37814;\r\nconst COMPRESSED_RGBA_ASTC_8x8_KHR = 37815;\r\nconst COMPRESSED_RGBA_ASTC_10x5_KHR = 37816;\r\nconst COMPRESSED_RGBA_ASTC_10x6_KHR = 37817;\r\nconst COMPRESSED_RGBA_ASTC_10x8_KHR = 37818;\r\nconst COMPRESSED_RGBA_ASTC_10x10_KHR = 37819;\r\nconst COMPRESSED_RGBA_ASTC_12x10_KHR = 37820;\r\nconst COMPRESSED_RGBA_ASTC_12x12_KHR = 37821;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 37840;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 37841;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 37842;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 37843;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 37844;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 37845;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 37846;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 37847;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 37848;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 37849;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 37850;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 37851;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 37852;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 37853;\r\n\r\n/** pvr */\r\n// todo\r\n\r\n\r\n/** gl param for unCompressed image data*/\r\nconst GL_FORMAT_RGBA = 6408;\r\nconst GL_FORMAT_RGB = 6407;\r\nconst GL_FORMAT_RGBA32F = 0x8814;\r\nconst GL_FORMAT_RGB32F = 0x8815;\r\nconst GL_FORMAT_RGBA16F = 0x881A;\r\nconst GL_FORMAT_RGB16F = 0x881B;\r\nconst GL_FORMAT_SRGB8 = 0x8C41;\r\n\r\nconst GL_INTERNALFORMAT_RGBA8 = 0x8058;\r\nconst GL_INTERNALFORMAT_RGB8 = 0x8051;\r\nconst GL_INTERNALFORMAT_SRGB8_ALPHA8 = 0x8C43;\r\nconst GL_INTERNALFORMAT_R11F_G11F_B10F = 0x8C3A;\r\n\r\n// gl data type\r\nconst GL_DATATYPE_BYTE = 0x1400;\r\nconst GL_DATATYPE_UNSIGNED_BYTE = 0x1401;\r\nconst GL_DATATYPE_SHORT = 0x1402;\r\nconst GL_DATATYPE_UNSIGNED_SHORT = 0x1403;\r\nconst GL_DATATYPE_INT = 0x1404;\r\nconst GL_DATATYPE_UNSIGNED_INT = 0x1405;\r\nconst GL_DATATYPE_FLOAT = 0x1406;\r\nconst GL_DATATYPE_HALF_FLOAT = 0x140b;\r\n\r\n/**\r\n * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\r\n * https://www.khronos.org/registry/KTX/specs/2.0/ktxspec_v2.html\r\n */\r\nexport class KTXTextureInfo {\r\n\r\n    static getLayaFormat(glFormat: number, glInternalFormat: number, glType: number, glTypeSize: number): { format: TextureFormat, sRGB: boolean } {\r\n\r\n        if (glFormat == 0) {\r\n            switch (glInternalFormat) {\r\n                /** etc1 */\r\n                case COMPRESSED_RGB_ETC1_WEBGL:\r\n                    return { format: TextureFormat.ETC1RGB, sRGB: false };\r\n                /** etc2 */\r\n                // todo etc2 其他格式\r\n                case COMPRESSED_RGBA8_ETC2_EAC:\r\n                    return { format: TextureFormat.ETC2RGBA, sRGB: false };\r\n                case COMPRESSED_RGB8_ETC2:\r\n                    return { format: TextureFormat.ETC2RGB, sRGB: false };\r\n                case COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:\r\n                    return { format: TextureFormat.ETC2SRGB_Alpha8, sRGB: true };\r\n                case COMPRESSED_SRGB8_ETC2:\r\n                    return { format: TextureFormat.ETC2SRGB, sRGB: true };\r\n\r\n                /** astc */\r\n                // todo astc 其他格式\r\n                case COMPRESSED_RGBA_ASTC_4x4_KHR:\r\n                    return { format: TextureFormat.ASTC4x4, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_6x6_KHR:\r\n                    return { format: TextureFormat.ASTC6x6, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_8x8_KHR:\r\n                    return { format: TextureFormat.ASTC8x8, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_10x10_KHR:\r\n                    return { format: TextureFormat.ASTC10x10, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_12x12_KHR:\r\n                    return { format: TextureFormat.ASTC12x12, sRGB: false };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:\r\n                    return { format: TextureFormat.ASTC4x4SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:\r\n                    return { format: TextureFormat.ASTC6x6SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:\r\n                    return { format: TextureFormat.ASTC8x8SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:\r\n                    return { format: TextureFormat.ASTC10x10SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:\r\n                    return { format: TextureFormat.ASTC12x12SRGB, sRGB: true };\r\n                default:\r\n                    throw \"KTX: UnSupported Compressed format.\";\r\n            }\r\n        }\r\n        else {\r\n            if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_RGBA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8A8, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_SRGB8_ALPHA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8A8, sRGB: true };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA32F && glType == GL_DATATYPE_FLOAT) {\r\n                return { format: TextureFormat.R32G32B32A32, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA16F && glType == GL_DATATYPE_HALF_FLOAT) {\r\n                return { format: TextureFormat.R16G16B16A16, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB32F && glType == GL_DATATYPE_FLOAT) {\r\n                return { format: TextureFormat.R32G32B32, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB16F && glType == GL_DATATYPE_HALF_FLOAT) {\r\n                return { format: TextureFormat.R16G16B16, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_SRGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8, sRGB: true };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_INTERNALFORMAT_RGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8, sRGB: false };\r\n            }\r\n            else {\r\n                throw \"ktx: Unsupported UnCompressed image data.\";\r\n            }\r\n        }\r\n    }\r\n\r\n    static getKTXTextureInfo(source: ArrayBuffer): KTXTextureInfo {\r\n\r\n\r\n        let FileIdentifier = new Uint8Array(source, 0, 12);\r\n\r\n        // ktx2\r\n        if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x32 && FileIdentifier[6] === 0x30 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\r\n            throw \"ktx2 !\"\r\n        }\r\n        // ktx1\r\n        else if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x31 && FileIdentifier[6] === 0x31 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\r\n            return KTXTextureInfo.createKTX1Info(source);\r\n        }\r\n        else {\r\n            throw \"ktx data wrong, not ktx1 or ktx2 buffer!\";\r\n        }\r\n    }\r\n\r\n    static createKTX1Info(source: ArrayBuffer): KTXTextureInfo {\r\n\r\n        let dataSize = Uint32Array.BYTES_PER_ELEMENT;\r\n\r\n        let headerDataView = new DataView(source, IdentifierByteSize, dataSize * HeaderSize);\r\n\r\n        let endianness = headerDataView.getUint32(0, true);\r\n        let littleEndian = endianness == 0x04030201;\r\n\r\n        // header\r\n        let glType = headerDataView.getUint32(1 * dataSize, littleEndian);\r\n        let glTypeSize = headerDataView.getUint32(2 * dataSize, littleEndian);\r\n        let glFormat = headerDataView.getUint32(3 * dataSize, littleEndian);\r\n        let glInternalFormat = headerDataView.getUint32(4 * dataSize, littleEndian);\r\n        let glBaseInternalFormat = headerDataView.getUint32(5 * dataSize, littleEndian);\r\n        let pixelWidth = headerDataView.getUint32(6 * dataSize, littleEndian);\r\n        let pixelHeight = headerDataView.getUint32(7 * dataSize, littleEndian);\r\n        let pixelDepth = headerDataView.getUint32(8 * dataSize, littleEndian);\r\n        let numberOfArrayElements = headerDataView.getUint32(9 * dataSize, littleEndian);\r\n        let numberOfFaces = headerDataView.getUint32(10 * dataSize, littleEndian);\r\n        let numberOfMipmapLevels = headerDataView.getUint32(11 * dataSize, littleEndian);\r\n        let bytesOfKeyValueData = headerDataView.getUint32(12 * dataSize, littleEndian);\r\n        let compressed = glType == 0;\r\n\r\n        let formatInfo = KTXTextureInfo.getLayaFormat(glFormat, glInternalFormat, glType, glTypeSize);\r\n        let layaFormat = formatInfo.format;\r\n        let sRGBData = formatInfo.sRGB;\r\n\r\n        // todo  3d texture\r\n        let layaDemision = TextureDimension.Tex2D;\r\n        if (numberOfFaces > 1 && numberOfArrayElements > 1) {\r\n            layaDemision = TextureDimension.CubeArray;\r\n        }\r\n        else if (numberOfFaces > 1 && numberOfArrayElements <= 1) {\r\n            layaDemision = TextureDimension.Cube;\r\n        }\r\n        else if (numberOfFaces <= 1 && numberOfArrayElements > 1) {\r\n            layaDemision = TextureDimension.Texture2DArray;\r\n        }\r\n\r\n        let headerOffset = IdentifierByteSize + HeaderSize * 4;\r\n\r\n        return new KTXTextureInfo(source, glFormat == 0, sRGBData, layaDemision, pixelWidth, pixelHeight, layaFormat, numberOfMipmapLevels || 1, bytesOfKeyValueData, headerOffset);\r\n\r\n    }\r\n\r\n\r\n    constructor(public source: ArrayBuffer, public compress: boolean, public sRGB: boolean, public dimension: TextureDimension, public width: number, public height: number, public format: TextureFormat, public mipmapCount: number, public bytesOfKeyValueData: number, public headerOffset: number) {\r\n\r\n    }\r\n\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Byte } from \"../utils/Byte\";\r\nimport { HalfFloatUtils } from \"../utils/HalfFloatUtils\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nexport interface TexturePropertyParams {\r\n    wrapModeU?: number,\r\n    wrapModeV?: number,\r\n    filterMode?: FilterMode,\r\n    anisoLevel?: number,\r\n    premultiplyAlpha?: boolean,\r\n    hdrEncodeFormat?: HDREncodeFormat,\r\n}\r\n\r\nexport type TextureConstructParams = ConstructorParameters<typeof Texture2D>;\r\n\r\n/**\r\n * <code>Texture2D</code> 类用于生成2D纹理。\r\n */\r\nexport class Texture2D extends BaseTexture {\r\n    /**Texture2D资源。*/\r\n    static TEXTURE2D: string = \"TEXTURE2D\";\r\n\r\n    /**纯灰色纹理。*/\r\n    static grayTexture: Texture2D = null;\r\n    /**纯白色纹理。*/\r\n    static whiteTexture: Texture2D = null;\r\n    /**纯黑色纹理。*/\r\n    static blackTexture: Texture2D = null;\r\n    /**默认法线纹理 */\r\n    static normalTexture: Texture2D = null;\r\n    /**错误纹理 */\r\n    static errorTexture: Texture2D = null;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__() {\r\n        var pixels: Uint8Array = new Uint8Array(4);\r\n        pixels[0] = 128;\r\n        pixels[1] = 128;\r\n        pixels[2] = 128;\r\n        pixels[3] = 255;\r\n        Texture2D.grayTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.grayTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.grayTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.grayTexture.name = \"Default_Gray\";\r\n        pixels[0] = 255;\r\n        pixels[1] = 255;\r\n        pixels[2] = 255;\r\n        pixels[3] = 255;\r\n        Texture2D.whiteTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.whiteTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.whiteTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.whiteTexture.name = \"Default_White\";\r\n        pixels[0] = 0;\r\n        pixels[1] = 0;\r\n        pixels[2] = 0;\r\n        pixels[3] = 255;\r\n        Texture2D.blackTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.blackTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.blackTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.blackTexture.name = \"Default_Black\";\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\r\n            let floatPixle = new Uint16Array(4);\r\n            floatPixle[0] = 14336;\r\n            floatPixle[1] = 14336;\r\n            floatPixle[2] = 15360;\r\n            floatPixle[3] = 15360;\r\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R16G16B16A16, false, false, false);\r\n            Texture2D.normalTexture.setPixelsData(floatPixle, false, false);\r\n        }\r\n        else {\r\n            pixels[0] = 128;\r\n            pixels[1] = 128;\r\n            pixels[2] = 255;\r\n            pixels[3] = 255;\r\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false, false);\r\n            Texture2D.normalTexture.setPixelsData(pixels, false, false);\r\n        }\r\n\r\n        Texture2D.normalTexture.lock = true;\r\n        Texture2D.normalTexture.name = \"Default_Normal\";\r\n        Texture2D.errorTexture = Texture2D.whiteTexture;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _SimpleAnimatorTextureParse(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n        var byte: Byte = new Byte(data);\r\n        var version: String = byte.readUTFString();\r\n        var texture: Texture2D;\r\n        var pixelDataArrays: Float32Array | Uint16Array;\r\n        var usePixelData: Float32Array | Uint16Array;\r\n        switch (version) {\r\n            case \"LAYAANIMATORTEXTURE:0000\":\r\n                var textureWidth: number = byte.readInt32();\r\n                var pixelDataLength: number = byte.readInt32();\r\n                pixelDataArrays = new Float32Array(textureWidth * textureWidth * 4);\r\n                usePixelData = new Float32Array(byte.readArrayBuffer(pixelDataLength * 4));\r\n                pixelDataArrays.set(usePixelData, 0);\r\n                var texture: Texture2D = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\r\n                texture.setPixelsData(pixelDataArrays, false, false);\r\n                texture.filterMode = FilterMode.Point;\r\n                break;\r\n            case \"LAYACOMPRESSANIMATORTEXTURE:0000\":\r\n                var textureWidth: number = byte.readInt32();\r\n                var pixelDataLength: number = byte.readInt32();\r\n                pixelDataArrays = new Uint16Array(byte.readArrayBuffer(pixelDataLength * 2));\r\n                if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\r\n                    console.log(\"The platform does not support 16-bit floating-point textures\");\r\n                    if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R32G32B32A32))\r\n                        console.error(\"The platform does not support 32-bit floating-point textures\");\r\n                    usePixelData = new Float32Array(textureWidth * textureWidth * 4);\r\n                    for (var i = 0, n = pixelDataArrays.length; i < n; i++) {\r\n                        usePixelData[i] = HalfFloatUtils.convertToNumber(pixelDataArrays[i]);\r\n                    }\r\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\r\n                    texture.setPixelsData(usePixelData, false, false);\r\n                    texture.filterMode = FilterMode.Point;\r\n\r\n                } else {\r\n                    usePixelData = new Uint16Array(textureWidth * textureWidth * 4);\r\n                    usePixelData.set(pixelDataArrays, 0);\r\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R16G16B16A16, false, false);\r\n                    texture.setPixelsData(usePixelData, false, false);\r\n                    texture.filterMode = FilterMode.Point;\r\n                }\r\n                break;\r\n            default:\r\n                throw \"Laya3D:unknow version.\";\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param imageSource \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseImage(imageSource: any, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\r\n\r\n        let format = constructParams ? constructParams[2] : TextureFormat.R8G8B8A8;\r\n        let mipmap = constructParams ? constructParams[3] : true;\r\n        let canread = constructParams ? constructParams[4] : false;\r\n        let srgb = constructParams ? constructParams[5] : false;\r\n        let pma = propertyParams ? propertyParams.premultiplyAlpha : false;\r\n        // todo  srgb\r\n        let texture = new Texture2D(imageSource.width, imageSource.height, format, mipmap, canread, srgb, pma);\r\n\r\n        if (propertyParams) {\r\n            texture.setImageData(imageSource, pma, false);\r\n            texture.setProperties(propertyParams);\r\n        }\r\n        else\r\n            texture.setImageData(imageSource, false, false);\r\n\r\n        if (canread) {\r\n            if (LayaEnv.isConch && imageSource._nativeObj) {\r\n                texture._pixels = new Uint8Array(imageSource._nativeObj.getImageData(0, 0, imageSource.width, imageSource.height));\r\n            } else {\r\n                ILaya.Browser.canvas.size(imageSource.width, imageSource.height);\r\n                ILaya.Browser.canvas.clear();\r\n                ILaya.Browser.context.drawImage(imageSource, 0, 0, imageSource.width, imageSource.height);\r\n                texture._pixels = new Uint8Array(ILaya.Browser.context.getImageData(0, 0, imageSource.width, imageSource.height).data.buffer);\r\n            }\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseDDS(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n\r\n        let ddsInfo = DDSTextureInfo.getDDSTextureInfo(data);\r\n\r\n        let texture = new Texture2D(ddsInfo.width, ddsInfo.height, ddsInfo.format, ddsInfo.mipmapCount > 1, false, false);\r\n\r\n        texture.setDDSData(ddsInfo);\r\n        if (propertyParams)\r\n            texture.setProperties(propertyParams);\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseKTX(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\r\n\r\n        let texture = new Texture2D(ktxInfo.width, ktxInfo.height, ktxInfo.format, ktxInfo.mipmapCount > 1, false, ktxInfo.sRGB);\r\n\r\n        texture.setKTXData(ktxInfo);\r\n        if (propertyParams)\r\n            texture.setProperties(propertyParams);\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     */\r\n    static _parsePVR(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\r\n        throw \"pvr !\";\r\n    }\r\n\r\n    /**\r\n     * 加载纹理\r\n     * @param url 路径\r\n     * @param complete 处理时间\r\n     */\r\n    static load(url: string, complete: Handler): void {\r\n        ILaya.loader.load(url, complete, null, ILaya.Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**@internal */\r\n    _canRead: boolean = false;\r\n    /**@internal */\r\n    _pixels: Uint8Array;\r\n\r\n    /**\r\n     * 实例化2D纹理\r\n     * @param width \r\n     * @param height \r\n     * @param format \r\n     * @param mipmap \r\n     * @param canRead \r\n     * @param sRGB \r\n     * @returns \r\n     */\r\n    constructor(width: number, height: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Tex2D;\r\n        this._gammaSpace = sRGB;\r\n        this._canRead = canRead;\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, width, height, format, mipmap, sRGB, premultiplyAlpha);\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 设置Image数据\r\n     * @param source Image原始数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setImageData(source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureImageData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素数据\r\n     * @param source 像素数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素值\r\n     * @param xOffset offset X\r\n     * @param yOffset offset Y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param pixels 像素\r\n     * @param mipmapLevel mipmap等级\r\n     * @param generateMipmap 生成mipmap\r\n     * @param premultiplyAlpha 预乘\r\n     * @param invertY 翻转Y\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, width: number, height: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置dds数据\r\n     * @param ddsInfo \r\n     */\r\n    setDDSData(ddsInfo: DDSTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    /**\r\n     * 设置ktx数据\r\n     * @param ktxInfo \r\n     */\r\n    setKTXData(ktxInfo: KTXTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    /**\r\n     * 设置HDR数据\r\n     * @param hdrInfo \r\n     */\r\n    setHDRData(hdrInfo: HDRTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureHDRData(texture, hdrInfo);\r\n    }\r\n\r\n    /**\r\n     * 默认贴图\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * 获得像素\r\n     * @returns \r\n     */\r\n    getPixels() {\r\n        if (this._canRead && this._pixels) {\r\n            return this._pixels;\r\n        }\r\n        else {\r\n            throw new Error(\"Texture2D: must set texture canRead is true.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param propertyParams \r\n     */\r\n    private setProperties(propertyParams: TexturePropertyParams) {\r\n        if (propertyParams) {\r\n            if (propertyParams.wrapModeU != null) this.wrapModeU = propertyParams.wrapModeU;\r\n            if (propertyParams.wrapModeV != null) this.wrapModeV = propertyParams.wrapModeV;\r\n            if (propertyParams.filterMode != null) this.filterMode = propertyParams.filterMode;\r\n            if (propertyParams.anisoLevel != null) this.anisoLevel = propertyParams.anisoLevel;\r\n        }\r\n    }\r\n}","import { Resource } from \"../../resource/Resource\"\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nexport class BaseShader extends Resource {\r\n    static activeShader: BaseShader|null;\t\t\t//等于bindShader或者null\r\n    static bindShader: BaseShader;\t\t\t//当前绑定的shader\r\n\r\n    constructor() {\r\n        super();\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Matrix } from \"../../maths/Matrix\"\r\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\r\n\r\nexport class RenderState2D {\r\n    static _MAXSIZE: number = 99999999;\r\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\r\n    static EMPTYMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static TEMPMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static worldMatrix4: number[] = RenderState2D.TEMPMAT4_ARRAY;\r\n\r\n    static worldMatrix: Matrix = new Matrix();\r\n    static matWVP: any = null;// :Matrix4x4 = Matrix4x4.DEFAULT;\t\t// 3d矩阵\r\n    static worldAlpha: number = 1.0;\r\n\r\n    static worldScissorTest: boolean = false;\r\n\r\n    //public static var worldClipRect:Rectangle = new Rectangle(0, 0, _MAXSIZE, _MAXSIZE);\r\n    static worldShaderDefines: ShaderDefines2D;\r\n    static worldFilters: any[];\r\n\r\n    static width: number = 0;\r\n    static height: number = 0;\r\n\r\n    static InvertY:boolean = false;\r\n    /* 不知道 有什么用，删掉先\r\n    public static function getMatrArray():Array {\r\n        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    }\r\n    */\r\n    //TODO:coverage\r\n    static mat2MatArray(mat: Matrix, matArray: any[]): any[] {\r\n        var m: Matrix = mat;\r\n        var m4: any[] = matArray;\r\n        m4[0] = m.a;\r\n        m4[1] = m.b;\r\n        m4[2] = RenderState2D.EMPTYMAT4_ARRAY[2];\r\n        m4[3] = RenderState2D.EMPTYMAT4_ARRAY[3];\r\n        m4[4] = m.c;\r\n        m4[5] = m.d;\r\n        m4[6] = RenderState2D.EMPTYMAT4_ARRAY[6];\r\n        m4[7] = RenderState2D.EMPTYMAT4_ARRAY[7];\r\n        m4[8] = RenderState2D.EMPTYMAT4_ARRAY[8];\r\n        m4[9] = RenderState2D.EMPTYMAT4_ARRAY[9];\r\n        m4[10] = RenderState2D.EMPTYMAT4_ARRAY[10];\r\n        m4[11] = RenderState2D.EMPTYMAT4_ARRAY[11];\r\n        m4[12] = m.tx;\r\n        m4[13] = m.ty;\r\n        m4[14] = RenderState2D.EMPTYMAT4_ARRAY[14];\r\n        m4[15] = RenderState2D.EMPTYMAT4_ARRAY[15];\r\n        return matArray;\r\n    }\r\n\r\n    static restoreTempArray(): void {\r\n        RenderState2D.TEMPMAT4_ARRAY[0] = 1;\r\n        RenderState2D.TEMPMAT4_ARRAY[1] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[4] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[5] = 1;\r\n        RenderState2D.TEMPMAT4_ARRAY[12] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[13] = 0;\r\n    }\r\n\r\n    static clear(): void {\r\n        RenderState2D.worldScissorTest = false;\r\n        //worldFilters = null;\r\n        RenderState2D.worldAlpha = 1;\r\n        //worldClipRect.x = worldClipRect.y = 0;\r\n        //worldClipRect.width = width;\r\n        //worldClipRect.height = height;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { TextureFormat } from \"./TextureFormat\";\r\n\r\nexport enum RenderTargetFormat {\r\n \r\n    None = -1,\r\n    /**使用RGB的纹理，不可设置SRGB参数 */\r\n    R8G8B8 = TextureFormat.R8G8B8,\r\n    R8G8B8A8 = TextureFormat.R8G8B8A8,\r\n    R16G16B16A16 = TextureFormat.R16G16B16A16,\r\n    R32G32B32 = TextureFormat.R32G32B32,\r\n    R32G32B32A32 = TextureFormat.R32G32B32A32,\r\n    R16G16B16 = TextureFormat.R16G16B16,\r\n    \r\n    DEPTH_16 = 35,\r\n    STENCIL_8 = 36,\r\n    DEPTHSTENCIL_24_8 = 37,\r\n    DEPTH_32 = 38,\r\n    DEPTHSTENCIL_24_Plus = 39\r\n}","export enum RenderClearFlag{\r\n    Nothing = 0,\r\n    Color = 1,\r\n    Depth = 2,\r\n    Stencil = 4,\r\n}","export enum BlendFactor {\r\n    /** (0, 0, 0, 0)*/\r\n    Zero,\r\n    /** (1, 1, 1, 1)*/\r\n    One,\r\n    /** (Rs, Gs, Bs, As) */\r\n    SourceColor,\r\n    /** (1 - Rs, 1 - Gs, 1 - Bs, 1 - As)*/\r\n    OneMinusSourceColor,\r\n    /** (Rd, Gd, Bd, Ad)*/\r\n    DestinationColor,\r\n    /** (1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad)*/\r\n    OneMinusDestinationColor,\r\n    /** (As, As, As, As)*/\r\n    SourceAlpha,\r\n    /** (1 - As, 1 - As, 1 - As, 1 - As)*/\r\n    OneMinusSourceAlpha,\r\n    /** (Ad, Ad, Ad, Ad)*/\r\n    DestinationAlpha,\r\n    /** (1 - Ad, 1 - Ad, 1 - Ad, 1 - Ad)*/\r\n    OneMinusDestinationAlpha,\r\n    /** (min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad), 10)*/\r\n    SourceAlphaSaturate,\r\n    /** (Rc, Gc, Bc, Ac)*/\r\n    BlendColor,\r\n    /** (1 - Rc, 1 - Gc, 1 - Bc, 1 - Ac)*/\r\n    OneMinusBlendColor\r\n  }","import { IClone } from \"../utils/IClone\";\r\n\r\n/**\r\n * <code>Color</code> 类用于创建颜色实例。\r\n */\r\nexport class Color implements IClone {\r\n    /**\r\n     * 红色\r\n     */\r\n    static RED: Color = new Color(1, 0, 0, 1);\r\n    /**\r\n     * 绿色\r\n     */\r\n    static GREEN: Color = new Color(0, 1, 0, 1);\r\n    /**\r\n     * 蓝色\r\n     */\r\n    static BLUE: Color = new Color(0, 0, 1, 1);\r\n    /**\r\n     * 蓝绿色\r\n     */\r\n    static CYAN: Color = new Color(0, 1, 1, 1);\r\n    /**\r\n     * 黄色\r\n     */\r\n    static YELLOW: Color = new Color(1, 0.92, 0.016, 1);\r\n    /**\r\n     * 品红色\r\n     */\r\n    static MAGENTA: Color = new Color(1, 0, 1, 1);\r\n    /**\r\n     * 灰色\r\n     */\r\n    static GRAY: Color = new Color(0.5, 0.5, 0.5, 1);\r\n    /**\r\n     * 白色\r\n     */\r\n    static WHITE: Color = new Color(1, 1, 1, 1);\r\n    /**\r\n     * 黑色\r\n     */\r\n    static BLACK: Color = new Color(0, 0, 0, 1);\r\n    /**\r\n     * 全透明\r\n     */\r\n    static CLEAR: Color = new Color(0, 0, 0, 0);\r\n\r\n    /**\r\n     * Gamma空间值转换到线性空间。\r\n     * @param value gamma空间值。\r\n     */\r\n    static gammaToLinearSpace(value: number): number {\r\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\r\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\r\n        // {  cs / 12.92,                 cs <= 0.04045 }\r\n        // {  ((cs + 0.055)/1.055)^2.4,   cs >  0.04045 }\r\n        if (value <= 0.04045)\r\n            return value / 12.92;\r\n        else if (value < 1.0)\r\n            return Math.pow((value + 0.055) / 1.055, 2.4);\r\n        else\r\n            return Math.pow(value, 2.4);\r\n    }\r\n\r\n    /**\r\n     * 线性空间值转换到Gamma空间。\r\n     * @param value 线性空间值。\r\n     */\r\n    static linearToGammaSpace(value: number): number {\r\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\r\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\r\n        // {  0.0,                          0         <= cl\r\n        // {  12.92 * c,                    0         <  cl < 0.0031308\r\n        // {  1.055 * cl^0.41666 - 0.055,   0.0031308 <= cl < 1\r\n        // {  1.0,                                       cl >= 1  <- This has been adjusted since we want to maintain HDR colors\r\n        if (value <= 0.0)\r\n            return 0.0;\r\n        else if (value <= 0.0031308)\r\n            return 12.92 * value;\r\n        else if (value <= 1.0)\r\n            return 1.055 * Math.pow(value, 0.41666) - 0.055;\r\n        else\r\n            return Math.pow(value, 0.41666);\r\n    }\r\n\r\n\r\n    /**red分量*/\r\n    r: number;\r\n\r\n    /**green分量*/\r\n    g: number;\r\n\r\n    /**blue分量*/\r\n    b: number;\r\n\r\n    /**alpha分量*/\r\n    a: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Color</code> 实例。\r\n     * @param\tr  颜色的red分量。\r\n     * @param\tg  颜色的green分量。\r\n     * @param\tb  颜色的blue分量。\r\n     * @param\ta  颜色的alpha分量。\r\n     */\r\n    constructor(r: number = 1, g: number = 1, b: number = 1, a: number = 1) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    equal(c: Color): boolean {\r\n        if (!c) return false;\r\n        const toFIxed = (a: number, b: number) => {\r\n            var delta = 1e-5;\r\n            return -delta < a - b && a - b < delta;\r\n        }\r\n        return toFIxed(c.r, this.r) && toFIxed(c.g, this.g) && toFIxed(c.b, this.b) && toFIxed(c.a, this.a);\r\n    }\r\n\r\n    /**\r\n     * Gamma空间转换到线性空间。\r\n     * @param\tlinear 线性空间颜色。\r\n     */\r\n    toLinear(out: Color): void {\r\n        out.r = Color.gammaToLinearSpace(this.r);\r\n        out.g = Color.gammaToLinearSpace(this.g);\r\n        out.b = Color.gammaToLinearSpace(this.b);\r\n        out.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * 线性空间转换到Gamma空间。\r\n     * @param\tgamma Gamma空间颜色。\r\n     */\r\n    toGamma(out: Color): void {\r\n        out.r = Color.linearToGammaSpace(this.r);\r\n        out.g = Color.linearToGammaSpace(this.g);\r\n        out.b = Color.linearToGammaSpace(this.b);\r\n        out.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destColor: Color = (<Color>destObject);\r\n        destColor.r = this.r;\r\n        destColor.g = this.g;\r\n        destColor.b = this.b;\r\n        destColor.a = this.a;\r\n    }\r\n\r\n    scale(value: number): Color {\r\n        this.r = this.r * value;\r\n        this.g = this.g * value;\r\n        this.b = this.b * value;\r\n        return this;\r\n    }\r\n\r\n    setValue(r: number, g: number, b: number, a: number) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: any[], offset: number = 0): void {\r\n        this.r = array[offset + 0];\r\n        this.g = array[offset + 1];\r\n        this.b = array[offset + 2];\r\n        this.a = array[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.r, this.g, this.b, this.a];\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Color = new Color();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n}\r\n\r\n\r\n","import { Texture2D } from \"./Texture2D\";\r\nimport { BaseTexture } from \"./BaseTexture\"\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>RenderTexture</code> 类用于创建渲染目标。\r\n */\r\nexport class NativeRenderTexture2D extends BaseTexture implements IRenderTarget {\r\n    /** @private */\r\n    private static _currentActive: NativeRenderTexture2D;\r\n    private static _clearColor: Color = new Color(0, 0, 0, 0);\r\n    private _lastRT: NativeRenderTexture2D;\r\n    private _lastWidth: number;\r\n    private _lastHeight: number;\r\n\r\n    //为push,pop 用的。以后和上面只保留一份。\r\n    //由于可能递归，所以不能简单的用save，restore\r\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\r\n\r\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\r\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\r\n    /**\r\n     * 获取当前激活的Rendertexture\r\n     */\r\n    static get currentActive(): NativeRenderTexture2D {\r\n        return NativeRenderTexture2D._currentActive;\r\n    }\r\n\r\n    /** @private */\r\n    private _depthStencilFormat: number;\r\n\r\n    private _colorFormat: RenderTargetFormat;\r\n\r\n    /**@internal */\r\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\r\n\r\n    /**\r\n     * 获取深度格式。\r\n     *@return 深度格式。\r\n     */\r\n    get depthStencilFormat(): number {\r\n        return this._depthStencilFormat;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    getIsReady(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get sourceWidth(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get sourceHeight(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * 获取offsetX。\r\n     */\r\n    get offsetX(): number {\r\n        return 0;\r\n    }\r\n\r\n    /***\r\n     * 获取offsetY\r\n     */\r\n    get offsetY(): number {\r\n        return 0;\r\n    }\r\n\r\n    depthStencilTexture: BaseTexture;\r\n\r\n    _renderTarget: InternalRenderTarget;\r\n    _isCameraTarget: boolean;\r\n\r\n    private _nativeObj: any;\r\n    /**\r\n     * @param width  宽度。\r\n     * @param height 高度。\r\n     * @param format 纹理格式。\r\n     * @param depthStencilFormat 深度格式。\r\n     * 创建一个 <code>RenderTexture</code> 实例。\r\n     */\r\n    constructor(width: number, height: number, format: number = RenderTargetFormat.R8G8B8, depthStencilFormat: number = RenderTargetFormat.DEPTH_16, create: boolean = true ) {//TODO:待老郭清理\r\n\r\n        super(width, height, format);\r\n        this._colorFormat = format;\r\n        this._depthStencilFormat = depthStencilFormat;\r\n        if (width != 0 && height != 0 && create) {\r\n            this._create();\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    get isCube(): boolean {\r\n        return this._nativeObj.isCube;\r\n    }\r\n\r\n    get samples(): number {\r\n        return this._nativeObj.samples;\r\n    }\r\n\r\n    get generateMipmap(): boolean {\r\n        return this._nativeObj.generateMipmap;\r\n    }\r\n\r\n    _start(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _end(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _create() {\r\n        // todo  mipmap\r\n        this._nativeObj = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, this.width, this.height, this._colorFormat, this.depthStencilFormat);\r\n        this._texture = this._nativeObj._renderTarget._textures[0];\r\n    }\r\n\r\n\r\n    /**\r\n     * 保存当前的RT信息。\r\n     */\r\n    static pushRT(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * 恢复上次保存的RT信息\r\n     */\r\n    static popRT(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * 开始绑定。\r\n     */\r\n    start(): void {\r\n        this._nativeObj.start();\r\n    }\r\n\r\n    /**\r\n     * 结束绑定。\r\n     */\r\n    end(): void {\r\n        this._nativeObj.end();\r\n    }\r\n\r\n    /**\r\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\r\n     */\r\n    restore(): void {\r\n        this._nativeObj.restore();\r\n    }\r\n\r\n\r\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\r\n        this._nativeObj.clear(r, g, b, a);\r\n    }\r\n\r\n\r\n    /**\r\n     * 获得像素数据。\r\n     * @param x X像素坐标。\r\n     * @param y Y像素坐标。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     * @return 像素数据。\r\n     */\r\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return this._nativeObj.getData(x, y, width, height);\r\n    }\r\n    recycle(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @internal\r\n     */\r\n    _disposeResource(): void {\r\n        this._nativeObj._disposeResource();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { Texture2D } from \"./Texture2D\"\r\nimport { BaseTexture } from \"./BaseTexture\"\r\nimport { BaseShader } from \"../webgl/shader/BaseShader\"\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\"\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n/**\r\n * <code>RenderTexture</code> 类用于创建渲染目标。\r\n */\r\nexport class RenderTexture2D extends BaseTexture implements IRenderTarget {\r\n    /** @private */\r\n    private static _currentActive: RenderTexture2D;\r\n    static _clearColor: Color = new Color(0, 0, 0, 0);\r\n    static _clearLinearColor: Color = new Color();\r\n    private _lastRT: RenderTexture2D;\r\n    private _lastWidth: number;\r\n    private _lastHeight: number;\r\n\r\n    //为push,pop 用的。以后和上面只保留一份。\r\n    //由于可能递归，所以不能简单的用save，restore\r\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\r\n    /**\r\n     * 默认uv\r\n     */\r\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\r\n    /**\r\n     * 默认翻转uv\r\n     */\r\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\r\n    /**\r\n     * 获取当前激活的Rendertexture\r\n     */\r\n    static get currentActive(): RenderTexture2D {\r\n        return RenderTexture2D._currentActive;\r\n    }\r\n\r\n    /** @private */\r\n    private _depthStencilFormat: number;\r\n    /** @private */\r\n    private _colorFormat: RenderTargetFormat;\r\n\r\n    /**@internal */\r\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\r\n    /**@internal */\r\n    _invertY: boolean = false;\r\n    /**\r\n     * 获取深度格式。\r\n     *@return 深度格式。\r\n     */\r\n    get depthStencilFormat(): number {\r\n        return this._depthStencilFormat;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    /**\r\n     * RenderTexture2D是否准备好\r\n     * @returns \r\n     */\r\n    getIsReady(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get sourceWidth(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get sourceHeight(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * 获取offsetX。\r\n     */\r\n    get offsetX(): number {\r\n        return 0;\r\n    }\r\n\r\n    /***\r\n     * 获取offsetY\r\n     */\r\n    get offsetY(): number {\r\n        return 0;\r\n    }\r\n    /**深度模板纹理 */\r\n    depthStencilTexture: BaseTexture;\r\n    \r\n    _renderTarget: InternalRenderTarget;\r\n    /**是否是CameraTarget */\r\n    _isCameraTarget: boolean;\r\n\r\n\r\n    /**\r\n     * @param width  宽度。\r\n     * @param height 高度。\r\n     * @param format 纹理格式。\r\n     * @param depthStencilFormat 深度格式。\r\n     * 创建一个 <code>RenderTexture</code> 实例。\r\n     */\r\n    constructor(width: number, height: number, format: RenderTargetFormat = RenderTargetFormat.R8G8B8, depthStencilFormat: RenderTargetFormat = RenderTargetFormat.None) {//TODO:待老郭清理\r\n\r\n        super(width, height, format);\r\n        this._colorFormat = format;\r\n        this._depthStencilFormat = depthStencilFormat;\r\n        if (width != 0 && height != 0) {\r\n            this._create();\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    /**是否是RTCube */\r\n    get isCube(): boolean {\r\n        return this._renderTarget._isCube;\r\n    }\r\n\r\n    /**采样 */\r\n    get samples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    /**\r\n     * 是否生成Mipmap\r\n     */\r\n    get generateMipmap(): boolean {\r\n        return this._renderTarget._generateMipmap;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _start(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _end(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _create() {\r\n        // todo  mipmap\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, this._colorFormat, this.depthStencilFormat, false, false, 1);\r\n        this._texture = this._renderTarget._textures[0];\r\n        this._texture.gammaCorrection = 2.2;\r\n    }\r\n\r\n\r\n    /**\r\n     * 保存当前的RT信息。\r\n     */\r\n    static pushRT(): void {\r\n        RenderTexture2D.rtStack.push({ rt: RenderTexture2D._currentActive, w: RenderState2D.width, h: RenderState2D.height });\r\n    }\r\n    /**\r\n     * 恢复上次保存的RT信息\r\n     */\r\n    static popRT(): void {\r\n        var top: any = RenderTexture2D.rtStack.pop();\r\n        if (top) {\r\n            if (RenderTexture2D._currentActive != top.rt) {\r\n                if (top.rt) {\r\n                    LayaGL.textureContext.bindRenderTarget(top.rt._renderTarget);\r\n                    RenderState2D.InvertY = top.rt._invertY;\r\n                } else {\r\n                    LayaGL.textureContext.bindoutScreenTarget();\r\n                    RenderState2D.InvertY = false;\r\n                }\r\n                RenderTexture2D._currentActive = top.rt;\r\n            }\r\n            LayaGL.renderEngine.viewport(0, 0, top.w, top.h);\r\n            LayaGL.renderEngine.scissor(0, 0, top.w, top.h);\r\n            RenderState2D.width = top.w;\r\n            RenderState2D.height = top.h;\r\n        }\r\n    }\r\n    /**\r\n     * 开始绑定。\r\n     */\r\n    start(): void {\r\n        //(memorySize == 0) && recreateResource();\r\n        LayaGL.textureContext.bindRenderTarget(this._renderTarget);\r\n        this._lastRT = RenderTexture2D._currentActive;\r\n        RenderTexture2D._currentActive = this;\r\n        RenderState2D.InvertY = this._invertY;\r\n        //var gl:LayaGL = LayaGL.instance;//TODO:这段代码影响2D、3D混合\r\n        ////(memorySize == 0) && recreateResource();\r\n        //LayaGL.instance.bindFramebuffer(WebGLContext.FRAMEBUFFER, _frameBuffer);\r\n        //_lastRT = _currentActive;\r\n        //_currentActive = this;\r\n        ////_readyed = false;  \r\n        //_readyed = true;\t//这个没什么用。还会影响流程，比如我有时候并不调用end。所以直接改成true\r\n        //\r\n        ////if (_type == TYPE2D) {\r\n        LayaGL.renderEngine.viewport(0, 0, this._width, this._height);//外部设置\r\n        LayaGL.renderEngine.scissor(0, 0, this._width, this._height);//外部设置\r\n        this._lastWidth = RenderState2D.width;\r\n        this._lastHeight = RenderState2D.height;\r\n        RenderState2D.width = this._width;\r\n        RenderState2D.height = this._height;\r\n        BaseShader.activeShader = null;\r\n        ////}\r\n    }\r\n\r\n    /**\r\n     * 结束绑定。\r\n     */\r\n    end(): void {\r\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n        RenderTexture2D._currentActive = null;\r\n        RenderState2D.InvertY = false;\r\n    }\r\n\r\n    /**\r\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\r\n     */\r\n    restore(): void {\r\n        if (this._lastRT != RenderTexture2D._currentActive) {\r\n\r\n            if (this._lastRT) {\r\n                LayaGL.textureContext.bindRenderTarget(this._lastRT._renderTarget);\r\n                RenderState2D.InvertY = this._lastRT._invertY;\r\n            }\r\n            else {\r\n                LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n                RenderState2D.InvertY = false;\r\n            }\r\n\r\n            RenderTexture2D._currentActive = this._lastRT;\r\n        }\r\n        // this._readyed = true;\r\n        //if (_type == TYPE2D)//待调整\r\n        //{\r\n        LayaGL.renderEngine.viewport(0, 0, this._lastWidth, this._lastHeight);\r\n        LayaGL.renderEngine.scissor(0, 0, this._lastWidth, this._lastHeight);\r\n        RenderState2D.width = this._lastWidth;\r\n        RenderState2D.height = this._lastHeight;\r\n        BaseShader.activeShader = null;\r\n        //} else \r\n        //\tgl.viewport(0, 0, Laya.stage.width, Laya.stage.height);\r\n    }\r\n\r\n    /**\r\n     * 清理RT\r\n     * @param r \r\n     * @param g \r\n     * @param b \r\n     * @param a \r\n     */\r\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\r\n\r\n        RenderTexture2D._clearColor.r = r;\r\n        RenderTexture2D._clearColor.g = g;\r\n        RenderTexture2D._clearColor.b = b;\r\n        RenderTexture2D._clearColor.a = a;\r\n        //RenderTexture2D._clearColor.toLinear(RenderTexture2D._clearLinearColor);\r\n        //@ts-ignore\r\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, RenderTexture2D._clearColor, 1);\r\n    }\r\n\r\n    /**\r\n     * 获得像素数据。\r\n     * @param x X像素坐标。\r\n     * @param y Y像素坐标。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     * @return 像素数据。\r\n     */\r\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return LayaGL.textureContext.getRenderTextureData(this._renderTarget, x, y, width, height);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    recycle(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @internal\r\n     */\r\n    _disposeResource(): void {\r\n        //width 和height为0的时候不会创建资源\r\n        this._renderTarget && this._renderTarget.dispose();\r\n    }\r\n\r\n}\r\n\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n    //@ts-ignore\r\n    RenderTexture2D = NativeRenderTexture2D;\r\n}\r\n\r\n\r\n","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\n\r\n/**\r\n * WebGLRTMgr 管理WebGLRenderTarget的创建和回收\r\n * TODO 需求不大，管理成本高。先去掉。\r\n */\r\n\r\nexport class WebGLRTMgr {\r\n\r\n\tprivate static dict: any = {};\t\t//key=h*10000+w\r\n\t/**\r\n\t * 获得一个renderTarget\r\n\t * 暂时先按照严格大小判断。\r\n\t * \r\n\t * @param\tw\r\n\t * @param\th\r\n\t * @return\r\n\t */\r\n\tstatic getRT(w: number, h: number): RenderTexture2D {\r\n\t\tw = w | 0;\r\n\t\th = h | 0;\r\n\t\tif (w >= 10000) {\r\n\t\t\tconsole.error('getRT error! w too big');\r\n\t\t}\r\n\t\tvar ret: RenderTexture2D;\r\n\t\t/*\r\n\t\tvar key: number = h * 10000 + w;\r\n\t\tvar sw: any[] = WebGLRTMgr.dict[key];\r\n\t\tif (sw) {\r\n\t\t\tif (sw.length > 0) {\r\n\t\t\t\tret = sw.pop();\r\n\t\t\t\tret._mgrKey = key;\t//只有不再mgr中的才有key\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\tret = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n\t\t//ret._mgrKey = key;\r\n\t\treturn ret;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 回收一个renderTarget\r\n\t * @param\trt\r\n\t */\r\n\tstatic releaseRT(rt: RenderTexture2D): void {\r\n\t\trt.destroy();\r\n\t\t//rt._disposeResource();// 直接删除贴图。否则还要管理占用过多的时候的清理。  修改：去掉了，直接destroy，否则统计会以为没有释放掉。\r\n\t\treturn;\r\n\t\t/*\r\n\t\t//如果_mgrKey<=0表示已经加进来了。\r\n\t\tif (rt._mgrKey <= 0)\r\n\t\t\treturn;\r\n\t\tvar sw: any[] = WebGLRTMgr.dict[rt._mgrKey];\r\n\t\t!sw && (sw = [], WebGLRTMgr.dict[rt._mgrKey] = sw);\r\n\t\trt._mgrKey = 0;\r\n\t\tsw.push(rt);\r\n\t\t*/\r\n\t}\r\n}\r\n\r\n","import { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { StencilOperation } from \"../RenderEngine/RenderEnum/StencilOperation\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { WebGLEngine } from \"./RenderEngine/WebGLEngine/WebGLEngine\";\r\n/**\r\n * @private\r\n */\r\nexport class RenderStateContext {\r\n    /**@internal */\r\n    static mainContext: any;\r\n    /**@internal */\r\n    static DepthTestCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static DepthMaskCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static DepthFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilTestCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilMaskCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static stencilOpCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendEquationCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendEquationSeparateCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendFuncSeperateCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static CullFaceCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static FrontFaceCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static stencilFuncArray = new Array<number>(2);\r\n    /**@internal */\r\n    static blendEquationSeparateArray = new Array<number>(2);\r\n    /**@internal */\r\n    static blenfunArray = new Array(2);\r\n    /**@internal */\r\n    static blendFuncSeperateArray = new Array(4);\r\n    /**@internal */\r\n    static stencilOpArray = new Array<number>(3);\r\n    \r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__() {\r\n        RenderStateContext.DepthTestCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.DepthMaskCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.DepthFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilTestCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilMaskCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.stencilOpCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendEquationCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendEquationSeparateCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendFuncSeperateCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.CullFaceCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.FrontFaceCMD = LayaGL.renderEngine.createRenderStateComand();\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthTest(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthTest(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthMask(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthMask(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthFunc(value: CompareFunction): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthFunc(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setStencilTest(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilTest(value);\r\n    }\r\n\r\n    /**\r\n     * 模板写入开关\r\n     * @param gl \r\n     * @param value \r\n     */\r\n    static setStencilMask(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilMask(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setStencilFunc(fun: CompareFunction, ref: number): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilFunc(fun, ref);\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    static setstencilOp(fail: StencilOperation, zfail: StencilOperation, zpass: StencilOperation) {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setstencilOp(fail, zfail, zpass);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlend(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlend(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendEquation(blendEquation: BlendEquationSeparate): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquation(blendEquation);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendEquationSeparate(blendEquationRGB: BlendEquationSeparate, blendEquationAlpha: BlendEquationSeparate): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendFunc(sFactor: BlendFactor, dFactor: BlendFactor): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFunc(sFactor, dFactor);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendFuncSeperate(srcRGB: BlendFactor, dstRGB: BlendFactor, srcAlpha: BlendFactor, dstAlpha: BlendFactor): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param value \r\n     */\r\n    static setCullFace(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setCullFace(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param value \r\n     */\r\n    static setFrontFace(value: number): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setFrontFace(value);\r\n    }\r\n}\r\n\r\n\r\n","import { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\n\r\n//export type BlendFunc = (gl:WebGLRenderingContext)=>void\r\nexport class BlendMode {\r\n    static activeBlendFunction: Function = null;\r\n    /** @internal 这个不直接暴露给开发者*/\r\n    static NAMES = [\r\n        \"normal\",\r\n        \"add\",\r\n        \"multiply\",\r\n        \"screen\",\r\n        \"overlay\",\r\n        \"light\",\r\n        \"mask\",\r\n        \"destination-out\",\r\n        \"add_old\"];\r\n\r\n    /** @internal */\r\n    static TOINT: { [key: string]: number } = {\r\n        \"normal\": 0,\r\n        \"add\": 1,\r\n        \"multiply\": 2,\r\n        \"screen\": 3,\r\n        \"overlay\": 4,\r\n        \"light\": 5,\r\n        \"mask\": 6,\r\n        \"destination-out\": 7,\r\n        \"lighter\": 1,\r\n        \"lighter_old\": 8,\r\n        \"add_old\": 8\r\n    };\r\n\r\n    static NORMAL = \"normal\";\t\t\t\t\t//0\r\n    static MASK = \"mask\";\t\t\t\t\t//6\r\n    static LIGHTER = \"lighter\";\t\t\t\t\t//1  \r\n\r\n    static fns: any[];\r\n    static targetFns: any[];\r\n    /**@internal */\r\n    static _init_(): void {\r\n        BlendMode.fns = [\r\n            BlendMode.BlendNormal,      //0\r\n            BlendMode.BlendAdd,         //1\r\n            BlendMode.BlendMultiply,    //2\r\n            BlendMode.BlendScreen,      //3\r\n            BlendMode.BlendOverlay,     //4\r\n            BlendMode.BlendLight,       //5\r\n            BlendMode.BlendMask,        //6\r\n            BlendMode.BlendDestinationOut,   //7\r\n            BlendMode.BlendAddOld,         //8\r\n            BlendMode.BlendSourceAlpha,            //9\r\n        ];\r\n\r\n        BlendMode.targetFns = [\r\n            BlendMode.BlendNormalTarget,    //0\r\n            BlendMode.BlendAddTarget,       //1\r\n            BlendMode.BlendMultiplyTarget,  //2\r\n            BlendMode.BlendScreenTarget,    //3\r\n            BlendMode.BlendOverlayTarget,   //4\r\n            BlendMode.BlendLightTarget,     //5\r\n            BlendMode.BlendMask,            //6\r\n            BlendMode.BlendDestinationOut,  //7\r\n            BlendMode.BlendAddTargetOld,    //8\r\n            BlendMode.BlendSourceAlpha             //9\r\n        ];\r\n    }\r\n\r\n    static BlendNormal(): void {\r\n        //为了避免黑边，和canvas作为贴图的黑边\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n\r\n    }\r\n\r\n    /**@internal 这个add感觉不合理，所以改成old了 */\r\n    static BlendAddOld(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\r\n    }\r\n\r\n    static BlendAdd(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMultiply(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendScreen(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendOverlay(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendLight(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendNormalTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    /**@internal add不应该是1+dst_α 所以改成old */\r\n    static BlendAddTargetOld(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\r\n    }\r\n    static BlendAddTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMultiplyTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendScreenTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendOverlayTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceColor);\r\n    }\r\n\r\n    static BlendLightTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMask(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.SourceAlpha);\r\n    }\r\n\r\n    static BlendDestinationOut(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.Zero);\r\n    }\r\n    static BlendSourceAlpha(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.SourceAlpha, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n}\r\n\r\n","import { Texture2D } from \"./Texture2D\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Resource } from \"./Resource\";\r\n\r\nconst _rect1 = new Rectangle();\r\nconst _rect2 = new Rectangle();\r\n\r\n/**\r\n * <code>Texture</code> 是一个纹理处理类。\r\n */\r\nexport class Texture extends Resource {\r\n    /**@private 默认 UV 信息。*/\r\n    static readonly DEF_UV = new Float32Array([0, 0, 1.0, 0, 1.0, 1.0, 0, 1.0]);\r\n    /**@private */\r\n    static readonly NO_UV = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0]);\r\n    /**@private 反转 UV 信息。*/\r\n    static readonly INV_UV = new Float32Array([0, 1, 1.0, 1, 1.0, 0.0, 0, 0.0]);\r\n\r\n    /**@private uv的范围*/\r\n    uvrect: number[] = [0, 0, 1, 1]; //startu,startv, urange,vrange\r\n    /**@private */\r\n    private _bitmap: BaseTexture;\r\n    /**@internal */\r\n    public _uv: ArrayLike<number>;\r\n    /** @private */\r\n    private _w: number = 0;\r\n    /** @private */\r\n    private _h: number = 0;\r\n\r\n    /**沿 X 轴偏移量。*/\r\n    offsetX: number = 0;\r\n    /**沿 Y 轴偏移量。*/\r\n    offsetY: number = 0;\r\n    /**原始宽度（包括被裁剪的透明区域）。*/\r\n    sourceWidth: number = 0;\r\n    /**原始高度（包括被裁剪的透明区域）。*/\r\n    sourceHeight: number = 0;\r\n    /**图片地址*/\r\n    url: string;\r\n    /** UUID */\r\n    uuid: string;\r\n    /** @private */\r\n    scaleRate: number = 1;\r\n\r\n    /**九宫格*/\r\n    _sizeGrid?: Array<number>;\r\n    /**状态数量*/\r\n    _stateNum?: number;\r\n\r\n    /**@internal */\r\n    _clipCache: Map<string, Texture>;\r\n\r\n    /**\r\n     *  根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\r\n     * @param\tsource 绘图资源 Texture2D 或者 Texture对象。\r\n     * @param\tx 起始绝对坐标 x 。\r\n     * @param\ty 起始绝对坐标 y 。\r\n     * @param\twidth 宽绝对值。\r\n     * @param\theight 高绝对值。\r\n     * @param\toffsetX X 轴偏移量（可选）。\t就是[x,y]相对于原始小图片的位置。一般都是正的，表示裁掉了空白边的大小，如果是负的一般表示加了保护边\r\n     * @param\toffsetY Y 轴偏移量（可选）。\r\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\r\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\r\n     * @return  <code>Texture</code> 对象。\r\n     */\r\n    static create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\r\n        offsetX: number = 0, offsetY: number = 0,\r\n        sourceWidth: number = 0, sourceHeight: number = 0): Texture {\r\n        return Texture._create(source, x, y, width, height, offsetX, offsetY, sourceWidth, sourceHeight);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\r\n     * @param\tsource 绘图资源 Texture2D 或者 Texture 对象。\r\n     * @param\tx 起始绝对坐标 x 。\r\n     * @param\ty 起始绝对坐标 y 。\r\n     * @param\twidth 宽绝对值。\r\n     * @param\theight 高绝对值。\r\n     * @param\toffsetX X 轴偏移量（可选）。\r\n     * @param\toffsetY Y 轴偏移量（可选）。\r\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\r\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\r\n     * @param\toutTexture 返回的Texture对象。\r\n     * @return  <code>Texture</code> 对象。\r\n     */\r\n    static _create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\r\n        offsetX: number = 0, offsetY: number = 0,\r\n        sourceWidth: number = 0, sourceHeight: number = 0, outTexture: Texture = null): Texture {\r\n        var btex: boolean = source instanceof Texture;\r\n        var uv = btex ? ((<Texture>source)).uv : Texture.DEF_UV;\r\n        var bitmap = btex ? ((<Texture>source)).bitmap : <Texture2D>source;\r\n\r\n        if (bitmap.width && (x + width) > bitmap.width)\r\n            width = bitmap.width - x;\r\n        if (bitmap.height && (y + height) > bitmap.height)\r\n            height = bitmap.height - y;\r\n        var tex: Texture;\r\n        if (outTexture) {\r\n            tex = outTexture;\r\n            tex.setTo(bitmap, null, sourceWidth || width, sourceHeight || height);\r\n        } else {\r\n            tex = new Texture(bitmap, null, sourceWidth || width, sourceHeight || height)\r\n        }\r\n        tex.width = width;\r\n        tex.height = height;\r\n        tex.offsetX = offsetX;\r\n        tex.offsetY = offsetY;\r\n\r\n        var dwidth: number = 1 / bitmap.width;\r\n        var dheight: number = 1 / bitmap.height;\r\n        x *= dwidth;\r\n        y *= dheight;\r\n        width *= dwidth;\r\n        height *= dheight;\r\n\r\n        var u1: number = tex.uv[0], v1: number = tex.uv[1], u2: number = tex.uv[4], v2: number = tex.uv[5];\r\n        var inAltasUVWidth: number = (u2 - u1), inAltasUVHeight: number = (v2 - v1);\r\n        var oriUV: any[] = moveUV(uv[0], uv[1], [x, y, x + width, y, x + width, y + height, x, y + height]);\r\n        tex.uv = new Float32Array([u1 + oriUV[0] * inAltasUVWidth, v1 + oriUV[1] * inAltasUVHeight,\r\n        u2 - (1 - oriUV[2]) * inAltasUVWidth, v1 + oriUV[3] * inAltasUVHeight,\r\n        u2 - (1 - oriUV[4]) * inAltasUVWidth, v2 - (1 - oriUV[5]) * inAltasUVHeight,\r\n        u1 + oriUV[6] * inAltasUVWidth, v2 - (1 - oriUV[7]) * inAltasUVHeight]);\r\n\r\n        var bitmapScale: number = (<Texture>source).scaleRate;\r\n        if (bitmapScale && bitmapScale != 1) {\r\n            tex.sourceWidth /= bitmapScale;\r\n            tex.sourceHeight /= bitmapScale;\r\n            tex.width /= bitmapScale;\r\n            tex.height /= bitmapScale;\r\n            tex.scaleRate = bitmapScale;\r\n            tex.offsetX /= bitmapScale;\r\n            tex.offsetY /= bitmapScale;\r\n        } else {\r\n            tex.scaleRate = 1;\r\n        }\r\n        return tex;\r\n    }\r\n\r\n    /**\r\n     * 截取Texture的一部分区域，生成新的Texture，如果两个区域没有相交，则返回null。\r\n     * @param\ttexture\t目标Texture。\r\n     * @param\tx\t\t相对于目标Texture的x位置。\r\n     * @param\ty\t\t相对于目标Texture的y位置。\r\n     * @param\twidth\t截取的宽度。\r\n     * @param\theight\t截取的高度。\r\n     * @return 返回一个新的Texture。\r\n     */\r\n    static createFromTexture(texture: Texture, x: number, y: number, width: number, height: number): Texture {\r\n        var texScaleRate: number = texture.scaleRate;\r\n        if (texScaleRate != 1) {\r\n            x *= texScaleRate;\r\n            y *= texScaleRate;\r\n            width *= texScaleRate;\r\n            height *= texScaleRate;\r\n        }\r\n        var rect: Rectangle = Rectangle.TEMP.setTo(x - texture.offsetX, y - texture.offsetY, width, height);\r\n        var result = rect.intersection(_rect1.setTo(0, 0, texture.width, texture.height), _rect2);\r\n        if (result)\r\n            return Texture.create(texture, result.x, result.y, result.width, result.height, result.x - rect.x, result.y - rect.y, width, height);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * uv\r\n     */\r\n    get uv(): ArrayLike<number> {\r\n        return this._uv;\r\n    }\r\n\r\n    set uv(value: ArrayLike<number>) {\r\n        this.uvrect[0] = Math.min(value[0], value[2], value[4], value[6]);\r\n        this.uvrect[1] = Math.min(value[1], value[3], value[5], value[7]);\r\n        this.uvrect[2] = Math.max(value[0], value[2], value[4], value[6]) - this.uvrect[0];\r\n        this.uvrect[3] = Math.max(value[1], value[3], value[5], value[7]) - this.uvrect[1];\r\n        this._uv = value;\r\n    }\r\n\r\n    /** 实际宽度。*/\r\n    get width(): number {\r\n        if (this._w)\r\n            return this._w;\r\n        if (!this.bitmap) return 0;\r\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._w = value;\r\n        this.sourceWidth || (this.sourceWidth = value);\r\n    }\r\n\r\n    /** 实际高度。*/\r\n    get height(): number {\r\n        if (this._h)\r\n            return this._h;\r\n        if (!this.bitmap) return 0;\r\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._h = value;\r\n        this.sourceHeight || (this.sourceHeight = value);\r\n    }\r\n\r\n    /**\r\n     * 获取位图。\r\n     * @return 位图。\r\n     */\r\n    get bitmap(): BaseTexture {\r\n        return this._bitmap;\r\n    }\r\n\r\n    /**\r\n     * 设置位图。\r\n     * @param 位图。\r\n     */\r\n    set bitmap(value: BaseTexture) {\r\n        if (this._bitmap == value)\r\n            return;\r\n        this._bitmap && this._bitmap._removeReference(this._referenceCount);\r\n        this._bitmap = value;\r\n        value && (value._addReference(this._referenceCount));\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Texture</code> 实例。\r\n     * @param bitmap 位图资源。\r\n     * @param uv UV 数据信息。\r\n     */\r\n    constructor(source: Texture | BaseTexture = null, uv: ArrayLike<number> = null,\r\n        sourceWidth: number = 0, sourceHeight: number = 0) {\r\n        super(false);\r\n        let bitmap = (source instanceof Texture) ? source.bitmap : source;\r\n        this.setTo(bitmap, uv, sourceWidth, sourceHeight);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addReference(count: number = 1): void {\r\n        super._addReference(count);\r\n        this._bitmap && this._bitmap._addReference(count);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _removeReference(count: number = 1): void {\r\n        this._bitmap && this._bitmap._removeReference(count);\r\n        super._removeReference(count);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getSource(cb: () => void = null): any {\r\n        if (this._destroyed || !this._bitmap)\r\n            return null;\r\n        this.recoverBitmap(cb);\r\n        return this._bitmap.destroyed ? null : this.bitmap._getSource();\r\n    }\r\n\r\n    /**\r\n     * 设置此对象的位图资源、UV数据信息。\r\n     * @param\tbitmap 位图资源\r\n     * @param\tuv UV数据信息\r\n     */\r\n    setTo(bitmap: BaseTexture = null, uv: ArrayLike<number> = null,\r\n        sourceWidth: number = 0, sourceHeight: number = 0): void {\r\n        this.bitmap = bitmap;\r\n        this.sourceWidth = sourceWidth;\r\n        this.sourceHeight = sourceHeight;\r\n\r\n        if (bitmap) {\r\n            this._w = bitmap.width;\r\n            this._h = bitmap.height;\r\n            this.sourceWidth = this.sourceWidth || bitmap.width;\r\n            this.sourceHeight = this.sourceHeight || bitmap.height\r\n        }\r\n        this.uv = uv || Texture.DEF_UV;\r\n    }\r\n\r\n    /**\r\n     * 加载指定地址的图片。\r\n     * @param\turl 图片地址。\r\n     * @param\tcomplete 加载完成回调\r\n     */\r\n    load(url: string, complete?: Handler): Promise<void> {\r\n        if (this._destroyed)\r\n            return Promise.resolve();\r\n\r\n        return ILaya.loader.load(url).then((tex: Texture) => {\r\n            let bit = tex.bitmap;\r\n            this.bitmap = bit;\r\n            this.sourceWidth = this._w = bit.width;\r\n            this.sourceHeight = this._h = bit.height;\r\n            complete && complete.run();\r\n            this.event(Event.READY, this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获得像素数据\r\n     * @param x x\r\n     * @param y y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @returns \r\n     */\r\n    getTexturePixels(x: number, y: number, width: number, height: number): Uint8Array {\r\n        var st: number, dst: number, i: number;\r\n        var tex2d = this.bitmap;\r\n        // 适配图集\r\n        var texw = this._w;\r\n        var texh = this._h;\r\n        var sourceWidth = this.sourceWidth;\r\n        var sourceHeight = this.sourceHeight;\r\n        var tex2dw = tex2d.width;\r\n        var tex2dh = tex2d.height;\r\n        var offsetX = this.offsetX;\r\n        var offsetY = this.offsetY;\r\n        let draww = width;\r\n        let drawh = height;\r\n        if (x + width > texw + offsetX) draww -= (x + width) - texw - offsetX;\r\n        if (x + width > sourceWidth) width -= (x + width) - sourceWidth;\r\n        if (y + height > texh + offsetY) drawh -= (y + height) - texh - offsetY;\r\n        if (y + height > sourceHeight) height -= (y + height) - sourceHeight;\r\n        if (width <= 0 || height <= 0) return null;\r\n        let marginL = offsetX > x ? offsetX - x : 0; // 考虑图集的情况，只渲染图集中的图片，左侧可能需要补充空白\r\n        let marginT = offsetY > y ? offsetY - y : 0;\r\n        let rePosX = x > offsetX ? x - offsetX : 0; // 考虑图集的情况，只渲染图集中的图片，不渲染 offset，需要重新定位 x 坐标\r\n        let rePosY = y > offsetY ? y - offsetY : 0;\r\n        draww -= marginL; // 考虑图集的情况，只渲染图集中的图片，其大小要减去空白\r\n        drawh -= marginT;\r\n\r\n        var wstride = width * 4;\r\n        var pix: Uint8Array = null;\r\n        try {\r\n            pix = <Uint8Array>(tex2d as Texture2D).getPixels();\r\n        } catch (e) {\r\n        }\r\n        if (pix) {\r\n            if (x == 0 && y == 0 && width == tex2dw && height == tex2dh)\r\n                return pix;\r\n            //否则只取一部分\r\n            let uv = (this._uv as Array<number>).slice();\r\n            let atlasPosX = Math.round(uv[0] * tex2dw); // 计算图片在图集中的位置\r\n            let atlasPosY = Math.round(uv[1] * tex2dh);\r\n            var ret: Uint8Array = new Uint8Array(width * height * 4);\r\n            wstride = tex2dw * 4;\r\n            dst = (atlasPosY + rePosY) * wstride;\r\n            st = atlasPosX * 4 + rePosX * 4 + dst;\r\n            for (i = 0; i < drawh; i++) {\r\n                ret.set(pix.slice(st, st + draww * 4), width * 4 * (i + marginT) + marginL * 4);\r\n                st += wstride;\r\n            }\r\n            return ret;\r\n        }\r\n\r\n        // 如果无法直接获取，只能先渲染出来\r\n        var ctx = new ILaya.Context();\r\n        ctx.size(width, height);\r\n        ctx.asBitmap = true;\r\n        var uv: number[] = null;\r\n        if (x != 0 || y != 0 || width != tex2dw || height != tex2dh) {\r\n            uv = (this._uv as number[]).slice();\t// 复制一份uv\r\n            var stu = uv[0];\r\n            var stv = uv[1];\r\n            var uvw = uv[2] - stu;\r\n            var uvh = uv[7] - stv;\r\n            var uk = uvw / texw;\r\n            var vk = uvh / texh;\r\n            uv = [stu + rePosX * uk, stv + rePosY * vk,\r\n            stu + (rePosX + draww) * uk, stv + rePosY * vk,\r\n            stu + (rePosX + draww) * uk, stv + (rePosY + drawh) * vk,\r\n            stu + rePosX * uk, stv + (rePosY + drawh) * vk];\r\n        }\r\n        ctx._drawTextureM(this, marginL, marginT, draww, drawh, null, 1.0, uv, 0xffffffff);\r\n        //ctx.drawTexture(value, -x, -y, x + width, y + height);\r\n        ctx._targets.start();\r\n        ctx.flush();\r\n        ctx._targets.end();\r\n        ctx._targets.restore();\r\n        var dt: Uint8Array = ctx._targets.getData(0, 0, width, height) as Uint8Array;\r\n        ctx.destroy();\r\n        // 上下颠倒一下\r\n        ret = new Uint8Array(width * height * 4);\r\n        st = 0;\r\n        dst = (height - 1) * wstride;\r\n        for (i = height - 1; i >= 0; i--) {\r\n            ret.set(dt.slice(dst, dst + wstride), st);\r\n            st += wstride;\r\n            dst -= wstride;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 获取Texture上的某个区域的像素点\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @return  返回像素点集合\r\n     */\r\n    getPixels(x: number, y: number, width: number, height: number): Uint8Array {\r\n        return this.getTexturePixels(x, y, width, height);\r\n        // canvas 不支持\r\n    }\r\n\r\n    /**\r\n     * 通过url强制恢复bitmap。\r\n     */\r\n    recoverBitmap(callback?: () => void): void {\r\n        var url = this._bitmap.url;\r\n        if (!this._destroyed && (!this._bitmap || this._bitmap.destroyed) && url) {\r\n            ILaya.loader.load(url).then((tex: Texture) => {\r\n                this.bitmap = tex.bitmap;\r\n                callback && callback();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 强制释放Bitmap,无论是否被引用。\r\n     */\r\n    disposeBitmap(): void {\r\n        if (!this._destroyed && this._bitmap) {\r\n            this._bitmap.destroy();\r\n        }\r\n    }\r\n\r\n    get valid(): boolean {\r\n        return !this._destroyed && this._bitmap && !this._bitmap.destroyed;\r\n    }\r\n\r\n    /**\r\n     * obsolute\r\n     */\r\n    public get obsolute(): boolean {\r\n        return this._obsolute || !this._bitmap || this._bitmap.destroyed || this._bitmap.obsolute;\r\n    }\r\n\r\n    public set obsolute(value: boolean) {\r\n        this._obsolute = value;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _disposeResource(): void {\r\n        let bit = this._bitmap;\r\n        this._bitmap = null;\r\n        if (bit)\r\n            bit._removeReference(this._referenceCount);\r\n    }\r\n\r\n    /**\r\n     * 获得clip贴图\r\n     * @param x x\r\n     * @param y y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @returns \r\n     */\r\n    public getCachedClip(x: number, y: number, width: number, height: number): Texture {\r\n        let key = `${x}_${y}_${width}_${height}`;\r\n        if (!this._clipCache)\r\n            this._clipCache = new Map();\r\n\r\n        let tex = this._clipCache.get(key);\r\n        if (tex)\r\n            return tex;\r\n        tex = Texture.createFromTexture(this, x, y, width, height);\r\n        if (tex)\r\n            tex._sizeGrid = this._sizeGrid;\r\n\r\n        if (this._clipCache.size > 100)\r\n            this._clipCache.clear();\r\n\r\n        this._clipCache.set(key, tex);\r\n\r\n        return tex;\r\n    }\r\n}\r\n\r\n/**\r\n * 平移 UV。\r\n * @param offsetX 沿 X 轴偏移量。\r\n * @param offsetY 沿 Y 轴偏移量。\r\n * @param uv 需要平移操作的的 UV。\r\n * @return 平移后的UV。\r\n */\r\nfunction moveUV(offsetX: number, offsetY: number, uv: any[]): any[] {\r\n    for (var i: number = 0; i < 8; i += 2) {\r\n        uv[i] += offsetX;\r\n        uv[i + 1] += offsetY;\r\n    }\r\n    return uv;\r\n}\r\n","export enum BlendEquationSeparate{\r\n    ADD,//source + destination (default value)\r\n    SUBTRACT,// source - destination\r\n    REVERSE_SUBTRACT,//destination - source\r\n    //TODO:\r\n    MIN,//Minimum of source and destination\r\n    MAX,//Maximum of source and destination\r\n}","export enum BlendType{\r\n    /**混合枚举_禁用。*/\r\n\tBLEND_DISABLE = 0,\r\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\r\n\tBLEND_ENABLE_ALL = 1,\r\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\r\n\tBLEND_ENABLE_SEPERATE = 2\r\n}","export enum CompareFunction {\r\n    /** never pass. */\r\n    Never,\r\n    /** pass if the incoming value is less than the depth/stencil buffer value. */\r\n    Less,\r\n    /** pass if the incoming value equals the depth/stencil buffer value. */\r\n    Equal,\r\n    /** pass if the incoming value is less than or equal to the depth/stencil buffer value. */\r\n    LessEqual,\r\n    /** pass if the incoming value is greater than the depth/stencil buffer value. */\r\n    Greater,\r\n    /** pass if the incoming value is not equal to the depth/stencil buffer value. */\r\n    NotEqual,\r\n    /** pass if the incoming value is greater than or equal to the depth/stencil buffer value. */\r\n    GreaterEqual,\r\n    /** always pass. */\r\n    Always,\r\n    /** off */\r\n    Off,\r\n}\r\n","export enum CullMode {\r\n    /** Disable culling. */\r\n    Off = 0,\r\n    /** cut the front-face of the polygons. */\r\n    Front = 1,\r\n    /** cut the back-face of the polygons. */\r\n    Back = 2\r\n  }\r\n  ","export enum StencilOperation {\r\n    /** Keeps the current value. */\r\n    Keep,\r\n    /** Sets the stencil buffer value to 0. */\r\n    Zero,\r\n    /** Sets the stencil buffer value to the reference value. */\r\n    Replace,\r\n    /** Increments the current stencil buffer value. Clamps to the maximum representable unsigned value. */\r\n    IncrementSaturate,\r\n    /** Decrements the current stencil buffer value. Clamps to 0. */\r\n    DecrementSaturate,\r\n    /** Inverts the current stencil buffer value bitwise. */\r\n    Invert,\r\n    /** Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value. */\r\n    IncrementWrap,\r\n    /** Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable unsigned value when decrementing a stencil buffer value of 0. */\r\n    DecrementWrap\r\n  }\r\n  ","import { Utils } from \"../utils/Utils\";\r\n/**\r\n * 此类用来描述资源\r\n */\r\nexport class AssetDb {\r\n    /**\r\n     * 默认资源实例\r\n     */\r\n    static inst: AssetDb = new AssetDb();\r\n\r\n    /**\r\n     * uuid 数据\r\n     */\r\n    uuidMap: Record<string, string> = {};\r\n\r\n    /**\r\n     * shaderName 数据\r\n     */\r\n    shaderNameMap: Record<string, string> = {};\r\n\r\n    /**\r\n     * 元资源 数据\r\n     */\r\n    metaMap: Record<string, any> = {};\r\n\r\n    /**\r\n     * uuid获得url\r\n     * @param uuid uuid\r\n     * @returns \r\n     */\r\n    UUID_to_URL(uuid: string): string {\r\n        return this.uuidMap[uuid];\r\n    }\r\n\r\n    /**\r\n     * 异步uuid获得Url\r\n     * @param uuid \r\n     * @returns \r\n     */\r\n    UUID_to_URL_async(uuid: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * Url获得uuid值\r\n     * @param url \r\n     * @returns \r\n     */\r\n    URL_to_UUID_async(url: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获取真实的Url\r\n     * @param url \r\n     * @param onResolve \r\n     * @returns \r\n     */\r\n    resolveURL(url: string, onResolve?: (url: string) => void): Promise<string> {\r\n        if (url.startsWith(\"res://\")) {\r\n            let uuid = url.substring(6);\r\n            return AssetDb.inst.UUID_to_URL_async(uuid).then(url => {\r\n                if (onResolve)\r\n                    onResolve(url);\r\n                return url;\r\n            });\r\n        }\r\n        else {\r\n            if (onResolve)\r\n                onResolve(url);\r\n            return Promise.resolve(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 查找shadername的地址\r\n     * @param shaderName \r\n     * @returns \r\n     */\r\n    shaderName_to_URL(shaderName: string): string {\r\n        return this.shaderNameMap[shaderName];\r\n    }\r\n\r\n    shaderName_to_URL_async(shaderName: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获得元数据\r\n     * @param url \r\n     * @param uuid \r\n     * @returns \r\n     */\r\n    getMeta(url: string, uuid: string): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获得子资源路径\r\n     * @param url \r\n     * @param uuid \r\n     * @param subAssetName \r\n     * @param subAssetExt \r\n     * @returns \r\n     */\r\n    getSubAssetURL(url: string, uuid: string, subAssetName: string, subAssetExt: string): string {\r\n        if (subAssetName)\r\n            return `${Utils.replaceFileExtension(url, \"\")}@${subAssetName}.${subAssetExt}`;\r\n        else\r\n            return url;\r\n    }\r\n}","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\n/**\r\n * <p><code>URL</code> 提供URL格式化，URL版本管理的类。</p>\r\n * <p>引擎加载资源的时候，会自动调用formatURL函数格式化URL路径</p>\r\n * <p>通过basePath属性可以设置网络基础路径</p>\r\n * <p>通过设置customFormat函数，可以自定义URL格式化的方式</p>\r\n */\r\nexport class URL {\r\n    /**URL地址版本映射表，比如{\"aaa/bb.png\":\"edcba\",\"aaa/bb.png\":\"1342a\"}，默认情况下，通过formatURL格式化后，会自动生成为\"aaa/bb-1342a.png\"的一个地址*/\r\n    static version: Record<string, string> = {};\r\n\r\n    /**基础路径。如果不设置，默认为当前网页的路径。最终地址将被格式化为 basePath+相对URL地址，*/\r\n    static basePath: string = \"\";\r\n    /**扩展的基础路径映射表，比如{\"aa/\":\"http://abc.com/\"},则把路径以aa/开头的资源映射到http://abc.com/下*/\r\n    static basePaths: Record<string, string> = {};\r\n\r\n    /**root路径。只针对'~'类型的url路径有效*/\r\n    static rootPath: string = \"\";\r\n\r\n    /**@private */\r\n    private _url: string;\r\n    /**@private */\r\n    private _path: string;\r\n\r\n    private static overrideFileExts: Record<string, string> = {};\r\n    private static hasExtOverrides: boolean;\r\n\r\n    static __init__() {\r\n        //xiaomi 没有location\r\n        //Vivo location.protocol是\"\"\r\n        //微信真机 location.protocol是undefined\r\n        URL.rootPath = URL.basePath = (location && location.protocol != undefined && location.protocol != \"\") ? URL.getPath(location.protocol + \"//\" + location.host + location.pathname) : \"\";\r\n    }\r\n\r\n    static initMiniGameExtensionOverrides() {\r\n        if (LayaEnv.isPreview)\r\n            return;\r\n\r\n        URL.overrideExtension([\"rendertexture\", \"videotexture\"], \"rt.json\");\r\n        URL.overrideExtension([\"controller\"], \"controller.json\");\r\n        URL.overrideExtension([\"mc\"], \"mc.bin\");\r\n        URL.overrideExtension([\"mcc\"], \"mcc.json\");\r\n        URL.overrideExtension([\"shader\"], \"shader.json\");\r\n        URL.overrideExtension([\"scene3d\", \"scene\", \"taa\", \"prefab\"], \"json\");\r\n        URL.overrideExtension([\"fui\"], \"fui.json\");\r\n        URL.overrideExtension([\"glsl\"], \"glsl.txt\");\r\n        URL.overrideExtension([\"skel\"], \"skel.bin\");\r\n    }\r\n\r\n    /**创建一个新的 <code>URL</code> 实例。*/\r\n    constructor(url: string) {\r\n        this._url = URL.formatURL(url);\r\n        this._path = URL.getPath(url);\r\n    }\r\n\r\n    /**格式化后的地址。*/\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /**地址的文件夹路径（不包括文件名）。*/\r\n    get path(): string {\r\n        return this._path;\r\n    }\r\n\r\n    /** 自定义URL格式化的方式。例如： customFormat = function(url:String):String{} */\r\n    static customFormat: Function = function (url: string): string {\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 包含normalizedURL功能，并且合并base，如果base没有提供，则使用URL.basePath或者URL.rootPath。\r\n     * @param url 地址。\r\n     * @param base 基础路径，如果没有，则使用URL.basePath或者URL.rootPath。\r\n     * @return 格式化处理后的地址。\r\n     */\r\n    static formatURL(url: string, base?: string): string {\r\n        if (!url)\r\n            return base || URL.basePath || \"\";\r\n\r\n        if (url.startsWith(\"res://\")) {\r\n            let uuid = url.substring(6);\r\n            let url2 = AssetDb.inst.UUID_to_URL(uuid);\r\n            if (!url2)\r\n                return url;\r\n\r\n            url = url2;\r\n        }\r\n\r\n        let char1 = url.charCodeAt(0);\r\n        if (url.indexOf(\":\") == -1 && char1 !== 47) { //已经format过\r\n            //自定义路径格式化\r\n            if (URL.customFormat != null)\r\n                url = URL.customFormat(url);\r\n\r\n            let ver = URL.version[url];\r\n            if (ver != null) {\r\n                let i = url.lastIndexOf(\".\");\r\n                url = url.substring(0, i) + \"-\" + ver + url.substring(i);\r\n            }\r\n\r\n            if (char1 === 126) // ~\r\n                url = URL.join(URL.rootPath, url.substring(2));\r\n            else {\r\n                if (base == null) {\r\n                    base = URL.basePath;\r\n                    for (let k in URL.basePaths) {\r\n                        if (url.startsWith(k)) {\r\n                            base = URL.basePaths[k];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                url = URL.join(base, url);\r\n            }\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 处理扩展名的自动转换\r\n     * @param url 地址。\r\n     * @return 格式化处理后的地址。\r\n     */\r\n    static postFormatURL(url: string): string {\r\n        if (URL.hasExtOverrides) {\r\n            let extold = Utils.getFileExtension(url);\r\n            let ext = URL.overrideFileExts[extold];\r\n            if (ext != null)\r\n                url = Utils.replaceFileExtension(url, ext);\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 格式化相对路径。主要是处理.和..这些情况。\r\n     */\r\n    static normalize(url: string): string {\r\n        if (url.indexOf(\"./\") == -1)\r\n            return url;\r\n\r\n        let parts = url.split(\"/\");\r\n        let len = parts.length;\r\n        let i = 0;\r\n        while (i < len) {\r\n            if (parts[i] == \".\") {\r\n                parts.splice(i, 1);\r\n                len--;\r\n                continue;\r\n            }\r\n            else if (parts[i] == '..') {\r\n                let index: number = i - 1;\r\n                if (index >= 0 && parts[index] !== '..') {\r\n                    parts.splice(index, 2);\r\n                    len -= 2;\r\n                    i--;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            i++;\r\n        }\r\n        parts.length = len;\r\n        return parts.join('/');\r\n    }\r\n\r\n    static getResURLByUUID(url: string): string {\r\n        if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\r\n            return \"res://\" + url;\r\n        else\r\n            return url;\r\n    }\r\n\r\n    /**\r\n    * 组合相对路径并格式化\r\n    * @param base\r\n    * @param path\r\n    */\r\n    static join(base: string, path: string): string {\r\n        if (!path) return \"\";\r\n\r\n        //如果是全路径，直接返回，提高性能\r\n        if (path.indexOf(\":\") > 0)\r\n            return path;\r\n\r\n        if (base) {\r\n            let char1 = path.charCodeAt(0);\r\n            if (char1 !== 126 && char1 !== 47) { // ~或者 /\r\n                if (base.charCodeAt(base.length - 1) !== 47)\r\n                    path = base + \"/\" + path;\r\n                else\r\n                    path = base + path;\r\n            }\r\n        }\r\n\r\n        return URL.normalize(path);\r\n    }\r\n\r\n    /**\r\n     * 获取指定 URL 的文件夹路径（不包括文件名）。\r\n     * <p><b>注意：</b>末尾有斜杠（/）。</p>\r\n     * @param url url地址。\r\n     * @return 返回文件夹路径。\r\n     */\r\n    static getPath(url: string): string {\r\n        var ofs: number = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substring(0, ofs + 1) : \"\";\r\n    }\r\n\r\n    /**\r\n     * 获取指定 URL 的文件名。\r\n     * @param url 地址。\r\n     * @return 返回文件名。\r\n     */\r\n    static getFileName(url: string): string {\r\n        var ofs: number = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substring(ofs + 1) : url;\r\n    }\r\n\r\n    /**\r\n     * 获取URL版本字符。\r\n     * @param url\r\n     * @return\r\n     */\r\n    static getURLVerion(url: string): string {\r\n        var index: number = url.indexOf(\"?\");\r\n        return index >= 0 ? url.substring(index) : null;\r\n    }\r\n\r\n    /**\r\n     * 下载时，转换URL的扩展名。\r\n     * @originalExts 原始扩展名。例如[\"scene\"]。\r\n     * @targetExt 要转换为的扩展名。例如\"json\"。\r\n     */\r\n    static overrideExtension(originalExts: Array<string>, targetExt: string) {\r\n        for (let ext of originalExts)\r\n            URL.overrideFileExts[ext] = targetExt;\r\n        URL.hasExtOverrides = true;\r\n    }\r\n}","import { ShaderCompile } from \"./ShaderCompile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport class IncludeFile {\r\n    static splitToWords(str: string, block: ShaderNode): any[] {//这里要修改\r\n        var out: any[] = [];\r\n        /*\r\n           var words:Array = str.split(_splitToWordExps);\r\n           trace(str);\r\n           trace(words);\r\n         */\r\n        var c: string;\r\n        var ofs: number = -1;\r\n        var word: string;\r\n        for (var i: number = 0, n: number = str.length; i < n; i++) {\r\n            c = str.charAt(i);\r\n            if (\" \\t=+-*/&%!<>()'\\\",;\".indexOf(c) >= 0) {\r\n                if (ofs >= 0 && (i - ofs) > 1) {\r\n                    word = str.substr(ofs, i - ofs);\r\n                    out.push(word);\r\n                }\r\n                if (c == '\"' || c == \"'\") {\r\n                    var ofs2: number = str.indexOf(c, i + 1);\r\n                    if (ofs2 < 0) {\r\n                        throw \"Sharder err:\" + str;\r\n                    }\r\n                    out.push(str.substr(i + 1, ofs2 - i - 1));\r\n                    i = ofs2;\r\n                    ofs = -1;\r\n                    continue;\r\n                }\r\n                if (c == '(' && block && out.length > 0) {\r\n                    word = out[out.length - 1] + \";\";\r\n                    if (\"vec4;main;\".indexOf(word) < 0)\r\n                        block.useFuns += word;\r\n                }\r\n                ofs = -1;\r\n                continue;\r\n            }\r\n            if (ofs < 0) ofs = i;\r\n        }\r\n        if (ofs < n && (n - ofs) > 1) {\r\n            word = str.substr(ofs, n - ofs);\r\n            out.push(word);\r\n        }\r\n        return out;\r\n    }\r\n\r\n\r\n    script: string;\r\n    codes: any = {};\r\n    funs: any = {};\r\n    curUseID: number = -1;\r\n    funnames: string = \"\";\r\n\r\n    constructor(txt: string) {\r\n        this.script = txt;\r\n        var begin: number = 0, ofs: number, end: number;\r\n        while (true) {\r\n            begin = txt.indexOf(\"#begin\", begin);\r\n            if (begin < 0) break;\r\n\r\n            end = begin + 5;\r\n            while (true) {\r\n                end = txt.indexOf(\"#end\", end);\r\n                if (end < 0) break;\r\n                if (txt.charAt(end + 4) === 'i')\r\n                    end += 5;\r\n                else break;\r\n            }\r\n\r\n            if (end < 0) {\r\n                throw \"add include err,no #end:\" + txt;\r\n            }\r\n\r\n            ofs = txt.indexOf('\\n', begin);\r\n            var words: any[] = IncludeFile.splitToWords(txt.substr(begin, ofs - begin), null);\r\n            if (words[1] == 'code') {\r\n                this.codes[words[2]] = txt.substr(ofs + 1, end - ofs - 1);\r\n            } else if (words[1] == 'function')//#begin function void test()\r\n            {\r\n                ofs = txt.indexOf(\"function\", begin);\r\n                ofs += \"function\".length;\r\n                this.funs[words[3]] = txt.substr(ofs + 1, end - ofs - 1);\r\n                this.funnames += words[3] + \";\";\r\n            }\r\n\r\n            begin = end + 1;\r\n        }\r\n    }\r\n\r\n    getWith(name: string | null = null): string {\r\n        var r: string = name ? this.codes[name] : this.script;\r\n        if (!r) {\r\n            throw \"get with error:\" + name;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    getFunsScript(funsdef: string): string {\r\n        var r: string = \"\";\r\n        for (var i in this.funs) {\r\n            if (funsdef.indexOf(i + \";\") >= 0) {\r\n                r += this.funs[i];\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class ShaderNode {\r\n    private static __id: number = 1;\r\n    //是否删除无用代码\r\n    private static __noCompileEnable = true;\r\n\r\n    childs: any[] = [];\r\n    text: string = \"\";\r\n    parent: ShaderNode;\r\n    name: string;\r\n    noCompile: boolean;\r\n    includefiles: any[];\r\n    condition: any;\r\n    conditionType: number;\r\n    useFuns: string = \"\";\r\n    z: number = 0;\r\n    src: string;\r\n\r\n    constructor(includefiles: any[]) {\r\n        this.includefiles = includefiles;\r\n    }\r\n\r\n    setParent(parent: ShaderNode): void {\r\n        parent.childs.push(this);\r\n        this.z = parent.z + 1;\r\n        this.parent = parent;\r\n    }\r\n\r\n    setCondition(condition: string, type: number): void {\r\n        if (condition) {\r\n            this.conditionType = type;\r\n            condition = condition.replace(/(\\s*$)/g, \"\");\r\n            this.condition = function (): boolean {\r\n                return (this as any)[condition];\r\n            }\r\n            this.condition.__condition = condition;\r\n        }\r\n    }\r\n\r\n    toscript(def: any, out: any[]): any[] {\r\n        return this._toscript(def, out, ++ShaderNode.__id);\r\n    }\r\n\r\n    private _toscript(def: any, out: any[], id: number): any[] {\r\n        if (this.childs.length < 1 && !this.text) return out;\r\n        var outIndex: number = out.length;\r\n        if (this.condition) {\r\n            var ifdef: boolean = !!this.condition.call(def);\r\n            this.conditionType === 2&&(ifdef = !ifdef); //2 is ShaderCompile.IFDEF_ELSE && (ifdef = !ifdef);\r\n            if (!ifdef&&ShaderNode.__noCompileEnable) return out;\r\n        }\r\n        if(this.noCompile||!ShaderNode.__noCompileEnable)\r\n        this.text && out.push(this.text);\r\n        this.childs.length > 0 && this.childs.forEach(function (o: ShaderNode, index: number, arr: ShaderNode[]): void {\r\n            o._toscript(def, out, id);\r\n        });\r\n\r\n        if (this.includefiles.length > 0 && this.useFuns.length > 0) {\r\n            var funsCode: string;\r\n            for (var i: number = 0, n: number = this.includefiles.length; i < n; i++) {\r\n                //如果已经加入了，就不要再加\r\n                if (this.includefiles[i].curUseID == id) {\r\n                    continue;\r\n                }\r\n                funsCode = this.includefiles[i].file.getFunsScript(this.useFuns);\r\n                if (funsCode.length > 0) {\r\n                    this.includefiles[i].curUseID = id;\r\n                    out[0] = funsCode + out[0];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n}\r\n\r\n\r\n","import { ILaya } from \"../../../ILaya\";\r\nimport { BlendEquationSeparate } from \"../../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../../RenderEngine/RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../../RenderEngine/RenderEnum/CullMode\";\r\nimport { StencilOperation } from \"../../RenderEngine/RenderEnum/StencilOperation\";\r\nimport { RenderState } from \"../../RenderEngine/RenderShader/RenderState\";\r\nimport { URL } from \"../../net/URL\";\r\nimport { IncludeFile } from \"./IncludeFile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport interface IShaderCompiledObj {\r\n    vsNode: ShaderNode;\r\n    psNode: ShaderNode;\r\n    includeNames: Set<string>;\r\n    defs: Set<string>;\r\n};\r\n\r\ntype IncludeItem = { name: string, node: ShaderNode, codeName: string, file: IncludeFile };\r\n\r\nconst _clearCR: RegExp = new RegExp(\"\\r\", \"g\");\r\nconst _removeAnnotation: RegExp = new RegExp(\"(/\\\\*([^*]|[\\\\r\\\\\\n]|(\\\\*+([^*/]|[\\\\r\\\\n])))*\\\\*+/)|(//.*)\", \"g\");\r\nconst _reg: RegExp = new RegExp(\"(\\\".*\\\")|('.*')|([#\\\\w\\\\*-\\\\.+/()=<>{}\\\\\\\\]+)|([,;:\\\\\\\\])\", \"g\");\r\nconst _splitToWordExps: RegExp = new RegExp(\"[(\\\".*\\\")]+|[('.*')]+|([ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;])\", \"g\");\r\nconst _splitToWordExps3: RegExp = new RegExp(\"[ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;\\\\|]\", \"g\");\r\n\r\nconst CullStateMap: Record<string, CullMode> = {\r\n    \"Back\": CullMode.Back,\r\n    \"Front\": CullMode.Front,\r\n    \"Off\": CullMode.Off\r\n}\r\nconst BlendStateMap: Record<string, BlendType> = {\r\n    \"Disable\": BlendType.BLEND_DISABLE,\r\n    \"All\": BlendType.BLEND_ENABLE_ALL,\r\n    \"Seperate\": BlendType.BLEND_ENABLE_SEPERATE\r\n}\r\nconst BlendFactorMap: Record<string, BlendFactor> = {\r\n    \"Zero\": BlendFactor.Zero,\r\n    \"One\": BlendFactor.One,\r\n    \"SourceColor\": BlendFactor.SourceColor,\r\n    \"OneMinusSourceColor\": BlendFactor.OneMinusSourceColor,\r\n    \"DestinationColor\": BlendFactor.DestinationColor,\r\n    \"OneMinusDestinationColor\": BlendFactor.OneMinusDestinationColor,\r\n    \"SourceAlpha\": BlendFactor.SourceAlpha,\r\n    \"OneMinusSourceAlpha\": BlendFactor.OneMinusSourceAlpha,\r\n    \"DestinationAlpha\": BlendFactor.DestinationAlpha,\r\n    \"OneMinusDestinationAlpha\": BlendFactor.OneMinusDestinationAlpha,\r\n    \"SourceAlphaSaturate\": BlendFactor.SourceAlphaSaturate,\r\n    \"BlendColor\": BlendFactor.BlendColor,\r\n    \"OneMinusBlendColor\": BlendFactor.OneMinusBlendColor,\r\n}\r\nconst BlendEquationMap: Record<string, BlendEquationSeparate> = {\r\n    \"Add\": BlendEquationSeparate.ADD,\r\n    \"Subtract\": BlendEquationSeparate.SUBTRACT,\r\n    \"Reverse_substract\": BlendEquationSeparate.REVERSE_SUBTRACT,\r\n    \"Min\": BlendEquationSeparate.MIN,\r\n    \"Max\": BlendEquationSeparate.MAX\r\n}\r\n\r\nconst CompareFunctionMap: Record<string, CompareFunction> = {\r\n    \"Never\": CompareFunction.Never,\r\n    \"Less\": CompareFunction.Less,\r\n    \"Equal\": CompareFunction.Equal,\r\n    \"LessEqual\": CompareFunction.LessEqual,\r\n    \"Greater\": CompareFunction.Greater,\r\n    \"NotEqual\": CompareFunction.NotEqual,\r\n    \"GreaterEqual\": CompareFunction.GreaterEqual,\r\n    \"Always\": CompareFunction.Always,\r\n    \"Off\": CompareFunction.Off,\r\n}\r\n\r\nconst StencilOperationMap: Record<string, StencilOperation> = {\r\n    \"Keep\": StencilOperation.Keep,\r\n    \"Zero\": StencilOperation.Zero,\r\n    \"Replace\": StencilOperation.Replace,\r\n    \"IncrementSaturate\": StencilOperation.IncrementSaturate,\r\n    \"DecrementSaturate\": StencilOperation.DecrementSaturate,\r\n    \"Invert\": StencilOperation.Invert,\r\n    \"IncrementWrap\": StencilOperation.IncrementWrap,\r\n    \"DecrementWrap\": StencilOperation.DecrementWrap,\r\n}\r\n\r\n/**\r\n * @private\r\n * <code>ShaderCompile</code> 类用于实现Shader编译。\r\n */\r\nexport class ShaderCompile {\r\n    static IFDEF_NO: number = 0;\r\n    static IFDEF_YES: number = 1;\r\n    static IFDEF_ELSE: number = 2;\r\n    static IFDEF_PARENT: number = 3;\r\n\r\n    static includes: Record<string, IncludeFile> = {};\r\n\r\n    static loadIncludeFileSync: (fileName: string) => void;\r\n\r\n    static addInclude(fileName: string, txt: string, allowReplace?: boolean): IncludeFile {\r\n        if (!txt || txt.length === 0) {\r\n            console.error(\"shader include file err:\" + fileName);\r\n            return null;\r\n        }\r\n\r\n        if (!allowReplace && ShaderCompile.includes[fileName]) {\r\n            console.warn(\"shader include file already exists:\" + fileName);\r\n            return ShaderCompile.includes[fileName];\r\n        }\r\n\r\n        txt = txt.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\r\n        let file = new IncludeFile(txt);\r\n        ShaderCompile.includes[fileName] = file;\r\n        return file;\r\n    }\r\n\r\n    static compile(vs: string, ps: string, basePath?: string): IShaderCompiledObj {\r\n        let result: IShaderCompiledObj = {\r\n            vsNode: new ShaderNode([]),\r\n            psNode: new ShaderNode([]),\r\n            includeNames: new Set(),\r\n            defs: new Set()\r\n        };\r\n\r\n        let includes: Array<IncludeItem> = [];\r\n\r\n        vs = vs.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\r\n        ps = ps.replace(_clearCR, \"\")\r\n\r\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\r\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\r\n\r\n        for (let inc of includes) {\r\n            if (inc.file)\r\n                result.includeNames.add(inc.name);\r\n            else\r\n                console.warn(`ShaderCompile missing file ${inc.name}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static compileAsync(vs: string, ps: string, basePath: string): Promise<IShaderCompiledObj> {\r\n        let result: IShaderCompiledObj = {\r\n            vsNode: new ShaderNode([]),\r\n            psNode: new ShaderNode([]),\r\n            includeNames: new Set(),\r\n            defs: new Set()\r\n        };\r\n\r\n        let includes: Array<IncludeItem> = [];\r\n\r\n        vs = vs.replace(_clearCR, \"\");\r\n        ps = ps.replace(_clearCR, \"\")\r\n\r\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\r\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\r\n\r\n        return this._loadIncludesDeep(result, includes, 0);\r\n    }\r\n\r\n    private static _loadIncludesDeep(result: IShaderCompiledObj, includes: Array<IncludeItem>, index: number): Promise<IShaderCompiledObj> {\r\n        let toLoad: Array<IncludeItem>;\r\n        let includesCnt = includes.length;\r\n        for (let i = index; i < includesCnt; i++) {\r\n            let inc = includes[i];\r\n            if (inc.file)\r\n                result.includeNames.add(inc.name);\r\n            else {\r\n                if (!toLoad) toLoad = [];\r\n                toLoad.push(inc);\r\n            }\r\n        }\r\n\r\n        if (!toLoad)\r\n            return Promise.resolve(result);\r\n\r\n        return ILaya.loader.load(toLoad.map(tc => tc.name)).then(files => {\r\n            let cnt = toLoad.length;\r\n            for (let i = 0; i < cnt; i++) {\r\n                let inc = toLoad[i];\r\n                let file = files[i];\r\n                if (!file) {\r\n                    let childs = inc.node.parent.childs;\r\n                    childs.splice(childs.indexOf(inc.node), 1);\r\n                }\r\n                else {\r\n                    result.includeNames.add(inc.name);\r\n\r\n                    let text = file.getWith(inc.codeName);\r\n                    if (inc.node.condition)\r\n                        inc.node.text = text;\r\n                    else {\r\n                        ShaderCompile._compileToTree(inc.node, text, result.defs, includes, URL.getPath(inc.name));\r\n                        inc.node.text = \"\";\r\n                    }\r\n                }\r\n            }\r\n            if (includes.length > includesCnt)\r\n                return ShaderCompile._loadIncludesDeep(result, includes, includesCnt);\r\n            else\r\n                return result;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _compileToTree(parent: ShaderNode, script: string, defs: Set<string>, includes: Array<IncludeItem>, basePath: string): void {\r\n        let node: ShaderNode, preNode: ShaderNode;\r\n        let text: string, name: string, fname: string;\r\n        let ofs: number, words: any[];\r\n        let i: number, n: number, j: number;\r\n        let lines = script.split(\"\\n\");\r\n\r\n        for (i = 0; i < lines.length; i++) {\r\n            text = lines[i];\r\n            if (text.length < 1) continue;\r\n            ofs = text.indexOf(\"//\");\r\n            if (ofs === 0) continue;\r\n            if (ofs >= 0) text = text.substr(0, ofs);\r\n\r\n            if ((ofs = text.indexOf(\"#\")) < 0) {\r\n                preNode = parent.childs[parent.childs.length - 1];\r\n                let includefiles = parent.includefiles;\r\n                if (preNode && !preNode.name) {\r\n                    includefiles.length > 0 && IncludeFile.splitToWords(text, preNode);\r\n                    preNode.text += \"\\n\" + text;\r\n                    continue;\r\n                }\r\n\r\n                node = new ShaderNode(includefiles);\r\n                node.text = text;\r\n                node.noCompile = true;\r\n                includefiles.length > 0 && IncludeFile.splitToWords(text, node);\r\n                node.setParent(parent);\r\n                continue;\r\n            }\r\n\r\n            node = new ShaderNode(parent.includefiles);\r\n            node.text = text;\r\n            node.noCompile = true;\r\n\r\n            name = \"#\";\r\n            for (j = ofs + 1, n = text.length; j < n; j++) {\r\n                let c: string = text.charAt(j);\r\n                if (c === ' ' || c === '\\t' || c === '?') break;\r\n                name += c;\r\n            }\r\n            node.name = name;\r\n            switch (name) {\r\n                case \"#ifdef\":\r\n                case \"#ifndef\":\r\n                    node.src = text;\r\n                    node.noCompile = text.match(/[!&|()=<>]/) != null;\r\n                    if (!node.noCompile) {\r\n                        words = text.replace(/^\\s*/, '').split(/\\s+/);\r\n                        node.setCondition(words[1], name === \"#ifdef\" ? ShaderCompile.IFDEF_YES : ShaderCompile.IFDEF_ELSE);\r\n                        node.text = node.text;\r\n                    } else {\r\n                        console.log(\"function():Boolean{return \" + text.substr(ofs + node.name.length) + \"}\");\r\n                    }\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n\r\n                    words = text.substr(j).split(_splitToWordExps3);\r\n                    for (j = 0; j < words.length; j++) {\r\n                        text = words[j];\r\n                        text.length && defs.add(text);\r\n                    }\r\n                    break;\r\n\r\n                case \"#if\":\r\n                case \"#elif\":\r\n                    node.src = text;\r\n                    node.noCompile = true;\r\n                    if (name == \"#elif\") {\r\n                        parent = parent.parent;\r\n                        preNode = parent.childs[parent.childs.length - 1];\r\n                        //匹配\"#ifdef\"\r\n                        preNode.text = preNode.src;\r\n                        preNode.noCompile = true;\r\n                        preNode.condition = null;\r\n                    }\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n\r\n                    words = text.substr(j).split(_splitToWordExps3);\r\n                    for (j = 0; j < words.length; j++) {\r\n                        text = words[j];\r\n                        text.length && text != \"defined\" && defs.add(text);\r\n                    }\r\n                    break;\r\n\r\n                case \"#else\":\r\n                    node.src = text;\r\n                    parent = parent.parent;\r\n                    preNode = parent.childs[parent.childs.length - 1];\r\n                    node.noCompile = preNode.noCompile;\r\n                    if (!node.noCompile) {\r\n                        node.condition = preNode.condition;\r\n                        node.conditionType = preNode.conditionType == ShaderCompile.IFDEF_YES ? ShaderCompile.IFDEF_ELSE : ShaderCompile.IFDEF_YES;\r\n                        //node.text =  node.text + \" \" + preNode.text + \" \" + node.conditionType;\r\n                    }\r\n                    //递归节点树\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n                    break;\r\n\r\n                case \"#endif\":\r\n                    parent = parent.parent;\r\n                    preNode = parent.childs[parent.childs.length - 1];\r\n                    node.noCompile = preNode.noCompile;\r\n                    if (!node.noCompile) {\r\n                        node.text = node.text;\r\n                    }\r\n                    node.setParent(parent);\r\n                    break;\r\n\r\n                case \"#include\"://这里有问题,主要是空格\r\n                    words = IncludeFile.splitToWords(text, null);\r\n                    let includeName: string = words[1];\r\n                    let includeFile: IncludeFile;\r\n                    if (includeName.startsWith(\".\"))\r\n                        includeName = URL.join(basePath, includeName);\r\n                    else if (includeName.startsWith(\"/\"))\r\n                        includeName = URL.formatURL(includeName.substring(1));\r\n                    else {\r\n                        //check if builtin\r\n                        includeFile = ShaderCompile.includes[includeName];\r\n                        if (!includeFile)\r\n                            includeName = \"internal/\" + includeName;\r\n                    }\r\n                    includeFile = ShaderCompile.includes[includeName];\r\n\r\n                    if (!includeFile && ShaderCompile.loadIncludeFileSync) {\r\n                        ShaderCompile.loadIncludeFileSync(includeName);\r\n                        includeFile = ShaderCompile.includes[includeName];\r\n                    }\r\n\r\n                    let codeName = words[2] == 'with' ? words[3] : null;\r\n                    includes.push({ name: includeName, codeName: codeName, node: node, file: includeFile });\r\n                    node.setParent(parent);\r\n\r\n                    if ((ofs = words[0].indexOf(\"?\")) < 0) {\r\n                        if (includeFile) {\r\n                            text = includeFile.getWith(codeName);\r\n                            this._compileToTree(node, text, defs, includes, URL.getPath(includeName));\r\n                        }\r\n                        node.text = \"\";\r\n                    }\r\n                    else {\r\n                        node.setCondition(words[0].substr(ofs + 1), ShaderCompile.IFDEF_YES);\r\n\r\n                        if (includeFile)\r\n                            node.text = includeFile.getWith(codeName);\r\n                    }\r\n                    break;\r\n\r\n                case \"#import\":\r\n                    words = IncludeFile.splitToWords(text, null);\r\n                    fname = words[1];\r\n                    node.includefiles.push({ node: node, file: ShaderCompile.includes[fname], ofs: node.text.length });\r\n                    break;\r\n\r\n                default:\r\n                    node.setParent(parent);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRenderState(obj: Record<string, string | boolean | number | string[]>, renderState: RenderState) {\r\n        if (!obj) {\r\n            return;\r\n        }\r\n\r\n        renderState.cull = CullStateMap[<string>obj.cull];\r\n        renderState.blend = BlendStateMap[<string>obj.blend];\r\n        renderState.srcBlend = BlendFactorMap[<string>obj.srcBlend];\r\n        renderState.dstBlend = BlendFactorMap[<string>obj.dstBlend];\r\n        renderState.srcBlendRGB = BlendFactorMap[<string>obj.srcBlendRGB];\r\n        renderState.dstBlendRGB = BlendFactorMap[<string>obj.dstBlendRGB];\r\n        renderState.srcBlendAlpha = BlendFactorMap[<string>obj.srcBlendAlpha];\r\n        renderState.dstBlendAlpha = BlendFactorMap[<string>obj.dstBlendAlpha];\r\n        renderState.blendEquation = BlendEquationMap[<string>obj.blendEquation];\r\n        renderState.blendEquationRGB = BlendEquationMap[<string>obj.blendEquationRGB];\r\n        renderState.blendEquationAlpha = BlendEquationMap[<string>obj.blendEquationAlpha];\r\n        renderState.depthTest = CompareFunctionMap[<string>obj.depthTest];\r\n        renderState.depthWrite = <boolean>obj.depthWrite;\r\n        renderState.stencilRef = <number>obj.stencilRef;\r\n        renderState.stencilTest = CompareFunctionMap[<string>obj.stencilTest];\r\n        renderState.stencilWrite = <boolean>obj.stencilWrite;\r\n        let stencilOp = <string[]>obj.stencilOp;\r\n        let stencilFail = stencilOp ? stencilOp[0] : null;\r\n        let stencilZFail = stencilOp ? stencilOp[1] : null;\r\n        let stencilZPass = stencilOp ? stencilOp[2] : null;\r\n        renderState.stencilOp.x = StencilOperationMap[stencilFail];\r\n        renderState.stencilOp.y = StencilOperationMap[stencilZFail];\r\n        renderState.stencilOp.z = StencilOperationMap[stencilZPass];\r\n\r\n        return;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { IClone } from \"../../utils/IClone\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\n\r\n/**\r\n * <code>DefineDatas</code> 类用于创建宏定义数据集合。\r\n */\r\nexport class DefineDatas implements IClone {\r\n\t/** @internal */\r\n\t_mask: Array<number> = [];\r\n\t/** @internal */\r\n\t_length: number = 0;\r\n\r\n\t/**\r\n\t * 创建一个 <code>DefineDatas</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_intersectionDefineDatas(define: DefineDatas): void {\r\n\t\tvar unionMask: Array<number> = define._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tfor (var i: number = this._length - 1; i >= 0; i--) {\r\n\t\t\tvar value: number = mask[i] & unionMask[i];\r\n\t\t\tif (value == 0 && i == this._length - 1)\r\n\t\t\t\tthis._length--;\r\n\t\t\telse\r\n\t\t\t\tmask[i] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 添加宏定义值。\r\n\t * @param define 宏定义值。\r\n\t */\r\n\tadd(define: ShaderDefine): void {\r\n\t\tvar index: number = define._index;\r\n\t\tvar size: number = index + 1;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar maskStart: number = this._length;//must from this._length because this._length maybe less than mask.length and have dirty data should clear.\r\n\t\tif (maskStart < size) {\r\n\t\t\t(mask.length < size) && (mask.length = size);//mask.length maybe small than size,maybe not.\r\n\t\t\tfor (; maskStart < index; maskStart++)\r\n\t\t\t\tmask[maskStart] = 0;\r\n\t\t\tmask[index] = define._value;\r\n\t\t\tthis._length = size;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmask[index] |= define._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 移除宏定义。\r\n\t * @param define 宏定义。\r\n\t */\r\n\tremove(define: ShaderDefine): void {\r\n\t\tvar index: number = define._index;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar endIndex: number = this._length - 1;\r\n\t\tif (index > endIndex)//不重置Length,避免经常扩充\r\n\t\t\treturn;\r\n\t\tvar newValue = mask[index] & ~define._value;\r\n\t\tif (index == endIndex && newValue === 0)\r\n\t\t\tthis._length--;\r\n\t\telse\r\n\t\t\tmask[index] = newValue;\r\n\t}\r\n\r\n\t/**\r\n\t * 添加宏定义集合。\r\n\t * @param define 宏定义集合。\r\n\t */\r\n\taddDefineDatas(define: DefineDatas): void {\r\n\t\tvar addMask: Array<number> = define._mask;\r\n\t\tvar size: number = define._length;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar maskStart: number = this._length;\r\n\t\tif (maskStart < size) {\r\n\t\t\tmask.length = size;\r\n\t\t\tfor (var i: number = 0; i < maskStart; i++)\r\n\t\t\t\tmask[i] |= addMask[i];\r\n\t\t\tfor (; i < size; i++)\r\n\t\t\t\tmask[i] = addMask[i];\r\n\t\t\tthis._length = size;\r\n\t\t} else {\r\n\t\t\tfor (var i: number = 0; i < size; i++) {\r\n\t\t\t\tmask[i] |= addMask[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 移除宏定义集合。\r\n\t * @param define 宏定义集合。\r\n\t */\r\n\tremoveDefineDatas(define: DefineDatas): void {\r\n\t\tvar removeMask: Array<number> = define._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar endIndex: number = this._length - 1;\r\n\t\tvar i = Math.min(define._length, endIndex);\r\n\t\tfor (; i >= 0; i--) {\r\n\t\t\tvar newValue = mask[i] & ~removeMask[i];\r\n\t\t\tif (i == endIndex && newValue === 0) {\r\n\t\t\t\tendIndex--;\r\n\t\t\t\tthis._length--;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmask[i] = newValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 是否有宏定义。\r\n\t * @param define 宏定义。\r\n\t */\r\n\thas(define: ShaderDefine): boolean {\r\n\t\tvar index: number = define._index;\r\n\t\tif (index >= this._length)\r\n\t\t\treturn false;\r\n\t\treturn (this._mask[index] & define._value) !== 0;\r\n\t}\r\n\r\n\t/**\r\n\t * 清空宏定义。\r\n\t */\r\n\tclear(): void {\r\n\t\tthis._length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @param\tdestObject 克隆源。\r\n\t */\r\n\tcloneTo(destObject: any): void {\r\n\t\tvar destDefineData: DefineDatas = (<DefineDatas>destObject);\r\n\t\tvar destMask: Array<number> = destDefineData._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar count: number = this._length;\r\n\t\tdestMask.length = count;\r\n\t\tfor (var i: number = 0; i < count; i++)\r\n\t\t\tdestMask[i] = mask[i];\r\n\t\tdestDefineData._length = count;\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: DefineDatas = new DefineDatas();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tdelete this._mask;\r\n\t}\r\n}\r\n\r\n\r\n","/**\r\n * <code>ShaderDefine</code> 类用于定义宏数据。\r\n */\r\nexport class ShaderDefine {\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 存储 texture uniform gamma define\r\n\t */\r\n\tstatic _texGammaDefine: { [key: string]: ShaderDefine } = {};\r\n\r\n\t/**@internal */\r\n\t_index: number;\r\n\t/**@internal */\r\n\t_value: number;\r\n\t/**\r\n\t * 创建一个宏定义的实例\r\n\t * @param index 宏索引\r\n\t * @param value 宏值\r\n\t */\r\n\tconstructor(index: number, value: number) {\r\n\t\tthis._index = index;\r\n\t\tthis._value = value;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { DefineDatas } from \"./DefineDatas\";\r\nimport { Shader3D } from \"./Shader3D\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { SubShader } from \"./SubShader\";\r\n\r\n/**\r\n * 着色器变种。\r\n */\r\nexport class ShaderVariant {\r\n    /** @internal */\r\n    _shader: Shader3D;\r\n    /** @internal */\r\n    _subShaderIndex: number = 0;\r\n    /** @internal */\r\n    _passIndex: number = 0;\r\n    /** @internal */\r\n    _defineNames: string[];\r\n\r\n    /**\r\n     * 着色器。\r\n     */\r\n    public get shader(): Shader3D {\r\n        return this._shader;\r\n    }\r\n\r\n    /**\r\n     * 子着色器索引。\r\n     */\r\n    public get subShaderIndex(): number {\r\n        return this._subShaderIndex;\r\n    }\r\n\r\n    /**\r\n     * 通道索引。\r\n     */\r\n    public get passIndex(): number {\r\n        return this._passIndex;\r\n    }\r\n\r\n    /**\r\n     * 宏定义集合。\r\n     */\r\n    public get defineNames(): Readonly<string[]> {\r\n        return this._defineNames;\r\n    }\r\n\r\n    /**\r\n     * 创建着色器变种。\r\n     * @param shader 着色器\r\n     * @param subShaderIndex 子着色器索引 \r\n     * @param passIndex 通道索引\r\n     * @param defines 宏定义集合\r\n     */\r\n    constructor(shader: Shader3D, subShaderIndex: number, passIndex: number, defines: string[]) {\r\n        this.setValue(shader, subShaderIndex, passIndex, defines);\r\n    }\r\n\r\n    /**\r\n     * 给着色器变种赋值。\r\n     * @param shader 着色器\r\n     * @param subShaderIndex 子着色器索引 \r\n     * @param passIndex 通道索引\r\n     * @param defineNames 宏定义集合\r\n     */\r\n    setValue(shader: Shader3D, subShaderIndex: number, passIndex: number, defineNames: string[]): void {\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                if (pass) {\r\n                    var validDefine: DefineDatas = pass._validDefine;\r\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++) {\r\n                        var defname: string = defineNames[i];\r\n                        if (!validDefine.has(Shader3D.getDefineByName(defname)))\r\n                            throw `ShaderVariantInfo:Invalid defineName ${defname} in ${shader._name} subShaderIndex of ${subShaderIndex} passIndex of ${passIndex}.`;\r\n                    }\r\n                }\r\n                else {\r\n                    throw `ShaderVariantInfo:Shader don't have passIndex of ${passIndex}.`;\r\n                }\r\n            }\r\n            else {\r\n                throw `ShaderVariantInfo:Shader don't have subShaderIndex of ${subShaderIndex}.`;\r\n            }\r\n        }\r\n        else {\r\n            throw `ShaderVariantInfo:Shader can't be null.`;\r\n        }\r\n        this._shader = shader;\r\n        this._subShaderIndex = subShaderIndex;\r\n        this._passIndex = passIndex;\r\n        this._defineNames = defineNames;\r\n    }\r\n\r\n    /**\r\n     * 是否相等。\r\n     * @param other 其它着色器变种\r\n     * @return 是否相等。\r\n     */\r\n    equal(other: ShaderVariant): boolean {\r\n        if (this._shader !== other._shader || this._subShaderIndex !== other._subShaderIndex || this._passIndex !== other._passIndex)\r\n            return false;\r\n\r\n        var defines: string[] = this._defineNames;\r\n        var otherDefines: string[] = other._defineNames;\r\n        if (defines.length !== otherDefines.length)\r\n            return false;\r\n        for (var i: number = 0, n: number = this._defineNames.length; i < n; i++) {\r\n            if (defines[i] !== otherDefines[i])\r\n                return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return 着色器变种。 \r\n     */\r\n    clone(): ShaderVariant {\r\n        var dest: ShaderVariant = new ShaderVariant(this._shader, this._subShaderIndex, this._passIndex, this._defineNames.slice());\r\n        return dest;\r\n    }\r\n}\r\n\r\n/**\r\n * 着色器变种集合。\r\n */\r\nexport class ShaderVariantCollection {\r\n    /** @internal */\r\n    private _allCompiled: boolean = false;\r\n    /** @internal */\r\n    private _variants: ShaderVariant[] = [];\r\n\r\n    /**\r\n     * 是否已经全部编译。\r\n     */\r\n    get allCompiled(): boolean {\r\n        return this._allCompiled;\r\n    }\r\n\r\n    /**\r\n     * 包含的变种数量。\r\n     */\r\n    get variantCount(): number {\r\n        return this._variants.length;\r\n    }\r\n\r\n    /**\r\n     * 添加着色器变种。\r\n     * @param variant 着色器变种。\r\n     * @param 是否添加成功。\r\n     */\r\n    add(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant))\r\n                return false;\r\n        }\r\n        this._variants.push(variant.clone());\r\n        this._allCompiled = false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 移除着色器变种。\r\n     * @param variant 着色器变种。\r\n     * @return 是否移除成功。\r\n     */\r\n    remove(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant)) {\r\n                this._variants.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 是否包含着色器变种。\r\n     * @param variant 着色器变种。\r\n     */\r\n    contatins(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取着色器变种。\r\n     * @param index 索引。\r\n     * @returns 着色器变种。\r\n     */\r\n    getByIndex(index: number): ShaderVariant {\r\n        return this._variants[index];\r\n    }\r\n\r\n    /**\r\n     * 清空。\r\n     */\r\n    clear(): void {\r\n        this._variants.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 执行编译。\r\n     */\r\n    compile(): void {\r\n        if (!this._allCompiled) {\r\n            var variants: ShaderVariant[] = this._variants;\r\n            for (var i: number = 0, n: number = variants.length; i < n; i++) {\r\n                var variant: ShaderVariant = variants[i];\r\n                Shader3D.compileShaderByDefineNames(variant._shader._name, variant._subShaderIndex, variant._passIndex, variant._defineNames,[]);\r\n            }\r\n            this._allCompiled = true;\r\n        }\r\n    }\r\n}","/**\r\n * <code>MathUtils3D</code> 类用于创建数学工具。\r\n */\r\nexport class MathUtils3D {\r\n\t/**单精度浮点(float)零的容差*/\r\n\tstatic zeroTolerance: number = 1e-6;\r\n\t/**浮点数默认最大值*/\r\n\tstatic MaxValue: number = 3.40282347e+38;\r\n\t/**浮点数默认最小值*/\r\n\tstatic MinValue: number = -3.40282347e+38;\r\n\t/**角度转弧度系数*/\r\n\tstatic Deg2Rad: number = Math.PI / 180;\r\n\r\n\t/**\r\n\t * 创建一个 <code>MathUtils</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 是否在容差的范围内近似于0\r\n\t * @param  判断值\r\n\t * @return  是否近似于0\r\n\t */\r\n\tstatic isZero(v: number): boolean {\r\n\t\treturn Math.abs(v) < MathUtils3D.zeroTolerance;\r\n\t}\r\n\r\n\t/**\r\n\t * 两个值是否在容差的范围内近似相等Sqr Magnitude\r\n\t * @param  判断值\r\n\t * @return  是否近似于0\r\n\t */\r\n\tstatic nearEqual(n1: number, n2: number): boolean {\r\n\t\tif (MathUtils3D.isZero(n1 - n2))\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tstatic fastInvSqrt(value: number): number {\r\n\t\tif (MathUtils3D.isZero(value))\r\n\t\t\treturn value;\r\n\t\treturn 1.0 / Math.sqrt(value);\r\n\t}\r\n}\r\n\r\n\r\n","import { IClone } from \"../utils/IClone\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\n\r\nexport interface IV2 {\r\n    x: number;\r\n    y: number;\r\n}\r\n/**\r\n * <code>Vector2</code> 类用于创建二维向量。\r\n */\r\nexport class Vector2 implements IClone {\r\n    /**零向量,禁止修改*/\r\n    static readonly ZERO: Readonly<Vector2> = new Vector2(0.0, 0.0);\r\n    /**一向量,禁止修改*/\r\n    static readonly ONE: Readonly<Vector2> = new Vector2(1.0, 1.0);\r\n    static TempVector2 = new Vector2();\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector2</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    /**\r\n     * 设置xy值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     */\r\n    setValue(x: number, y: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * 缩放二维向量。\r\n     * @param\ta 源二维向量。\r\n     * @param\tb 缩放值。\r\n     * @param\tout 输出二维向量。\r\n     */\r\n    static scale(a: Vector2, b: number, out: Vector2): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n    }\r\n\r\n    /**\r\n     * 判断两个二维向量是否相等。\r\n     * @param\ta 三维向量。\r\n     * @param\tb 三维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector2, b: Vector2): boolean {\r\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y);\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y];\r\n    }\r\n\r\n    /**\r\n     * 写入Float32Array数组\r\n     * @param array 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(array: Float32Array, offset: number = 0): void {\r\n        array[offset + 0] = this.x;\r\n        array[offset + 1] = this.y;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector2: Vector2 = (<Vector2>destObject);\r\n        destVector2.x = this.x;\r\n        destVector2.y = this.y;\r\n    }\r\n\r\n    /**\r\n     * 求两个二维向量的点积。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @return   点积。\r\n     */\r\n    static dot(a: Vector2, b: Vector2): number {\r\n        return (a.x * b.x) + (a.y * b.y);\r\n    }\r\n\r\n    /**\r\n     * 归一化二维向量。\r\n     * @param\ts 源三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static normalize(s: Vector2, out: Vector2): void {\r\n        var x: number = s.x, y: number = s.y;\r\n        var len: number = x * x + y * y;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度。\r\n     */\r\n    static scalarLength(a: Vector2): number {\r\n        var x: number = a.x, y: number = a.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector2: Vector2 = new Vector2();\r\n        this.cloneTo(destVector2);\r\n        return destVector2;\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array | null = null): void//[NATIVE_TS]\r\n    {\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n    }\r\n\r\n    static rewriteNumProperty(proto: any, name: string, index: number): void {\r\n        Object[\"defineProperty\"](proto, name, {\r\n            \"get\": function (): any {\r\n                return this.elements[index];\r\n            },\r\n            \"set\": function (v: any): void {\r\n                this.elements[index] = v;\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n","import { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\n/**\r\n * <code>Vector4</code> 类用于创建四维向量。\r\n */\r\nexport class Vector4 implements IClone {\r\n\r\n    /**零向量*/\r\n    static readonly ZERO: Readonly<Vector4> = new Vector4();\r\n\r\n    /*一向量*/\r\n    static readonly ONE: Readonly<Vector4> = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\r\n    /*X单位向量*/\r\n    static readonly UnitX: Readonly<Vector4> = new Vector4(1.0, 0.0, 0.0, 0.0);\r\n\r\n    /*Y单位向量*/\r\n    static readonly UnitY: Readonly<Vector4> = new Vector4(0.0, 1.0, 0.0, 0.0);\r\n\r\n    /*Z单位向量*/\r\n    static readonly UnitZ: Readonly<Vector4> = new Vector4(0.0, 0.0, 1.0, 0.0);\r\n\r\n    /*W单位向量*/\r\n    static readonly UnitW: Readonly<Vector4> = new Vector4(0.0, 0.0, 0.0, 1.0);\r\n\r\n    /** @internal */\r\n    static tempVec4: Vector4 = new Vector4(0.0, 0.0, 0.0, 0.0);\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n    /**W轴坐标*/\r\n    w: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector4</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     * @param\tz  Z轴坐标。\r\n     * @param\tw  W轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置xyzw值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @param\tw W值。\r\n     */\r\n    setValue(x: number, y: number, z: number, w: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  arr 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = arr[offset + 0];\r\n        this.y = arr[offset + 1];\r\n        this.z = arr[offset + 2];\r\n        this.w = arr[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y, this.z, this.w];\r\n    }\r\n\r\n    /**\r\n     * 写入Float32Array数组\r\n     * @param arr 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(arr: Float32Array, offset: number = 0): void {\r\n        arr[offset + 0] = this.x;\r\n        arr[offset + 1] = this.y;\r\n        arr[offset + 2] = this.z;\r\n        arr[offset + 3] = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector4: Vector4 = (<Vector4>destObject);\r\n        destVector4.x = this.x;\r\n        destVector4.y = this.y;\r\n        destVector4.z = this.z;\r\n        destVector4.w = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector4: Vector4 = new Vector4();\r\n        this.cloneTo(destVector4);\r\n        return destVector4;\r\n    }\r\n\r\n    /**\r\n     * 插值四维向量。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\tt 插值比例。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static lerp(a: Vector4, b: Vector4, t: number, out: Vector4): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, aw: number = a.w;\r\n        out.x = ax + t * (b.x - ax);\r\n        out.y = ay + t * (b.y - ay);\r\n        out.z = az + t * (b.z - az);\r\n        out.w = aw + t * (b.w - aw);\r\n    }\r\n\r\n    /**\r\n     * 通过4x4矩阵把一个四维向量转换为另一个四维向量\r\n     * @param\tvector4 带转换四维向量。\r\n     * @param\tM4x4    4x4矩阵。\r\n     * @param\tout     转换后四维向量。\r\n     */\r\n    static transformByM4x4(vector4: Vector4, m4x4: Matrix4x4, out: Vector4): void {\r\n        var vx: number = vector4.x;\r\n        var vy: number = vector4.y;\r\n        var vz: number = vector4.z;\r\n        var vw: number = vector4.w;\r\n\r\n        var me: Float32Array = m4x4.elements;\r\n\r\n        out.x = vx * me[0] + vy * me[4] + vz * me[8] + vw * me[12];\r\n        out.y = vx * me[1] + vy * me[5] + vz * me[9] + vw * me[13];\r\n        out.z = vx * me[2] + vy * me[6] + vz * me[10] + vw * me[14];\r\n        out.w = vx * me[3] + vy * me[7] + vz * me[11] + vw * me[15];\r\n    }\r\n\r\n    /**\r\n     * 判断两个四维向量是否相等。\r\n     * @param\ta 四维向量。\r\n     * @param\tb 四维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector4, b: Vector4): boolean {\r\n        return MathUtils3D.nearEqual(Math.abs(a.x), Math.abs(b.x)) && MathUtils3D.nearEqual(Math.abs(a.y), Math.abs(b.y)) && MathUtils3D.nearEqual(Math.abs(a.z), Math.abs(b.z)) && MathUtils3D.nearEqual(Math.abs(a.w), Math.abs(b.w));\r\n    }\r\n\r\n    /**\r\n     * 求四维向量是否相等\r\n     * @param value \r\n     * @returns \r\n     */\r\n    equal(value: Vector4) {\r\n        return Vector4.equals(this, value);\r\n    }\r\n\r\n    /**\r\n     * 求四维向量的长度。\r\n     * @return  长度。\r\n     */\r\n    length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 求四维向量长度的平方。\r\n     * @return  长度的平方。\r\n     */\r\n    lengthSquared(): number {\r\n\r\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n    }\r\n\r\n    /**\r\n     * 归一化四维向量。\r\n     * @param\ts   源四维向量。\r\n     * @param\tout 输出四维向量。\r\n     */\r\n    static normalize(s: Vector4, out: Vector4): void {\r\n        var len: number = s.length();\r\n        if (len > 0) {\r\n            var inverse: number = 1.0 / len;\r\n            out.x = s.x * inverse;\r\n            out.y = s.y * inverse;\r\n            out.z = s.z * inverse;\r\n            out.w = s.w * inverse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的和。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static add(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n        out.w = a.w + b.w;\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的差。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static subtract(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        out.z = a.z - b.z;\r\n        out.w = a.w - b.w;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四维向量的乘积。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static multiply(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n        out.w = a.w * b.w;\r\n    }\r\n\r\n    /**\r\n     * 缩放四维向量。\r\n     * @param\ta   源四维向量。\r\n     * @param\tb   缩放值。\r\n     * @param\tout 输出四维向量。\r\n     */\r\n    static scale(a: Vector4, b: number, out: Vector4): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n        out.w = a.w * b;\r\n    }\r\n\r\n    /**\r\n     * 求一个指定范围的四维向量\r\n     * @param\tvalue clamp向量\r\n     * @param\tmin   最小\r\n     * @param\tmax   最大\r\n     * @param   out   输出向量\r\n     */\r\n    static Clamp(value: Vector4, min: Vector4, max: Vector4, out: Vector4): void {\r\n        var x: number = value.x;\r\n        var y: number = value.y;\r\n        var z: number = value.z;\r\n        var w: number = value.w;\r\n\r\n        var mineX: number = min.x;\r\n        var mineY: number = min.y;\r\n        var mineZ: number = min.z;\r\n        var mineW: number = min.w;\r\n\r\n        var maxeX: number = max.x;\r\n        var maxeY: number = max.y;\r\n        var maxeZ: number = max.z;\r\n        var maxeW: number = max.w;\r\n\r\n        x = (x > maxeX) ? maxeX : x;\r\n        x = (x < mineX) ? mineX : x;\r\n\r\n        y = (y > maxeY) ? maxeY : y;\r\n        y = (y < mineY) ? mineY : y;\r\n\r\n        z = (z > maxeZ) ? maxeZ : z;\r\n        z = (z < mineZ) ? mineZ : z;\r\n\r\n        w = (w > maxeW) ? maxeW : w;\r\n        w = (w < mineW) ? mineW : w;\r\n\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n        out.w = w;\r\n    }\r\n\r\n    /**\r\n     * 两个四维向量距离的平方。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离的平方。\r\n     */\r\n    static distanceSquared(value1: Vector4, value2: Vector4): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        var w: number = value1.w - value2.w;\r\n\r\n        return (x * x) + (y * y) + (z * z) + (w * w);\r\n    }\r\n\r\n    /**\r\n     * 两个四维向量距离。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离。\r\n     */\r\n    static distance(value1: Vector4, value2: Vector4): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        var w: number = value1.w - value2.w;\r\n\r\n        return Math.sqrt((x * x) + (y * y) + (z * z) + (w * w));\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的点积。\r\n     * @param\ta 向量。\r\n     * @param\tb 向量。\r\n     * @return  点积。\r\n     */\r\n    static dot(a: Vector4, b: Vector4): number {\r\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个四维向量x、y、z的最小值计算新的四维向量。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static min(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = Math.min(a.x, b.x);\r\n        out.y = Math.min(a.y, b.y);\r\n        out.z = Math.min(a.z, b.z);\r\n        out.w = Math.min(a.w, b.w);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个四维向量x、y、z的最大值计算新的四维向量。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static max(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = Math.max(a.x, b.x);\r\n        out.y = Math.max(a.y, b.y);\r\n        out.z = Math.max(a.z, b.z);\r\n        out.w = Math.max(a.w, b.w);\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array = null): void {\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n            (<any>this).elements[2] = this.z;\r\n            (<any>this).elements[3] = this.w;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n        Vector2.rewriteNumProperty(this, \"z\", 2);\r\n        Vector2.rewriteNumProperty(this, \"w\", 3);\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Vector4 } from \"./Vector4\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { Quaternion } from \"./Quaternion\";\r\n\r\n/**\r\n * <code>Vector3</code> 类用于创建三维向量。\r\n */\r\nexport class Vector3 implements IClone {\r\n    /**@internal\t*/\r\n    static _tempVector4 = new Vector4();\r\n    static _tempVector3 = new Vector3();\r\n\r\n    static readonly ZERO: Readonly<Vector3> = new Vector3(0.0, 0.0, 0.0);\r\n    static readonly ONE: Readonly<Vector3> = new Vector3(1.0, 1.0, 1.0);\r\n    static readonly NegativeUnitX: Readonly<Vector3> = new Vector3(-1, 0, 0);\r\n    static readonly UnitX: Readonly<Vector3> = new Vector3(1, 0, 0);\r\n    static readonly UnitY: Readonly<Vector3> = new Vector3(0, 1, 0);\r\n    static readonly UnitZ: Readonly<Vector3> = new Vector3(0, 0, 1);\r\n    static readonly ForwardRH: Readonly<Vector3> = new Vector3(0, 0, -1);\r\n    static readonly ForwardLH: Readonly<Vector3> = new Vector3(0, 0, 1);\r\n    static readonly Up: Readonly<Vector3> = new Vector3(0, 1, 0);\r\n\r\n    /**\r\n     * 两个三维向量距离的平方。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离的平方。\r\n     */\r\n    static distanceSquared(value1: Vector3, value2: Vector3): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        return (x * x) + (y * y) + (z * z);\r\n    }\r\n\r\n    /**\r\n     * 两个三维向量距离。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离。\r\n     */\r\n    static distance(value1: Vector3, value2: Vector3): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        return Math.sqrt((x * x) + (y * y) + (z * z));\r\n    }\r\n\r\n    /**\r\n     * 分别取两个三维向量x、y、z的最小值计算新的三维向量。\r\n     * @param\ta。\r\n     * @param\tb。\r\n     * @param\tout。\r\n     */\r\n    static min(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = Math.min(a.x, b.x);\r\n        out.y = Math.min(a.y, b.y);\r\n        out.z = Math.min(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个三维向量x、y、z的最大值计算新的三维向量。\r\n     * @param\ta a三维向量。\r\n     * @param\tb b三维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static max(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = Math.max(a.x, b.x);\r\n        out.y = Math.max(a.y, b.y);\r\n        out.z = Math.max(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * 根据四元数旋转三维向量。\r\n     * @param\tsource 源三维向量。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static transformQuat(source: Vector3, rotation: Quaternion, out: Vector3): void {\r\n        var x: number = source.x, y: number = source.y, z: number = source.z, qx: number = rotation.x, qy: number = rotation.y, qz: number = rotation.z, qw: number = rotation.w,\r\n\r\n            ix: number = qw * x + qy * z - qz * y, iy: number = qw * y + qz * x - qx * z, iz: number = qw * z + qx * y - qy * x, iw: number = -qx * x - qy * y - qz * z;\r\n\r\n        out.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        out.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        out.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度。\r\n     */\r\n    static scalarLength(a: Vector3): number {\r\n        var x: number = a.x, y: number = a.y, z: number = a.z;\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度的平方。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度的平方。\r\n     */\r\n    static scalarLengthSquared(a: Vector3): number {\r\n        var x: number = a.x, y: number = a.y, z: number = a.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * 归一化三维向量。\r\n     * @param\ts 源三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static normalize(s: Vector3, out: Vector3): void {\r\n        var x: number = s.x, y: number = s.y, z: number = s.z;\r\n        var len: number = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n            out.z = z * len;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 计算两个三维向量的乘积。\r\n     * @param\ta left三维向量。\r\n     * @param\tb right三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static multiply(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n    }\r\n\r\n    /**\r\n     * 缩放三维向量。\r\n     * @param\ta 源三维向量。\r\n     * @param\tb 缩放值。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static scale(a: Vector3, b: number, out: Vector3): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n    }\r\n\r\n    /**\r\n     * 插值三维向量。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\tt 插值比例。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static lerp(a: Vector3, b: Vector3, t: number, out: Vector3): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z;\r\n        out.x = ax + t * (b.x - ax);\r\n        out.y = ay + t * (b.y - ay);\r\n        out.z = az + t * (b.z - az);\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个三维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出三维向量。\r\n     */\r\n    static transformV3ToV3(vector: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var intermediate: Vector4 = Vector3._tempVector4;\r\n        Vector3.transformV3ToV4(vector, transform, intermediate);\r\n        result.x = intermediate.x;\r\n        result.y = intermediate.y;\r\n        result.z = intermediate.z;\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个四维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出四维向量。\r\n     */\r\n    static transformV3ToV4(vector: Vector3, transform: Matrix4x4, result: Vector4): void {\r\n        var vectorX: number = vector.x;\r\n        var vectorY: number = vector.y;\r\n        var vectorZ: number = vector.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        result.x = (vectorX * transformElem[0]) + (vectorY * transformElem[4]) + (vectorZ * transformElem[8]) + transformElem[12];\r\n        result.y = (vectorX * transformElem[1]) + (vectorY * transformElem[5]) + (vectorZ * transformElem[9]) + transformElem[13];\r\n        result.z = (vectorX * transformElem[2]) + (vectorY * transformElem[6]) + (vectorZ * transformElem[10]) + transformElem[14];\r\n        result.w = (vectorX * transformElem[3]) + (vectorY * transformElem[7]) + (vectorZ * transformElem[11]) + transformElem[15];\r\n    }\r\n\r\n    /**\r\n     * 通过法线矩阵转换一个法线三维向量到另外一个三维向量。\r\n     * @param\tnormal 源法线三维向量。\r\n     * @param\ttransform  法线变换矩阵。\r\n     * @param\tresult 输出法线三维向量。\r\n     */\r\n    static TransformNormal(normal: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var normalX: number = normal.x;\r\n        var normalY: number = normal.y;\r\n        var normalZ: number = normal.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        result.x = (normalX * transformElem[0]) + (normalY * transformElem[4]) + (normalZ * transformElem[8]);\r\n        result.y = (normalX * transformElem[1]) + (normalY * transformElem[5]) + (normalZ * transformElem[9]);\r\n        result.z = (normalX * transformElem[2]) + (normalY * transformElem[6]) + (normalZ * transformElem[10]);\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个归一化的三维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出三维向量。\r\n     */\r\n    static transformCoordinate(coordinate: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var coordinateX: number = coordinate.x;\r\n        var coordinateY: number = coordinate.y;\r\n        var coordinateZ: number = coordinate.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        var w: number = coordinateX * transformElem[3] + coordinateY * transformElem[7] + coordinateZ * transformElem[11] + transformElem[15];\r\n        result.x = (coordinateX * transformElem[0] + coordinateY * transformElem[4] + coordinateZ * transformElem[8] + transformElem[12]) / w;\r\n        result.y = (coordinateX * transformElem[1] + coordinateY * transformElem[5] + coordinateZ * transformElem[9] + transformElem[13]) / w;\r\n        result.z = (coordinateX * transformElem[2] + coordinateY * transformElem[6] + coordinateZ * transformElem[10] + transformElem[14]) / w;\r\n    }\r\n\r\n    /**\r\n     * 求一个指定范围的向量\r\n     * @param\tvalue clamp向量\r\n     * @param\tmin  最小\r\n     * @param\tmax  最大\r\n     * @param   out 输出向量\r\n     */\r\n    static Clamp(value: Vector3, min: Vector3, max: Vector3, out: Vector3): void {\r\n        var x: number = value.x;\r\n        var y: number = value.y;\r\n        var z: number = value.z;\r\n\r\n        var mineX: number = min.x;\r\n        var mineY: number = min.y;\r\n        var mineZ: number = min.z;\r\n\r\n        var maxeX: number = max.x;\r\n        var maxeY: number = max.y;\r\n        var maxeZ: number = max.z;\r\n\r\n        x = (x > maxeX) ? maxeX : x;\r\n        x = (x < mineX) ? mineX : x;\r\n\r\n        y = (y > maxeY) ? maxeY : y;\r\n        y = (y < mineY) ? mineY : y;\r\n\r\n        z = (z > maxeZ) ? maxeZ : z;\r\n        z = (z < mineZ) ? mineZ : z;\r\n\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的和。\r\n     * @param\ta left三维向量。\r\n     * @param\tb right三维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static add(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的差。\r\n     * @param\ta  left三维向量。\r\n     * @param\tb  right三维向量。\r\n     * @param\to out 输出向量。\r\n     */\r\n    static subtract(a: Vector3, b: Vector3, o: Vector3): void {\r\n        o.x = a.x - b.x;\r\n        o.y = a.y - b.y;\r\n        o.z = a.z - b.z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的叉乘。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\to 输出向量。\r\n     */\r\n    static cross(a: Vector3, b: Vector3, o: Vector3): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, bx: number = b.x, by: number = b.y, bz: number = b.z;\r\n        o.x = ay * bz - az * by;\r\n        o.y = az * bx - ax * bz;\r\n        o.z = ax * by - ay * bx;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的点积。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @return   点积。\r\n     */\r\n    static dot(a: Vector3, b: Vector3): number {\r\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z);\r\n    }\r\n\r\n    /**\r\n     * 判断两个三维向量是否相等。\r\n     * @param\ta 三维向量。\r\n     * @param\tb 三维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector3, b: Vector3): boolean {\r\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y) && MathUtils3D.nearEqual(a.z, b.z);\r\n    }\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector3</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     * @param\tz  Z轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    /**\r\n     * 求四维向量是否相等\r\n     * @param value \r\n     * @returns \r\n     */\r\n    equal(value: Vector3) {\r\n        return Vector3.equals(this, value);\r\n    }\r\n\r\n    /**\r\n     * 设置xyz值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     */\r\n    setValue(x: number, y: number, z: number): Vector3 {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 设置xyz值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @return 返回Vector3\r\n     */\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  arr 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = arr[offset + 0];\r\n        this.y = arr[offset + 1];\r\n        this.z = arr[offset + 2];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n\r\n    /**\r\n     * 写入Array数组\r\n     * @param arr 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(arr: Float32Array, offset: number = 0): void {\r\n        arr[offset + 0] = this.x;\r\n        arr[offset + 1] = this.y;\r\n        arr[offset + 2] = this.z;\r\n    }\r\n\r\n    /**\r\n     * 计算长度。\r\n     * @return 长度。\r\n     */\r\n    length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n\r\n    /**\r\n     * 计算平方。\r\n     * @return 返回向量长度的平方。\r\n     */\r\n    lengthSquared() {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }\r\n\r\n    /**\r\n     * 向量相减\r\n     * @param b 被减向量\r\n     * @param out \r\n     * @returns \r\n     */\r\n    vsub(b: Vector3, out: Vector3) {\r\n        out.x = this.x - b.x;\r\n        out.y = this.y - b.y;\r\n        out.z = this.z - b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 向量相加\r\n     * @param b 加向量\r\n     * @param out \r\n     * @returns \r\n     */\r\n    vadd(b: Vector3, out: Vector3) {\r\n        out.x = this.x + b.x;\r\n        out.y = this.y + b.y;\r\n        out.z = this.z + b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 缩放向量\r\n     * @param s 缩放值\r\n     * @param out\r\n     * @returns 返回缩放向量\r\n     */\r\n    scale(s: number, out: Vector3) {\r\n        out.x = this.x * s;\r\n        out.y = this.y * s;\r\n        out.z = this.z * s;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 归一化向量\r\n     * @returns \r\n     */\r\n    normalize() {\r\n        let x = this.x, y = this.y, z = this.z;\r\n        var len = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            this.x = x * len;\r\n            this.y = y * len;\r\n            this.z = z * len;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 向量点乘\r\n     * @param b \r\n     * @returns \r\n     */\r\n    dot(b: Vector3): number {\r\n        return (this.x * b.x) + (this.y * b.y) + (this.z * b.z);\r\n    }\r\n\r\n    /**\r\n     * 向量叉乘\r\n     * @param b \r\n     * @param o \r\n     * @returns \r\n     */\r\n    cross(b: Vector3, o: Vector3): Vector3 {\r\n        var ax = this.x, ay = this.y, az = this.z, bx = b.x, by = b.y, bz = b.z;\r\n        o.x = ay * bz - az * by;\r\n        o.y = az * bx - ax * bz;\r\n        o.z = ax * by - ay * bx;\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector3: Vector3 = (<Vector3>destObject);\r\n        destVector3.x = this.x;\r\n        destVector3.y = this.y;\r\n        destVector3.z = this.z;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector3: Vector3 = new Vector3();\r\n        this.cloneTo(destVector3);\r\n        return destVector3;\r\n    }\r\n\r\n    /**\r\n     * 设置默认值\r\n     */\r\n    toDefault(): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n}\r\n\r\n","import { Vector3 } from \"./Vector3\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst _DEFAULTELEMENTS = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\r\nconst _tempV30 = new Vector3();\r\nconst _tempV31 = new Vector3();\r\nconst _tempV32 = new Vector3();\r\n\r\n/**\r\n * <code>Matrix3x3</code> 类用于创建3x3矩阵。\r\n */\r\nexport class Matrix3x3 implements IClone {\r\n    static readonly DEFAULT: Readonly<Matrix3x3> = new Matrix3x3();\r\n    static Temp: Matrix3x3 = new Matrix3x3();\r\n    /**\r\n     * 通过四元数创建旋转矩阵。\r\n     * @param rotation 旋转四元数。\r\n     * @param out 旋转矩阵。\r\n     */\r\n\r\n    static createRotationQuaternion(rotation: Quaternion, out: Matrix3x3) {\r\n        var rotX: number = rotation.x;\r\n        var rotY: number = rotation.y;\r\n        var rotZ: number = rotation.z;\r\n        var rotW: number = rotation.w;\r\n\r\n        var xx: number = rotX * rotX;\r\n        var yy: number = rotY * rotY;\r\n        var zz: number = rotZ * rotZ;\r\n        var xy: number = rotX * rotY;\r\n        var zw: number = rotZ * rotW;\r\n        var zx: number = rotZ * rotX;\r\n        var yw: number = rotY * rotW;\r\n        var yz: number = rotY * rotZ;\r\n        var xw: number = rotX * rotW;\r\n\r\n        var resultE: Float32Array = out.elements;\r\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\r\n        resultE[1] = 2.0 * (xy + zw);\r\n        resultE[2] = 2.0 * (zx - yw);\r\n        resultE[3] = 2.0 * (xy - zw);\r\n        resultE[4] = 1.0 - (2.0 * (zz + xx));\r\n        resultE[5] = 2.0 * (yz + xw);\r\n        resultE[6] = 2.0 * (zx + yw);\r\n        resultE[7] = 2.0 * (yz - xw);\r\n        resultE[8] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 根据指定平移生成3x3矩阵\r\n     * @param\ttra 平移\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromTranslation(trans: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        e[0] = 1;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 1;\r\n        e[5] = 0;\r\n        e[6] = trans.x;\r\n        e[7] = trans.y;\r\n        e[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * 根据指定旋转生成3x3矩阵\r\n     * @param\trad  旋转值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromRotation(rad: number, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        e[0] = c;\r\n        e[1] = s;\r\n        e[2] = 0;\r\n\r\n        e[3] = -s;\r\n        e[4] = c;\r\n        e[5] = 0;\r\n\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * 根据制定缩放生成3x3矩阵\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromScaling(scale: Vector3, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n\r\n        e[0] = scale.x;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n\r\n        e[3] = 0;\r\n        e[4] = scale.y;\r\n        e[5] = 0;\r\n\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = scale.z;\r\n    }\r\n\r\n    /**\r\n     * 从4x4矩阵转换为一个3x3的矩阵（原则为upper-left,忽略第四行四列）\r\n     * @param\tsou 4x4源矩阵\r\n     * @param\tout 3x3输出矩阵\r\n     */\r\n    static createFromMatrix4x4(sou: Matrix4x4, out: Matrix3x3): void {\r\n        var souE: Float32Array = sou.elements;\r\n        var outE: Float32Array = out.elements;\r\n        outE[0] = souE[0];\r\n        outE[1] = souE[1];\r\n        outE[2] = souE[2];\r\n        outE[3] = souE[4];\r\n        outE[4] = souE[5];\r\n        outE[5] = souE[6];\r\n        outE[6] = souE[8];\r\n        outE[7] = souE[9];\r\n        outE[8] = souE[10];\r\n    }\r\n\r\n    /**\r\n     *  两个3x3矩阵的相乘\r\n     * @param\tleft 左矩阵\r\n     * @param\tright  右矩阵\r\n     * @param\tout  输出矩阵\r\n     */\r\n    static multiply(left: Matrix3x3, right: Matrix3x3, out: Matrix3x3): void {\r\n        var l: Float32Array = left.elements;\r\n        var r: Float32Array = right.elements;\r\n        var e: Float32Array = out.elements;\r\n\r\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2];\r\n        var l21: number = l[3], l22: number = l[4], l23: number = l[5];\r\n        var l31: number = l[6], l32: number = l[7], l33: number = l[8];\r\n\r\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2];\r\n        var r21: number = r[3], r22: number = r[4], r23: number = r[5];\r\n        var r31: number = r[6], r32: number = r[7], r33: number = r[8];\r\n\r\n        e[0] = r11 * l11 + r12 * l21 + r13 * l31;\r\n        e[1] = r11 * l12 + r12 * l22 + r13 * r32;\r\n        e[2] = r11 * l13 + r12 * l23 + r13 * l33;\r\n\r\n        e[3] = r21 * l11 + r22 * l21 + r23 * l31;\r\n        e[4] = r21 * l12 + r22 * l22 + r23 * l32;\r\n        e[5] = r21 * l13 + r22 * l23 + r23 * l33;\r\n\r\n        e[6] = r31 * l11 + r32 * l21 + r33 * l31;\r\n        e[7] = r31 * l12 + r32 * l22 + r33 * l32;\r\n        e[8] = r31 * l13 + r32 * l23 + r33 * l33;\r\n    }\r\n\r\n    /**矩阵元素数组*/\r\n    elements: Float32Array;\r\n\r\n    /**\r\n     * 创建一个 <code>Matrix3x3</code> 实例。\r\n     */\r\n    constructor(createElement: boolean = true) {\r\n        createElement && (this.elements = _DEFAULTELEMENTS.slice());\r\n    }\r\n    /**\r\n     * 克隆\r\n     * @param destObject \r\n     */\r\n    cloneByArray(destObject: Float32Array) {\r\n        this.elements.set(destObject);\r\n    }\r\n    /**\r\n     * 计算3x3矩阵的行列式\r\n     * @return    矩阵的行列式\r\n     */\r\n    determinant(): number {\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n\r\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n    }\r\n\r\n    /**\r\n     * 通过一个二维向量转换3x3矩阵\r\n     * @param\ttra 转换向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    translate(trans: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n        var x: number = trans.x, y: number = trans.y;\r\n\r\n        e[0] = a00;\r\n        e[1] = a01;\r\n        e[2] = a02;\r\n\r\n        e[3] = a10;\r\n        e[4] = a11;\r\n        e[5] = a12;\r\n\r\n        e[6] = x * a00 + y * a10 + a20;\r\n        e[7] = x * a01 + y * a11 + a21;\r\n        e[8] = x * a02 + y * a12 + a22;\r\n    }\r\n\r\n    /**\r\n     * 根据指定角度旋转3x3矩阵\r\n     * @param\trad 旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    rotate(rad: number, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n\r\n        var s: number = Math.sin(rad);\r\n        var c: number = Math.cos(rad);\r\n\r\n        e[0] = c * a00 + s * a10;\r\n        e[1] = c * a01 + s * a11;\r\n        e[2] = c * a02 + s * a12;\r\n\r\n        e[3] = c * a10 - s * a00;\r\n        e[4] = c * a11 - s * a01;\r\n        e[5] = c * a12 - s * a02;\r\n\r\n        e[6] = a20;\r\n        e[7] = a21;\r\n        e[8] = a22;\r\n    }\r\n\r\n    /**\r\n     *根据制定缩放3x3矩阵\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    scale(scale: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var x: number = scale.x, y: number = scale.y;\r\n\r\n        e[0] = x * f[0];\r\n        e[1] = x * f[1];\r\n        e[2] = x * f[2];\r\n\r\n        e[3] = y * f[3];\r\n        e[4] = y * f[4];\r\n        e[5] = y * f[5];\r\n\r\n        e[6] = f[6];\r\n        e[7] = f[7];\r\n        e[8] = f[8];\r\n    }\r\n\r\n    /**\r\n     * 计算3x3矩阵的逆矩阵\r\n     * @param\tout 输出的逆矩阵\r\n     */\r\n    invert(out: Matrix3x3): void {\r\n        var e = out.elements;\r\n        var f = this.elements;\r\n\r\n        var a00 = f[0], a01 = f[1], a02 = f[2];\r\n        var a10 = f[3], a11 = f[4], a12 = f[5];\r\n        var a20 = f[6], a21 = f[7], a22 = f[8];\r\n\r\n        var b01: number = a22 * a11 - a12 * a21;\r\n        var b11: number = -a22 * a10 + a12 * a20;\r\n        var b21: number = a21 * a10 - a11 * a20;\r\n\r\n        // Calculate the determinant\r\n        var det: number = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n        if (!det) {\r\n            return;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        e[0] = b01 * det;\r\n        e[1] = (-a22 * a01 + a02 * a21) * det;\r\n        e[2] = (a12 * a01 - a02 * a11) * det;\r\n        e[3] = b11 * det;\r\n        e[4] = (a22 * a00 - a02 * a20) * det;\r\n        e[5] = (-a12 * a00 + a02 * a10) * det;\r\n        e[6] = b21 * det;\r\n        e[7] = (-a21 * a00 + a01 * a20) * det;\r\n        e[8] = (a11 * a00 - a01 * a10) * det;\r\n    }\r\n\r\n    /**\r\n     * 计算3x3矩阵的转置矩阵\r\n     * @param \tout 输出矩阵\r\n     */\r\n    transpose(out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        if (out === this) {\r\n            var a01: number = f[1], a02: number = f[2], a12: number = f[5];\r\n            e[1] = f[3];\r\n            e[2] = f[6];\r\n            e[3] = a01;\r\n            e[5] = f[7];\r\n            e[6] = a02;\r\n            e[7] = a12;\r\n        } else {\r\n            e[0] = f[0];\r\n            e[1] = f[3];\r\n            e[2] = f[6];\r\n            e[3] = f[1];\r\n            e[4] = f[4];\r\n            e[5] = f[7];\r\n            e[6] = f[2];\r\n            e[7] = f[5];\r\n            e[8] = f[8];\r\n        }\r\n    }\r\n\r\n    /** 设置已有的矩阵为单位矩阵*/\r\n    identity(): void {\r\n        this.elements.set(_DEFAULTELEMENTS);\r\n        /*\r\n        var e: Float32Array = this.elements;\r\n        e[0] = 1;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 1;\r\n        e[5] = 0;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 1;*/\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var i: number, s: Float32Array, d: Float32Array;\r\n        s = this.elements;\r\n        d = destObject.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        d.set(s);\r\n        /*\r\n        for (i = 0; i < 9; ++i) {\r\n            d[i] = s[i];\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Matrix3x3 = new Matrix3x3(false);\r\n        dest.elements = this.elements.slice();\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * 计算观察3x3矩阵\r\n     * @param\teye    观察者位置\r\n     * @param\ttarget 目标位置\r\n     * @param\tup     上向量\r\n     * @param\tout    输出3x3矩阵\r\n     */\r\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\r\n        Vector3.subtract(eye, target, _tempV30);//WebGL为右手坐标系统\r\n        Vector3.normalize(_tempV30, _tempV30);\r\n\r\n        Vector3.cross(up, _tempV30, _tempV31);\r\n        Vector3.normalize(_tempV31, _tempV31);\r\n\r\n        Vector3.cross(_tempV30, _tempV31, _tempV32);\r\n\r\n        var v0: Vector3 = _tempV30;\r\n        var v1: Vector3 = _tempV31;\r\n        var v2: Vector3 = _tempV32;\r\n\r\n        var me: Float32Array = out.elements;\r\n        me[0] = v1.x;\r\n        me[3] = v1.y;\r\n        me[6] = v1.z;\r\n\r\n        me[1] = v2.x;\r\n        me[4] = v2.y;\r\n        me[7] = v2.z;\r\n\r\n        me[2] = v0.x;\r\n        me[5] = v0.y;\r\n        me[8] = v0.z;\r\n    }\r\n\r\n    /**\r\n     * forward看向target\r\n     * forward在这里规定为z轴\r\n     * @param eye \r\n     * @param target 目标\r\n     * @param up \r\n     * @param out \r\n     */\r\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\r\n        var vx = _tempV31;\r\n        var vy = _tempV32;\r\n        var vz = _tempV30;\r\n\r\n        target.vsub(eye, vz).normalize();\r\n        up.cross(vz, vx).normalize();\r\n        vz.cross(vx, vy);\r\n\r\n        var m = out.elements;\r\n        m[0] = vx.x; m[1] = vx.y; m[2] = vx.z;\r\n        m[3] = vy.x; m[4] = vy.y; m[5] = vy.z;\r\n        m[6] = vz.x; m[7] = vz.y; m[8] = vz.z;\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Matrix3x3 } from \"./Matrix3x3\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst TEMPVector30 = new Vector3();\r\nconst TEMPVector31 = new Vector3();\r\nconst TEMPVector32 = new Vector3();\r\nconst TEMPVector33 = new Vector3();\r\nconst _tempMatrix3x3 = new Matrix3x3();\r\n\r\n/**\r\n * <code>Quaternion</code> 类用于创建四元数。\r\n */\r\nexport class Quaternion implements IClone {\r\n\r\n    /**@internal */\r\n    static TEMP = new Quaternion();\r\n\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly DEFAULT: Readonly<Quaternion> = new Quaternion();\r\n    /**无效矩阵,禁止修改*/\r\n    static readonly NAN: Readonly<Quaternion> = new Quaternion(NaN, NaN, NaN, NaN);\r\n\r\n    /**\r\n     *  从欧拉角生成四元数（顺序为Yaw、Pitch、Roll）\r\n     * @param\tyaw yaw值\r\n     * @param\tpitch pitch值\r\n     * @param\troll roll值\r\n     * @param\tout 输出四元数\r\n     */\r\n    static createFromYawPitchRoll(yaw: number, pitch: number, roll: number, out: Quaternion): void {\r\n        var halfRoll: number = roll * 0.5;\r\n        var halfPitch: number = pitch * 0.5;\r\n        var halfYaw: number = yaw * 0.5;\r\n\r\n        var sinRoll: number = Math.sin(halfRoll);\r\n        var cosRoll: number = Math.cos(halfRoll);\r\n        var sinPitch: number = Math.sin(halfPitch);\r\n        var cosPitch: number = Math.cos(halfPitch);\r\n        var sinYaw: number = Math.sin(halfYaw);\r\n        var cosYaw: number = Math.cos(halfYaw);\r\n\r\n\r\n        out.x = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\r\n        out.y = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\r\n        out.z = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\r\n        out.w = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数相乘\r\n     * @param\tleft left四元数\r\n     * @param\tright  right四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    static multiply(left: Quaternion, right: Quaternion, out: Quaternion): void {\r\n        var lx: number = left.x;\r\n        var ly: number = left.y;\r\n        var lz: number = left.z;\r\n        var lw: number = left.w;\r\n        var rx: number = right.x;\r\n        var ry: number = right.y;\r\n        var rz: number = right.z;\r\n        var rw: number = right.w;\r\n        var a: number = (ly * rz - lz * ry);\r\n        var b: number = (lz * rx - lx * rz);\r\n        var c: number = (lx * ry - ly * rx);\r\n        var d: number = (lx * rx + ly * ry + lz * rz);\r\n        out.x = (lx * rw + rx * lw) + a;\r\n        out.y = (ly * rw + ry * lw) + b;\r\n        out.z = (lz * rw + rz * lw) + c;\r\n        out.w = lw * rw - d;\r\n    }\r\n\r\n    /**\r\n   * Calculate a quaternion rotates around an arbitrary axis.\r\n   * @param axis - The axis\r\n   * @param rad - The rotation angle in radians\r\n   * @param out - The quaternion after rotate\r\n   */\r\n    static rotationAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\r\n        const normalAxis = Vector3._tempVector3\r\n        Vector3.normalize(axis, normalAxis);\r\n        rad *= 0.5;\r\n        const s = Math.sin(rad);\r\n        out.x = normalAxis.x * s;\r\n        out.y = normalAxis.y * s;\r\n        out.z = normalAxis.z * s;\r\n        out.w = Math.cos(rad);\r\n    }\r\n\r\n    private static arcTanAngle(x: number, y: number): number {\r\n        if (x == 0) {\r\n            if (y == 1)\r\n                return Math.PI / 2;\r\n            return -Math.PI / 2;\r\n        }\r\n        if (x > 0)\r\n            return Math.atan(y / x);\r\n        if (x < 0) {\r\n            if (y > 0)\r\n                return Math.atan(y / x) + Math.PI;\r\n            return Math.atan(y / x) - Math.PI;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private static angleTo(from: Vector3, location: Vector3, angle: Vector3): void {\r\n        Vector3.subtract(location, from, TEMPVector30);\r\n        Vector3.normalize(TEMPVector30, TEMPVector30);\r\n\r\n        angle.x = Math.asin(TEMPVector30.y);\r\n        angle.y = Quaternion.arcTanAngle(-TEMPVector30.z, -TEMPVector30.x);\r\n    }\r\n\r\n    /**\r\n     * 从指定的轴和角度计算四元数\r\n     * @param\taxis  轴\r\n     * @param\trad  角度\r\n     * @param\tout  输出四元数\r\n     */\r\n    static createFromAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\r\n        rad = rad * 0.5;\r\n        var s: number = Math.sin(rad);\r\n        out.x = s * axis.x;\r\n        out.y = s * axis.y;\r\n        out.z = s * axis.z;\r\n        out.w = Math.cos(rad);\r\n    }\r\n\r\n\r\n    /**\r\n     *  从旋转矩阵计算四元数\r\n     * @param\tmat 旋转矩阵\r\n     * @param\tout  输出四元数\r\n     */\r\n    static createFromMatrix4x4(mat: Matrix4x4, out: Quaternion): void {\r\n        var me: Float32Array = mat.elements;\r\n\r\n        var sqrt: number;\r\n        var half: number;\r\n        var scale: number = me[0] + me[5] + me[10];\r\n\r\n        if (scale > 0.0) {\r\n            sqrt = Math.sqrt(scale + 1.0);\r\n            out.w = sqrt * 0.5;\r\n            sqrt = 0.5 / sqrt;\r\n\r\n            out.x = (me[6] - me[9]) * sqrt;\r\n            out.y = (me[8] - me[2]) * sqrt;\r\n            out.z = (me[1] - me[4]) * sqrt;\r\n        } else if ((me[0] >= me[5]) && (me[0] >= me[10])) {\r\n            sqrt = Math.sqrt(1.0 + me[0] - me[5] - me[10]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = 0.5 * sqrt;\r\n            out.y = (me[1] + me[4]) * half;\r\n            out.z = (me[2] + me[8]) * half;\r\n            out.w = (me[6] - me[9]) * half;\r\n        } else if (me[5] > me[10]) {\r\n            sqrt = Math.sqrt(1.0 + me[5] - me[0] - me[10]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (me[4] + me[1]) * half;\r\n            out.y = 0.5 * sqrt;\r\n            out.z = (me[9] + me[6]) * half;\r\n            out.w = (me[8] - me[2]) * half;\r\n        } else {\r\n            sqrt = Math.sqrt(1.0 + me[10] - me[0] - me[5]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (me[8] + me[2]) * half;\r\n            out.y = (me[9] + me[6]) * half;\r\n            out.z = 0.5 * sqrt;\r\n            out.w = (me[1] - me[4]) * half;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 球面插值\r\n     * @param\tleft left四元数\r\n     * @param\tright  right四元数\r\n     * @param\tt 插值比例\r\n     * @param\tout 输出四元数\r\n     * @returns 输出Float32Array\r\n     */\r\n    static slerp(left: Quaternion, right: Quaternion, t: number, out: Quaternion): Quaternion {\r\n        var ax: number = left.x, ay: number = left.y, az: number = left.z, aw: number = left.w, bx: number = right.x, by: number = right.y, bz: number = right.z, bw: number = right.w;\r\n\r\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\r\n\r\n        // calc cosine \r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary) \r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients \r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp) \r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close  \r\n            //  ... so we can do a linear interpolation \r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values \r\n        out.x = scale0 * ax + scale1 * bx;\r\n        out.y = scale0 * ay + scale1 * by;\r\n        out.z = scale0 * az + scale1 * bz;\r\n        out.w = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的线性插值\r\n     * @param\tleft left四元数\r\n     * @param\tright right四元数b\r\n     * @param\tt 插值比例\r\n     * @param\tout 输出四元数\r\n     */\r\n    static lerp(left: Quaternion, right: Quaternion, amount: number, out: Quaternion): void {\r\n        var inverse: number = 1.0 - amount;\r\n        if (Quaternion.dot(left, right) >= 0) {\r\n            out.x = (inverse * left.x) + (amount * right.x);\r\n            out.y = (inverse * left.y) + (amount * right.y);\r\n            out.z = (inverse * left.z) + (amount * right.z);\r\n            out.w = (inverse * left.w) + (amount * right.w);\r\n        } else {\r\n            out.x = (inverse * left.x) - (amount * right.x);\r\n            out.y = (inverse * left.y) - (amount * right.y);\r\n            out.z = (inverse * left.z) - (amount * right.z);\r\n            out.w = (inverse * left.w) - (amount * right.w);\r\n        }\r\n        out.normalize(out);\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的和\r\n     * @param\tleft  left四元数\r\n     * @param\tright right 四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    static add(left: Quaternion, right: Quaternion, out: Quaternion): void {\r\n        out.x = left.x + right.x;\r\n        out.y = left.y + right.y;\r\n        out.z = left.z + right.z;\r\n        out.w = left.w + right.w;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的点积\r\n     * @param\tleft left四元数\r\n     * @param\tright right四元数\r\n     * @return  点积\r\n     */\r\n    static dot(left: Quaternion, right: Quaternion): number {\r\n        return left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\r\n    }\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n    /**W轴坐标*/\r\n    w: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Quaternion</code> 实例。\r\n     * @param\tx 四元数的x值\r\n     * @param\ty 四元数的y值\r\n     * @param\tz 四元数的z值\r\n     * @param\tw 四元数的w值\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置四元数的值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     */\r\n    setValue(x: number, y: number, z: number, w: number): void {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置四元数的值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @return 返回四元数\r\n     */\r\n    set(x: number, y: number, z: number, w: number) {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n        return this;\r\n    }\r\n    /**\r\n     * 根据缩放值缩放四元数\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出四元数\r\n     */\r\n    scaling(scaling: number, out: Quaternion): void {\r\n        out.x = this.x * scaling;\r\n        out.y = this.y * scaling;\r\n        out.z = this.z * scaling;\r\n        out.w = this.w * scaling;\r\n    }\r\n\r\n    /**\r\n     * 归一化四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    normalize(out: Quaternion): void {\r\n        var len: number = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = this.x * len;\r\n            out.y = this.y * len;\r\n            out.z = this.z * len;\r\n            out.w = this.w * len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算四元数的长度\r\n     * @return  长度\r\n     */\r\n    length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 根据绕X轴的角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateX(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n\r\n        var bx: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw + this.w * bx;\r\n        out.y = this.y * bw + this.z * bx;\r\n        out.z = this.z * bw - this.y * bx;\r\n        out.w = this.w * bw - this.x * bx;\r\n    }\r\n\r\n    /**\r\n     * 根据绕Y轴的制定角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateY(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n\r\n        var by: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw - this.z * by;\r\n        out.y = this.y * bw + this.w * by;\r\n        out.z = this.z * bw + this.x * by;\r\n        out.w = this.w * bw - this.y * by;\r\n    }\r\n\r\n    /**\r\n     * 根据绕Z轴的制定角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateZ(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n        var bz: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw + this.y * bz;\r\n        out.y = this.y * bw - this.x * bz;\r\n        out.z = this.z * bw + this.w * bz;\r\n        out.w = this.w * bw - this.z * bz;\r\n    }\r\n\r\n    /**\r\n     * 分解四元数到欧拉角（顺序为Yaw、Pitch、Roll），参考自http://xboxforums.create.msdn.com/forums/p/4574/23988.aspx#23988,问题绕X轴翻转超过±90度时有，会产生瞬间反转\r\n     * @param\tquaternion 源四元数\r\n     * @param\tout 欧拉角值\r\n     */\r\n    getYawPitchRoll(out: Vector3): void {\r\n\r\n        Vector3.transformQuat(Vector3.ForwardRH, this, TEMPVector31/*forwarldRH*/);\r\n\r\n        Vector3.transformQuat(Vector3.Up, this, TEMPVector32/*up*/);\r\n        var upe: Vector3 = TEMPVector32;\r\n\r\n        Quaternion.angleTo(Vector3.ZERO, TEMPVector31, TEMPVector33/*angle*/);\r\n        var angle: Vector3 = TEMPVector33;\r\n\r\n        if (angle.x == Math.PI / 2) {\r\n            angle.y = Quaternion.arcTanAngle(upe.z, upe.x);\r\n            angle.z = 0;\r\n        } else if (angle.x == -Math.PI / 2) {\r\n            angle.y = Quaternion.arcTanAngle(-upe.z, -upe.x);\r\n            angle.z = 0;\r\n        } else {\r\n            Matrix4x4.createRotationY(-angle.y, Matrix4x4.TEMPMatrix0);\r\n            Matrix4x4.createRotationX(-angle.x, Matrix4x4.TEMPMatrix1);\r\n\r\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix0, TEMPVector32);\r\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix1, TEMPVector32);\r\n            angle.z = Quaternion.arcTanAngle(upe.y, -upe.x);\r\n        }\r\n\r\n        // Special cases.\r\n        if (angle.y <= -Math.PI)\r\n            angle.y = Math.PI;\r\n        if (angle.z <= -Math.PI)\r\n            angle.z = Math.PI;\r\n\r\n        if (angle.y >= Math.PI && angle.z >= Math.PI) {\r\n            angle.y = 0;\r\n            angle.z = 0;\r\n            angle.x = Math.PI - angle.x;\r\n        }\r\n\r\n        var oe: Vector3 = out;\r\n        oe.x = angle.y;\r\n        oe.y = angle.x;\r\n        oe.z = angle.z;\r\n    }\r\n\r\n    /**\r\n     * 求四元数的逆\r\n     * @param\tout  输出四元数\r\n     */\r\n    invert(out: Quaternion): void {\r\n        var a0: number = this.x, a1: number = this.y, a2: number = this.z, a3: number = this.w;\r\n        var dot: number = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n        var invDot: number = dot ? 1.0 / dot : 0;\r\n\r\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n        out.x = -a0 * invDot;\r\n        out.y = -a1 * invDot;\r\n        out.z = -a2 * invDot;\r\n        out.w = a3 * invDot;\r\n    }\r\n\r\n    /**\r\n     *设置四元数为单位算数\r\n     * @param out  输出四元数\r\n     */\r\n    identity(): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 1;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: any[], offset: number = 0): void {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n        this.z = array[offset + 2];\r\n        this.w = array[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        if (this === destObject) {\r\n            return;\r\n        }\r\n        destObject.x = this.x;\r\n        destObject.y = this.y;\r\n        destObject.z = this.z;\r\n        destObject.w = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Quaternion = new Quaternion();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    equals(b: Quaternion): boolean {\r\n        return MathUtils3D.nearEqual(this.x, b.x) && MathUtils3D.nearEqual(this.y, b.y) && MathUtils3D.nearEqual(this.z, b.z) && MathUtils3D.nearEqual(this.w, b.w);\r\n    }\r\n\r\n    /**\r\n     * 计算旋转观察四元数\r\n     * @param\tforward 方向\r\n     * @param\tup     上向量\r\n     * @param\tout    输出四元数\r\n     */\r\n    static rotationLookAt(forward: Vector3, up: Vector3, out: Quaternion): void {\r\n        Quaternion.lookAt(Vector3.ZERO, forward, up, out);\r\n    }\r\n\r\n    /**\r\n     * 计算观察四元数（适用Camera 灯光）\r\n     * @param\teye    观察者位置\r\n     * @param\ttarget 目标位置\r\n     * @param\tup     上向量\r\n     * @param\tout    输出四元数\r\n     */\r\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\r\n        Matrix3x3.lookAt(eye, target, up, _tempMatrix3x3);\r\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\r\n    }\r\n\r\n    /**\r\n     * 计算观察四元数（适用gameObject）\r\n     * @param eye 观察者位置\r\n     * @param target 目标位置\r\n     * @param up 上向量\r\n     * @param out 输出四元数\r\n     */\r\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\r\n        Matrix3x3.forwardLookAt(eye, target, up, _tempMatrix3x3);\r\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\r\n    }\r\n\r\n    /**\r\n     * 计算长度的平方。\r\n     * @return 长度的平方。\r\n     */\r\n    lengthSquared(): number {\r\n        return (this.x * this.x) + (this.y * this.y) + (this.z * this.z) + (this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 计算四元数的逆四元数。\r\n     * @param\tvalue 四元数。\r\n     * @param\tout 逆四元数。\r\n     */\r\n    static invert(value: Quaternion, out: Quaternion): void {\r\n        var lengthSq: number = value.lengthSquared();\r\n        if (!MathUtils3D.isZero(lengthSq)) {\r\n            lengthSq = 1.0 / lengthSq;\r\n\r\n            out.x = -value.x * lengthSq;\r\n            out.y = -value.y * lengthSq;\r\n            out.z = -value.z * lengthSq;\r\n            out.w = value.w * lengthSq;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过一个3x3矩阵创建一个四元数\r\n     * @param\tmatrix3x3  3x3矩阵\r\n     * @param\tout        四元数\r\n     */\r\n    static rotationMatrix(matrix3x3: Matrix3x3, out: Quaternion): void {\r\n        var me: Float32Array = matrix3x3.elements;\r\n        var m11: number = me[0];\r\n        var m12: number = me[1];\r\n        var m13: number = me[2];\r\n        var m21: number = me[3];\r\n        var m22: number = me[4];\r\n        var m23: number = me[5];\r\n        var m31: number = me[6];\r\n        var m32: number = me[7];\r\n        var m33: number = me[8];\r\n\r\n        var sqrt: number, half: number;\r\n        var scale: number = m11 + m22 + m33;\r\n\r\n        if (scale > 0) {\r\n\r\n            sqrt = Math.sqrt(scale + 1);\r\n            out.w = sqrt * 0.5;\r\n            sqrt = 0.5 / sqrt;\r\n\r\n            out.x = (m23 - m32) * sqrt;\r\n            out.y = (m31 - m13) * sqrt;\r\n            out.z = (m12 - m21) * sqrt;\r\n\r\n        } else if ((m11 >= m22) && (m11 >= m33)) {\r\n\r\n            sqrt = Math.sqrt(1 + m11 - m22 - m33);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = 0.5 * sqrt;\r\n            out.y = (m12 + m21) * half;\r\n            out.z = (m13 + m31) * half;\r\n            out.w = (m23 - m32) * half;\r\n        } else if (m22 > m33) {\r\n\r\n            sqrt = Math.sqrt(1 + m22 - m11 - m33);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (m21 + m12) * half;\r\n            out.y = 0.5 * sqrt;\r\n            out.z = (m32 + m23) * half;\r\n            out.w = (m31 - m13) * half;\r\n        } else {\r\n\r\n            sqrt = Math.sqrt(1 + m33 - m11 - m22);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (m31 + m13) * half;\r\n            out.y = (m32 + m23) * half;\r\n            out.z = 0.5 * sqrt;\r\n            out.w = (m12 - m21) * half;\r\n        }\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array = null): void//[NATIVE_TS]\r\n    {\r\n\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n            (<any>this).elements[2] = this.z;\r\n            (<any>this).elements[3] = this.w;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n        Vector2.rewriteNumProperty(this, \"z\", 2);\r\n        Vector2.rewriteNumProperty(this, \"w\", 3);\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst _tempVector0 = new Vector3();\r\nconst _tempVector1 = new Vector3();\r\nconst _tempVector2 = new Vector3();\r\nconst _tempVector3 = new Vector3();\r\nconst DEFAULTARRAY = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n\r\n/**\r\n * <code>Matrix4x4</code> 类用于创建4x4矩阵。\r\n */\r\nexport class Matrix4x4 implements IClone {\r\n    /**@internal */\r\n    static TEMPMatrix0: Matrix4x4 = new Matrix4x4();\r\n    /**@internal */\r\n    static TEMPMatrix1: Matrix4x4 = new Matrix4x4();\r\n\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly DEFAULT: Readonly<Matrix4x4> = new Matrix4x4();\r\n    static readonly DEFAULTINVERT: Readonly<Matrix4x4> = new Matrix4x4(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly ZERO: Readonly<Matrix4x4> = new Matrix4x4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\r\n    /**\r\n     * 绕X轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationX(rad: number, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[7] = oe[8] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[0] = oe[15] = 1;\r\n        oe[5] = oe[10] = c;\r\n        oe[6] = s;\r\n        oe[9] = -s;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * 绕Y轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationY(rad: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[1] = oe[3] = oe[4] = oe[6] = oe[7] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[5] = oe[15] = 1;\r\n        oe[0] = oe[10] = c;\r\n        oe[2] = -s;\r\n        oe[8] = s;\r\n    }\r\n\r\n    /**\r\n     * 绕Z轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationZ(rad: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[2] = oe[3] = oe[6] = oe[7] = oe[8] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[10] = oe[15] = 1;\r\n        oe[0] = oe[5] = c;\r\n        oe[1] = s;\r\n        oe[4] = -s;\r\n    }\r\n\r\n    /**\r\n     * 通过yaw pitch roll旋转创建旋转矩阵。\r\n     * @param\tyaw\r\n     * @param\tpitch\r\n     * @param\troll\r\n     * @param\tresult\r\n     */\r\n    static createRotationYawPitchRoll(yaw: number, pitch: number, roll: number, result: Matrix4x4): void {\r\n        Quaternion.createFromYawPitchRoll(yaw, pitch, roll, Quaternion.TEMP);\r\n        Matrix4x4.createRotationQuaternion(Quaternion.TEMP, result);\r\n    }\r\n\r\n    /**\r\n     * 通过旋转轴axis和旋转角度angle计算旋转矩阵。\r\n     * @param\taxis 旋转轴,假定已经归一化。\r\n     * @param\tangle 旋转角度。\r\n     * @param\tresult 结果矩阵。\r\n     */\r\n    static createRotationAxis(axis: Vector3, angle: number, result: Matrix4x4): void {\r\n        var x: number = axis.x;\r\n        var y: number = axis.y;\r\n        var z: number = axis.z;\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var xx: number = x * x;\r\n        var yy: number = y * y;\r\n        var zz: number = z * z;\r\n        var xy: number = x * y;\r\n        var xz: number = x * z;\r\n        var yz: number = y * z;\r\n\r\n        var resultE: Float32Array = result.elements;\r\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\r\n        resultE[15] = 1.0;\r\n        resultE[0] = xx + (cos * (1.0 - xx));\r\n        resultE[1] = (xy - (cos * xy)) + (sin * z);\r\n        resultE[2] = (xz - (cos * xz)) - (sin * y);\r\n        resultE[4] = (xy - (cos * xy)) - (sin * z);\r\n        resultE[5] = yy + (cos * (1.0 - yy));\r\n        resultE[6] = (yz - (cos * yz)) + (sin * x);\r\n        resultE[8] = (xz - (cos * xz)) + (sin * y);\r\n        resultE[9] = (yz - (cos * yz)) - (sin * x);\r\n        resultE[10] = zz + (cos * (1.0 - zz));\r\n    }\r\n\r\n    /**\r\n     * 通过四元数创建旋转矩阵。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tresult 输出旋转矩阵\r\n     */\r\n    static createRotationQuaternion(rotation: Quaternion, result: Matrix4x4): void {\r\n        var resultE: Float32Array = result.elements;\r\n        var rotationX: number = rotation.x;\r\n        var rotationY: number = rotation.y;\r\n        var rotationZ: number = rotation.z;\r\n        var rotationW: number = rotation.w;\r\n\r\n        var xx: number = rotationX * rotationX;\r\n        var yy: number = rotationY * rotationY;\r\n        var zz: number = rotationZ * rotationZ;\r\n        var xy: number = rotationX * rotationY;\r\n        var zw: number = rotationZ * rotationW;\r\n        var zx: number = rotationZ * rotationX;\r\n        var yw: number = rotationY * rotationW;\r\n        var yz: number = rotationY * rotationZ;\r\n        var xw: number = rotationX * rotationW;\r\n\r\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\r\n        resultE[15] = 1.0;\r\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\r\n        resultE[1] = 2.0 * (xy + zw);\r\n        resultE[2] = 2.0 * (zx - yw);\r\n        resultE[4] = 2.0 * (xy - zw);\r\n        resultE[5] = 1.0 - (2.0 * (zz + xx));\r\n        resultE[6] = 2.0 * (yz + xw);\r\n        resultE[8] = 2.0 * (zx + yw);\r\n        resultE[9] = 2.0 * (yz - xw);\r\n        resultE[10] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 根据平移计算输出矩阵\r\n     * @param\ttrans  平移向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createTranslate(trans: Vector3, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        oe[4] = oe[8] = oe[1] = oe[9] = oe[2] = oe[6] = oe[3] = oe[7] = oe[11] = 0;\r\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\r\n        oe[12] = trans.x;\r\n        oe[13] = trans.y;\r\n        oe[14] = trans.z;\r\n    }\r\n\r\n    /**\r\n     * 根据缩放计算输出矩阵\r\n     * @param\tscale  缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createScaling(scale: Vector3, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        oe[0] = scale.x;\r\n        oe[5] = scale.y;\r\n        oe[10] = scale.z;\r\n        oe[1] = oe[4] = oe[8] = oe[12] = oe[9] = oe[13] = oe[2] = oe[6] = oe[14] = oe[3] = oe[7] = oe[11] = 0;\r\n        oe[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算两个矩阵的乘法\r\n     * @param\tleft left矩阵\r\n     * @param\tright  right矩阵\r\n     * @param\tout  输出矩阵\r\n     */\r\n    static multiply(left: Matrix4x4, right: Matrix4x4, out: Matrix4x4): void {\r\n        var l: Float32Array = right.elements;\r\n        var r: Float32Array = left.elements;\r\n        var e: Float32Array = out.elements;\r\n\r\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2], l14: number = l[3];\r\n        var l21: number = l[4], l22: number = l[5], l23: number = l[6], l24: number = l[7];\r\n        var l31: number = l[8], l32: number = l[9], l33: number = l[10], l34: number = l[11];\r\n        var l41: number = l[12], l42: number = l[13], l43: number = l[14], l44: number = l[15];\r\n\r\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2], r14: number = r[3];\r\n        var r21: number = r[4], r22: number = r[5], r23: number = r[6], r24: number = r[7];\r\n        var r31: number = r[8], r32: number = r[9], r33: number = r[10], r34: number = r[11];\r\n        var r41: number = r[12], r42: number = r[13], r43: number = r[14], r44: number = r[15];\r\n\r\n        e[0] = (l11 * r11) + (l12 * r21) + (l13 * r31) + (l14 * r41);\r\n        e[1] = (l11 * r12) + (l12 * r22) + (l13 * r32) + (l14 * r42);\r\n        e[2] = (l11 * r13) + (l12 * r23) + (l13 * r33) + (l14 * r43);\r\n        e[3] = (l11 * r14) + (l12 * r24) + (l13 * r34) + (l14 * r44);\r\n        e[4] = (l21 * r11) + (l22 * r21) + (l23 * r31) + (l24 * r41);\r\n        e[5] = (l21 * r12) + (l22 * r22) + (l23 * r32) + (l24 * r42);\r\n        e[6] = (l21 * r13) + (l22 * r23) + (l23 * r33) + (l24 * r43);\r\n        e[7] = (l21 * r14) + (l22 * r24) + (l23 * r34) + (l24 * r44);\r\n        e[8] = (l31 * r11) + (l32 * r21) + (l33 * r31) + (l34 * r41);\r\n        e[9] = (l31 * r12) + (l32 * r22) + (l33 * r32) + (l34 * r42);\r\n        e[10] = (l31 * r13) + (l32 * r23) + (l33 * r33) + (l34 * r43);\r\n        e[11] = (l31 * r14) + (l32 * r24) + (l33 * r34) + (l34 * r44);\r\n        e[12] = (l41 * r11) + (l42 * r21) + (l43 * r31) + (l44 * r41);\r\n        e[13] = (l41 * r12) + (l42 * r22) + (l43 * r32) + (l44 * r42);\r\n        e[14] = (l41 * r13) + (l42 * r23) + (l43 * r33) + (l44 * r43);\r\n        e[15] = (l41 * r14) + (l42 * r24) + (l43 * r34) + (l44 * r44);\r\n    }\r\n\r\n    /**\r\n     * 从四元数计算旋转矩阵\r\n     * @param\trotation 四元数\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromQuaternion(rotation: Quaternion, out: Matrix4x4): void {\r\n        var e: Float32Array = out.elements;\r\n        var x: number = rotation.x, y: number = rotation.y, z: number = rotation.z, w: number = rotation.w;\r\n        var x2: number = x + x;\r\n        var y2: number = y + y;\r\n        var z2: number = z + z;\r\n\r\n        var xx: number = x * x2;\r\n        var yx: number = y * x2;\r\n        var yy: number = y * y2;\r\n        var zx: number = z * x2;\r\n        var zy: number = z * y2;\r\n        var zz: number = z * z2;\r\n        var wx: number = w * x2;\r\n        var wy: number = w * y2;\r\n        var wz: number = w * z2;\r\n\r\n        e[0] = 1 - yy - zz;\r\n        e[1] = yx + wz;\r\n        e[2] = zx - wy;\r\n        e[3] = 0;\r\n\r\n        e[4] = yx - wz;\r\n        e[5] = 1 - xx - zz;\r\n        e[6] = zy + wx;\r\n        e[7] = 0;\r\n\r\n        e[8] = zx + wy;\r\n        e[9] = zy - wx;\r\n        e[10] = 1 - xx - yy;\r\n        e[11] = 0;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = 0;\r\n        e[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算仿射矩阵\r\n     * @param\ttrans 平移\r\n     * @param\trot 旋转\r\n     * @param\tscale 缩放\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createAffineTransformation(trans: Vector3, rot: Quaternion, scale: Vector3, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n\r\n        var x: number = rot.x, y: number = rot.y, z: number = rot.z, w: number = rot.w, x2: number = x + x, y2: number = y + y, z2: number = z + z;\r\n        var xx: number = x * x2, xy: number = x * y2, xz: number = x * z2, yy: number = y * y2, yz: number = y * z2, zz: number = z * z2;\r\n        var wx: number = w * x2, wy: number = w * y2, wz: number = w * z2, sx: number = scale.x, sy: number = scale.y, sz: number = scale.z;\r\n\r\n        oe[0] = (1 - (yy + zz)) * sx;\r\n        oe[1] = (xy + wz) * sx;\r\n        oe[2] = (xz - wy) * sx;\r\n        oe[3] = 0;\r\n        oe[4] = (xy - wz) * sy;\r\n        oe[5] = (1 - (xx + zz)) * sy;\r\n        oe[6] = (yz + wx) * sy;\r\n        oe[7] = 0;\r\n        oe[8] = (xz + wy) * sz;\r\n        oe[9] = (yz - wx) * sz;\r\n        oe[10] = (1 - (xx + yy)) * sz;\r\n        oe[11] = 0;\r\n        oe[12] = trans.x;\r\n        oe[13] = trans.y;\r\n        oe[14] = trans.z;\r\n        oe[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算观察矩阵\r\n     * @param\teye 视点位置\r\n     * @param\ttarget 视点目标\r\n     * @param\tup 向上向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4x4): void {\r\n        var oE: Float32Array = out.elements;\r\n        var xaxis: Vector3 = _tempVector0;\r\n        var yaxis: Vector3 = _tempVector1;\r\n        var zaxis: Vector3 = _tempVector2;\r\n        Vector3.subtract(eye, target, zaxis);\r\n        Vector3.normalize(zaxis, zaxis);\r\n        Vector3.cross(up, zaxis, xaxis);\r\n        Vector3.normalize(xaxis, xaxis);\r\n        Vector3.cross(zaxis, xaxis, yaxis);\r\n\r\n        oE[3] = oE[7] = oE[11] = 0;\r\n        oE[15] = 1;\r\n        oE[0] = xaxis.x;\r\n        oE[4] = xaxis.y;\r\n        oE[8] = xaxis.z;\r\n        oE[1] = yaxis.x;\r\n        oE[5] = yaxis.y;\r\n        oE[9] = yaxis.z;\r\n        oE[2] = zaxis.x;\r\n        oE[6] = zaxis.y;\r\n        oE[10] = zaxis.z;\r\n\r\n        oE[12] = -Vector3.dot(xaxis, eye);\r\n        oE[13] = -Vector3.dot(yaxis, eye);\r\n        oE[14] = -Vector3.dot(zaxis, eye);\r\n    }\r\n\r\n    /**\r\n     * 通过FOV创建透视投影矩阵。\r\n     * @param\tfov  视角。\r\n     * @param\taspect 横纵比。\r\n     * @param\tnear 近裁面。\r\n     * @param\tfar 远裁面。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createPerspective(fov: number, aspect: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n        var yScale: number = 1.0 / Math.tan(fov * 0.5);\r\n        var xScale: number = yScale / aspect;\r\n\r\n        var halfWidth: number = znear / xScale;\r\n        var halfHeight: number = znear / yScale;\r\n        Matrix4x4.createPerspectiveOffCenter(-halfWidth, halfWidth, -halfHeight, halfHeight, znear, zfar, out);\r\n    }\r\n\r\n    /**\r\n     * 创建透视投影矩阵。\r\n     * @param\tleft 视椎左边界。\r\n     * @param\tright 视椎右边界。\r\n     * @param\tbottom 视椎底边界。\r\n     * @param\ttop 视椎顶边界。\r\n     * @param\tznear 视椎近边界。\r\n     * @param\tzfar 视椎远边界。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createPerspectiveOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        var zRange: number = zfar / (zfar - znear);\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[7] = oe[12] = oe[13] = oe[15] = 0;\r\n        oe[0] = 2.0 * znear / (right - left);\r\n        oe[5] = 2.0 * znear / (top - bottom);\r\n        oe[8] = (left + right) / (right - left);\r\n        oe[9] = (top + bottom) / (top - bottom);\r\n        oe[10] = -zRange;\r\n        oe[11] = -1.0;\r\n        oe[14] = -znear * zRange;\r\n    }\r\n\r\n    /**\r\n     * 计算正交投影矩阵。\r\n     * @param\tleft 视椎左边界。\r\n     * @param\tright 视椎右边界。\r\n     * @param\tbottom 视椎底边界。\r\n     * @param\ttop 视椎顶边界。\r\n     * @param\tnear 视椎近边界。\r\n     * @param\tfar 视椎远边界。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createOrthoOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var zRange: number = 1.0 / (zfar - znear);\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[8] = oe[7] = oe[9] = oe[11] = 0;\r\n        oe[15] = 1;\r\n        oe[0] = 2.0 / (right - left);\r\n        oe[5] = 2.0 / (top - bottom);\r\n        oe[10] = -zRange;\r\n        oe[12] = (left + right) / (left - right);\r\n        oe[13] = (top + bottom) / (bottom - top);\r\n        oe[14] = -znear * zRange;\r\n    }\r\n\r\n    /**矩阵元素数组*/\r\n    elements: Float32Array;\r\n\r\n    /**\r\n     * 创建一个 <code>Matrix4x4</code> 实例。\r\n     * @param\t4x4矩阵的各元素\r\n     */\r\n    constructor(m11: number = 1, m12: number = 0, m13: number = 0, m14: number = 0, m21: number = 0, m22: number = 1, m23: number = 0, m24: number = 0, m31: number = 0, m32: number = 0, m33: number = 1, m34: number = 0, m41: number = 0, m42: number = 0, m43: number = 0, m44: number = 1, elements: Float32Array = null) {\r\n        if (arguments.length == 0) {\r\n            this.elements = DEFAULTARRAY.slice();\r\n            return;\r\n        }\r\n        if (arguments.length === 1 && arguments[0] === null)\r\n            return;\r\n\r\n        var e: Float32Array = elements ? this.elements = elements : this.elements = new Float32Array(16);//TODO:[NATIVE]临时\r\n        e[0] = m11;\r\n        e[1] = m12;\r\n        e[2] = m13;\r\n        e[3] = m14;\r\n        e[4] = m21;\r\n        e[5] = m22;\r\n        e[6] = m23;\r\n        e[7] = m24;\r\n        e[8] = m31;\r\n        e[9] = m32;\r\n        e[10] = m33;\r\n        e[11] = m34;\r\n        e[12] = m41;\r\n        e[13] = m42;\r\n        e[14] = m43;\r\n        e[15] = m44;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param row \r\n     * @param column \r\n     * @returns \r\n     */\r\n    getElementByRowColumn(row: number, column: number): number {\r\n        if (row < 0 || row > 3)\r\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n        if (column < 0 || column > 3)\r\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n\r\n        return this.elements[(row * 4) + column];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param row \r\n     * @param column \r\n     * @param value \r\n     */\r\n    setElementByRowColumn(row: number, column: number, value: number): void {\r\n        if (row < 0 || row > 3)\r\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n        if (column < 0 || column > 3)\r\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n\r\n        this.elements[(row * 4) + column] = value;\r\n    }\r\n\r\n    /**\r\n  * 四元数生成矩阵\r\n  * @param rotation \r\n  */\r\n    setRotation(rotation: Quaternion): void {\r\n        var rotationX: number = rotation.x;\r\n        var rotationY: number = rotation.y;\r\n        var rotationZ: number = rotation.z;\r\n        var rotationW: number = rotation.w;\r\n\r\n        var xx: number = rotationX * rotationX;\r\n        var yy: number = rotationY * rotationY;\r\n        var zz: number = rotationZ * rotationZ;\r\n        var xy: number = rotationX * rotationY;\r\n        var zw: number = rotationZ * rotationW;\r\n        var zx: number = rotationZ * rotationX;\r\n        var yw: number = rotationY * rotationW;\r\n        var yz: number = rotationY * rotationZ;\r\n        var xw: number = rotationX * rotationW;\r\n\r\n        var e: Float32Array = this.elements;\r\n        e[0] = 1.0 - (2.0 * (yy + zz));\r\n        e[1] = 2.0 * (xy + zw);\r\n        e[2] = 2.0 * (zx - yw);\r\n        e[4] = 2.0 * (xy - zw);\r\n        e[5] = 1.0 - (2.0 * (zz + xx));\r\n        e[6] = 2.0 * (yz + xw);\r\n        e[8] = 2.0 * (zx + yw);\r\n        e[9] = 2.0 * (yz - xw);\r\n        e[10] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 位置\r\n     * @param position \r\n     */\r\n    setPosition(position: Vector3): void {\r\n        var e: Float32Array = this.elements;\r\n        e[12] = position.x;\r\n        e[13] = position.y;\r\n        e[14] = position.z;\r\n    }\r\n\r\n\r\n    /**\r\n     * 判断两个4x4矩阵的值是否相等。\r\n     * @param\tother 4x4矩阵\r\n     */\r\n    equalsOtherMatrix(other: Matrix4x4): boolean {\r\n        var e: Float32Array = this.elements;\r\n        var oe: Float32Array = other.elements;\r\n\r\n        return (MathUtils3D.nearEqual(e[0], oe[0]) && MathUtils3D.nearEqual(e[1], oe[1]) && MathUtils3D.nearEqual(e[2], oe[2]) && MathUtils3D.nearEqual(e[3], oe[3]) && MathUtils3D.nearEqual(e[4], oe[4]) && MathUtils3D.nearEqual(e[5], oe[5]) && MathUtils3D.nearEqual(e[6], oe[6]) && MathUtils3D.nearEqual(e[7], oe[7]) && MathUtils3D.nearEqual(e[8], oe[8]) && MathUtils3D.nearEqual(e[9], oe[9]) && MathUtils3D.nearEqual(e[10], oe[10]) && MathUtils3D.nearEqual(e[11], oe[11]) && MathUtils3D.nearEqual(e[12], oe[12]) && MathUtils3D.nearEqual(e[13], oe[13]) && MathUtils3D.nearEqual(e[14], oe[14]) && MathUtils3D.nearEqual(e[15], oe[15]));\r\n    }\r\n\r\n    /**\r\n     * 分解矩阵为平移向量、旋转四元数、缩放向量。\r\n     * @param\ttranslation 平移向量。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tscale 缩放向量。\r\n     * @return 是否分解成功。\r\n     */\r\n    decomposeTransRotScale(translation: Vector3, rotation: Quaternion, scale: Vector3): boolean {\r\n        var rotationMatrix: Matrix4x4 = _tempMatrix4x4;\r\n        if (this.decomposeTransRotMatScale(translation, rotationMatrix, scale)) {\r\n            Quaternion.createFromMatrix4x4(rotationMatrix, rotation);\r\n            return true;\r\n        } else {\r\n            rotation.identity();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 分解矩阵为平移向量、旋转矩阵、缩放向量。\r\n     * @param\ttranslation 平移向量。\r\n     * @param\trotationMatrix 旋转矩阵。\r\n     * @param\tscale 缩放向量。\r\n     * @return 是否分解成功。\r\n     */\r\n    decomposeTransRotMatScale(translation: Vector3, rotationMatrix: Matrix4x4, scale: Vector3): boolean {\r\n        var e: Float32Array = this.elements;\r\n        var te: Vector3 = translation;\r\n        var re: Float32Array = rotationMatrix.elements;\r\n        var se: Vector3 = scale;\r\n\r\n        //Get the translation. \r\n        te.x = e[12];\r\n        te.y = e[13];\r\n        te.z = e[14];\r\n\r\n        //Scaling is the length of the rows. \r\n        var m11: number = e[0], m12: number = e[1], m13: number = e[2];\r\n        var m21: number = e[4], m22: number = e[5], m23: number = e[6];\r\n        var m31: number = e[8], m32: number = e[9], m33: number = e[10];\r\n\r\n        var sX: number = se.x = Math.sqrt((m11 * m11) + (m12 * m12) + (m13 * m13));\r\n        var sY: number = se.y = Math.sqrt((m21 * m21) + (m22 * m22) + (m23 * m23));\r\n        var sZ: number = se.z = Math.sqrt((m31 * m31) + (m32 * m32) + (m33 * m33));\r\n\r\n        //If any of the scaling factors are zero, than the rotation matrix can not exist. \r\n        if (MathUtils3D.isZero(sX) || MathUtils3D.isZero(sY) || MathUtils3D.isZero(sZ)) {\r\n            re[1] = re[2] = re[3] = re[4] = re[6] = re[7] = re[8] = re[9] = re[11] = re[12] = re[13] = re[14] = 0;\r\n            re[0] = re[5] = re[10] = re[15] = 1;\r\n            return false;\r\n        }\r\n\r\n        // Calculate an perfect orthonormal matrix (no reflections)\r\n        var at: Vector3 = _tempVector0;\r\n        at.x = m31 / sZ;\r\n        at.y = m32 / sZ;\r\n        at.z = m33 / sZ;\r\n        var tempRight: Vector3 = _tempVector1;\r\n        tempRight.x = m11 / sX;\r\n        tempRight.y = m12 / sX;\r\n        tempRight.z = m13 / sX;\r\n        var up: Vector3 = _tempVector2;\r\n        Vector3.cross(at, tempRight, up);\r\n        var right: Vector3 = _tempVector1;\r\n        Vector3.cross(up, at, right);\r\n\r\n        re[3] = re[7] = re[11] = re[12] = re[13] = re[14] = 0;\r\n        re[15] = 1;\r\n        re[0] = right.x;\r\n        re[1] = right.y;\r\n        re[2] = right.z;\r\n\r\n        re[4] = up.x;\r\n        re[5] = up.y;\r\n        re[6] = up.z;\r\n\r\n        re[8] = at.x;\r\n        re[9] = at.y;\r\n        re[10] = at.z;\r\n\r\n        // In case of reflexions//TODO:是否不用计算dot后的值即为结果\r\n        ((re[0] * m11 + re[1] * m12 + re[2] * m13)/*Vector3.dot(right,Right)*/ < 0.0) && (se.x = -sX);\r\n        ((re[4] * m21 + re[5] * m22 + re[6] * m23)/* Vector3.dot(up, Up)*/ < 0.0) && (se.y = -sY);\r\n        ((re[8] * m31 + re[9] * m32 + re[10] * m33)/*Vector3.dot(at, Backward)*/ < 0.0) && (se.z = -sZ);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 分解旋转矩阵的旋转为YawPitchRoll欧拉角。\r\n     * @param\tout float yaw\r\n     * @param\tout float pitch\r\n     * @param\tout float roll\r\n     * @return\r\n     */\r\n    decomposeYawPitchRoll(yawPitchRoll: Vector3): void {//TODO:经飞仙测试,好像有BUG。\r\n        var pitch: number = Math.asin(-this.elements[9]);\r\n        yawPitchRoll.y = pitch;\r\n        // Hardcoded constant - burn him, he's a witch\r\n        // double threshold = 0.001; \r\n        var test: number = Math.cos(pitch);\r\n        if (test > MathUtils3D.zeroTolerance) {\r\n            yawPitchRoll.z = Math.atan2(this.elements[1], this.elements[5]);\r\n            yawPitchRoll.x = Math.atan2(this.elements[8], this.elements[10]);\r\n        } else {\r\n            yawPitchRoll.z = Math.atan2(-this.elements[4], this.elements[0]);\r\n            yawPitchRoll.x = 0.0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 归一化矩阵 \r\n     */\r\n    normalize(): void {\r\n        var v: Float32Array = this.elements;\r\n        var c: number = v[0], d: number = v[1], e: number = v[2], g: number = Math.sqrt(c * c + d * d + e * e);\r\n        if (g) {\r\n            if (g == 1)\r\n                return;\r\n        } else {\r\n            v[0] = 0;\r\n            v[1] = 0;\r\n            v[2] = 0;\r\n            return;\r\n        }\r\n        g = 1 / g;\r\n        v[0] = c * g;\r\n        v[1] = d * g;\r\n        v[2] = e * g;\r\n    }\r\n\r\n    /**\r\n     * 计算矩阵的转置矩阵\r\n     */\r\n    transpose(): Matrix4x4 {\r\n        var e: Float32Array, t: number;\r\n        e = this.elements;\r\n        t = e[1];\r\n        e[1] = e[4];\r\n        e[4] = t;\r\n        t = e[2];\r\n        e[2] = e[8];\r\n        e[8] = t;\r\n        t = e[3];\r\n        e[3] = e[12];\r\n        e[12] = t;\r\n        t = e[6];\r\n        e[6] = e[9];\r\n        e[9] = t;\r\n        t = e[7];\r\n        e[7] = e[13];\r\n        e[13] = t;\r\n        t = e[11];\r\n        e[11] = e[14];\r\n        e[14] = t;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 计算一个矩阵的逆矩阵\r\n     * @param\tout 输出矩阵\r\n     */\r\n    invert(out: Matrix4x4): void {\r\n\r\n        var ae: Float32Array = this.elements;\r\n        var oe: Float32Array = out.elements;\r\n        var a00: number = ae[0], a01: number = ae[1], a02: number = ae[2], a03: number = ae[3], a10: number = ae[4], a11: number = ae[5], a12: number = ae[6], a13: number = ae[7], a20: number = ae[8], a21: number = ae[9], a22: number = ae[10], a23: number = ae[11], a30: number = ae[12], a31: number = ae[13], a32: number = ae[14], a33: number = ae[15],\r\n\r\n            b00: number = a00 * a11 - a01 * a10, b01: number = a00 * a12 - a02 * a10, b02: number = a00 * a13 - a03 * a10, b03: number = a01 * a12 - a02 * a11, b04: number = a01 * a13 - a03 * a11, b05: number = a02 * a13 - a03 * a12, b06: number = a20 * a31 - a21 * a30, b07: number = a20 * a32 - a22 * a30, b08: number = a20 * a33 - a23 * a30, b09: number = a21 * a32 - a22 * a31, b10: number = a21 * a33 - a23 * a31, b11: number = a22 * a33 - a23 * a32,\r\n\r\n            // Calculate the determinant \r\n            det: number = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (Math.abs(det) === 0.0) {\r\n            return;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        oe[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        oe[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        oe[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        oe[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        oe[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        oe[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        oe[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        oe[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        oe[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        oe[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        oe[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        oe[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        oe[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        oe[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        oe[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        oe[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n    }\r\n\r\n    /**\r\n     * 计算BlillBoard矩阵\r\n     * @param\tobjectPosition 物体位置\r\n     * @param\tcameraPosition 相机位置\r\n     * @param\tcameraUp       相机上向量\r\n     * @param\tcameraForward  相机前向量\r\n     * @param\tmat            变换矩阵\r\n     */\r\n    static billboard(objectPosition: Vector3, cameraPosition: Vector3, cameraUp: Vector3, cameraForward: Vector3, mat: Matrix4x4): void {\r\n\r\n        Vector3.subtract(objectPosition, cameraPosition, _tempVector0);\r\n\r\n        var lengthSq: number = Vector3.scalarLengthSquared(_tempVector0);\r\n\r\n        if (MathUtils3D.isZero(lengthSq)) {\r\n            Vector3.scale(cameraForward, -1, _tempVector1);\r\n            _tempVector1.cloneTo(_tempVector0);\r\n        } else {\r\n            Vector3.scale(_tempVector0, 1 / Math.sqrt(lengthSq), _tempVector0);\r\n        }\r\n\r\n        Vector3.cross(cameraUp, _tempVector0, _tempVector2);\r\n        Vector3.normalize(_tempVector2, _tempVector2);\r\n        Vector3.cross(_tempVector0, _tempVector2, _tempVector3);\r\n\r\n        var crosse: Vector3 = _tempVector2;\r\n        var finale: Vector3 = _tempVector3;\r\n        var diffee: Vector3 = _tempVector0;\r\n        var obpose: Vector3 = objectPosition;\r\n\r\n        var mate: Float32Array = mat.elements;\r\n        mate[0] = crosse.x;\r\n        mate[1] = crosse.y;\r\n        mate[2] = crosse.z;\r\n        mate[3] = 0.0;\r\n        mate[4] = finale.x;\r\n        mate[5] = finale.y;\r\n        mate[6] = finale.z;\r\n        mate[7] = 0.0;\r\n        mate[8] = diffee.x;\r\n        mate[9] = diffee.y;\r\n        mate[10] = diffee.z;\r\n        mate[11] = 0.0;\r\n        mate[12] = obpose.x;\r\n        mate[13] = obpose.y;\r\n        mate[14] = obpose.z;\r\n        mate[15] = 1.0;\r\n    }\r\n\r\n    /**\r\n     * 归一化\r\n     */\r\n    identity(): void {\r\n        /*\r\n        var e: Float32Array = this.elements;\r\n        e[1] = e[2] = e[3] = e[4] = e[6] = e[7] = e[8] = e[9] = e[11] = e[12] = e[13] = e[14] = 0;\r\n        e[0] = e[5] = e[10] = e[15] = 1;\r\n        */\r\n        this.elements.set(DEFAULTARRAY);\r\n    }\r\n\r\n    /**判断是否是单位矩阵 */\r\n    isIdentity(): boolean {\r\n        let delty = function (num0: number, num1: number) {\r\n            return Math.abs(num0 - num1) < 1e-7;\r\n        }\r\n        let e = this.elements;\r\n        let defined = Matrix4x4.DEFAULT.elements;\r\n        for (let i = 0, n = e.length; i < n; i++) {\r\n            if (!delty(e[i], defined[i]))\r\n                return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var i: number, s: Float32Array, d: Float32Array;\r\n        s = this.elements;\r\n        d = destObject.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        destObject.elements.set(this.elements);\r\n        /*for (i = 0; i < 16; ++i) {\r\n            d[i] = s[i];\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * @param destObject \r\n     */\r\n    cloneByArray(destObject: Float32Array) {\r\n        this.elements.set(destObject);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Matrix4x4 = new Matrix4x4(null);\r\n        dest.elements = this.elements.slice();\r\n        return dest;\r\n    }\r\n\r\n    static translation(v3: Vector3, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\r\n        oe[12] = v3.x;\r\n        oe[13] = v3.y;\r\n        oe[14] = v3.z;\r\n    }\r\n\r\n    /**\r\n     * 获取平移向量。\r\n     * @param\tout 平移向量。\r\n     */\r\n    getTranslationVector(out: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        out.x = me[12];\r\n        out.y = me[13];\r\n        out.z = me[14];\r\n    }\r\n\r\n    /**\r\n     * 设置平移向量。\r\n     * @param\ttranslate 平移向量。\r\n     */\r\n    setTranslationVector(translate: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        var ve: Vector3 = translate;\r\n        me[12] = ve.x;\r\n        me[13] = ve.y;\r\n        me[14] = ve.z;\r\n    }\r\n\r\n    /**\r\n     * 获取前向量。\r\n     * @param\tout 前向量。\r\n     */\r\n    getForward(out: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        out.x = -me[8];\r\n        out.y = -me[9];\r\n        out.z = -me[10];\r\n    }\r\n\r\n    /**\r\n     * 设置前向量。\r\n     * @param\tforward 前向量。\r\n     */\r\n    setForward(forward: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        me[8] = -forward.x;\r\n        me[9] = -forward.y;\r\n        me[10] = -forward.z;\r\n    }\r\n\r\n    /**\r\n     * 判断此矩阵是否是反向矩阵\r\n     */\r\n    getInvertFront(): boolean {\r\n        this.decomposeTransRotScale(_tempVector0, Quaternion.TEMP, _tempVector1);\r\n        var scale: Vector3 = _tempVector1;\r\n        var isInvert: boolean = scale.x < 0;\r\n        (scale.y < 0) && (isInvert = !isInvert);\r\n        (scale.z < 0) && (isInvert = !isInvert);\r\n        return isInvert;\r\n    }\r\n}\r\n\r\nconst _tempMatrix4x4 = new Matrix4x4();","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { ITexture3DContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\n/**\r\n * 2D 纹理 数组\r\n */\r\nexport class Texture2DArray extends BaseTexture {\r\n\r\n    private static _defaultTexture: Texture2DArray;\r\n\r\n    static get defaultTexture() {\r\n        return this._defaultTexture;\r\n    }\r\n\r\n    /** @internal */\r\n    static __init__() {\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n            this._defaultTexture = new Texture2DArray(1, 1, 1, TextureFormat.R8G8B8A8, false, false, false);\r\n            this._defaultTexture.lock = true;\r\n\r\n            this._defaultTexture.setPixelsData(new Uint8Array([255, 255, 255, 255]), false, false);\r\n        }\r\n    }\r\n\r\n    depth: number;\r\n\r\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Texture2DArray;\r\n        this._gammaSpace = sRGB;\r\n\r\n        this.depth = depth;\r\n\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n\r\n        this._texture = context.createTexture3DInternal(this._dimension, width, height, depth, format, mipmap, sRGB, false);\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 设置Image数据\r\n     * @param sources Image 数组\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setImageData(sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DImageData(texture, sources, this.depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素数据\r\n     * @param source 像素数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DPixelsData(texture, source, this.depth, premultiplyAlpha, invertY)\r\n    }\r\n\r\n    /**\r\n     * 更新像素数据\r\n     * @param xOffset x 偏移\r\n     * @param yOffset y 偏移\r\n     * @param zOffset z 偏移\r\n     * @param width 更新数据宽度\r\n     * @param height 更新数据高度\r\n     * @param depth 更新数据深度层级\r\n     * @param pixels 像素数据\r\n     * @param mipmapLevel mipmap 等级\r\n     * @param generateMipmap 是否生成 mipmap\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转 Y 轴\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n}","import { BaseTexture } from \"../../resource/BaseTexture\";\r\nimport { Resource } from \"../../resource/Resource\";\r\nimport { DefineDatas } from \"./DefineDatas\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\nimport { IClone } from \"../../utils/IClone\";\r\nimport { UniformBufferObject } from \"../UniformBufferObject\";\r\nimport {\r\n\tUniformBufferParamsType,\r\n\tUnifromBufferData,\r\n} from \"../UniformBufferData\";\r\nimport { Color } from \"../../maths/Color\";\r\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\r\nimport { Quaternion } from \"../../maths/Quaternion\";\r\nimport { Vector2 } from \"../../maths/Vector2\";\r\nimport { Vector3 } from \"../../maths/Vector3\";\r\nimport { Vector4 } from \"../../maths/Vector4\";\r\nimport { Matrix3x3 } from \"../../maths/Matrix3x3\";\r\nimport { Texture2DArray } from \"../../resource/Texture2DArray\";\r\ntype uboParams = { ubo: UniformBufferObject; uboBuffer: UnifromBufferData };\r\nexport enum ShaderDataType {\r\n\tInt,\r\n\tBool,\r\n\tFloat,\r\n\tVector2,\r\n\tVector3,\r\n\tVector4,\r\n\tColor,\r\n\tMatrix4x4,\r\n\tTexture2D,\r\n\tTextureCube,\r\n\tBuffer,\r\n\tMatrix3x3,\r\n\tTexture2DArray,\r\n\tTexture3D\r\n}\r\n\r\nexport type ShaderDataItem = number | boolean | Vector2 | Vector3 | Vector4 | Color | Matrix4x4 | BaseTexture | Float32Array | Matrix3x3;\r\n\r\nexport function ShaderDataDefaultValue(type: ShaderDataType) {\r\n\tswitch (type) {\r\n\t\tcase ShaderDataType.Int:\r\n\t\t\treturn 0;\r\n\t\tcase ShaderDataType.Bool:\r\n\t\t\treturn false;\r\n\t\tcase ShaderDataType.Float:\r\n\t\t\treturn 0;\r\n\t\tcase ShaderDataType.Vector2:\r\n\t\t\treturn Vector2.ZERO;\r\n\t\tcase ShaderDataType.Vector3:\r\n\t\t\treturn Vector3.ZERO;\r\n\t\tcase ShaderDataType.Vector4:\r\n\t\t\treturn Vector4.ZERO;\r\n\t\tcase ShaderDataType.Color:\r\n\t\t\treturn Color.BLACK;\r\n\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\treturn Matrix4x4.DEFAULT;\r\n\t\tcase ShaderDataType.Matrix3x3:\r\n\t\t\treturn Matrix3x3.DEFAULT;\r\n\t\tcase ShaderDataType.Texture2DArray:\r\n\t\t\treturn Texture2DArray.defaultTexture;\r\n\t\tcase ShaderDataType.Texture3D:\r\n\t\t\treturn Texture2DArray.defaultTexture;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * 着色器数据类。\r\n */\r\nexport class ShaderData implements IClone {\r\n\t/**@internal 反向找Material*/\r\n\tprotected _ownerResource: Resource = null;\r\n\r\n\t/**@internal */\r\n\tprotected _gammaColorMap: Map<number, Color>;\r\n\t/**@internal */\r\n\tapplyUBO: boolean = false;\r\n\t/**@internal */\r\n\t_data: any = null;\r\n\r\n\t/** @internal */\r\n\t_defineDatas: DefineDatas = new DefineDatas();\r\n\r\n\t/**@internal */\r\n\t_uniformBufferDatas: Map<string, uboParams>;\r\n\r\n\t/**\r\n\t * @internal\r\n\t * key: uniform property id\r\n\t * value: UniformBufferObject\r\n\t * 保存 每个 uniform id 所在的 ubo\r\n\t */\r\n\t_uniformBuffersMap: Map<number, UniformBufferObject>;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget uniformBufferDatas() {\r\n\t\treturn this._uniformBufferDatas;\r\n\t}\r\n\r\n\tget uniformBuffersMap(): Map<number, UniformBufferObject> {\r\n\t\treturn this._uniformBuffersMap;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\t\r\n\t */\r\n\tconstructor(ownerResource: Resource = null) {\r\n\t\tthis._ownerResource = ownerResource;\r\n\t\tthis._initData();\r\n\r\n\t\tthis._uniformBufferDatas = new Map();\r\n\t\tthis._uniformBuffersMap = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @param key \r\n\t * @param ubo \r\n\t * @param uboData \r\n\t */\r\n\t_addCheckUBO(key: string, ubo: UniformBufferObject, uboData: UnifromBufferData) {\r\n\t\tthis._uniformBufferDatas.set(key, { ubo: ubo, uboBuffer: uboData });\r\n\t\tuboData._uniformParamsState.forEach(\r\n\t\t\t(value: UniformBufferParamsType, id: number) => {\r\n\t\t\t\tthis.uniformBuffersMap.set(id, ubo);\r\n\t\t\t}\r\n\t\t);\r\n\t\tubo.setDataByUniformBufferData(uboData);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_initData(): void {\r\n\t\tthis._data = {};\r\n\t\tthis._gammaColorMap = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tgetData(): any {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\tapplyUBOData() {\r\n\t\tthis._uniformBufferDatas.forEach((value, key) => {\r\n\t\t\tvalue.ubo.setDataByUniformBufferData(value.uboBuffer);\r\n\t\t});\r\n\t\tthis.applyUBO = false;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\taddDefine(define: ShaderDefine): void {\r\n\t\tthis._defineDatas.add(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 移除Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\tremoveDefine(define: ShaderDefine): void {\r\n\t\tthis._defineDatas.remove(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 是否包含Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\thasDefine(define: ShaderDefine): boolean {\r\n\t\treturn this._defineDatas.has(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 清空宏定义。\r\n\t */\r\n\tclearDefine(): void {\r\n\t\tthis._defineDatas.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * 获取布尔。\r\n\t * @param\tindex shader索引。\r\n\t * @return  布尔。\r\n\t */\r\n\tgetBool(index: number): boolean {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置布尔。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 布尔。\r\n\t */\r\n\tsetBool(index: number, value: boolean): void {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取整形。\r\n\t * @param\tindex shader索引。\r\n\t * @return  整形。\r\n\t */\r\n\tgetInt(index: number): number {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置整型。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 整形。\r\n\t */\r\n\tsetInt(index: number, value: number): void {\r\n\t\tthis._data[index] = value;\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getInt(index));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取浮点。\r\n\t * @param\tindex shader索引。\r\n\t * @return\t浮点。\r\n\t */\r\n\tgetNumber(index: number): number {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置浮点。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 浮点。\r\n\t */\r\n\tsetNumber(index: number, value: number): void {\r\n\t\tthis._data[index] = value;\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getNumber(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Vector2向量。\r\n\t * @param\tindex shader索引。\r\n\t * @return Vector2向量。\r\n\t */\r\n\tgetVector2(index: number): Vector2 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Vector2向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue Vector2向量。\r\n\t */\r\n\tsetVector2(index: number, value: Vector2): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector2(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Vector3向量。\r\n\t * @param\tindex shader索引。\r\n\t * @return Vector3向量。\r\n\t */\r\n\tgetVector3(index: number): Vector3 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Vector3向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue Vector3向量。\r\n\t */\r\n\tsetVector3(index: number, value: Vector3): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector3(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取颜色。\r\n\t * @param \tindex shader索引。\r\n\t * @return  向量。\r\n\t */\r\n\tgetVector(index: number): Vector4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 向量。\r\n\t */\r\n\tsetVector(index: number, value: Vector4): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取颜色\r\n\t * @param index 索引\r\n\t * @returns 颜色\r\n\t */\r\n\tgetColor(index: number): Color {\r\n\t\treturn this._gammaColorMap.get(index);\r\n\t}\r\n\r\n\t/**\r\n\t * 设置颜色\r\n\t * @param index 索引\r\n\t * @param value 颜色值\r\n\t */\r\n\tsetColor(index: number, value: Color): void {\r\n\t\tif (!value)\r\n\t\t\treturn;\r\n\t\tif (this._data[index]) {\r\n\t\t\tlet gammaColor = this._gammaColorMap.get(index);\r\n\t\t\tvalue.cloneTo(gammaColor);\r\n\t\t\tlet linearColor = this._data[index];\r\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\r\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\r\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\r\n\t\t\tlinearColor.w = value.a;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet linearColor = new Vector4();\r\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\r\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\r\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\r\n\t\t\tlinearColor.w = value.a;\r\n\t\t\tthis._data[index] = linearColor;\r\n\t\t\tthis._gammaColorMap.set(index, value.clone());\r\n\t\t}\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getLinearColor(index));\r\n\t\t\tthis.applyUBO = true;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @param index \r\n\t */\r\n\tgetLinearColor(index: number): Vector4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 获取矩阵。\r\n\t * @param\tindex shader索引。\r\n\t * @return  矩阵。\r\n\t */\r\n\tgetMatrix4x4(index: number): Matrix4x4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置矩阵。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue  矩阵。\r\n\t */\r\n\tsetMatrix4x4(index: number, value: Matrix4x4): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t}\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getMatrix4x4(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取矩阵\r\n\t * @param index \r\n\t * @returns \r\n\t */\r\n\tgetMatrix3x3(index: number): Matrix3x3 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置矩阵。\r\n\t * @param index \r\n\t * @param value \r\n\t */\r\n\tsetMatrix3x3(index: number, value: Matrix3x3): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t}\r\n\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getMatrix3x3(index));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Buffer。\r\n\t * @param\tindex shader索引。\r\n\t * @return\r\n\t */\r\n\tgetBuffer(index: number): Float32Array {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Buffer。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue  buffer数据。\r\n\t */\r\n\tsetBuffer(index: number, value: Float32Array): void {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置纹理。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 纹理。\r\n\t */\r\n\tsetTexture(index: number, value: BaseTexture): void {\r\n\t\tvar lastValue: BaseTexture = this._data[index];\r\n\t\tif (value) {\r\n\t\t\tlet shaderDefine = ShaderDefine._texGammaDefine[index];\r\n\t\t\tif (shaderDefine && value && value.gammaCorrection > 1) {\r\n\t\t\t\tthis.addDefine(shaderDefine);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// todo 自动的\r\n\t\t\t\tshaderDefine && this.removeDefine(shaderDefine);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//维护Reference\r\n\t\tthis._data[index] = value;\r\n\t\tlastValue && lastValue._removeReference();\r\n\t\tvalue && value._addReference();\r\n\t}\r\n\t/**\r\n\t * 获取纹理。\r\n\t * @param\tindex shader索引。\r\n\t * @return  纹理。\r\n\t */\r\n\tgetTexture(index: number): BaseTexture {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\tgetSourceIndex(value: any) {\r\n\t\tfor (var i in this._data) {\r\n\t\t\tif (this._data[i] == value)\r\n\t\t\t\treturn Number(i);\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * set shader data\r\n\t * @deprecated\r\n\t * @param index uniformID\r\n\t * @param value data\r\n\t */\r\n\tsetValueData(index: number, value: any) {\r\n\t\t//Color 需要特殊处理\r\n\t\tif (value instanceof Color) {\r\n\t\t\tthis.setColor(index, value);\r\n\t\t\treturn;\r\n\t\t} else if (!value) {\r\n\t\t\t//value null\r\n\t\t\tthis._data[index] = value;\r\n\t\t} else if (!!value.clone) {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t} else this._data[index] = value;\r\n\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getValueData(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param index \r\n\t * @param value \r\n\t */\r\n\tsetUniformBuffer(index: number, value: UniformBufferObject) {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\tgetUniformBuffer(index: number): UniformBufferObject {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\tsetShaderData(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem | Quaternion) {\r\n\t\tswitch (type) {\r\n\t\t\tcase ShaderDataType.Int:\r\n\t\t\t\tthis.setInt(uniformIndex, <number>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Bool:\r\n\t\t\t\tthis.setBool(uniformIndex, <boolean>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Float:\r\n\t\t\t\tthis.setNumber(uniformIndex, <number>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector2:\r\n\t\t\t\tthis.setVector2(uniformIndex, <Vector2>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector3:\r\n\t\t\t\tthis.setVector3(uniformIndex, <Vector3>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector4:\r\n\t\t\t\tthis.setVector(uniformIndex, <Vector4>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Color:\r\n\t\t\t\tthis.setColor(uniformIndex, <Color>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\tthis.setMatrix4x4(uniformIndex, <Matrix4x4>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Matrix3x3:\r\n\t\t\t\tthis.setMatrix3x3(uniformIndex, <Matrix3x3>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Texture2D:\r\n\t\t\tcase ShaderDataType.TextureCube:\r\n\t\t\tcase ShaderDataType.Texture2DArray:\r\n\t\t\tcase ShaderDataType.Texture3D:\r\n\t\t\t\tthis.setTexture(uniformIndex, <BaseTexture>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Buffer:\r\n\t\t\t\tthis.setBuffer(uniformIndex, <Float32Array>value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`unkown shader data type: ${type}`);\r\n\t\t}\r\n\t}\r\n\r\n\tgetShaderData(uniformIndex: number, type: ShaderDataType) {\r\n\t\tswitch (type) {\r\n\t\t\tcase ShaderDataType.Int:\r\n\t\t\t\treturn this.getInt(uniformIndex);\r\n\t\t\tcase ShaderDataType.Bool:\r\n\t\t\t\treturn this.getBool(uniformIndex);\r\n\t\t\tcase ShaderDataType.Float:\r\n\t\t\t\treturn this.getNumber(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector2:\r\n\t\t\t\treturn this.getVector2(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector3:\r\n\t\t\t\treturn this.getVector3(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector4:\r\n\t\t\t\treturn this.getVector(uniformIndex);\r\n\t\t\tcase ShaderDataType.Color:\r\n\t\t\t\treturn this.getColor(uniformIndex);\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\treturn this.getMatrix4x4(uniformIndex);\r\n\t\t\tcase ShaderDataType.Texture2D:\r\n\t\t\tcase ShaderDataType.TextureCube:\r\n\t\t\tcase ShaderDataType.Texture2DArray:\r\n\t\t\tcase ShaderDataType.Texture3D:\r\n\t\t\t\treturn this.getTexture(uniformIndex);\r\n\t\t\tcase ShaderDataType.Buffer:\r\n\t\t\t\treturn this.getBuffer(uniformIndex);\r\n\t\t\tcase ShaderDataType.Matrix3x3:\r\n\t\t\t\treturn this.getMatrix3x3(uniformIndex);\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\treturn this.getMatrix4x4(uniformIndex);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"unkone shader data type.\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get shader data\r\n\t * @deprecated\r\n\t * @param index uniform ID\r\n\t * @returns \r\n\t */\r\n\tgetValueData(index: number): any {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @param\tdestObject 克隆源。\r\n\t */\r\n\tcloneTo(destObject: ShaderData): void {\r\n\t\tvar dest: ShaderData = <ShaderData>destObject;\r\n\t\tvar destData: { [key: string]: number | boolean | Vector2 | Vector3 | Vector4 | Matrix3x3 | Matrix4x4 | BaseTexture } = dest._data;\r\n\t\tfor (var k in this._data) {//TODO:需要优化,杜绝is判断，慢\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value != null) {\r\n\t\t\t\tif (typeof value == \"number\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (typeof value == \"number\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (typeof value == \"boolean\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (value instanceof Vector2) {\r\n\t\t\t\t\tvar v2 = destData[k] || (destData[k] = new Vector2());\r\n\t\t\t\t\t(<Vector2>value).cloneTo(v2);\r\n\t\t\t\t\tdestData[k] = v2;\r\n\t\t\t\t} else if (value instanceof Vector3) {\r\n\t\t\t\t\tvar v3 = destData[k] || (destData[k] = new Vector3());\r\n\t\t\t\t\t(<Vector3>value).cloneTo(v3);\r\n\t\t\t\t\tdestData[k] = v3;\r\n\t\t\t\t} else if (value instanceof Vector4) {\r\n\t\t\t\t\tlet color = this.getColor(parseInt(k));\r\n\t\t\t\t\tif (color) {\r\n\t\t\t\t\t\tlet clonecolor = color.clone();\r\n\t\t\t\t\t\tdestObject.setColor(parseInt(k), clonecolor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar v4 = destData[k] || (destData[k] = new Vector4());\r\n\t\t\t\t\t\t(<Vector4>value).cloneTo(v4);\r\n\t\t\t\t\t\tdestData[k] = v4;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (value instanceof Matrix3x3) {\r\n\t\t\t\t\tlet mat = destData[k] || (destData[k] = new Matrix3x3());\r\n\t\t\t\t\tvalue.cloneTo(mat);\r\n\t\t\t\t\tdestData[k] = mat;\r\n\t\t\t\t}\r\n\t\t\t\telse if (value instanceof Matrix4x4) {\r\n\t\t\t\t\tvar mat = destData[k] || (destData[k] = new Matrix4x4());\r\n\t\t\t\t\t(<Matrix4x4>value).cloneTo(mat);\r\n\t\t\t\t\tdestData[k] = mat;\r\n\t\t\t\t} else if (value instanceof BaseTexture) {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t\tvalue._addReference();\r\n\t\t\t\t} else if (value instanceof Resource) {\r\n\t\t\t\t\tdestData[k] = value as any;\r\n\t\t\t\t\tvalue._addReference();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._defineDatas.cloneTo(dest._defineDatas);\r\n\t\tthis._gammaColorMap.forEach((color, index) => {\r\n\t\t\tdestObject._gammaColorMap.set(index, color.clone());\r\n\t\t});\r\n\r\n\t\t//UBO Clone\r\n\t\tthis._cloneUBO(dest._uniformBufferDatas);\r\n\t\tdest.applyUBO = true;\r\n\t}\r\n\r\n\t/**\r\n\t * clone UBO Data\r\n\t * @internal\r\n\t * @param uboDatas \r\n\t */\r\n\t_cloneUBO(uboDatas: Map<string, uboParams>) {\r\n\t\tthis._uniformBufferDatas.forEach((value, key) => {\r\n\t\t\tuboDatas.has(key) && (value.uboBuffer.cloneTo(uboDatas.get(key).uboBuffer));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: ShaderData = new ShaderData();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\treset() {\r\n\t\tfor (var k in this._data) {\r\n\t\t\t//维护Refrence\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value instanceof Resource) {\r\n\t\t\t\tvalue._removeReference();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._data = {};\r\n\t\tthis._gammaColorMap.clear();\r\n\t\tthis._uniformBufferDatas.clear();\r\n\t\tthis.applyUBO = false;\r\n\t\tthis._uniformBuffersMap.clear();\r\n\t\tthis._defineDatas.clear();\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tthis._defineDatas.destroy();\r\n\t\tthis._defineDatas = null;\r\n\t\tfor (var k in this._data) {\r\n\t\t\t//维护Refrence\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value instanceof Resource) {\r\n\t\t\t\tvalue._removeReference();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._data = null;\r\n\t\tthis._gammaColorMap.clear();\r\n\t\tthis._gammaColorMap = null;\r\n\t\t// // 使用对象解析\r\n\t\tdelete this._uniformBufferDatas;\r\n\t\tdelete this._uniformBuffersMap;\r\n\t\tthis._uniformBufferDatas = null;\r\n\t\tthis._uniformBuffersMap = null;\r\n\t}\r\n\r\n}\r\n","import { Color } from \"../maths/Color\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Shader3D } from \"./RenderShader/Shader3D\";\r\n\r\n/**\r\n *描述UniformBuffer参数类型\r\n */\r\nexport enum UniformBufferParamsType {\r\n    Number,\r\n    Vector2,\r\n    Vector3,\r\n    Vector4,\r\n    Matrix4x4,\r\n    Vector4Array,//Numberarray, vec2array and vec3array occupy the same memory as vec4array, so only vector4 is provided\r\n    MatrixArray\r\n}\r\n\r\n/**\r\n * 实例化UniformBuffer数据\r\n * 注：要与glsl中Uniform block结构相同\r\n */\r\nexport class UnifromBufferData {\r\n\r\n    /**\r\n     * @internal\r\n     * key: UniformID,value: x:offset y:length z:\r\n     */\r\n    protected _layoutMap: any;\r\n\r\n    /**\r\n     * @internal\r\n     * data length\r\n     */\r\n    protected _bytelength: number;\r\n\r\n    /**\r\n     * @internal\r\n     * params describe\r\n     */\r\n    _uniformParamsState: Map<number, UniformBufferParamsType>;\r\n\r\n    /**\r\n     * @internal\r\n     * update frome x to max,x:min,y:max\r\n     */\r\n    _updateFlag: Vector2;\r\n\r\n    /**\r\n     * Buffer Data\r\n     */\r\n    _buffer: Float32Array;\r\n\r\n    /**\r\n     * create UniformBufferData Instance\r\n     * @param uniformParamsStat Params describe\r\n     */\r\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>) {\r\n        // todo 后面改掉 不用map 初始化\r\n        this._uniformParamsState = new Map(uniformParamsStat);\r\n        this._createBuffer();\r\n        this._updateFlag = new Vector2();\r\n        this._resetUpdateFlag();\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * createBuffer\r\n     */\r\n    protected _createBuffer() {\r\n        var dataPos = 0;\r\n        this._layoutMap = {};\r\n        const elementSize = 4;\r\n        this._uniformParamsState.forEach((key, value) => {\r\n            dataPos += this._addUniformParams(value, key, dataPos);\r\n        });\r\n        //这里需要对手机平台做兼容\r\n        //this._bytelength = dataPos * elementSize;\r\n        this._bytelength = Math.ceil(dataPos / 4) * 4 * elementSize;\r\n        this._buffer = new Float32Array(dataPos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _getArraySize(key: string) {\r\n        let left = key.indexOf(\"[\");\r\n        let right = key.indexOf(\"]\");\r\n        if (left != -1 && right != -1 && left < right) {\r\n            return parseFloat(key.substring(left + 1, right));\r\n        } else\r\n            throw key + \" is illegal \"\r\n    }\r\n\r\n    /**\r\n     * @interanl\r\n     * layout UniformBuffer pitch std140\r\n     */\r\n    protected _addUniformParams(uniformID: number, value: UniformBufferParamsType, offset: number): number {\r\n        let size: number = 0;\r\n        let posAdd: number = 0;\r\n        let posG = offset % 4;\r\n        let offsetadd;\r\n        switch (value) {\r\n            case UniformBufferParamsType.Number:\r\n                size = 1;\r\n                posAdd = 1;\r\n                break;\r\n            case UniformBufferParamsType.Vector2:\r\n                size = 2;\r\n                switch (posG) {\r\n                    case 0:\r\n                    case 2:\r\n                        posAdd = 2;\r\n                        break;\r\n                    case 1:\r\n                    case 3:\r\n                        offset += 1;\r\n                        posAdd = 3;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Vector3:\r\n                size = 3;\r\n                posAdd = 3;\r\n                switch (posG) {\r\n                    case 1:\r\n                    case 2:\r\n                    case 3:\r\n                        offset += (4 - posG);\r\n                        posAdd = (4 - posG) + 3;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Vector4:\r\n                //case UniformBufferParamsType.Color:\r\n                size = 4;\r\n                switch (posG) {\r\n                    case 0:\r\n                        posAdd = 4;\r\n                        break;\r\n                    case 1:\r\n                        offset += 3;\r\n                        posAdd = 7;\r\n                        break;\r\n                    case 2:\r\n                        offset += 2;\r\n                        posAdd = 6;\r\n                        break;\r\n                    case 3:\r\n                        offset += 1;\r\n                        posAdd = 5;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Matrix4x4:\r\n                size = 16;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            case UniformBufferParamsType.Vector4Array:\r\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 4;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            case UniformBufferParamsType.MatrixArray:\r\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 16;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            default:\r\n                throw \"Unifrom Buffer Params Type is illegal \"\r\n        }\r\n        const paramsInfo = new Vector2(offset, size);\r\n        this._layoutMap[uniformID] = paramsInfo;\r\n        return posAdd;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _getParamsInfo(key: number): Vector2 {\r\n        return this._layoutMap[key];\r\n    }\r\n\r\n    /**\r\n     * @interanl\r\n     * set upload range\r\n     */\r\n    private _setUpdateFlag(min: number, max: number) {\r\n        if (min < this._updateFlag.x)\r\n            this._updateFlag.x = min;\r\n        if (max > this._updateFlag.y)\r\n            this._updateFlag.y = max;\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        delete this._buffer;\r\n        this._uniformParamsState.clear();\r\n        this._uniformParamsState = null;\r\n        this._layoutMap = null;\r\n        this._updateFlag = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resetUpdateFlag() {\r\n        this._updateFlag.setValue(this._buffer.length, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param uniformID \r\n     * @returns \r\n     */\r\n    _has(uniformID: number) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        return !!info;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * set buffer params Data\r\n     */\r\n    _setData(uniformID: number, value: any) {\r\n\r\n        let uniformType = this._uniformParamsState.get(uniformID);\r\n\r\n        switch (uniformType) {\r\n            case UniformBufferParamsType.Number:\r\n                this.setNumberbyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector2:\r\n                this.setVector2byIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector3:\r\n                this.setVector3byIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector4:\r\n                this.setVector4byIndex(uniformID, value);\r\n                break;\r\n            // case UniformBufferParamsType.Color:\r\n            //     this.setColorbyIndex(uniformID, value);\r\n            //     break;\r\n            case UniformBufferParamsType.Matrix4x4:\r\n                this.setMatrixbyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector4Array:\r\n                this.setVector4ArraybyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.MatrixArray:\r\n                this.setMatrixArraybyIndex(uniformID, value);\r\n                break;\r\n            // todo\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Buffer byte length\r\n     * @returns \r\n     */\r\n    getbyteLength(): number {\r\n        return this._bytelength;\r\n    }\r\n\r\n    /**\r\n     * set Vector4Array by paramsName\r\n     * @param name uniform params name\r\n     * @param value vector4Array data\r\n     */\r\n    setVector4Array(name: string, value: Vector4[]) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector4ArraybyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector4Array by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value vector4Array data\r\n     * @returns \r\n     */\r\n    setVector4ArraybyIndex(uniformID: number, value: Vector4[]) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        let count = info.y / 4;\r\n        for (let i = 0; i < count; i++) {\r\n            let vec = value[i];\r\n            this._buffer[pos++] = vec.x;\r\n            this._buffer[pos++] = vec.y;\r\n            this._buffer[pos++] = vec.z;\r\n            this._buffer[pos++] = vec.w;\r\n        }\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set MatrixArray by paramsName\r\n     * @param name uniform params name\r\n     * @param value MatrixArray data\r\n     */\r\n    setMatrixArray(name: string, value: Matrix4x4[]) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setMatrixArraybyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set MatrixArray by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value MatrixArray data\r\n     * @returns \r\n     */\r\n    setMatrixArraybyIndex(uniformID: number, value: Matrix4x4[]) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        let count = info.y / 4;\r\n        for (let i = 0; i < count; i++) {\r\n            let mat = value[i];\r\n            this._buffer.set(mat.elements, pos);\r\n            pos += 16;\r\n        }\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Number by paramsName\r\n     * @param name uniform params name\r\n     * @param value Number data\r\n     */\r\n    setNumber(name: string, value: number) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setNumberbyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Number by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Number data\r\n     * @returns \r\n     */\r\n    setNumberbyIndex(uniformID: number, value: number) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector2 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector2 data\r\n     */\r\n    setVector2(name: string, value: Vector2) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector2byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector2 by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Vector2 data\r\n     * @returns \r\n     */\r\n    setVector2byIndex(uniformID: number, value: Vector2) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector3 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector3 data\r\n     */\r\n    setVector3(name: string, value: Vector3) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector3byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector3 by uniformID\r\n     * @param uniformID uniform params index\r\n     * @param value Vector3 data\r\n     * @returns \r\n     */\r\n    setVector3byIndex(uniformID: number, value: Vector3) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._buffer[pos++] = value.z;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector4 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector4 data\r\n     */\r\n    setVector4(name: string, value: Vector4) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector4byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector4 by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Vector4 data\r\n     * @returns \r\n     */\r\n    setVector4byIndex(uniformID: number, value: Vector4) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._buffer[pos++] = value.z;\r\n        this._buffer[pos++] = value.w;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Color by paramsName\r\n     * @param name uniform params name\r\n     * @param value Color data\r\n     */\r\n    setColor(name: string, value: Color) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setColorbyIndex(uniformID, value);\r\n    }\r\n\r\n    setColorbyIndex(uniformID: number, value: Color) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.r);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.g);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.b);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.a);\r\n        this._setUpdateFlag(info.x, pos);\r\n\r\n    }\r\n\r\n    /**\r\n     * set Matrix by paramsName\r\n     * @param name uniform params name\r\n     * @param value Matrix data\r\n     */\r\n    setMatrix(name: string, value: Matrix4x4) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setMatrixbyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Matrix by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Matrix data\r\n     * @returns \r\n     */\r\n    setMatrixbyIndex(uniformID: number, value: Matrix4x4) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer.set(value.elements, pos);\r\n        pos += 16;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n\r\n    clone(): UnifromBufferData {\r\n        // todo clone 更改\r\n        let ubd = new UnifromBufferData(this._uniformParamsState);\r\n        this.cloneTo(ubd);\r\n        return ubd\r\n    }\r\n\r\n    cloneTo(destObject: UnifromBufferData) {\r\n        if (destObject._bytelength == this._bytelength) {\r\n            destObject._buffer = Float32Array.from(this._buffer);\r\n            this._updateFlag.setValue(0, this._buffer.length);\r\n        }\r\n    }\r\n}","export enum RenderParams{\r\n    Max_Active_Texture_Count,//可激活的纹理数量，即shader中的最大纹理数量\r\n    Max_Uniform_Count,//最大Uniform数量\r\n    Max_AnisoLevel_Count,//最大各向异性数量\r\n    MAX_Texture_Size,//Shader中的最大纹理\r\n    MAX_Texture_Image_Uint,//图形设备支持的最大纹理数量。\r\n    SHADER_CAPAILITY_LEVEL,//Shader质量\r\n    FLOAT,\r\n    UNSIGNED_BYTE,\r\n    BYTE,\r\n    UNSIGNED_SHORT,\r\n}","/**\r\n * 纹理寻址模式。\r\n */\r\nexport enum WrapMode {\r\n    /** 循环平铺。*/\r\n    Repeat = 0,\r\n    /** 超过UV边界后采用最后一个像素。*/\r\n    Clamp = 1,\r\n    /** 镜像采样 */\r\n    Mirrored = 2\r\n}","import { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderInstance } from \"../../RenderEngine/RenderShader/ShaderInstance\";\r\nimport { SubShader, UniformMapType } from \"../../RenderEngine/RenderShader/SubShader\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IShaderCompiledObj } from \"./ShaderCompile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\nexport class ShaderProcessInfo {\r\n    defineString: string[];\r\n    vs: ShaderNode;\r\n    ps: ShaderNode;\r\n    attributeMap: { [name: string]: [number, ShaderDataType] };\r\n    uniformMap: UniformMapType;\r\n    is2D: boolean;\r\n    //....其他数据\r\n};\r\nexport class ShaderCompileDefineBase {\r\n    /** @internal */\r\n    static _defineString: Array<string> = [];\r\n    /** @internal */\r\n    static _debugDefineString: string[] = [];\r\n    /** @internal */\r\n    static _debugDefineMask: number[] = [];\r\n    /** @internal */\r\n    public _VS: ShaderNode;\r\n    /** @internal */\r\n    public _PS: ShaderNode;\r\n    /** @internal */\r\n    _defs: Set<string>;\r\n    /** @internal */\r\n    _validDefine: DefineDatas = new DefineDatas();\r\n    /** @internal */\r\n    protected _cacheShaderHierarchy: number = 1;\r\n    /** @internal */\r\n    protected _owner: SubShader;\r\n    /** @internal */\r\n    name: string;\r\n\r\n    nodeCommonMap: Array<string>;\r\n    /** @internal */\r\n    protected _cacheSharders: { [key: number]: { [key: number]: { [key: number]: ShaderInstance } } } = {};\r\n\r\n    constructor(owner: any, name: string, compiledObj: IShaderCompiledObj) {\r\n        this._owner = owner;\r\n        this.name = name;\r\n        this._VS = compiledObj.vsNode;\r\n        this._PS = compiledObj.psNode;\r\n        this._defs = compiledObj.defs;\r\n        for (let k of compiledObj.defs)\r\n            this._validDefine.add(Shader3D.getDefineByName(k));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resizeCacheShaderMap(cacheMap: any, hierarchy: number, resizeLength: number): void {\r\n        var end: number = this._cacheShaderHierarchy - 1;\r\n        if (hierarchy == end) {\r\n            for (var k in cacheMap) {\r\n                var shader = cacheMap[k];\r\n                for (var i: number = 0, n: number = resizeLength - end; i < n; i++) {\r\n                    if (i == n - 1)\r\n                        cacheMap[0] = shader;//0替代(i == 0 ? k : 0),只扩不缩\r\n                    else\r\n                        cacheMap = cacheMap[i == 0 ? k : 0] = {};\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            ++hierarchy;\r\n            for (var k in cacheMap)\r\n                this._resizeCacheShaderMap(cacheMap[k], hierarchy, resizeLength);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    withCompile(compileDefine: DefineDatas): ShaderInstance {\r\n        var debugDefineString: string[] = ShaderCompileDefineBase._debugDefineString;\r\n        var debugDefineMask: number[] = ShaderCompileDefineBase._debugDefineMask;\r\n        var debugMaskLength: number;\r\n        compileDefine._intersectionDefineDatas(this._validDefine);\r\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\r\n            debugMaskLength = compileDefine._length;\r\n        }\r\n        //compileDefine.addDefineDatas(Scene3D._configDefineValues);\r\n\r\n        var cacheShaders: any = this._cacheSharders;\r\n        var maskLength: number = compileDefine._length;\r\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\r\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\r\n            this._cacheShaderHierarchy = maskLength;\r\n        }\r\n\r\n        var mask: Array<number> = compileDefine._mask;\r\n        var endIndex: number = compileDefine._length - 1;\r\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\r\n        for (var i: number = 0; i < maxEndIndex; i++) {\r\n            var subMask: number = endIndex < i ? 0 : mask[i];\r\n            var subCacheShaders = cacheShaders[subMask];\r\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\r\n            cacheShaders = subCacheShaders;\r\n        }\r\n\r\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\r\n        var shader: ShaderInstance = cacheShaders[cacheKey];\r\n        if (shader)\r\n            return shader;\r\n\r\n        var defineString: string[] = ShaderCompileDefineBase._defineString;\r\n        //TODO\r\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\r\n        let shaderProcessInfo: ShaderProcessInfo = new ShaderProcessInfo();\r\n        shaderProcessInfo.is2D = true;\r\n        shaderProcessInfo.vs = this._VS;\r\n        shaderProcessInfo.ps = this._PS;\r\n        shaderProcessInfo.attributeMap = this._owner._attributeMap;\r\n        shaderProcessInfo.uniformMap = this._owner._uniformMap;\r\n        shaderProcessInfo.defineString = defineString;\r\n\r\n        shader = LayaGL.renderOBJCreate.createShaderInstance(shaderProcessInfo, this);\r\n\r\n        cacheShaders[cacheKey] = shader;\r\n\r\n        if (Shader3D.debugMode) {\r\n            var defStr: string = \"\";\r\n            var defMask: string = \"\";\r\n\r\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++)\r\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\r\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++)\r\n                (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\r\n\r\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this.name + \" \" + \" DefineMask:[\" + defMask + \"]\" + \" DefineNames:[\" + defStr + \"]\", \"color:green\");\r\n        }\r\n\r\n        return shader;\r\n    }\r\n}","import { SubShader } from \"./SubShader\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderVariant } from \"../../RenderEngine/RenderShader/ShaderVariantCollection\";\r\nimport { IShaderCompiledObj } from \"../../webgl/utils/ShaderCompile\";\r\nimport { RenderState } from \"./RenderState\";\r\nimport { ShaderInstance } from \"./ShaderInstance\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * <code>ShaderPass</code> 类用于实现ShaderPass。\r\n */\r\nexport class ShaderPass extends ShaderCompileDefineBase {\r\n\r\n    /** @internal */\r\n    private static _defineStrings: Array<string> = [];\r\n    /** @internal */\r\n    private static _debugDefineStrings: string[] = [];\r\n    /** @internal */\r\n    private static _debugDefineMasks: number[] = [];\r\n    /** @internal */\r\n    private _renderState: RenderState;\r\n    /** @internal */\r\n    _tags: any = {};\r\n    /** @internal */\r\n    _pipelineMode: string;\r\n    /**@internal */\r\n    _nodeUniformCommonMap: Array<string>;\r\n    /** 优先 ShaderPass 渲染状态 */\r\n    statefirst: boolean = false;\r\n\r\n    /**\r\n     * 渲染状态。\r\n     */\r\n    get renderState(): RenderState {\r\n        return this._renderState;\r\n    }\r\n\r\n    constructor(owner: SubShader, compiledObj: IShaderCompiledObj) {\r\n        super(owner, null, compiledObj);\r\n        this._renderState = LayaGL.renderOBJCreate.createRenderState();\r\n        this._renderState.setNull();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addDebugShaderVariantCollection(compileDefine: DefineDatas, outDebugDefines: string[], outDebugDefineMask: number[]): void {\r\n        var dbugShaderVariantInfo: ShaderVariant = Shader3D._debugShaderVariantInfo;\r\n        var debugSubShader: SubShader = this._owner;\r\n        var debugShader: Shader3D = debugSubShader._owner;\r\n        var mask: number[] = compileDefine._mask;\r\n        Shader3D._getNamesByDefineData(compileDefine, outDebugDefines);\r\n        outDebugDefineMask.length = mask.length;\r\n        for (var i: number = 0, n: number = mask.length; i < n; i++)\r\n            outDebugDefineMask[i] = mask[i];\r\n\r\n        if (dbugShaderVariantInfo)\r\n            dbugShaderVariantInfo.setValue(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\r\n        else\r\n            Shader3D._debugShaderVariantInfo = dbugShaderVariantInfo = new ShaderVariant(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\r\n        Shader3D.debugShaderVariantCollection.add(dbugShaderVariantInfo);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @internal\r\n     */\r\n    withCompile(compileDefine: DefineDatas, IS2d: boolean = false): ShaderInstance {\r\n        var debugDefineString: string[] = ShaderPass._debugDefineStrings;\r\n        var debugDefineMask: number[] = ShaderPass._debugDefineMasks;\r\n        var debugMaskLength: number;\r\n        compileDefine._intersectionDefineDatas(this._validDefine);\r\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\r\n            debugMaskLength = compileDefine._length;\r\n            this._addDebugShaderVariantCollection(compileDefine, debugDefineString, debugDefineMask);\r\n        }\r\n\r\n        var cacheShaders: any = this._cacheSharders;\r\n        var maskLength: number = compileDefine._length;\r\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\r\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\r\n            this._cacheShaderHierarchy = maskLength;\r\n        }\r\n\r\n        var mask: Array<number> = compileDefine._mask;\r\n        var endIndex: number = compileDefine._length - 1;\r\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\r\n        for (var i: number = 0; i < maxEndIndex; i++) {\r\n            var subMask: number = endIndex < i ? 0 : mask[i];\r\n            var subCacheShaders = cacheShaders[subMask];\r\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\r\n            cacheShaders = subCacheShaders;\r\n        }\r\n\r\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\r\n        var shader: ShaderInstance = cacheShaders[cacheKey];\r\n        if (shader)\r\n            return shader;\r\n\r\n        let shaderProcessInfo: ShaderProcessInfo = new ShaderProcessInfo();\r\n        shaderProcessInfo.is2D = IS2d;\r\n        shaderProcessInfo.vs = this._VS;\r\n        shaderProcessInfo.ps = this._PS;\r\n        shaderProcessInfo.attributeMap = this._owner._attributeMap;\r\n        shaderProcessInfo.uniformMap = this._owner._uniformMap;\r\n\r\n        var defineString: string[] = ShaderPass._defineStrings;\r\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\r\n        shaderProcessInfo.defineString = defineString;\r\n\r\n        shader = LayaGL.renderOBJCreate.createShaderInstance(shaderProcessInfo, this);\r\n\r\n        cacheShaders[cacheKey] = shader;\r\n\r\n        if (Shader3D.debugMode) {\r\n            var defStr: string = \"\";\r\n            var defCommonStr: string = \"\";\r\n            var defMask: string = \"\";\r\n            var spriteCommonNode: string = \"\";\r\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++) {\r\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\r\n            }\r\n            // for (var i: number = 0, n: number = debugDefineString.length; i < n; i++){}\r\n            //     (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\r\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++) {\r\n                if (Shader3D._configDefineValues.has(Shader3D.getDefineByName(debugDefineString[i])))\r\n                    defCommonStr += debugDefineString[i] + \",\";\r\n                else\r\n                    defStr += debugDefineString[i] + \",\";\r\n            }\r\n            if (this.nodeCommonMap) {\r\n                for (var j = 0; j < this.nodeCommonMap.length; j++) {\r\n                    spriteCommonNode += this.nodeCommonMap[j] + \",\";\r\n                }\r\n            }\r\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this._owner._owner._name +\r\n                \" SubShaderIndex:\" + this._owner._owner._subShaders.indexOf(this._owner) +\r\n                \" PassIndex:\" + this._owner._passes.indexOf(this) +\r\n                \" DefineMask:[\" + defMask + \"]\" +\r\n                \" DefineNames:[\" + defStr + \"]\" +\r\n                \" Environment Macro DefineNames:[\" + defCommonStr + \"]\" +\r\n                \"Sprite CommonNode:[\" + spriteCommonNode + \"]\",\r\n                \"color:green\");\r\n        }\r\n        return shader;\r\n    }\r\n}\r\n\r\n","/**\r\n* <code>VertexElement</code> 类用于创建顶点结构分配。\r\n*/\r\nexport class VertexElement {\r\n    /**@internal */\r\n    _offset: number;\r\n    /**@internal */\r\n    _elementFormat: string;\r\n    /**@internal */\r\n    _elementUsage: number;\r\n    //usageIndex:int;//TODO:待确定是否添加\r\n\r\n    /**\r\n     * 顶点偏移\r\n     */\r\n    get offset(): number {\r\n        return this._offset;\r\n    }\r\n    /**\r\n     * 顶点信息名称\r\n     */\r\n    get elementFormat(): string {\r\n        return this._elementFormat;\r\n    }\r\n\r\n    /**\r\n     * 顶点宏标记\r\n     */\r\n    get elementUsage(): number {\r\n        return this._elementUsage;\r\n    }\r\n\r\n    /**\r\n     * 创建顶点结构分配实例\r\n     * @param offset 顶点偏移\r\n     * @param elementFormat 顶点数据格式名称\r\n     * @param elementUsage 顶点宏标记\r\n     */\r\n    constructor(offset: number, elementFormat: string, elementUsage: number) {\r\n        this._offset = offset;\r\n        this._elementFormat = elementFormat;\r\n        this._elementUsage = elementUsage;\r\n        //this.usageIndex = usageIndex;\r\n    }\r\n}\r\n\r\n","import { RenderParams } from \"../RenderEngine/RenderEnum/RenderParams\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * 类用来定义顶点元素格式\r\n */\r\nexport class VertexElementFormat {\r\n\t/**单精度浮点数 */\r\n\tstatic Single: string = \"single\";\r\n\t/**vec2 数据*/\r\n\tstatic Vector2: string = \"vector2\";\r\n\t/**vec3 数据*/\r\n\tstatic Vector3: string = \"vector3\";\r\n\t/**vec4 数据 */\r\n\tstatic Vector4: string = \"vector4\";\r\n\t/**颜色 */\r\n\tstatic Color: string = \"color\";\r\n\t/**字节数组4 */\r\n\tstatic Byte4: string = \"byte4\";\r\n\t/**字节数组3 */\r\n\tstatic Byte3: string = \"byte3\";\r\n\t/**字节数组2 */\r\n\tstatic Byte2: string = \"byte2\";\r\n\t/**字节数组1 */\r\n\tstatic ByteOne: string = \"byte\";\r\n\t/**半精度浮点数数组2 */\r\n\tstatic Short2: string = \"short2\";\r\n\t/**半精度浮点数数组4 */\r\n\tstatic Short4: string = \"short4\";\r\n\t/**归一化半精度浮点数组2 */\r\n\tstatic NormalizedShort2: string = \"normalizedshort2\";\r\n\t/**归一化半精度浮点数组4 */\r\n\tstatic NormalizedShort4: string = \"normalizedshort4\";\r\n\t/**@internal */\r\n\tstatic HalfVector2: string = \"halfvector2\";\r\n\t/**@internal */\r\n\tstatic HalfVector4: string = \"halfvector4\";\r\n\t/**@internal */\r\n\tstatic NorByte4: string = \"nbyte4\";\r\n\t/**@internal */\r\n\tstatic NorUByte4: string = \"ubyte4\";\r\n\r\n\t/** @internal [组数量,数据类型,是否归一化:0为false]。*/\r\n\tprivate static _elementInfos: any;\r\n\t/**@internal */\r\n\tstatic __init__(): void {\r\n\t\tVertexElementFormat._elementInfos = {\r\n\t\t\t\"single\": [1, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector3\": [3, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"color\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"byte4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte3\": [3, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte\": [1, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"short2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\r\n\t\t\t\"short4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\r\n\t\t\t\"normalizedshort2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\r\n\t\t\t\"normalizedshort4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\r\n\t\t\t\"halfvector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"halfvector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"nbyte4\": [4, LayaGL.renderEngine.getParams(RenderParams.BYTE), 1],\r\n\t\t\t\"ubyte4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 1],\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶点元素格式信息。\r\n\t * @param element 元素名称\r\n\t * @returns 返回顶点元素信息\r\n\t */\r\n\tstatic getElementInfos(element: string): any[] {\r\n\t\tvar info: any[] = VertexElementFormat._elementInfos[element];\r\n\t\tif (info)\r\n\t\t\treturn info;\r\n\t\telse\r\n\t\t\tthrow \"VertexElementFormat: this vertexElementFormat is not implement.\";\r\n\t}\r\n}\r\n\r\n","import { VertexElement } from \"../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../renders/VertexElementFormat\";\r\nimport { VAElement } from \"./VertexAttributeLayout\"\r\n/**\r\n * <code>VertexDeclaration</code> 类用于生成顶点声明。\r\n */\r\nexport class VertexDeclaration {\r\n    /**@internal */\r\n    private static _uniqueIDCounter: number = 1;\r\n\r\n    /**@internal */\r\n    private _id: number;\r\n    /**@internal */\r\n    private _vertexStride: number;\r\n    /**@internal */\r\n    private _vertexElementsDic: { [key: string]: VertexElement };\r\n    /**@internal */\r\n    _shaderValues: { [key: number]: Int32Array };\r\n\r\n    /**@internal [只读]*/\r\n    _vertexElements: Array<VertexElement>;\r\n    /**@internal */\r\n    _VAElements: Array<VAElement>;\r\n    /**\r\n     * 获取唯一标识ID(通常用于优化或识别)。\r\n     * @return 唯一标识ID\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 顶点跨度，以字节为单位。\r\n     */\r\n    get vertexStride(): number {\r\n        return this._vertexStride;\r\n    }\r\n\r\n    /**\r\n     * 顶点元素的数量。\r\n     */\r\n    get vertexElementCount(): number {\r\n        return this._vertexElements.length;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>VertexDeclaration</code> 实例。\r\n     * @param\tvertexStride 顶点跨度。\r\n     * @param\tvertexElements 顶点元素集合。\r\n     */\r\n    constructor(vertexStride: number, vertexElements: Array<VertexElement>) {\r\n        this._id = ++VertexDeclaration._uniqueIDCounter;\r\n        this._vertexElementsDic = {};\r\n        this._vertexStride = vertexStride;\r\n        this._vertexElements = vertexElements;\r\n        this._VAElements = [];\r\n        var count: number = vertexElements.length;\r\n        this._shaderValues = {};\r\n\r\n        for (var j: number = 0; j < count; j++) {\r\n            var vertexElement: VertexElement = vertexElements[j];\r\n            var name: number = vertexElement._elementUsage;\r\n            this._vertexElementsDic[name] = vertexElement;\r\n            var value: Int32Array = new Int32Array(5);\r\n            var elmentInfo: any[] = VertexElementFormat.getElementInfos(vertexElement._elementFormat);\r\n            value[0] = elmentInfo[0];\r\n            value[1] = elmentInfo[1];\r\n            value[2] = elmentInfo[2];\r\n            value[3] = this._vertexStride;\r\n            value[4] = vertexElement._offset;\r\n            this._shaderValues[name] = value;\r\n\r\n            //VAElement\r\n            this._VAElements.push({ format: vertexElement._elementFormat, stride: vertexElement._offset, shaderLocation: name })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取顶点元素。\r\n     * @param index 索引。\r\n     */\r\n    getVertexElementByIndex(index: number): VertexElement {\r\n        return this._vertexElements[index];\r\n    }\r\n\r\n    /**\r\n     * get vertexElement by usage\r\n     */\r\n    getVertexElementByUsage(usage: number): VertexElement {\r\n        return this._vertexElementsDic[usage];\r\n    }\r\n}\r\n\r\n\r\n","import { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { VertexDeclaration } from \"../VertexDeclaration\";\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nexport class VertexMesh {\r\n\t/**顶点位置数据 */\r\n\tstatic MESH_POSITION0: number = 0;\r\n\t/**顶点顶点色数据 */\r\n\tstatic MESH_COLOR0: number = 1;\r\n\t/**顶点UV0数据 */\r\n\tstatic MESH_TEXTURECOORDINATE0: number = 2;\r\n\t/**顶点法线数据 */\r\n\tstatic MESH_NORMAL0: number = 3;\r\n\t/**顶点切线数据 */\r\n\tstatic MESH_TANGENT0: number = 4;\r\n\t/**顶点骨骼索引数据 */\r\n\tstatic MESH_BLENDINDICES0: number = 5;\r\n\t/**顶点骨骼权重数据 */\r\n\tstatic MESH_BLENDWEIGHT0: number = 6;\r\n\t/**顶点UV1数据 */\r\n\tstatic MESH_TEXTURECOORDINATE1: number = 7;\r\n\t/**顶点世界矩阵数据Row0 */\r\n\tstatic MESH_WORLDMATRIX_ROW0: number = 8;\r\n\t/**顶点世界矩阵数据Row1 */\r\n\tstatic MESH_WORLDMATRIX_ROW1: number = 9;\r\n\t/**顶点世界矩阵数据Row2 */\r\n\tstatic MESH_WORLDMATRIX_ROW2: number = 10;\r\n\t/**顶点世界矩阵数据Row3 */\r\n\tstatic MESH_WORLDMATRIX_ROW3: number = 11;\r\n\r\n\r\n\t//TODO：location不够\r\n\t/**简单数据动画数据 */\r\n\tstatic MESH_SIMPLEANIMATOR: number = 12;\r\n\r\n\t/**光照贴图的缩放和偏移 */\r\n\tstatic MESH_LIGHTMAPSCALEOFFSET: number = 13;\r\n\t/**instanceworld顶点描述 */\r\n\tstatic instanceWorldMatrixDeclaration: VertexDeclaration;\r\n\t/**instanceSimple动画数据顶点描述 */\r\n\tstatic instanceSimpleAnimatorDeclaration: VertexDeclaration;\r\n\t/**instanceLightMap光照贴图的缩放和偏移顶点描述 */\r\n\tstatic instanceLightMapScaleOffsetDeclaration: VertexDeclaration;\r\n\r\n\r\n\t/**自定义attribute instance 预留位*/\r\n\t/**顶点自定义数据0 */\r\n\tstatic MESH_CUSTOME0: number = 12;\r\n\t/**顶点自定义数据1 */\r\n\tstatic MESH_CUSTOME1: number = 13;\r\n\t/**顶点自定义数据2 */\r\n\tstatic MESH_CUSTOME2: number = 14;\r\n\t/**顶点自定义数据3 */\r\n\tstatic MESH_CUSTOME3: number = 15;\r\n\r\n\r\n\r\n\r\n\t/**@internal */\r\n\tprivate static _vertexDeclarationMap: any = {};\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __init__(): void {\r\n\t\tVertexMesh.instanceWorldMatrixDeclaration = new VertexDeclaration(64,\r\n\t\t\t[new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW0),\r\n\t\t\tnew VertexElement(16, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW1),\r\n\t\t\tnew VertexElement(32, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW2),\r\n\t\t\tnew VertexElement(48, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW3)]);\r\n\r\n\t\tVertexMesh.instanceSimpleAnimatorDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_SIMPLEANIMATOR)]);\r\n\t\tVertexMesh.instanceLightMapScaleOffsetDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_LIGHTMAPSCALEOFFSET)]);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶点声明。\r\n\t * @param vertexFlag 顶点声明标记字符,格式为:\"POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT\"。\r\n\t * @return 顶点声明。\r\n\t */\r\n\tstatic getVertexDeclaration(vertexFlag: string, compatible: boolean = true): VertexDeclaration {\r\n\t\tvar verDec: VertexDeclaration = VertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")];//TODO:兼容模式\r\n\t\tif (!verDec) {\r\n\t\t\tvar subFlags: any[] = vertexFlag.split(\",\");\r\n\t\t\tvar offset: number = 0;\r\n\t\t\tvar elements: any[] = [];\r\n\t\t\tfor (var i: number = 0, n: number = subFlags.length; i < n; i++) {\r\n\t\t\t\tvar element: VertexElement;\r\n\t\t\t\tswitch (subFlags[i]) {\r\n\t\t\t\t\tcase \"POSITION\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_POSITION0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"COLOR\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_COLOR0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE0);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV1\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE1);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDWEIGHT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDWEIGHT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDINDICES\":\r\n\t\t\t\t\t\tif (compatible) {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDINDICES0);//兼容\r\n\t\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Byte4, VertexMesh.MESH_BLENDINDICES0);\r\n\t\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"TANGENT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_TANGENT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL_BYTE\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.NorByte4, VertexMesh.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow \"VertexMesh: unknown vertex flag.\";\r\n\t\t\t\t}\r\n\t\t\t\telements.push(element);\r\n\t\t\t}\r\n\t\t\tverDec = new VertexDeclaration(offset, elements);\r\n\t\t\tVertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")] = verDec;//TODO:兼容模式\r\n\t\t}\r\n\t\treturn verDec;\r\n\t}\r\n}\r\n\r\n\r\n","import { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataItem, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderDefine } from \"../../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { UniformBufferParamsType, UnifromBufferData } from \"../../RenderEngine/UniformBufferData\";\r\nimport { IShaderCompiledObj, ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { VertexMesh } from \"./VertexMesh\";\r\n\r\n// todo 初始化 uniformMap 提取出来 供 Scene, Camera, Sprite3D 生成 uniform shader代码 ?\r\n// export type UniformItem = { [uniformName: string]: ShaderDataType } | { type: ShaderDataType, value?: ShaderDataItem };\r\n\r\nexport type UniformMapType = { [blockName: string]: { [uniformName: string]: ShaderDataType } | ShaderDataType };\r\n\r\nexport type AttributeMapType = { [name: string]: [number, ShaderDataType] };\r\n\r\n/**\r\n * <code>SubShader</code> 类用于创建SubShader。\r\n */\r\nexport class SubShader {\r\n    public static IncludeUniformMap: any = {};\r\n\r\n    /**\r\n     * 注册glsl所用到的Uniform\r\n     * 会在生成Uniformmap的时候根据包含的Include文件，添加所需要的uniform因素\r\n     * @param includeName \r\n     * @param uniformInfo \r\n     * @param defaultUniformData \r\n     */\r\n    public static regIncludeBindUnifrom(includeName: string, uniformMap: { [name: string]: ShaderDataType }, defaultValue: { [key: string]: any }) {\r\n        let obj: any = {};\r\n        let data: any = obj[includeName] = {};\r\n        data[\"uniformMap\"] = uniformMap;\r\n        data[\"defaultValue\"] = defaultValue;\r\n        Object.assign(SubShader.IncludeUniformMap, obj);\r\n    }\r\n\r\n    public static readonly DefaultAttributeMap: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_Position': [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4],\r\n        'a_Normal': [VertexMesh.MESH_NORMAL0, ShaderDataType.Vector3],\r\n        'a_Tangent0': [VertexMesh.MESH_TANGENT0, ShaderDataType.Vector4],\r\n        'a_Texcoord0': [VertexMesh.MESH_TEXTURECOORDINATE0, ShaderDataType.Vector2],\r\n        'a_Texcoord1': [VertexMesh.MESH_TEXTURECOORDINATE1, ShaderDataType.Vector2],\r\n        'a_Color': [VertexMesh.MESH_COLOR0, ShaderDataType.Vector4],\r\n        'a_BoneWeights': [VertexMesh.MESH_BLENDWEIGHT0, ShaderDataType.Vector4],\r\n        'a_BoneIndices': [VertexMesh.MESH_BLENDINDICES0, ShaderDataType.Vector4],\r\n        'a_WorldMat': [VertexMesh.MESH_WORLDMATRIX_ROW0, ShaderDataType.Matrix4x4],\r\n        'a_SimpleTextureParams': [VertexMesh.MESH_SIMPLEANIMATOR, ShaderDataType.Vector4],\r\n        'a_LightmapScaleOffset': [VertexMesh.MESH_LIGHTMAPSCALEOFFSET, ShaderDataType.Vector4]\r\n    }\r\n\r\n\r\n    /**@internal */\r\n    _attributeMap: AttributeMapType;\r\n\r\n    /**@internal */\r\n    _uniformMap: UniformMapType;\r\n\r\n    // todo uniform 相关信息统一用结构体存储？ 合并 value type map\r\n    /**\r\n     * @internal\r\n     * uniform 默认值\r\n     */\r\n    readonly _uniformDefaultValue: { [name: string]: ShaderDataItem };\r\n    /**\r\n     * @internal\r\n     * uniform 数据类型\r\n     */\r\n    readonly _uniformTypeMap: Map<string, ShaderDataType>;\r\n\r\n    /**@internal */\r\n    readonly _uniformBufferDataMap: Map<string, UnifromBufferData> = new Map();\r\n\r\n    /**@internal */\r\n    _owner: Shader3D;\r\n    /**@internal */\r\n    _flags: any = {};\r\n    /**@internal */\r\n    _passes: ShaderPass[] = [];\r\n\r\n    /**\r\n     * 创建一个 <code>SubShader</code> 实例。\r\n     * @param\tattributeMap  顶点属性表。\r\n     * @param\tuniformMap  uniform属性表。\r\n     */\r\n    constructor(attributeMap: { [name: string]: [number, ShaderDataType] } = SubShader.DefaultAttributeMap, uniformMap: UniformMapType = {}, uniformDefaultValue: { [name: string]: ShaderDataItem } = null) {\r\n        this._attributeMap = attributeMap;\r\n        this._uniformMap = uniformMap;\r\n        this._uniformDefaultValue = uniformDefaultValue;\r\n        this._uniformTypeMap = new Map();\r\n        for (const key in uniformMap) {\r\n            if (typeof uniformMap[key] == \"object\") {\r\n                let block = <{ [uniformName: string]: ShaderDataType }>(uniformMap[key]);\r\n                let blockUniformMap = new Map<string, UniformBufferParamsType>();\r\n                for (const uniformName in block) {\r\n                    let uniformType = ShaderDataTypeToUniformBufferType(block[uniformName]);\r\n                    blockUniformMap.set(uniformName, uniformType);\r\n\r\n                    this._uniformTypeMap.set(uniformName, block[uniformName]);\r\n                }\r\n\r\n                let blockUniformIndexMap = new Map<number, UniformBufferParamsType>();\r\n                blockUniformMap.forEach((value, key) => {\r\n                    blockUniformIndexMap.set(Shader3D.propertyNameToID(key), value);\r\n                });\r\n                let blockData = new UnifromBufferData(blockUniformIndexMap);\r\n                this._uniformBufferDataMap.set(key, blockData);\r\n            }\r\n            else {\r\n                let unifromType = <ShaderDataType>uniformMap[key];\r\n                this._uniformTypeMap.set(key, unifromType);\r\n                if (unifromType == ShaderDataType.Texture2D || unifromType == ShaderDataType.TextureCube || unifromType == ShaderDataType.Texture3D || unifromType == ShaderDataType.Texture2DArray) {\r\n                    let textureGammaDefine = Shader3D.getDefineByName(`Gamma_${key}`);\r\n                    let uniformIndex = Shader3D.propertyNameToID(key);\r\n                    ShaderDefine._texGammaDefine[uniformIndex] = textureGammaDefine;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加标记。\r\n     * @param key 标记键。\r\n     * @param value 标记值。\r\n     */\r\n    setFlag(key: string, value: string): void {\r\n        if (value)\r\n            this._flags[key] = value;\r\n        else\r\n            delete this._flags[key];\r\n    }\r\n\r\n    /**\r\n     * 获取标记值。\r\n     * @return key 标记键。\r\n     */\r\n    getFlag(key: string): string {\r\n        return this._flags[key];\r\n    }\r\n\r\n    /**\r\n     * 添加着色器Pass\r\n     * @param vs \r\n     * @param ps \r\n     * @param stateMap \r\n     * @param pipelineMode 渲染管线模式。 \r\n     */\r\n    addShaderPass(vs: string, ps: string, pipelineMode: string = \"Forward\"): ShaderPass {\r\n        return this._addShaderPass(ShaderCompile.compile(vs, ps), pipelineMode);\r\n    }\r\n\r\n    _addShaderPass(compiledObj: IShaderCompiledObj, pipelineMode: string = \"Forward\"): ShaderPass {\r\n        var shaderPass: ShaderPass = new ShaderPass(this, compiledObj);\r\n        shaderPass._pipelineMode = pipelineMode;\r\n        this._passes.push(shaderPass);\r\n        this._addIncludeUniform(compiledObj.includeNames);\r\n        return shaderPass;\r\n    }\r\n\r\n    private _addIncludeUniform(includemap: Set<string>) {\r\n        for (let ele of includemap) {\r\n            if (SubShader.IncludeUniformMap[ele]) {\r\n                let includeBindInfo = SubShader.IncludeUniformMap[ele];\r\n                let bindtypeMap = includeBindInfo[\"uniformMap\"];\r\n                let bindDefaultValue = includeBindInfo[\"defaultValue\"];\r\n                for (var i in bindtypeMap) {\r\n                    if (!this._uniformTypeMap.has(i)) {\r\n                        this._uniformTypeMap.set(i, bindtypeMap[i]);\r\n                        this._uniformMap[i] = bindtypeMap[i];\r\n                    }\r\n                }\r\n                for (var i in bindDefaultValue) {\r\n                    if (!this._uniformDefaultValue[i]) {\r\n                        this._uniformDefaultValue[i] = bindDefaultValue[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction ShaderDataTypeToUniformBufferType(shaderDataType: ShaderDataType) {\r\n\r\n    switch (shaderDataType) {\r\n        case ShaderDataType.Float:\r\n            return UniformBufferParamsType.Number;\r\n        case ShaderDataType.Vector2:\r\n            return UniformBufferParamsType.Vector2;\r\n        case ShaderDataType.Vector3:\r\n            return UniformBufferParamsType.Vector3;\r\n        case ShaderDataType.Vector4:\r\n        case ShaderDataType.Color:\r\n            return UniformBufferParamsType.Vector4;\r\n        case ShaderDataType.Matrix4x4:\r\n            return UniformBufferParamsType.Matrix4x4;\r\n        default:\r\n            throw \"ShaderDataType can not be in UniformBuffer.\";\r\n    }\r\n\r\n}\r\n\r\n","import { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\r\nimport { DefineDatas } from \"./DefineDatas\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { ShaderVariant, ShaderVariantCollection } from \"./ShaderVariantCollection\";\r\nimport { SubShader } from \"./SubShader\";\r\n\r\nexport interface IShaderObjStructor {\r\n    name: string,\r\n    enableInstancing: boolean,\r\n    supportReflectionProbe: boolean,\r\n    surportVolumetricGI: boolean,\r\n    attributeMap: any;\r\n    uniformMap: any;\r\n    defaultValue: any;\r\n    shaderPass: Array<any>;\r\n}\r\n\r\nexport interface IShaderpassStructor {\r\n    VS?: string,\r\n    FS?: string,\r\n    VSPath?: string,//TODO\r\n    FSPath?: string,//TODO\r\n    pipeline?: string,\r\n    statefirst?: boolean;\r\n    renderState?: Record<string, string | boolean | number | string[]>\r\n\r\n}\r\n/**\r\n * <code>Shader3D</code> 类用于创建Shader3D。\r\n */\r\nexport class Shader3D {\r\n    static _configDefineValues = new DefineDatas();\r\n    /**@internal */\r\n    private static _compileDefineDatas: DefineDatas = new DefineDatas();\r\n    /**渲染状态_剔除。*/\r\n    static CULL: number;\r\n    /**渲染状态_混合。*/\r\n    static BLEND: number;\r\n    /**渲染状态_混合源。*/\r\n    static BLEND_SRC: number;\r\n    /**渲染状态_混合目标。*/\r\n    static BLEND_DST: number;\r\n    /**渲染状态_混合源RGB。*/\r\n    static BLEND_SRC_RGB: number;\r\n    /**渲染状态_混合目标RGB。*/\r\n    static BLEND_DST_RGB: number;\r\n    /**渲染状态_混合源ALPHA。*/\r\n    static BLEND_SRC_ALPHA: number;\r\n    /**渲染状态_混合目标ALPHA。*/\r\n    static BLEND_DST_ALPHA: number;\r\n    /**渲染状态_混合方程。*/\r\n    static BLEND_EQUATION: number;\r\n    /**渲染状态_混合方程。*/\r\n    static BLEND_EQUATION_RGB: number;\r\n    /**渲染状态_ALPHA混合方程。*/\r\n    static BLEND_EQUATION_ALPHA: number;\r\n    /**渲染状态_深度测试。*/\r\n    static DEPTH_TEST: number;\r\n    /**渲染状态_深度写入。*/\r\n    static DEPTH_WRITE: number;\r\n    /**渲染状态_模板测试。*/\r\n    static STENCIL_TEST: number;\r\n    /**渲染状态_模板写入 */\r\n    static STENCIL_WRITE: number;\r\n    /**渲染状态_模板写入值 */\r\n    static STENCIL_Ref: number;\r\n    /**渲染状态_模板写入设置 */\r\n    static STENCIL_Op: number;\r\n\r\n    /**shader变量提交周期，自定义。*/\r\n    static PERIOD_CUSTOM: number = 0;\r\n    /**shader变量提交周期，逐材质。*/\r\n    static PERIOD_MATERIAL: number = 1;\r\n    /**shader变量提交周期，逐精灵和相机，注：因为精灵包含MVP矩阵，为复合属性，所以摄像机发生变化时也应提交。*/\r\n    static PERIOD_SPRITE: number = 2;\r\n    /**shader变量提交周期，逐相机。*/\r\n    static PERIOD_CAMERA: number = 3;\r\n    /**shader变量提交周期，逐场景。*/\r\n    static PERIOD_SCENE: number = 4;\r\n\r\n    /**@internal */\r\n    static SHADERDEFINE_LEGACYSINGALLIGHTING: ShaderDefine;\r\n    /**@internal 图形数据传输使用UniformBlock的方式 */\r\n    static SHADERDEFINE_ENUNIFORMBLOCK: ShaderDefine;\r\n    /**@internal */\r\n    static SHADERDEFINE_FLOATTEXTURE: ShaderDefine;\r\n    /**@internal */\r\n    static SHADERDEFINE_FLOATTEXTURE_FIL_LINEAR: ShaderDefine;\r\n    /**@internal */\r\n    static _propertyNameMap: any = {};\r\n    /**@internal */\r\n    private static _propertyNameCounter: number = 0;\r\n    /**@internal */\r\n    private static _defineCounter: number = 0;\r\n    // todo  这个 map 和 get 函数转移到 ShaderDefine 里面\r\n    /**@internal */\r\n    private static _defineMap: { [key: string]: ShaderDefine } = {};\r\n    /**@internal */\r\n    static _preCompileShader: { [key: string]: Shader3D } = {};\r\n    /**@internal */\r\n    static _maskMap: Array<{ [key: number]: string }> = [];\r\n    /**@internal */\r\n    static _debugShaderVariantInfo: ShaderVariant;\r\n    /**是否开启调试模式。 */\r\n    static debugMode: boolean = false;\r\n    /**调试着色器变种集合。 */\r\n    static debugShaderVariantCollection: ShaderVariantCollection;\r\n\r\n\r\n    static init() {\r\n        Shader3D.debugShaderVariantCollection = new ShaderVariantCollection();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _getNamesByDefineData(defineData: DefineDatas, out: Array<string>): void {\r\n        var maskMap: Array<{ [key: number]: string }> = Shader3D._maskMap;\r\n        var mask: Array<number> = defineData._mask;\r\n        out.length = 0;\r\n        for (var i: number = 0, n: number = defineData._length; i < n; i++) {\r\n            var subMaskMap: { [key: number]: string } = maskMap[i];\r\n            var subMask: number = mask[i];\r\n            for (var j: number = 0; j < 32; j++) {\r\n                var d: number = 1 << j;\r\n                if (subMask > 0 && d > subMask)//如果31位存在subMask为负数,避免break\r\n                    break;\r\n                if (subMask & d)\r\n                    out.push(subMaskMap[d]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 注册宏定义。\r\n     * @param name \r\n     */\r\n    static getDefineByName(name: string): ShaderDefine {\r\n        var define: ShaderDefine = Shader3D._defineMap[name];\r\n        if (!define) {\r\n            var maskMap = Shader3D._maskMap;\r\n            var counter: number = Shader3D._defineCounter;\r\n            var index: number = Math.floor(counter / 32);\r\n            var value: number = 1 << counter % 32;\r\n            define = new ShaderDefine(index, value);\r\n            Shader3D._defineMap[name] = define;\r\n            if (index == maskMap.length) {\r\n                maskMap.length++;\r\n                maskMap[index] = {};\r\n            }\r\n            maskMap[index][value] = name;\r\n            Shader3D._defineCounter++;\r\n        }\r\n        return define;\r\n    }\r\n\r\n    /**\r\n     * 通过Shader属性名称获得唯一ID。\r\n     * @param name Shader属性名称。\r\n     * @return 唯一ID。\r\n     */\r\n    static propertyNameToID(name: string): number {\r\n        return LayaGL.renderEngine.propertyNameToID(name);\r\n    }\r\n\r\n    static propertyIDToName(id: number): string {\r\n        return LayaGL.renderEngine.propertyIDToName(id);\r\n    }\r\n\r\n    /**\r\n     * 添加函数库引用。\r\n     * @param fileName 文件名字。\r\n     * @param txt 文件内容\r\n     */\r\n    static addInclude(fileName: string, txt: string): void {\r\n        ShaderCompile.addInclude(fileName, txt);\r\n    }\r\n\r\n    /**\r\n     * 通过宏定义名字编译shader。\r\n     * @param\tshaderName Shader名称。\r\n     * @param   subShaderIndex 子着色器索引。\r\n     * @param   passIndex  通道索引。\r\n     * @param\tdefineNames 宏定义名字集合。\r\n     */\r\n    static compileShaderByDefineNames(shaderName: string, subShaderIndex: number, passIndex: number, defineNames: string[], nodeCommonMap: string[]): void {\r\n        var shader: Shader3D = Shader3D.find(shaderName);\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                pass.nodeCommonMap = nodeCommonMap;\r\n                if (pass) {\r\n                    var compileDefineDatas: DefineDatas = Shader3D._compileDefineDatas;\r\n                    Shader3D._configDefineValues.cloneTo(compileDefineDatas);\r\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++)\r\n                        compileDefineDatas.add(Shader3D.getDefineByName(defineNames[i]));\r\n                    pass.withCompile(compileDefineDatas);\r\n                } else {\r\n                    console.warn(\"Shader3D: unknown passIndex.\");\r\n                }\r\n            } else {\r\n                console.warn(\"Shader3D: unknown subShaderIndex.\");\r\n            }\r\n        } else {\r\n            console.warn(\"Shader3D: unknown shader name.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加预编译shader文件，主要是处理宏定义\r\n     */\r\n    static add(name: string, enableInstancing: boolean = false, supportReflectionProbe: boolean = false): Shader3D {\r\n        return Shader3D._preCompileShader[name] = new Shader3D(name, enableInstancing, supportReflectionProbe);\r\n    }\r\n\r\n    /**\r\n     * 获取ShaderCompile3D。\r\n     * @param\tname\r\n     * @return ShaderCompile3D。\r\n     */\r\n    static find(name: string): Shader3D {\r\n        return Shader3D._preCompileShader[name];\r\n    }\r\n\r\n    static parse(data: IShaderObjStructor, basePath: string) {\r\n        if (!data.name)\r\n            console.warn(\"shader name is empty\", data);\r\n        if (!data.uniformMap)\r\n            console.warn(`${data.name}: uniformMap is empty`);\r\n\r\n        let shader = Shader3D.add(data.name, data.enableInstancing, data.supportReflectionProbe);\r\n        shader._surportVolumetricGI = data.surportVolumetricGI;\r\n        let subshader = new SubShader(data.attributeMap ? data.attributeMap : SubShader.DefaultAttributeMap, data.uniformMap, data.defaultValue);\r\n        shader.addSubShader(subshader);\r\n        let passDataArray = data.shaderPass;\r\n        for (var i in passDataArray) {\r\n            let passData = passDataArray[i] as IShaderpassStructor;\r\n            if (!passData.VS) {\r\n                console.warn(`${data.name}: VS of pass ${i} is empty`);\r\n                continue;\r\n            }\r\n            if (!passData.FS) {\r\n                console.warn(`${data.name}: FS of pass ${i} is empty`);\r\n                continue;\r\n            }\r\n\r\n            let shaderPass = subshader._addShaderPass(ShaderCompile.compile(passData.VS, passData.FS, basePath), passData.pipeline);\r\n\r\n            shaderPass.statefirst = passData.statefirst ?? false;\r\n\r\n            ShaderCompile.getRenderState(passData.renderState, shaderPass.renderState);\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    /**@internal */\r\n    _name: string;\r\n    /**@internal */\r\n    _enableInstancing: boolean = false;\r\n    /**@internal */\r\n    _supportReflectionProbe: boolean = false;\r\n    /**@internal */\r\n    _surportVolumetricGI:boolean = false;\r\n    /**@internal */\r\n    _subShaders: SubShader[] = [];\r\n\r\n    /**\r\n     * 名字。\r\n     */\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Shader3D</code> 实例。\r\n     */\r\n    constructor(name: string, enableInstancing: boolean, supportReflectionProbe: boolean) {\r\n        this._name = name;\r\n        this._enableInstancing = enableInstancing;\r\n        this._supportReflectionProbe = supportReflectionProbe;\r\n    }\r\n\r\n    /**\r\n     * 添加子着色器。\r\n     * @param 子着色器。\r\n     */\r\n    addSubShader(subShader: SubShader): void {\r\n        this._subShaders.push(subShader);\r\n        subShader._owner = this;\r\n    }\r\n\r\n    /**\r\n     * 在特定索引获取子着色器。\r\n     * @param\tindex 索引。\r\n     * @return 子着色器。\r\n     */\r\n    getSubShaderAt(index: number): SubShader {\r\n        return this._subShaders[index];\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataType } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderDefine } from \"../../../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\n\r\nexport class ShaderDefines2D {\r\n    /**@internal */\r\n    static TEXTURE2D: ShaderDefine;\r\n    /**@internal */\r\n    static PRIMITIVE: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERGLOW: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERBLUR: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERCOLOR: ShaderDefine;\r\n    /**@internal */\r\n    static COLORADD: ShaderDefine;\r\n    /**@internal */\r\n    static WORLDMAT: ShaderDefine;\r\n    /**@internal */\r\n    static FILLTEXTURE: ShaderDefine;\r\n    /**@internal */\r\n    static SKINMESH: ShaderDefine;\r\n    /**@internal */\r\n    static MVP3D: ShaderDefine;\r\n    /**@internal */\r\n    static GAMMASPACE: ShaderDefine;\r\n    /**@internal */\r\n    static INVERTY: ShaderDefine;\r\n    /**@internal */\r\n    static GAMMATEXTURE: ShaderDefine;\r\n\r\n    /**@internal */\r\n    static TEXTURESHADER: ShaderDefine;\r\n    /**@internal */\r\n    static PRIMITIVESHADER: ShaderDefine;\r\n\r\n    /**@internal */\r\n    static UNIFORM_MMAT: number;// mat4 u_mmat\r\n    static UNIFORM_CLIPMATDIR: number;// uniform vec4 u_clipMatDir;\r\n    static UNIFORM_CLIPMATPOS: number;// uniform vec2 u_clipMatPos;\r\n    static UNIFORM_MMAT2: number;// uniform mat4 u_mmat2;\r\n    static UNIFORM_SIZE: number;// uniform vec2 u_size;\r\n    static UNIFORM_CLIPOFF: number;//uniform vec2 u_clipOff;\t\r\n    static UNIFORM_MVPMatrix: number;//uniform mat4 u_MvpMatrix;\r\n\r\n    static UNIFORM_SPRITETEXTURE: number;// uniform sampler2D u_spriteTexture;\r\n    static UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1: number;//uniform vec4 u_strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\r\n    static UNIFORM_BLURINFO: number; //uniform vec2 u_blurInfo;\r\n\r\n    static UNIFORM_COLORALPHA: number;// uniform vec4 u_colorAlpha;\r\n    static UNIFORM_COLORMAT: number; //uniform mat4 u_colorMat;\r\n    static UNIFORM_COLOR: number;//uniform vec4 u_color;\r\n    static UNIFORM_BLURINFO1: number//uniform vec4 u_blurInfo1;\r\n    static UNIFORM_BLURINFO2: number//uniform vec4 u_blurInfo2;\r\n    static UNIFORM_COLORADD: number;//uniform vec4 u_colorAdd;\r\n    static UNIFORM_TEXRANGE: number;//uniform vec4 u_TexRange;\r\n\r\n    //TODO?\r\n    //static NOOPTMASK: number = ShaderDefines2D.FILTERGLOW | ShaderDefines2D.FILTERBLUR | ShaderDefines2D.FILTERCOLOR | ShaderDefines2D.FILLTEXTURE;\t//有这些定义的不要优化。见submittexture\r\n\r\n    static __init__(): void {\r\n        ShaderDefines2D.TEXTURE2D = Shader3D.getDefineByName(\"TEXTURE2D\");\r\n        ShaderDefines2D.PRIMITIVE = Shader3D.getDefineByName(\"PRIMITIVE\");\r\n\r\n        ShaderDefines2D.FILTERGLOW = Shader3D.getDefineByName(\"GLOW_FILTER\");\r\n        ShaderDefines2D.FILTERBLUR = Shader3D.getDefineByName(\"BLUR_FILTER\");\r\n        ShaderDefines2D.FILTERCOLOR = Shader3D.getDefineByName(\"COLOR_FILTER\");\r\n        ShaderDefines2D.COLORADD = Shader3D.getDefineByName(\"COLOR_ADD\");\r\n        ShaderDefines2D.WORLDMAT = Shader3D.getDefineByName(\"WORLDMAT\");\r\n        ShaderDefines2D.FILLTEXTURE = Shader3D.getDefineByName(\"FILLTEXTURE\");\r\n        ShaderDefines2D.MVP3D = Shader3D.getDefineByName('MVP3D');\r\n\r\n        ShaderDefines2D.GAMMASPACE = Shader3D.getDefineByName('GAMMASPACE');\r\n\r\n        ShaderDefines2D.INVERTY = Shader3D.getDefineByName('INVERTY');\r\n\r\n        ShaderDefines2D.GAMMATEXTURE = Shader3D.getDefineByName('GAMMATEXTURE');\r\n\r\n        ShaderDefines2D.TEXTURESHADER = Shader3D.getDefineByName(\"TEXTUREVS\");\r\n        ShaderDefines2D.PRIMITIVESHADER = Shader3D.getDefineByName(\"PRIMITIVEMESH\");\r\n\r\n        ShaderDefines2D.initSprite2DCommandEncoder();\r\n    }\r\n\r\n    static initSprite2DCommandEncoder() {\r\n        ShaderDefines2D.UNIFORM_MMAT = Shader3D.propertyNameToID(\"u_mmat\");\r\n        ShaderDefines2D.UNIFORM_CLIPMATDIR = Shader3D.propertyNameToID(\"u_clipMatDir\");\r\n        ShaderDefines2D.UNIFORM_CLIPMATPOS = Shader3D.propertyNameToID(\"u_clipMatPos\");\r\n        ShaderDefines2D.UNIFORM_MMAT2 = Shader3D.propertyNameToID(\"u_mmat2\");\r\n        ShaderDefines2D.UNIFORM_SIZE = Shader3D.propertyNameToID(\"u_size\");\r\n        ShaderDefines2D.UNIFORM_CLIPOFF = Shader3D.propertyNameToID(\"u_clipOff\");\r\n\r\n        ShaderDefines2D.UNIFORM_MVPMatrix = Shader3D.propertyNameToID(\"u_MvpMatrix\");\r\n        ShaderDefines2D.UNIFORM_SPRITETEXTURE = Shader3D.propertyNameToID(\"u_spriteTexture\");\r\n        ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1 = Shader3D.propertyNameToID(\"u_strength_sig2_2sig2_gauss1\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO = Shader3D.propertyNameToID(\"u_blurInfo\");\r\n        ShaderDefines2D.UNIFORM_COLORALPHA = Shader3D.propertyNameToID(\"u_colorAlpha\");\r\n        ShaderDefines2D.UNIFORM_COLORMAT = Shader3D.propertyNameToID(\"u_colorMat\");\r\n\r\n        ShaderDefines2D.UNIFORM_COLOR = Shader3D.propertyNameToID(\"u_color\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO1 = Shader3D.propertyNameToID(\"u_blurInfo1\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO2 = Shader3D.propertyNameToID(\"u_blurInfo2\");\r\n        ShaderDefines2D.UNIFORM_COLORADD = Shader3D.propertyNameToID(\"u_colorAdd\");\r\n        ShaderDefines2D.UNIFORM_TEXRANGE = Shader3D.propertyNameToID(\"u_TexRange\");\r\n\r\n        const commandUniform = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2D\");\r\n\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MMAT, \"u_mmat\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPMATDIR, \"u_clipMatDir\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPMATPOS, \"u_clipMatPos\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MMAT2, \"u_mmat2\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_SIZE, \"u_size\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPOFF, \"u_clipOff\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MVPMatrix, \"u_MvpMatrix\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_SPRITETEXTURE, \"u_spriteTexture\", ShaderDataType.Texture2D);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1, \"u_strength_sig2_2sig2_gauss1\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO, \"u_blurInfo\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORALPHA, \"u_colorAlpha\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORMAT, \"u_colorMat\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLOR, \"u_color\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO1, \"u_blurInfo1\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO2, \"u_blurInfo2\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORADD, \"u_colorAdd\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_TEXRANGE, \"u_TexRange\", ShaderDataType.Vector4);\r\n    }\r\n}\r\n\r\n\r\n","/**\r\n * \r\n * @author laya\r\n */\r\nexport class RenderInfo {\r\n    /**当前帧的开始时间 */\r\n    static loopStTm: number = 0;\r\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\r\n    static loopCount: number = 0;\r\n}","import { Point } from \"../../maths/Point\"\r\n\r\n// 注意长宽都不要超过256，一个是影响效率，一个是超出表达能力\r\nexport class AtlasGrid {\r\n    atlasID: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    private _texCount: number = 0;\r\n    private _rowInfo: Uint8Array = null;\t\t// 当前行的最大长度\r\n    private _cells: Uint8Array = null;\t\t// 每个格子的信息。{type,w,h} 相当于一个距离场. type =0 表示空闲的。不为0的情况下填充的是宽高（有什么用呢）\r\n    _used: number = 0;\t\t\t\t// 使用率\r\n\r\n    // TODO type 是否有用\r\n\r\n    //------------------------------------------------------------------------------\r\n    constructor(width: number = 0, height: number = 0, id: number = 0) {\r\n        this._cells = null;\r\n        this._rowInfo = null;\r\n        this.atlasID = id;\r\n        this._init(width, height);\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    addRect(type: number, width: number, height: number, pt: Point): boolean {\r\n        //调用获得应该放在哪 返回值有三个。。bRet是否成功，nX x位置，nY y位置\r\n        if (!this._get(width, height, pt))\r\n            return false;\r\n        //根据获得的x,y填充\r\n        this._fill(pt.x, pt.y, width, height, type);\r\n        this._texCount++;\r\n        //返回是否成功，以及X位置和Y位置\r\n        return true;\r\n    }\r\n\r\n    //------------------------------------------------------------------------------\r\n    private _release(): void {\r\n        this._cells = null;\r\n        this._rowInfo = null;\r\n    }\r\n\r\n    //------------------------------------------------------------------------------\r\n    private _init(width: number, height: number): boolean {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._release();\r\n        if (this._width == 0) return false;\r\n        this._cells = new Uint8Array(this._width * this._height * 3);\r\n        this._rowInfo = new Uint8Array(this._height);\r\n        this._used = 0;\r\n        this._clear();\r\n        return true;\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _get(width: number, height: number, pt: Point): boolean {\r\n        if (width > this._width || height > this._height) {\r\n            return false;\r\n        }\r\n        //定义返回的x,y的位置\r\n        var rx: number = -1;\r\n        var ry: number = -1;\r\n        //为了效率先保存临时变量\r\n        var nWidth: number = this._width;\r\n        var nHeight: number = this._height;\r\n        //定义一个变量为了指向 m_pCells\r\n        var pCellBox: Uint8Array = this._cells;\r\n\r\n        //遍历查找合适的位置  //TODO 下面的方法应该可以优化\r\n        for (var y: number = 0; y < nHeight; y++) {\r\n            //如果该行的空白数 小于 要放入的宽度返回\r\n            if (this._rowInfo[y] < width) continue;\r\n            for (var x: number = 0; x < nWidth;) {\r\n\r\n                var tm: number = (y * nWidth + x) * 3;\r\n\r\n                if (pCellBox[tm] != 0 || pCellBox[tm + 1] < width || pCellBox[tm + 2] < height) {\r\n                    x += pCellBox[tm + 1];\r\n                    continue;\r\n                }\r\n                rx = x;\r\n                ry = y;\r\n                // 检查当前宽度是否能完全放下，即x方向的每个位置都有足够的高度。\r\n                for (var xx: number = 0; xx < width; xx++) {\r\n                    if (pCellBox[3 * xx + tm + 2] < height) {\r\n                        rx = -1;\r\n                        break;\r\n                    }\r\n                }\r\n                // 不行就x继续前进\r\n                if (rx < 0) {\r\n                    x += pCellBox[tm + 1];\r\n                    continue;\r\n                }\r\n                // 找到了\r\n                pt.x = rx;\r\n                pt.y = ry;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _fill(x: number, y: number, w: number, h: number, type: number): void {\r\n        //定义一些临时变量\r\n        var nWidth: number = this._width;\r\n        var nHeghit: number = this._height;\r\n        //代码检查\r\n        this._check((x + w) <= nWidth && (y + h) <= nHeghit);\r\n\r\n        //填充\r\n        for (var yy: number = y; yy < (h + y); ++yy) {\r\n            this._check(this._rowInfo[yy] >= w);\r\n            this._rowInfo[yy] -= w;\r\n            for (var xx: number = 0; xx < w; xx++) {\r\n                var tm: number = (x + yy * nWidth + xx) * 3;\r\n                this._check(this._cells[tm] == 0);\r\n                this._cells[tm] = type;\r\n                this._cells[tm + 1] = w;\r\n                this._cells[tm + 2] = h;\r\n            }\r\n        }\r\n        //调整我左方相邻空白格子的宽度连续信息描述\r\n        if (x > 0) {\r\n            for (yy = 0; yy < h; ++yy) {\r\n                // TODO 下面应该可以优化\r\n                var s: number = 0;\r\n                for (xx = x - 1; xx >= 0; --xx, ++s) {\r\n                    if (this._cells[((y + yy) * nWidth + xx) * 3] != 0) break;\r\n                }\r\n                for (xx = s; xx > 0; --xx) {\r\n                    this._cells[((y + yy) * nWidth + x - xx) * 3 + 1] = xx;\r\n                    this._check(xx > 0);\r\n                }\r\n            }\r\n        }\r\n        //调整我上方相邻空白格子的高度连续信息描述\r\n        if (y > 0) {\r\n            for (xx = x; xx < (x + w); ++xx) {\r\n                // TODO 下面应该可以优化\r\n                s = 0;\r\n                for (yy = y - 1; yy >= 0; --yy, s++) {\r\n                    if (this._cells[(xx + yy * nWidth) * 3] != 0) break;\r\n                }\r\n                for (yy = s; yy > 0; --yy) {\r\n                    this._cells[(xx + (y - yy) * nWidth) * 3 + 2] = yy;\r\n                    this._check(yy > 0);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._used += (w * h) / (this._width * this._height);\r\n    }\r\n\r\n    private _check(ret: boolean): void {\r\n        if (ret == false) {\r\n            console.log(\"xtexMerger 错误啦\");\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _clear(): void {\r\n        this._texCount = 0;\r\n        for (var y: number = 0; y < this._height; y++) {\r\n            this._rowInfo[y] = this._width;\r\n        }\r\n        for (var i: number = 0; i < this._height; i++) {\r\n            for (var j: number = 0; j < this._width; j++) {\r\n                var tm: number = (i * this._width + j) * 3;\r\n                this._cells[tm] = 0;\r\n                this._cells[tm + 1] = this._width - j;\r\n                this._cells[tm + 2] = this._width - i;\r\n            }\r\n        }\r\n    }\r\n    //------------------------------------------------------------------\r\n}\r\n\r\n\r\n","export class FontInfo {\r\n\r\n    private static _cache: Record<string, FontInfo> = {};\r\n\r\n    /**\r\n     * 解析字体模型\r\n     * @param font \r\n     */\r\n    static parse(font: string): FontInfo {\r\n        if (font === _lastFont) {\r\n            return _lastFontInfo;\r\n        }\r\n        let r = FontInfo._cache[font];\r\n        if (!r) {\r\n            r = FontInfo._cache[font] = new FontInfo(font);\r\n        }\r\n        _lastFont = font;\r\n        _lastFontInfo = r;\r\n        return r;\r\n    }\r\n\r\n    /**@internal */\r\n    _font: string;\r\n    /**@internal */\r\n    _family: string = \"Arial\";\r\n    /**@internal */\r\n    _size: number = 14;\r\n    /**@internal */\r\n    _italic: boolean = false;\r\n    /**@internal */\r\n    _bold: boolean = false;\r\n\r\n    constructor(font: string | null) {\r\n        this.setFont(font || \"14px Arial\");\r\n    }\r\n\r\n    /**\r\n     * 设置字体格式\r\n     * @param value \r\n     */\r\n    setFont(value: string): void {\r\n        this._font = value;\r\n        var words: any[] = value.split(' ');\r\n        var l: number = words.length;\r\n        if (l < 2) {\r\n            if (l == 1) {\r\n                if (words[0].indexOf('px') > 0) {\r\n                    this._size = parseInt(words[0]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        var szpos: number = -1;\r\n        //由于字体可能有空格，例如Microsoft YaHei 所以不能直接取倒数第二个，要先找到px\r\n        for (let i = 0; i < l; i++) {\r\n            if (words[i].indexOf('px') > 0 || words[i].indexOf('pt') > 0) {\r\n                szpos = i;\r\n                this._size = parseInt(words[i]);\r\n                if (this._size <= 0) {\r\n                    console.debug('font parse error:' + value);\r\n                    this._size = 14;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        //最后一个是用逗号分开的family\r\n        var fpos: number = szpos + 1;\r\n        var familys: string = words[fpos];\r\n        fpos++;//下一个\r\n        for (; fpos < l; fpos++) {\r\n            familys += ' ' + words[fpos];\r\n        }\r\n        this._family = (familys.split(','))[0];\r\n        this._italic = words.indexOf('italic') >= 0;\r\n        this._bold = words.indexOf('bold') >= 0;\r\n    }\r\n}\r\n\r\nvar _lastFont: string = '';\r\nvar _lastFontInfo: FontInfo;","import { Texture } from \"../../../../resource/Texture\"\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\r\nimport { RenderState2D } from \"../../../utils/RenderState2D\"\r\nimport { RenderTexture2D } from \"../../../../resource/RenderTexture2D\"\r\nimport { Const } from \"../../../../Const\"\r\nimport { ShaderData } from \"../../../../RenderEngine/RenderShader/ShaderData\"\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\"\r\nimport { Material } from \"../../../../resource/Material\"\r\nimport { DefineDatas } from \"../../../../RenderEngine/RenderShader/DefineDatas\"\r\nimport { Vector2 } from \"../../../../maths/Vector2\"\r\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\"\r\nimport { Vector4 } from \"../../../../maths/Vector4\"\r\nimport { TextTexture } from \"../../../text/TextTexture\"\r\n\r\nexport enum RenderSpriteData {\r\n    Zero,\r\n    Texture2D,\r\n    Primitive\r\n}\r\n\r\n//系统自带渲染数据，不可忽视，如果不设置自定义Shader，将调用引擎本身的Shader\r\nexport class Value2D {\r\n\r\n    static globalShaderData: ShaderData;\r\n\r\n    protected static _cache: any[] = [];\r\n    protected static _typeClass: any = [];\r\n\r\n    public static _initone(type: number, classT: any): void {\r\n        Value2D._typeClass[type] = classT;\r\n        Value2D._cache[type] = [];\r\n        Value2D._cache[type]._length = 0;\r\n        Value2D.globalShaderData = new ShaderData();\r\n    }\r\n\r\n    static TEMPMAT4_ARRAY: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static _compileDefine: DefineDatas = new DefineDatas();\r\n    /**\r\n     * 对象池概念\r\n     * @param mainType \r\n     * @returns \r\n     */\r\n    static create(mainType: RenderSpriteData): Value2D {\r\n        var types: any = Value2D._cache[mainType] ? Value2D._cache[mainType] : [];\r\n        if (types._length)\r\n            return types[--types._length];\r\n        else\r\n            return new Value2D._typeClass[mainType]();\r\n    }\r\n\r\n    defines: ShaderData = new ShaderData();\r\n\r\n    _defaultShader: Shader3D;\r\n    //TODO\r\n    alpha: number = 1.0;\t//这个目前只给setIBVB用。其他的都放到attribute的color中了\r\n    //TODO\r\n    ALPHA: number = 1.0;\t//这个？\r\n\r\n    mainID: RenderSpriteData = RenderSpriteData.Zero;\r\n\r\n    ref: number = 1;\r\n\r\n    private _inClassCache: any;\r\n\r\n    private _cacheID: number = 0;\r\n\r\n    /**@internal */\r\n    private _size: Vector2 = new Vector2();\r\n\r\n    /**@internal */\r\n    set size(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_SIZE, value);\r\n    }\r\n\r\n    get size() {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_SIZE);\r\n    }\r\n\r\n    /**@internal */\r\n    private _mmat: Matrix4x4 = new Matrix4x4();\r\n\r\n    /**@internal */\r\n    set mmat(value: Matrix4x4) {\r\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_MMAT, value);\r\n    }\r\n\r\n    /**@internal */\r\n    get mmat() {\r\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_MMAT);\r\n    }\r\n\r\n    filters: any[];\r\n\r\n    ///**@internal */\r\n    //private _mvpMatrix: Matrix4x4 = new Matrix4x4();\r\n    /**@internal */\r\n    set u_MvpMatrix(value: Matrix4x4) {\r\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_MVPMatrix, value);\r\n    }\r\n\r\n    get u_MvpMatrix() {\r\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_MVPMatrix);\r\n    }\r\n\r\n    texture: any;\r\n    private _textureHost: Texture | RenderTexture2D | TextTexture\r\n    public get textureHost(): Texture | RenderTexture2D | TextTexture {\r\n        return this._textureHost\r\n    }\r\n    public set textureHost(value: Texture | RenderTexture2D | TextTexture) {\r\n        this._textureHost = value;\r\n        //var tex = value && value._getSource();\r\n        //@ts-ignore\r\n        this.defines.setTexture(ShaderDefines2D.UNIFORM_SPRITETEXTURE, value);\r\n    }\r\n    //public var fillStyle:DrawStyle;\t\t\t//TODO 这个有什么用？\r\n    _color: Vector4;\r\n\r\n    set color(value: Vector4) {\r\n        value && this.defines.setVector(ShaderDefines2D.UNIFORM_COLOR, value);\r\n    }\r\n\r\n    get color() {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLOR);\r\n    }//Vector4\r\n    //public var strokeStyle:DrawStyle;\r\n    //colorAdd: any[];//Vector4\r\n    _colorAdd: Vector4;\r\n\r\n    set colorAdd(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_COLORADD, value);\r\n    }\r\n\r\n    get colorAdd() {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLORADD);\r\n    }//Vector4\r\n\r\n\r\n    private _clipMatDir: Vector4 = new Vector4(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE);\r\n\r\n    set clipMatDir(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_CLIPMATDIR, value);\r\n    }\r\n\r\n    get clipMatDir() {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_CLIPMATDIR);\r\n    }//Vector4\r\n\r\n    private _clipMatpos: Vector2 = new Vector2();\r\n    set clipMatPos(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS, value);\r\n    }\r\n\r\n    get clipMatPos() {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS);\r\n    }//Vector2\r\n    //clipMatPos: Array<number> = [0, 0];//Vector2\r\n    _clipOff: Vector2 = new Vector2();//vector2\t\t\t// 裁剪是否需要加上偏移，cacheas normal用\r\n    set clipOff(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_CLIPOFF, value);\r\n    }\r\n\r\n    get clipOff() {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_CLIPOFF);\r\n    }//Vector2\r\n\r\n    constructor(mainID: RenderSpriteData) {\r\n        this.mainID = mainID;\r\n        this.textureHost = null;\r\n        this.texture = null;\r\n        //this.fillStyle = null;\r\n        //this.color = null;\r\n        //this.strokeStyle = null;\r\n        //this.colorAdd = null;\r\n\r\n        this.clipMatDir = this._clipMatDir;\r\n        this.clipMatPos = this._clipMatpos;\r\n        this.clipOff = this._clipOff;\r\n        this._cacheID = mainID;\r\n        this._inClassCache = Value2D._cache[this._cacheID];\r\n        if (mainID > 0 && !this._inClassCache) {\r\n            this._inClassCache = Value2D._cache[this._cacheID] = [];\r\n            this._inClassCache._length = 0;\r\n        }\r\n        this.clear();\r\n\r\n    }\r\n\r\n    /**\r\n     * 组织Define宏数据\r\n     */\r\n    public updateShaderData() {\r\n        var renderstate2d: any = RenderState2D;\r\n        // 如果有矩阵的话，就设置 WORLDMAT 宏\r\n        RenderState2D.worldMatrix4 === RenderState2D.TEMPMAT4_ARRAY || this.defines.addDefine(ShaderDefines2D.WORLDMAT);\r\n        this._mmat.cloneByArray(renderstate2d.worldMatrix4);\r\n        this.mmat = this._mmat;\r\n\r\n        if (RenderState2D.matWVP) {\r\n            this.defines.addDefine(ShaderDefines2D.MVP3D);\r\n            this.u_MvpMatrix = RenderState2D.matWVP;\r\n        }\r\n        let returnGamma: boolean = !(RenderTexture2D.currentActive) || ((RenderTexture2D.currentActive)._texture.gammaCorrection != 1);\r\n        //returnGamma = returnGamma && (this.textureHost && ((this.textureHost as RenderTexture2D).gammaCorrection == 1 || (this.textureHost as Texture).bitmap.gammaCorrection == 1));\r\n        let textrueReadGamma: boolean = false;\r\n        if (this.textureHost) {\r\n            if (this.textureHost instanceof RenderTexture2D) {\r\n                textrueReadGamma = (this.textureHost as RenderTexture2D).gammaCorrection != 1;\r\n            } else if (this.textureHost instanceof Texture && (this.textureHost as Texture).bitmap) {\r\n                textrueReadGamma = (this.textureHost as Texture).bitmap.gammaCorrection != 1;\r\n            } else if (this.textureHost instanceof TextTexture && (this.textureHost as TextTexture).bitmap) {\r\n                // TextTexture\r\n                textrueReadGamma = (this.textureHost as TextTexture).gammaCorrection != 1;\r\n            }\r\n        }\r\n\r\n        if (textrueReadGamma) {\r\n            this.defines.addDefine(ShaderDefines2D.GAMMATEXTURE);\r\n        } else {\r\n            this.defines.removeDefine(ShaderDefines2D.GAMMATEXTURE);\r\n        }\r\n\r\n        if (returnGamma) {\r\n            this.defines.addDefine(ShaderDefines2D.GAMMASPACE);\r\n        } else {\r\n            this.defines.removeDefine(ShaderDefines2D.GAMMASPACE);\r\n        }\r\n\r\n        if (RenderState2D.InvertY) {\r\n            this.defines.addDefine(ShaderDefines2D.INVERTY);\r\n        } else {\r\n            this.defines.removeDefine(ShaderDefines2D.INVERTY);\r\n        }\r\n\r\n        if (this.mainID == RenderSpriteData.Texture2D) {\r\n            this.defines.addDefine(ShaderDefines2D.TEXTURESHADER);\r\n        }\r\n        if (this.mainID == RenderSpriteData.Primitive) {\r\n            this.defines.addDefine(ShaderDefines2D.PRIMITIVESHADER);\r\n        }\r\n    }\r\n\r\n    upload(material: Material = null): void {\r\n\r\n        this._size.setValue(RenderState2D.width, RenderState2D.height)\r\n        this.size = this._size;\r\n        //update owner ShaderData\r\n        this.updateShaderData();\r\n        if (material) {\r\n            //Custom Shader\r\n            var shaderPass = material._shader._subShaders[0]._passes;\r\n            \r\n            var pass;\r\n            for (var j: number = 0, m: number = shaderPass.length; j < m; j++) {\r\n                pass = shaderPass[j];\r\n                //NOTE:this will cause maybe a shader not render but do prepare before，but the developer can avoide this manual,for example shaderCaster=false.\r\n                if (pass._pipelineMode == \"Forward\")\r\n                    break;\r\n            }\r\n            var comDef: DefineDatas = Value2D._compileDefine;\r\n            this.defines._defineDatas.cloneTo(Value2D._compileDefine);\r\n            //mateiral Define\r\n            Value2D._compileDefine.addDefineDatas(material._defineDatas);\r\n            //Global Define\r\n            Value2D._compileDefine.addDefineDatas(Value2D.globalShaderData._defineDatas);\r\n            var shaderIns = pass.withCompile(Value2D._compileDefine, true);\r\n            shaderIns.bind();\r\n            shaderIns.uploadUniforms(shaderIns._sprite2DUniformParamsMap, this.defines, true);\r\n            shaderIns.uploadUniforms(shaderIns._sceneUniformParamsMap, Value2D.globalShaderData, true);\r\n            shaderIns.uploadUniforms(shaderIns._materialUniformParamsMap, material.shaderData, true);\r\n        } else {\r\n            //default pass\r\n            var shaderPass = this._defaultShader._subShaders[0]._passes;\r\n\r\n            if (shaderPass.length >= 1) {\r\n                pass = shaderPass[0];\r\n                //var comDef: DefineDatas = Value2D._compileDefine;\r\n                var shaderIns = pass.withCompile(this.defines._defineDatas, true);\r\n                shaderIns.bind();\r\n                shaderIns.uploadUniforms(shaderIns._sprite2DUniformParamsMap, this.defines, true);\r\n            } else {\r\n                //TODO 多pass情况\r\n            }\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    setFilters(value: any[]): void {\r\n        this.filters = value;\r\n        if (!value)\r\n            return;\r\n\r\n        var n: number = value.length, f: any;\r\n        for (var i: number = 0; i < n; i++) {\r\n            f = value[i];\r\n            if (f) {\r\n                this.defines.addDefine(f.typeDefine);//搬到setValue中\r\n                f.action.setValue(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.clipOff.x = 0;\r\n        this.clipOff = this.clipOff\r\n    }\r\n\r\n    release(): void {\r\n        if ((--this.ref) < 1) {\r\n            this._inClassCache && (this._inClassCache[this._inClassCache._length++] = this);\r\n            this.clear();\r\n            this.filters = null;\r\n            this.ref = 1;\r\n            this.clipOff.x = 0;\r\n            this.clipOff = this.clipOff\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Context } from \"../resource/Context\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class WordText {\r\n    text: string;\r\n    width: number;\t//整个WordText的长度。-1表示没有计算还。\r\n    pageChars: any[];\t//把本对象的字符按照texture分组保存的文字信息。里面又是一个数组。具体含义见使用的地方。\r\n    pagecharsCtx: Context = null;  // 上面缓存的时候用的ctx。跨ctx的时候（例如drawToTexture）要清理\r\n    scalex;\t// 缓存的时候的缩放\r\n    scaley;\r\n\r\n    _nativeObj: any;\r\n    _splitRender: boolean;\t// 强制拆分渲染\r\n\r\n    constructor() {\r\n        if ((window as any).conch && !(window as any).conchConfig.conchWebGL)\r\n            this._nativeObj = new (window as any)._conchWordText();\r\n        else {\r\n            this.width = -1;\r\n            this.pageChars = [];\r\n            this.scalex = 1;\r\n            this.scaley = 1;\r\n        }\r\n    }\r\n\r\n    setText(txt: string): void {\r\n        this.text = txt;\r\n        if (this._nativeObj)\r\n            this._nativeObj._text = txt;\r\n        else\r\n            this.width = -1;\r\n        this.cleanCache();\r\n    }\r\n\r\n    toString(): string {\r\n        return this.text;\r\n    }\r\n\r\n    get length(): number {\r\n        return this.text ? this.text.length : 0;\r\n    }\r\n\r\n    /**\r\n     * 自己主动清理缓存，需要把关联的贴图删掉\r\n     * 不做也可以，textrender会自动清理不用的\r\n     * TODO 重用\r\n     */\r\n    cleanCache(): void {\r\n        if (this._nativeObj) {\r\n            this._nativeObj.cleanCache();\r\n            return;\r\n        }\r\n\r\n        // 如果是独占文字贴图的，需要删掉\r\n        //TODO 这个效果不对。会造成文字错乱\r\n        let chars = this.pageChars;\r\n        if (chars.length > 0) {\r\n            for( var i in chars){\r\n                //should use for in since chars maybe sparse \r\n                let p = chars[i];\r\n                if(!p)continue;\r\n                let tex = p.tex;\r\n                let words = p.words;\r\n                if (words.length == 1 && tex && tex.ri) {// 如果有ri表示是独立贴图\r\n                    tex.destroy();\r\n                }\r\n            }\r\n\r\n            this.pageChars = [];\r\n        }\r\n        this.scalex = 1;\r\n        this.scaley = 1;\r\n    }\r\n\r\n    get splitRender() {\r\n        return this._splitRender;\r\n    }\r\n\r\n    set splitRender(value: boolean) {\r\n        this._splitRender = value;\r\n        if (this._nativeObj)\r\n            this._nativeObj.splitRender = value;\r\n    }\r\n}","import { RenderInfo } from \"../../renders/RenderInfo\"\r\n/**\r\n * TODO如果占用内存较大,这个结构有很多成员可以临时计算\r\n */\r\nexport class CharRenderInfo {\r\n    char: string = '';\t\t\t\t// 调试用\r\n    tex: any;\t\t\t\t\t\t//\r\n    deleted: boolean = false; \t// 已经被删除了\r\n    uv: any[] = new Array(8);// [0, 0, 1, 1];\t\t//uv\r\n    pos: number = 0;\t\t\t\t\t//数组下标\r\n    width: number;\t\t\t\t\t//字体宽度。测量的宽度，用来排版。没有缩放\r\n    height: number; \t\t\t\t//字体高度。没有缩放\r\n    bmpWidth: number;\t\t\t\t//实际图片的宽度。可能与排版用的width不一致。包含缩放和margin\r\n    bmpHeight: number;\r\n    orix: number = 0;\t\t\t\t// 原点位置，通常都是所在区域的左上角\r\n    oriy: number = 0;\r\n    touchTick: number = 0;\t\t//\r\n    isSpace: boolean = false;\t\t//是否是空格，如果是空格，则只有width有效\r\n    touch(): void {\r\n        var curLoop: number = RenderInfo.loopCount;\r\n        if (this.touchTick != curLoop) {// 这个保证每帧只调用一次\r\n            this.tex.touchRect(this, curLoop);\r\n        }\r\n        this.touchTick = curLoop;\r\n    }\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\";\r\nexport class ICharRender {\r\n    fontsz = 16;\r\n    getWidth(font: string, str: string): number { return 0; }\r\n\r\n    scale(sx: number, sy: number): void {\r\n    }\r\n\r\n    get canvasWidth(): number {\r\n        return 0;\r\n    }\r\n\r\n    set canvasWidth(w: number) {\r\n\r\n    }\r\n    /**\r\n     *TODO stroke \r\n     * @param\tchar\r\n     * @param\tfont\r\n     * @param\tsize  返回宽高\r\n     * @return\r\n     */\r\n    getCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, size: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[]|null = null): ImageData|null {\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Config } from \"../../Config\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * <code>Browser</code> 是浏览器代理类。封装浏览器及原生 js 提供的一些功能。\r\n */\r\nexport class Browser {\r\n\r\n    /** 浏览器代理信息。*/\r\n    static userAgent: string;\r\n    /** 表示是否在移动设备，包括IOS和安卓等设备内。*/\r\n    static onMobile: boolean;\r\n    /** 表示是否在 IOS 设备内。*/\r\n    static onIOS: boolean;\r\n    /** 表示是否在 Mac 设备。*/\r\n    static onMac: boolean;\r\n    /** 表示是否在 IPhone 设备内。*/\r\n    static onIPhone: boolean;\r\n    /** 表示是否在 IPad 设备内。*/\r\n    static onIPad: boolean;\r\n    /** 表示是否在 Android 设备内。*/\r\n    static onAndroid: boolean;\r\n    /** 表示是否在 Windows Phone 设备内。*/\r\n    static onWP: boolean;\r\n    /** 表示是否在 QQ 浏览器内。*/\r\n    static onQQBrowser: boolean;\r\n    /** 表示是否在移动端 QQ 或 QQ 浏览器内。*/\r\n    static onMQQBrowser: boolean;\r\n    /** 表示是否在 Safari 内。*/\r\n    static onSafari: boolean;\r\n    /** 表示是否在 Chrome 内 */\r\n    static onChrome: boolean;\r\n    /** 表示是否在 IE 浏览器内*/\r\n    static onIE: boolean;\r\n    /** 表示是否在 微信 内*/\r\n    static onWeiXin: boolean;\r\n    /** 表示是否在 PC 端。*/\r\n    static onPC: boolean;\r\n    /** 微信小游戏 **/\r\n    static onMiniGame: boolean;\r\n    /** 百度小游戏 **/\r\n    static onBDMiniGame: boolean;\r\n    /** 小米戏小游戏 **/\r\n    static onKGMiniGame: boolean;\r\n    /** OPPO小游戏 **/\r\n    static onQGMiniGame: boolean;\r\n    /** VIVO小游戏 **/\r\n    static onVVMiniGame: boolean;\r\n    /** 阿里小游戏 **/\r\n    static onAlipayMiniGame: boolean;\r\n    /***手机QQ小游戏 */\r\n    static onQQMiniGame: boolean;\r\n    /*** BILIBILI小游戏 */\r\n    static onBLMiniGame: boolean;\r\n    /** 抖音小游戏*/\r\n    static onTTMiniGame: boolean;\r\n    /** 华为快游戏 */\r\n    static onHWMiniGame: boolean;\r\n    /** 淘宝小程序 */\r\n    static onTBMiniGame: boolean;\r\n    /** @private */\r\n    static onFirefox: boolean;//TODO:求补充\r\n    /** Edge浏览器 */\r\n    static onEdge: boolean;\r\n    /** @private */\r\n    static onLayaRuntime: boolean;\r\n\r\n    /** 真实平台类型，onMobile等是通过UserAgent判断，可能具有欺骗性 **/\r\n    static platform: number;\r\n    static PLATFORM_PC = 0;\r\n    static PLATFORM_ANDROID = 1;\r\n    static PLATFORM_IOS = 2;\r\n\r\n    /** 表示是否支持WebAudio*/\r\n    static supportWebAudio: boolean;\r\n    /** 表示是否支持LocalStorage*/\r\n    static supportLocalStorage: boolean;\r\n\r\n    /** 全局离线画布（非主画布）。主要用来测量字体、获取image数据。*/\r\n    static canvas: any;\r\n    /** 全局离线画布上绘图的环境（非主画布）。 */\r\n    static context: CanvasRenderingContext2D;\r\n\r\n    /** @private */\r\n    private static _window: any;\r\n    /** @private */\r\n    private static _document: Document;\r\n    /** @private */\r\n    private static _container: any;\r\n    /** @private */\r\n    private static _pixelRatio: number = -1;\r\n\r\n    /** @private */\r\n    private static _clientWidth: number;\r\n    /** @private */\r\n    private static _clientHeight: number;\r\n\r\n    /** @private */\r\n    static mainCanvas: any = null;\r\n\r\n    /**@private */\r\n    private static hanzi: RegExp = new RegExp(\"^[\\u4E00-\\u9FA5]$\");\r\n    /**@private */\r\n    private static fontMap: { [key: string]: string } = {};\r\n    /**@private */\r\n    static measureText: Function = function (txt: string, font: string): any {\r\n        let isChinese: boolean = Browser.hanzi.test(txt);\r\n        if (isChinese && Browser.fontMap[font]) {\r\n            return Browser.fontMap[font];\r\n        }\r\n\r\n        let ctx: CanvasRenderingContext2D = Browser.context;\r\n        ctx.font = font;\r\n\r\n        let r: any = ctx.measureText(txt);\r\n        if (isChinese) Browser.fontMap[font] = r;\r\n        return r;\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): any {\r\n        let Laya: any = (window as any).Laya || ILaya.Laya;\r\n        if (Browser._window) return Browser._window;\r\n        let win: any = Browser._window = window;\r\n        let doc: any = Browser._document = win.document;\r\n        let u: string = Browser.userAgent = win.navigator.userAgent;\r\n        let maxTouchPoints: number = win.navigator.maxTouchPoints || 0;\r\n        let platform: string = win.navigator.platform;\r\n\r\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\r\n            (window as any).wxMiniGame(Laya, Laya);\r\n            Laya[\"MiniAdpter\"].enable();\r\n        }\r\n        //阿里小游戏\r\n        if (\"my\" in Browser.window) {\r\n            if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\r\n                //这里需要手动初始化阿里适配库\r\n                (window as any).tbMiniGame(Laya, Laya);\r\n                if (!Laya[\"TBMiniAdapter\"]) {\r\n                    console.error(\"请先添加淘宝适配库\");\r\n                } else {\r\n                    Laya[\"TBMiniAdapter\"].enable();\r\n                }\r\n            } else if (u.indexOf('AlipayMiniGame') > -1) {\r\n                //这里需要手动初始化阿里适配库\r\n                (window as any).aliPayMiniGame(Laya, Laya);\r\n                if (!Laya[\"ALIMiniAdapter\"]) {\r\n                    console.error(\"请先添加阿里小游戏适配库\");\r\n                } else {\r\n                    Laya[\"ALIMiniAdapter\"].enable();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (((u.indexOf('OPPO') == -1 && u.indexOf(\"MiniGame\") > -1) || u.indexOf('runtime') != -1 || (u.indexOf('miniprogram') != -1 && (window as any).isWXMiMi)) && \"wx\" in Browser.window) {\r\n            if (\"tt\" in Browser.window) {\r\n                //抖音小游戏\r\n                (window as any).ttMiniGame(Laya, Laya);\r\n                if (!Laya[\"TTMiniAdapter\"]) {\r\n                    //TODO\r\n                    console.error(\"请引入抖音小游戏的适配库，详细教程：https://layaair.com/3.x/doc/released/miniGame/byteDance/readme.html\");\r\n                } else {\r\n                    Laya[\"TTMiniAdapter\"].enable();\r\n                }\r\n            } else if (\"bl\" in Browser.window) {\r\n                //手机B站小游戏\r\n                (window as any).biliMiniGame(Laya, Laya);\r\n                if (!Laya[\"BLMiniAdapter\"]) {\r\n                    console.error(\"请引入bilibili小游戏的适配库\");\r\n                } else {\r\n                    Laya[\"BLMiniAdapter\"].enable();\r\n                }\r\n            }\r\n            else if (\"qq\" in Browser.window) {\r\n                //手机QQ小游戏\r\n                (window as any).qqMiniGame(Laya, Laya);\r\n                if (!Laya[\"QQMiniAdapter\"]) {\r\n                    console.error(\"请引入手机QQ小游戏的适配库\");\r\n                } else {\r\n                    Laya[\"QQMiniAdapter\"].enable();\r\n                }\r\n            }\r\n            else {\r\n                //微信小游戏\r\n                (window as any).wxMiniGame(Laya, Laya);\r\n                if (!Laya[\"MiniAdpter\"]) {\r\n                    console.error(\"请先添加小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/wechat/readme.html\");\r\n                    //TODO 教程要改\r\n                } else {\r\n                    Laya[\"MiniAdpter\"].enable();\r\n                }\r\n            }\r\n        }\r\n        //华为快游戏\r\n        if (\"hbs\" in Browser.window) {\r\n            (window as any).hwMiniGame(Laya, Laya);\r\n            if (!Laya[\"HWMiniAdapter\"]) {\r\n                console.error(\"请先添加小游戏适配库!\");\r\n                //TODO 教程要改\r\n            } else {\r\n                Laya[\"HWMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //百度小游戏\r\n        if (u.indexOf(\"SwanGame\") > -1) {\r\n            (window as any).bdMiniGame(Laya, Laya);\r\n            if (!Laya[\"BMiniAdapter\"]) {\r\n                console.error(\"请先添加百度小游戏适配库\");\r\n                //TODO 教程要改\r\n            } else {\r\n                Laya[\"BMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //小米小游戏\r\n        if (u.indexOf('QuickGame') > -1) {\r\n            (window as any).miMiniGame(Laya, Laya);\r\n            if (!Laya[\"KGMiniAdapter\"]) {\r\n                console.error(\"请先添加小米小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/xiaomi/readme.html\");\r\n            } else {\r\n                Laya[\"KGMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //OPPO小游戏\r\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\r\n            (window as any).qgMiniGame(Laya, Laya);\r\n            if (!Laya[\"QGMiniAdapter\"]) {\r\n                console.error(\"请先添加OPPO小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/OPPO/readme.html\");\r\n            } else {\r\n                //temp oppo 需要修改交换链的功能\r\n                Config.fixedFrames = false;\r\n                Laya[\"QGMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //VIVO小游戏\r\n        if (u.indexOf('VVGame') > -1) {\r\n            (window as any).vvMiniGame(Laya, Laya);\r\n            if (!Laya[\"VVMiniAdapter\"]) {\r\n                console.error(\"请先添加VIVO小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/vivo/readme.html\");\r\n            } else {\r\n                //temp oppo 需要修改交换链的功能\r\n                Config.fixedFrames = false;\r\n                Laya[\"VVMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //新增trace的支持\r\n        win.trace = console.log;\r\n\r\n        //兼容requestAnimationFrame\r\n        win.requestAnimationFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (fun: any): any {\r\n            return win.setTimeout(fun, 1000 / 60);\r\n        }\r\n\r\n        //强制修改body样式\r\n        var bodyStyle: any = doc.body.style;\r\n        bodyStyle.margin = 0;\r\n        bodyStyle.overflow = 'hidden';\r\n        bodyStyle['-webkit-user-select'] = 'none';\r\n        bodyStyle['-webkit-tap-highlight-color'] = 'rgba(200,200,200,0)';\r\n\r\n        //强制修改meta标签，防止开发者写错\r\n        var metas: any[] = doc.getElementsByTagName('meta');\r\n        let viewportContent: Record<string, string> = {\r\n            \"width\": \"device-width\",\r\n            \"initial-scale\": \"1.0\",\r\n            \"minimum-scale\": \"1.0\",\r\n            \"maximum-scale\": \"1.0\",\r\n            \"user-scalable\": \"no\"\r\n        };\r\n        let viewport: any;\r\n        for (const meta of metas) {\r\n            if (meta.name == \"viewport\") {\r\n                viewport = meta;\r\n                break;\r\n            }\r\n        }\r\n        if (!viewport) {\r\n            viewport = doc.createElement('meta');\r\n            viewport.name = 'viewport';\r\n            doc.getElementsByTagName('head')[0]?.appendChild(viewport);\r\n        }\r\n        else {\r\n            let arr: Array<string> = (viewport.content || \"\").split(\",\");\r\n            for (let ele of arr) {\r\n                let arr2 = ele.split(\"=\");\r\n                if (!viewportContent[arr2[0].trim()])\r\n                    viewportContent[arr2[0]] = arr2[1];\r\n            }\r\n        }\r\n        viewport.content = Object.keys(viewportContent).map(k => k + \"=\" + viewportContent[k]);\r\n\r\n        //处理兼容性\t\t\t\r\n        Browser.onMobile = (window as any).conch ? true : u.indexOf(\"Mobile\") > -1;\r\n        Browser.onIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\r\n        Browser.onIPhone = u.indexOf(\"iPhone\") > -1;\r\n        Browser.onMac = u.indexOf(\"Mac OS X\") > -1;\r\n        Browser.onIPad = u.indexOf(\"iPad\") > -1 || (platform === 'MacIntel' && maxTouchPoints > 1);//\"platform === 'MacIntel' && maxTouchPoints >1\" is a temporary solution，maybe accidentally injure other platform.\r\n        Browser.onAndroid = u.indexOf('Android') > -1 || u.indexOf('Adr') > -1;\r\n        Browser.onWP = u.indexOf(\"Windows Phone\") > -1;\r\n        Browser.onQQBrowser = u.indexOf(\"QQBrowser\") > -1;\r\n        Browser.onMQQBrowser = u.indexOf(\"MQQBrowser\") > -1 || (u.indexOf(\"Mobile\") > -1 && u.indexOf(\"QQ\") > -1);\r\n        Browser.onIE = !!win.ActiveXObject || \"ActiveXObject\" in win;\r\n        Browser.onWeiXin = u.indexOf('MicroMessenger') > -1;\r\n        Browser.onSafari = u.indexOf(\"Safari\") > -1 && u.indexOf(\"Chrome\") === -1;\r\n        Browser.onChrome = u.indexOf(\"Chrome\") > -1;\r\n        Browser.onPC = !Browser.onMobile;\r\n        Browser.onFirefox = u.indexOf('Firefox') > -1;\r\n        Browser.onEdge = u.indexOf('Edge') > -1 || u.indexOf('Edg') > -1;\r\n        Browser.onMiniGame = u.indexOf('MiniGame') > -1;\r\n        Browser.onBDMiniGame = u.indexOf('SwanGame') > -1;\r\n        Browser.onLayaRuntime = !!(window as any).conch;\r\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\r\n            Browser.onQGMiniGame = true;//OPPO环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"qq\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onQQMiniGame = true;//手机QQ环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"bl\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onBLMiniGame = true;//B站环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"tt\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onTTMiniGame = true;\r\n            Browser.onMiniGame = false;\r\n        }\r\n\r\n        Browser.onHWMiniGame = \"hbs\" in Browser.window;\r\n        Browser.onVVMiniGame = u.indexOf('VVGame') > -1;//vivo\r\n        Browser.onKGMiniGame = u.indexOf('QuickGame') > -1;//小米运行环境判断\r\n        if (u.indexOf('AlipayMiniGame') > -1) {\r\n            Browser.onAlipayMiniGame = true;//阿里小游戏环境判断\r\n            Browser.onMiniGame = false;\r\n        }\r\n        if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\r\n            Browser.onTBMiniGame = true;\r\n        }\r\n\r\n        if (Browser.onAndroid || Browser.onIOS) {\r\n            //也有可能是模拟器\r\n            if (platform && (platform.indexOf(\"Win\") != -1 || platform.indexOf(\"Mac\") != -1))\r\n                Browser.platform = Browser.PLATFORM_PC;\r\n            else if (Browser.onAndroid)\r\n                Browser.platform = Browser.PLATFORM_ANDROID;\r\n            else\r\n                Browser.platform = Browser.PLATFORM_IOS;\r\n        }\r\n        else\r\n            Browser.platform = Browser.PLATFORM_PC;\r\n\r\n        return win;\r\n    }\r\n    /**\r\n     * 获取是否为小游戏环境\r\n     * @returns onMiniGame || onBDMiniGame || onQGMiniGame || onKGMiniGame || onVVMiniGame || onAlipayMiniGame || onQQMiniGame || onBLMiniGame || onTTMiniGame || onHWMiniGame || onTBMiniGame\r\n     */\r\n    static get _isMiniGame(): boolean {\r\n        return Browser.onMiniGame || Browser.onBDMiniGame || Browser.onQGMiniGame || Browser.onKGMiniGame || Browser.onVVMiniGame || Browser.onAlipayMiniGame || Browser.onQQMiniGame || Browser.onBLMiniGame || Browser.onTTMiniGame || Browser.onHWMiniGame || Browser.onTBMiniGame || (Browser.window && Browser.window.isWXMiMi);\r\n    }\r\n    /**\r\n     * 创建浏览器原生节点。\r\n     * @param\ttype 节点类型。\r\n     * @return\t创建的节点对象的引用。\r\n     */\r\n    static createElement(type: string): any {\r\n        Browser.__init__();\r\n        return Browser._document.createElement(type);\r\n    }\r\n\r\n    /**\r\n     * 返回 Document 对象中拥有指定 id 的第一个对象的引用。\r\n     * @param\ttype 节点id。\r\n     * @return\t节点对象。\r\n     */\r\n    static getElementById(type: string): any {\r\n        Browser.__init__();\r\n        return Browser._document.getElementById(type);\r\n    }\r\n\r\n    /**\r\n     * 移除指定的浏览器原生节点对象。\r\n     * @param\ttype 节点对象。\r\n     */\r\n    static removeElement(ele: any): void {\r\n        if (ele && ele.parentNode) ele.parentNode.removeChild(ele);\r\n    }\r\n\r\n    /**\r\n     * 获取浏览器当前时间戳，单位为毫秒。\r\n     */\r\n    static now(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    /**\r\n     * 浏览器窗口可视宽度。\r\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerWidth(包含滚动条宽度) > document.body.clientWidth(不包含滚动条宽度)，如果前者为0或为空，则选择后者。\r\n     */\r\n    static get clientWidth(): number {\r\n        Browser.__init__();\r\n        return Browser._clientWidth || Browser._window.innerWidth || Browser._document.body.clientWidth;\r\n    }\r\n\r\n    static set clientWidth(value: number) {\r\n        Browser._clientWidth = value;\r\n    }\r\n\r\n    /**\r\n     * 浏览器窗口可视高度。\r\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerHeight(包含滚动条高度) > document.body.clientHeight(不包含滚动条高度) > document.documentElement.clientHeight(不包含滚动条高度)，如果前者为0或为空，则选择后者。\r\n     */\r\n    static get clientHeight(): number {\r\n        Browser.__init__();\r\n        return Browser._clientHeight || Browser._window.innerHeight || Browser._document.body.clientHeight || Browser._document.documentElement.clientHeight;\r\n    }\r\n\r\n    static set clientHeight(value: number) {\r\n        Browser._clientHeight = value;\r\n    }\r\n\r\n    /** 浏览器窗口物理宽度。考虑了设备像素比。*/\r\n    static get width(): number {\r\n        Browser.__init__();\r\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientHeight : Browser.clientWidth) * Browser.pixelRatio;\r\n    }\r\n\r\n    /** 浏览器窗口物理高度。考虑了设备像素比。*/\r\n    static get height(): number {\r\n        Browser.__init__();\r\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientWidth : Browser.clientHeight) * Browser.pixelRatio;\r\n    }\r\n\r\n    /** 获得设备像素比。*/\r\n    static get pixelRatio(): number {\r\n        if (Browser._pixelRatio < 0) {\r\n            Browser.__init__();\r\n            if (Browser.userAgent.indexOf(\"Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)\") > -1) Browser._pixelRatio = 2;\r\n            else {\r\n                Browser._pixelRatio = (Browser._window.devicePixelRatio || 1);\r\n                if (Browser._pixelRatio < 1) Browser._pixelRatio = 1;\r\n            }\r\n        }\r\n        return Browser._pixelRatio;\r\n    }\r\n\r\n    /**画布容器，用来盛放画布的容器。方便对画布进行控制*/\r\n    static get container(): any {\r\n        if (!Browser._container) {\r\n            Browser.__init__();\r\n            Browser._container = Browser.createElement(\"div\");\r\n            Browser._container.id = \"layaContainer\";\r\n            Browser._document.body.appendChild(Browser._container);\r\n        }\r\n        return Browser._container;\r\n    }\r\n\r\n    static set container(value: any) {\r\n        Browser._container = value;\r\n    }\r\n\r\n    /**浏览器原生 window 对象的引用。*/\r\n    static get window(): any {\r\n        return Browser._window || Browser.__init__();\r\n    }\r\n\r\n    /**浏览器原生 document 对象的引用。*/\r\n    static get document(): any {\r\n        Browser.__init__();\r\n        return Browser._document;\r\n    }\r\n\r\n    /**\r\n     * 获得URL参数值\r\n     * @param\tname 参数名称\r\n     * @return\t参数值\r\n     */\r\n    static getQueryString(name: string): string {\r\n        if (Browser.onMiniGame) return null;\r\n        if (!window.location || !window.location.search)\r\n            return null;\r\n        var reg: RegExp = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\r\n        var r: any = window.location.search.substring(1).match(reg);\r\n        if (r != null) return unescape(r[2]);\r\n        return null;\r\n    }\r\n\r\n    // Safari横屏工具栏偏移\r\n    static getSafariToolbarOffset() {\r\n        return (Browser.window.__innerHeight || Browser.document.body.clientHeight || Browser.document.documentElement.clientHeight) - Browser.window.innerHeight;\r\n    }\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { Browser } from \"../../utils/Browser\";\r\nexport class CharRender_Canvas extends ICharRender {\r\n\tprivate static canvas: any = null;// HTMLCanvasElement;\r\n\tprivate ctx: any = null;\r\n\tprivate lastScaleX = 1.0;\r\n\tprivate lastScaleY = 1.0;\r\n\t//private needResetScale: boolean = false;\r\n\tprivate maxTexW = 0;\r\n\tprivate maxTexH = 0;\r\n\tprivate scaleFontSize = true;\r\n\tprivate showDbgInfo = false;\r\n\tprivate supportImageData = true;\r\n\tconstructor(maxw: number, maxh: number, scalefont: boolean = true, useImageData: boolean = true, showdbg: boolean = false) {\r\n\t\tsuper();\r\n\t\tthis.maxTexW = maxw;\r\n\t\tthis.maxTexH = maxh;\r\n\t\tthis.scaleFontSize = scalefont;\r\n\t\tthis.supportImageData = useImageData;\r\n\t\tthis.showDbgInfo = showdbg;\r\n\t\tif (!CharRender_Canvas.canvas) {\r\n\t\t\tCharRender_Canvas.canvas = Browser.createElement('canvas');\r\n\t\t\tCharRender_Canvas.canvas.width = 1024;\r\n\t\t\tCharRender_Canvas.canvas.height = 512;\r\n\t\t\t//这个canvas是用来获取字体渲染结果的。由于不可见canvas的字体不能小于12，所以要加到body上\r\n\t\t\t//为了避免被发现，设一个在屏幕外的绝对位置。\r\n\t\t\tCharRender_Canvas.canvas.style.left = \"-10000px\";\r\n\t\t\tCharRender_Canvas.canvas.style.position = \"absolute\";\r\n\t\t\twindow.document.body.appendChild(CharRender_Canvas.canvas);;\r\n\t\t\tthis.ctx = CharRender_Canvas.canvas.getContext('2d', { willReadFrequently: true });\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tget canvasWidth(): number {\r\n\t\treturn CharRender_Canvas.canvas.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tset canvasWidth(w: number) {\r\n\t\tif (CharRender_Canvas.canvas.width == w)\r\n\t\t\treturn;\r\n\t\tCharRender_Canvas.canvas.width = w;\r\n\t\tif (w > 2048) {\r\n\t\t\tconsole.warn(\"画文字设置的宽度太大，超过2048了\");\r\n\t\t}\r\n\t\t// 重新恢复一下缩放\r\n\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\t\t\t\r\n\t\tthis.ctx.scale(this.lastScaleX, this.lastScaleY);\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param font \r\n\t * @param str \r\n\t * @override\r\n\t */\r\n\tgetWidth(font: string, str: string): number {\r\n\t\tif (!this.ctx) return 0;\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\tif (this.ctx._lastFont != font) {\r\n\t\t\tthis.ctx.font = font;\r\n\t\t\tthis.ctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\t\treturn this.ctx.measureText(str).width;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param sx \r\n\t * @param sy \r\n\t * @override\r\n\t */\r\n\tscale(sx: number, sy: number): void {\r\n\t\tif (!this.supportImageData) {// supportImageData==false表示用 getCharCanvas，这个自己管理缩放\r\n\t\t\tthis.lastScaleX = sx;\r\n\t\t\tthis.lastScaleY = sy;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.lastScaleX != sx || this.lastScaleY != sy) {\r\n\t\t\tthis.ctx.setTransform(sx, 0, 0, sy, 0, 0);\t// 强制清理缩放\t\t\t\r\n\t\t\tthis.lastScaleX = sx;\r\n\t\t\tthis.lastScaleY = sy;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *TODO stroke \r\n\t * @param\tchar\r\n\t * @param\tfont\r\n\t * @param\tcri  修改里面的width。\r\n\t * @return\r\n\t * @override\r\n\t */\r\n\tgetCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo,\r\n\t\tmargin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[] | null = null): ImageData | null {\r\n\t\tif (!this.supportImageData)\r\n\t\t\treturn this.getCharCanvas(char, font, lineWidth, colStr, strokeColStr, cri, margin_left, margin_top, margin_right, margin_bottom);\r\n\t\tvar ctx: any = this.ctx;\r\n\r\n\t\tvar sz = this.fontsz;\r\n\t\t//ctx.save();\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\r\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\r\n\t\t\tctx.font = font;\r\n\t\t\tctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\r\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\r\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\r\n\t\tvar h: number = cri.height * this.lastScaleY;\r\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\r\n\t\th += (margin_top + margin_bottom) * this.lastScaleY;\r\n\t\tw = Math.ceil(w);\r\n\t\th = Math.ceil(h);\r\n\t\tw = Math.min(w, CharRender_Canvas.canvas.width);\r\n\t\th = Math.min(h, CharRender_Canvas.canvas.height);\r\n\r\n\t\tvar clearW: number = w + lineWidth * 2 + 1;\r\n\t\tvar clearH: number = h + lineWidth * 2 + 1;\r\n\t\tif (rect) {// measureText可能会小于请求的区域。 rect[2]可能为-1\r\n\t\t\tclearW = Math.max(clearW, rect[0] + rect[2] + 1);\r\n\t\t\tclearH = Math.max(clearH, rect[1] + rect[3] + 1);\r\n\t\t}\r\n\t\tctx.clearRect(0, 0, clearW / this.lastScaleX + 1, clearH / this.lastScaleY + 1);\r\n\t\tctx.save();\r\n\t\t//ctx.textAlign = \"end\";\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\t//ctx.translate(CborderSize, CborderSize);\r\n\t\t//ctx.scale(xs, ys);\r\n\t\tif (lineWidth > 0) {\r\n\t\t\t//设置文本描边为圆角模式，默认值miter会导致在某些字体的转角字符出现尖刺现象。\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.strokeStyle = strokeColStr;\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\tctx.strokeText(char, margin_left, margin_top + sz / 2);\r\n\t\t}\r\n\t\tif (colStr) {\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.fillText(char, margin_left, margin_top + sz / 2);\r\n\t\t}\r\n\r\n\t\tif (this.showDbgInfo) {\r\n\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\tctx.strokeRect(1, 1, w - 2, h - 2);\r\n\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\tctx.strokeRect(margin_left, margin_top, cri.width, cri.height);//原始大小，没有缩放的\r\n\t\t}\r\n\t\t//ctx.restore();\r\n\t\tif (rect) {\r\n\t\t\tif (rect[2] == -1) rect[2] = Math.ceil((cri.width + lineWidth * 2) * this.lastScaleX); // 这个没有考虑左右margin\r\n\t\t\tif (rect[2] <= 0) rect[2] = 1;\t// 有的字体在处理不存在文字的时候，测量宽度为0，会导致getImageData出错\r\n\t\t}\r\n\t\tvar imgdt: ImageData = rect ? (ctx.getImageData(rect[0], rect[1], rect[2], rect[3] + 1)) : (ctx.getImageData(0, 0, w, h + 1));\r\n\t\tctx.restore();\r\n\t\tcri.bmpWidth = imgdt.width;\r\n\t\tcri.bmpHeight = imgdt.height;\r\n\t\treturn imgdt;\r\n\t}\r\n\r\n\tgetCharCanvas(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number): ImageData {\r\n\t\tvar ctx: any = this.ctx;\r\n\r\n\t\t//ctx.save();\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\r\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\r\n\t\t\tctx.font = font;\r\n\t\t\tctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\r\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\r\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\r\n\t\tvar h: number = cri.height * this.lastScaleY;\r\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\r\n\t\th += ((margin_top + margin_bottom) * this.lastScaleY + 1);\t// 这个+1只是为了让测试能通过。确实应该加点高度，否则会被裁掉一部分，但是加多少还没找到方法。\r\n\t\tw = Math.min(w, this.maxTexW);\r\n\t\th = Math.min(h, this.maxTexH);\r\n\r\n\t\t//if (canvas.width != (w + 1) || canvas.height != (h + 1)) {\r\n\t\tCharRender_Canvas.canvas.width = Math.min(w + 1, this.maxTexW);\r\n\t\tCharRender_Canvas.canvas.height = Math.min(h + 1, this.maxTexH);\r\n\t\tctx.font = font;\r\n\t\t//}\r\n\t\tctx.clearRect(0, 0, w + 1 + lineWidth, h + 1 + lineWidth);\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\r\n\t\tctx.save();\r\n\t\tif (this.scaleFontSize) {\r\n\t\t\t//这里的缩放会导致与上面的缩放同时起作用。所以上面保护\r\n\t\t\tctx.scale(this.lastScaleX, this.lastScaleY);\r\n\t\t}\r\n\t\tctx.translate(margin_left, margin_top);\r\n\t\tctx.textAlign = \"left\";\r\n\r\n\t\tvar sz = this.fontsz;\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\t//ctx.translate(CborderSize, CborderSize);\r\n\t\t//ctx.scale(xs, ys);\r\n\t\tif (lineWidth > 0) {\r\n\t\t\tctx.strokeStyle = strokeColStr;\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\t//ctx.strokeText(char, margin_left, margin_top);\r\n\t\t\tif (ctx.fillAndStrokeText) {\r\n\t\t\t\tctx.fillAndStrokeText(char, 0, sz / 2);\r\n\t\t\t} else {\r\n\t\t\t\tctx.strokeText(char, 0, sz / 2);\r\n\t\t\t\tctx.fillText(char, 0, sz / 2);\r\n\t\t\t}\r\n\t\t} else if (colStr) {\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.fillText(char, 0, sz / 2);\r\n\t\t}\r\n\t\tif (this.showDbgInfo) {\r\n\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\tctx.strokeRect(0, 0, w, h);\r\n\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\tctx.strokeRect(0, 0, cri.width, cri.height);//原始大小，没有缩放的\r\n\t\t}\r\n\t\tctx.restore();\r\n\t\tcri.bmpWidth = CharRender_Canvas.canvas.width;\r\n\t\tcri.bmpHeight = CharRender_Canvas.canvas.height;\r\n\t\treturn CharRender_Canvas.canvas;\r\n\t}\r\n}\r\n\r\n","import { TextAtlas } from \"./TextAtlas\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { FontInfo } from \"../../utils/FontInfo\"\r\nimport { WordText } from \"../../utils/WordText\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { CharRender_Canvas } from \"./CharRender_Canvas\"\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Const } from \"../../Const\";\r\n\r\nexport class TextRender {\r\n    //config\r\n    static useOldCharBook = false;\r\n    static atlasWidth = 1024;\r\n    static noAtlas = false;\t\t\t\t// 一串文字用独立贴图\r\n    static forceSplitRender = false;\t    // 强制把一句话拆开渲染\r\n    static forceWholeRender = false; \t// 强制整句话渲染\r\n    static scaleFontWithCtx = true;\t\t// 如果有缩放，则修改字体，以保证清晰度\r\n    static maxFontScale = 4;            //当scaleFontWithCtx为true时，最大允许放大的倍数\r\n    static standardFontSize = 32;\t\t\t// 测量的时候使用的字体大小\r\n    static destroyAtlasDt = 10;\t\t\t\t\t// 回收图集贴图的时间\r\n    static checkCleanTextureDt = 2000;\t\t// 检查是否要真正删除纹理的时间。单位是ms\r\n    static destroyUnusedTextureDt = 3000; \t// 长时间不用的纹理删除的时间。单位是ms\r\n    static cleanMem = 100 * 1024 * 1024;\t\t// 多大内存触发清理图集。这时候占用率低的图集会被清理\r\n    static isWan1Wan = false;\r\n    static showLog = false;\r\n    static debugUV = false;\t\t\t\t// 文字纹理需要保护边。当像素没有对齐的时候，可能会采样到旁边的贴图。true则填充texture为白色，模拟干扰\r\n    //config\r\n\r\n    /**\r\n     * fontSizeInfo\r\n     * 记录每种字体的像素的大小。标准是32px的字体。由4个byte组成，分别表示[xdist,ydist,w,h]。 \r\n     * xdist,ydist 是像素起点到排版原点的距离，都是正的，表示实际数据往左和上偏多少，如果实际往右和下偏，则算作0，毕竟这个只是一个大概\r\n     * 例如 [Arial]=0x00002020, 表示宽高都是32\r\n     */\r\n    private fontSizeInfo: any = {};\r\n    static atlasWidth2: number;\r\n    private charRender: ICharRender;\r\n    private static tmpRI: CharRenderInfo = new CharRenderInfo();\r\n    private static pixelBBX: number[] = [0, 0, 0, 0];\r\n    private mapFont: any = {};\t\t// 把font名称映射到数字\r\n    private fontID: number = 0;\r\n\r\n    private fontScaleX: number = 1.0;\t\t\t\t\t\t//临时缩放。\r\n    private fontScaleY: number = 1.0;\r\n\r\n    //private var charMaps:Object = {};\t// 所有的都放到一起\r\n\r\n    private _curStrPos: number = 0;\t\t//解开一个字符串的时候用的。表示当前解到什么位置了\r\n    static textRenderInst: TextRender;\t//debug\r\n\r\n    textAtlases: TextAtlas[] = [];\t\t// 所有的大图集\r\n    private isoTextures: TextTexture[] = [];\t// 所有的独立贴图\r\n\r\n    private bmpData32: Uint32Array;\r\n    private static imgdtRect: any[] = [0, 0, 0, 0];\r\n\r\n    // 当前字体的测量信息。\r\n    private lastFont: FontInfo | null = null;\r\n    private fontSizeW: number = 0;\r\n    private fontSizeH: number = 0;\r\n    private fontSizeOffX: number = 0;\r\n    private fontSizeOffY: number = 0;\r\n\r\n    private renderPerChar: boolean = true;\t// 是否是单个字符渲染。这个是结果，上面的是配置\r\n    private tmpAtlasPos: Point = new Point();\r\n    private textureMem: number = 0; \t\t\t// 当前贴图所占用的内存\r\n    private fontStr: string;\t\t\t\t\t// 因为要去掉italic，所以自己保存一份\r\n    static simClean: boolean = false;\t\t\t\t// 测试用。强制清理占用低的图集\r\n\r\n    constructor() {\r\n        var bugIOS = false;//是否是有bug的ios版本\r\n        //在微信下有时候不显示文字，所以采用canvas模式，现在测试微信好像都好了，所以去掉了。\r\n        var miniadp: any = ILaya.Laya['MiniAdpter']; //头条也继承了这个bug\r\n        if (miniadp && miniadp.systemInfo && miniadp.systemInfo.system) {\r\n            bugIOS = miniadp.systemInfo.system.toLowerCase() === 'ios 10.1.1';\r\n            //12.3\r\n        }\r\n        if ((ILaya.Browser.onMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onTBMiniGame) /*&& !Browser.onAndroid*/ && !bugIOS) TextRender.isWan1Wan = true; //android 微信下 字边缘发黑，所以不用getImageData了\r\n        //TextRender.isWan1Wan = true;\r\n        this.charRender = new CharRender_Canvas(2048, 2048, TextRender.scaleFontWithCtx, !TextRender.isWan1Wan, false);\r\n        TextRender.textRenderInst = this;\r\n        ILaya.Laya['textRender'] = this;\r\n        TextRender.atlasWidth2 = TextRender.atlasWidth * TextRender.atlasWidth;\r\n        //TEST\r\n        //forceSplitRender = true;\r\n        //noAtlas = true;\r\n        //forceWholeRender = true;\r\n        //TEST\r\n    }\r\n\r\n    /**\r\n     * 设置当前字体，获得字体的大小信息。\r\n     * @param\tfont\r\n     */\r\n    setFont(font: FontInfo): void {\r\n        if (this.lastFont == font) return;\r\n        this.lastFont = font;\r\n        var fontsz = this.getFontSizeInfo(font._family);\r\n        var offx = fontsz >> 24\r\n        var offy = (fontsz >> 16) & 0xff;\r\n        var fw = (fontsz >> 8) & 0xff;\r\n        var fh = fontsz & 0xff;\r\n        var k = font._size / TextRender.standardFontSize;\r\n        this.fontSizeOffX = Math.ceil(offx * k);\r\n        this.fontSizeOffY = Math.ceil(offy * k);\r\n        this.fontSizeW = Math.ceil(fw * k);\r\n        this.fontSizeH = Math.ceil(fh * k);\r\n        if (font._font.indexOf('italic') >= 0) {// 先判断一下效率会高一些\r\n            this.fontStr = font._font.replace('italic', '');\r\n        } else {\r\n            this.fontStr = font._font;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从string中取出一个完整的char，例如emoji的话要多个\r\n     * 会修改 _curStrPos\r\n     * TODO 由于各种文字中的组合写法，这个需要能扩展，以便支持泰文等\r\n     * @param\tstr\r\n     * @param\tstart\t开始位置\r\n     */\r\n    getNextChar(str: string): string | null {\r\n        var len = str.length;\r\n        var start = this._curStrPos;\r\n        if (!str.substring) return null;\t// 保护一下，避免下面 substring 报错\r\n        if (start >= len)\r\n            return null;\r\n\r\n        //var link: boolean = false;\t//如果是连接的话要再加一个完整字符\r\n        var i = start;\r\n        var state = 0; //0 初始化 1  正常 2 连续中\r\n        for (; i < len; i++) {\r\n            var c = str.charCodeAt(i);\r\n            if ((c >>> 11) == 0x1b) { //可能是0b110110xx或者0b110111xx。 这都表示2个u16组成一个emoji\r\n                if (state == 1) break;//新的字符了，要截断\r\n                state = 1;\t// 其他状态都转成正常读取字符状态，只是一次读两个\r\n                i++;\t//跨过一个。\r\n            }\r\n            else if (c === 0xfe0e || c === 0xfe0f) {\t//样式控制字符\r\n                // 继续。不改变状态\r\n            }\r\n            else if (c == 0x200d) {\t\t//zero width joiner\r\n                state = 2; \t// 继续\r\n            } else {\r\n                if (state == 0) state = 1;\r\n                else if (state == 1) break;\r\n                else if (state == 2) {\r\n                    // 继续\r\n                }\r\n            }\r\n        }\r\n        this._curStrPos = i;\r\n        return str.substring(start, i);\r\n    }\r\n\r\n    filltext(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        if (data.length <= 0)\r\n            return;\r\n        //以后保存到wordtext中\r\n        var font = FontInfo.parse(fontStr);\r\n\r\n        var nTextAlign = 0;\r\n        switch (textAlign) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\r\n    }\r\n\r\n    _fast_filltext(ctx: Context, data: string | WordText | null, x: number, y: number, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\r\n        if (data && !(data.length >= 1)) return;\t// length有可能是 undefined\r\n        if (lineWidth < 0) lineWidth = 0;\r\n        this.setFont(font);\r\n        this.fontScaleX = this.fontScaleY = 1.0;\r\n        if (TextRender.scaleFontWithCtx) {\r\n            let sx = ctx.getMatScaleX();\r\n            let sy = ctx.getMatScaleY();\r\n\r\n\r\n            if (sx < 1e-4 || sy < 1e-1)\r\n                return;\r\n\r\n            if (sx > 1) this.fontScaleX = Math.min(TextRender.maxFontScale, sx);\r\n            if (sy > 1) this.fontScaleY = Math.min(TextRender.maxFontScale, sy);\r\n        }\r\n\r\n        font._italic && (ctx._italicDeg = 13);\r\n        //准备bmp\r\n        //拷贝到texture上,得到一个gltexture和uv\r\n        var wt = <WordText>data;\r\n        var isWT = data instanceof WordText;\r\n        var str = data && data.toString();//(<string>data);guo 某种情况下，str还是WordText（没找到为啥），这里保护一下\r\n\r\n        /**\r\n         * sameTexData \r\n         * WordText 中保存了一个数组，这个数组是根据贴图排序的，目的是为了能相同的贴图合并。\r\n         * 类型是 {ri:CharRenderInfo,stx:int,sty:int,...}[文字个数][贴图分组]\r\n         */\r\n        var sameTexData: any[] = isWT ? wt.pageChars : [];\r\n\r\n        var strWidth = 0;\r\n        if (isWT) {\r\n            str = wt.text;\r\n            strWidth = wt.width;\r\n            if (strWidth < 0) {\r\n                strWidth = wt.width = this.charRender.getWidth(this.fontStr, str);\t// 字符串长度是原始的。\r\n            }\r\n        } else {\r\n            strWidth = str ? this.charRender.getWidth(this.fontStr, str) : 0;\r\n        }\r\n\r\n        //水平对齐方式\r\n        switch (textAlign) {\r\n            case Const.ENUM_TEXTALIGN_CENTER:\r\n                x -= strWidth / 2;\r\n                break;\r\n            case Const.ENUM_TEXTALIGN_RIGHT:\r\n                x -= strWidth;\r\n                break;\r\n        }\r\n\r\n        //检查保存的数据是否有的已经被释放了\r\n        if (isWT) {\t// TODO 能利用lastGCCnt么\r\n            //wt.lastGCCnt = _curPage.gcCnt;\r\n            if (this.hasFreedText(sameTexData) || wt.pagecharsCtx != ctx) {\r\n                sameTexData = wt.pageChars = [];\r\n            }\r\n            // if(isWT && (this.fontScaleX!=wt.scalex || this.fontScaleY!=wt.scaley)) {\r\n            // \t// 文字缩放要清理缓存\r\n            // \tsameTexData = wt.pageChars = [];\r\n            // }\r\n        }\r\n        var ri: CharRenderInfo = null;\r\n        //var oneTex: boolean = isWT || TextRender.forceWholeRender;\t// 如果能缓存的话，就用一张贴图\r\n        var splitTex = this.renderPerChar = (!isWT) || TextRender.forceSplitRender || (isWT && wt.splitRender); \t// 拆分字符串渲染，这个优先级高\r\n        if (!sameTexData || sameTexData.length < 1) {\r\n            if (isWT) {\r\n                wt.scalex = this.fontScaleX;\r\n                wt.scaley = this.fontScaleY;\r\n            }\r\n            // 重新构建缓存的贴图信息\r\n            // TODO 还是要ctx.scale么\r\n            if (splitTex) {\r\n                // 如果要拆分字符渲染\r\n                var stx = 0;\r\n                var sty = 0;\r\n\r\n                this._curStrPos = 0;\r\n                var curstr: string | null;\r\n                while (true) {\r\n                    curstr = this.getNextChar(str);\r\n                    if (!curstr)\r\n                        break;\r\n                    ri = this.getCharRenderInfo(curstr, font, color, strokeColor, lineWidth, false);\r\n                    if (!ri) {\r\n                        // 没有分配到。。。\r\n                        break;\r\n                    }\r\n                    if (ri.isSpace) {\t// 空格什么都不做\r\n                    } else {\r\n                        //分组保存\r\n                        var add = sameTexData[ri.tex.id];\r\n                        if (!add) {\r\n                            var o1 = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: new Array() };\t// 根据genid来减少是否释放的判断量\r\n                            sameTexData[ri.tex.id] = o1;\r\n                            add = o1.words;\r\n                        } else {\r\n                            add = add.words;\r\n                        }\r\n                        //不能直接修改ri.bmpWidth, 否则会累积缩放，所以把缩放保存到独立的变量中\r\n                        add.push({ ri: ri, x: stx, y: sty, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY });\r\n                        stx += ri.width;\t// TODO 缩放\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // 如果要整句话渲染\r\n                var margin = (font._size / 3 | 0);  // margin保持与charrender_canvas的一致\r\n                var isotex = TextRender.noAtlas || (strWidth + margin + margin) * this.fontScaleX > TextRender.atlasWidth;\t// 独立贴图还是大图集。需要考虑margin\r\n                ri = this.getCharRenderInfo(str, font, color, strokeColor, lineWidth, isotex);\r\n                // 整句渲染，则只有一个贴图\r\n                sameTexData[0] = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: [{ ri: ri, x: 0, y: 0, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY }] };\r\n            }\r\n            isWT && (wt.pagecharsCtx = ctx);\r\n            //TODO getbmp 考虑margin 字体与标准字体的关系\r\n        }\r\n\r\n        this._drawResortedWords(ctx, x, y, sameTexData);\r\n        ctx._italicDeg = 0;\r\n    }\r\n\r\n    /**\r\n     * 画出重新按照贴图顺序分组的文字。\r\n     * @param\tsamePagesData\r\n     * @param  startx 保存的数据是相对位置，所以需要加上这个偏移。用相对位置更灵活一些。\r\n     * @param y {int} 因为这个只能画在一行上所以没有必要保存y。所以这里再把y传进来\r\n     */\r\n    protected _drawResortedWords(ctx: Context, startx: number, starty: number, samePagesData: any[]): void {\r\n        var isLastRender = ctx._charSubmitCache ? ctx._charSubmitCache._enable : false;\r\n        var mat = ctx._curMat;\r\n        //var slen = samePagesData.length;\r\n        //for (var id = 0; id < slen; id++) {\r\n        for (var id in samePagesData) {// TODO samePagesData可能是个不连续的数组，比如只有一个samePagesData[29999] = dt;\r\n            // TODO 想个更好的方法\r\n            var dt = samePagesData[id];\r\n            if (!dt) continue;\r\n            var pri: any[] = dt.words;\r\n            var pisz = pri.length; if (pisz <= 0) continue;\r\n            var tex = ((<TextTexture>samePagesData[id].tex));\r\n            for (var j = 0; j < pisz; j++) {\r\n                var riSaved: any = pri[j];\r\n                var ri: CharRenderInfo = riSaved.ri;\r\n                if (ri.isSpace) continue;\r\n                ri.touch();\r\n                ctx.drawTexAlign = true;\r\n                //ctx._drawTextureM(ri.tex.texture as Texture, startx +riSaved.x -ri.orix / fontScaleX , starty + riSaved.y -ri.oriy / fontScaleY , riSaved.w, riSaved.h, null, 1.0, ri.uv);\r\n\r\n                let t = tex as TextTexture;\r\n                ctx._inner_drawTexture(t.texture, t.id,\r\n                    startx + riSaved.x - ri.orix, starty + riSaved.y - ri.oriy, riSaved.w, riSaved.h,\r\n                     mat, ri.uv, 1.0, isLastRender, 0xffffffff);\r\n                \r\n\r\n                if ((<any>ctx).touches) {\r\n                    (<any>ctx).touches.push(ri);\r\n                }\r\n            }\r\n        }\r\n        //不要影响别人\r\n        //ctx._curSubmit._key.other = -1;\r\n    }\r\n\r\n    /**\r\n     * 检查 txts数组中有没有被释放的资源\r\n     * @param\ttxts {{ri:CharRenderInfo,...}[][]}\r\n     * @param\tstartid\r\n     * @return\r\n     */\r\n    hasFreedText(txts: any[]): boolean {\r\n        for (let i in txts) {\r\n            var pri = txts[i];\r\n            if (!pri) continue;\r\n            var tex = (<TextTexture>pri.tex);\r\n            if (tex.destroyed || tex.genID != pri.texgen) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCharRenderInfo(str: string, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, isoTexture: boolean = false): CharRenderInfo {\r\n        var fid = this.mapFont[font._family];\r\n        if (fid == undefined) {\r\n            this.mapFont[font._family] = fid = this.fontID++;\r\n        }\r\n        /*\r\n        var cid:int = mapColor[color];\r\n        if (cid == undefined) {\r\n            mapColor[color] = cid = colorID++;\r\n        }\r\n        var scid:int = mapColor[strokeColor];\r\n        */\r\n        var key = str + '_' + fid + '_' + font._size + '_' + color;\r\n        if (lineWidth > 0)\r\n            key += '_' + strokeColor! + lineWidth;\r\n        if (font._bold)\r\n            key += 'P';\r\n        if (this.fontScaleX != 1 || this.fontScaleY != 1) {\r\n            key += (this.fontScaleX * 20 | 0) + '_' + (this.fontScaleY * 20 | 0);\t// 这个精度可以控制占用资源的大小，精度越高越能细分缩放。\r\n        }\r\n\r\n        var i = 0;\r\n        // 遍历所有的大图集看是否存在\r\n        var sz = this.textAtlases.length;\r\n        var ri: CharRenderInfo;\r\n        var atlas: TextAtlas;\r\n        if (!isoTexture) {\r\n            for (i = 0; i < sz; i++) {\r\n                atlas = this.textAtlases[i];\r\n                ri = atlas.charMaps[key]\r\n                if (ri) {\r\n                    ri.touch();\r\n                    return ri;\r\n                }\r\n            }\r\n        }\r\n        // 没有找到，要创建一个\r\n        ri = new CharRenderInfo();\r\n        this.charRender.scale(this.fontScaleX, this.fontScaleY);\r\n        ri.char = str;\r\n        ri.height = font._size;\r\n        var margin = (font._size / 3 | 0);\t// 凑的。 注意这里不能乘以缩放，因为ctx会自动处理\r\n        // 如果不存在，就要插入已有的，或者创建新的\r\n        var imgdt: ImageData | null = null;\r\n        // 先大约测量文字宽度 \r\n\r\n        if (!lineWidth) {\r\n            lineWidth = 0;\r\n        }\r\n        var w1 = Math.ceil((this.charRender.getWidth(this.fontStr, str) + 2 * lineWidth) * this.fontScaleX);\r\n        if (w1 > this.charRender.canvasWidth) {\r\n            this.charRender.canvasWidth = Math.min(2048, w1 + margin * 2);\r\n        }\r\n        if (isoTexture) {\r\n            // 独立贴图\r\n            this.charRender.fontsz = font._size;\r\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri, margin, margin, margin, margin, null);\r\n            // 这里可以直接\r\n            if (imgdt) {\r\n                var tex = TextTexture.getTextTexture(imgdt.width, imgdt.height);\r\n                tex.addChar(imgdt, 0, 0, ri.uv);\r\n                ri.tex = tex;\r\n                ri.orix = margin; // 这里是原始的，不需要乘scale,因为scale的会创建一个scale之前的rect\r\n                ri.oriy = margin;\r\n                tex.ri = ri;\r\n                this.isoTextures.push(tex);\r\n            }\r\n        } else {\r\n            // 大图集\r\n            var len = str.length;\r\n            if (len > 1) {\r\n                // emoji或者组合的\r\n            }\r\n            var lineExt = lineWidth * 1;\t// 这里，包括下面的*2 都尽量用整数。否则在取整以后可能有有偏移。\r\n            var fw = Math.ceil((this.fontSizeW + lineExt * 2) * this.fontScaleX); \t//本来只要 lineWidth就行，但是这样安全一些\r\n            var fh = Math.ceil((this.fontSizeH + lineExt * 2) * this.fontScaleY);\r\n            TextRender.imgdtRect[0] = ((margin - this.fontSizeOffX - lineExt) * this.fontScaleX) | 0;\t// 本来要 lineWidth/2 但是这样一些尖角会有问题，所以大一点\r\n            TextRender.imgdtRect[1] = ((margin - this.fontSizeOffY - lineExt) * this.fontScaleY) | 0;\r\n            if (this.renderPerChar || len == 1) {\r\n                // 单个字符的处理\r\n                TextRender.imgdtRect[2] = Math.max(w1, fw);\r\n                TextRender.imgdtRect[3] = Math.max(w1, fh);\t// 高度也要取大的。 例如emoji\r\n            } else {\r\n                // 多个字符的处理\r\n                TextRender.imgdtRect[2] = -1;\t// -1 表示宽度要测量\r\n                TextRender.imgdtRect[3] = fh; \t// TODO 如果被裁剪了，可以考虑把这个加大一点点\r\n            }\r\n            this.charRender.fontsz = font._size;\r\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri,\r\n                margin, margin, margin, margin, TextRender.imgdtRect);\r\n            if (imgdt) {\r\n                atlas = this.addBmpData(imgdt, ri);\r\n                if (TextRender.isWan1Wan) {\r\n                    // 这时候 imgdtRect 是不好使的，要自己设置\r\n                    ri.orix = margin;\t// 不要乘缩放。要不后面也要除。\r\n                    ri.oriy = margin;\r\n                } else {\r\n                    // 取下来的imagedata的原点在哪\r\n                    ri.orix = (this.fontSizeOffX + lineExt);\t// 由于是相对于imagedata的，上面会根据包边调整左上角，所以原点也要相应反向调整\r\n                    ri.oriy = (this.fontSizeOffY + lineExt);\r\n                }\r\n                atlas.charMaps[key] = ri;\r\n            }\r\n        }\r\n        return ri;\r\n    }\r\n\r\n    /**\r\n     * 添加数据到大图集\r\n     * @param\tw\r\n     * @param\th\r\n     * @return\r\n     */\r\n    addBmpData(data: ImageData, ri: CharRenderInfo): TextAtlas {\r\n        var w = data.width;\r\n        var h = data.height;\r\n        var sz = this.textAtlases.length;\r\n        var atlas: TextAtlas;\r\n        var find = false;\r\n        for (var i = 0; i < sz; i++) {\r\n            atlas = this.textAtlases[i];\r\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\r\n            if (find) {\r\n                break;\r\n            }\r\n        }\r\n        if (!find) {\r\n            // 创建一个新的\r\n            atlas = new TextAtlas()\r\n            this.textAtlases.push(atlas);\r\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\r\n            if (!find) {\r\n                throw 'err1'; //TODO\r\n            }\r\n            // 清理旧的\r\n            this.cleanAtlases();\r\n        }\r\n        if (find) {\r\n            atlas.texture.addChar(data, this.tmpAtlasPos.x, this.tmpAtlasPos.y, ri.uv);\r\n            ri.tex = atlas.texture;\r\n        }\r\n        return atlas;\r\n    }\r\n\r\n    /**\r\n     * 清理利用率低的大图集\r\n     */\r\n    GC(): void {\r\n        var i = 0;\r\n        var sz = this.textAtlases.length;\r\n        var dt = 0;\r\n        var destroyDt = TextRender.destroyAtlasDt;\r\n        var totalUsedRate = 0;\t// 总使用率\r\n        var totalUsedRateAtlas = 0;\r\n        var curloop = RenderInfo.loopCount;\r\n\r\n        //var minUsedRateID:int = -1;\r\n        //var minUsedRate:Number = 1;\r\n        var maxWasteRateID = -1;\r\n        var maxWasteRate = 0;\r\n        var tex: TextTexture = null;\r\n        var curatlas: TextAtlas = null;\r\n        // 图集的清理\r\n        for (; i < sz; i++) {\r\n            curatlas = this.textAtlases[i];\r\n            tex = curatlas.texture;\r\n            if (tex) {\r\n                totalUsedRate += tex.curUsedCovRate;\r\n                totalUsedRateAtlas += tex.curUsedCovRateAtlas;\r\n                // 浪费掉的图集\r\n                // (已经占用的图集和当前使用的图集的差。图集不可局部重用，所以有占用的和使用的的区别)\r\n                var waste = curatlas.usedRate - tex.curUsedCovRateAtlas;\r\n                // 记录哪个图集浪费的最多\r\n                if (maxWasteRate < waste) {\r\n                    maxWasteRate = waste;\r\n                    maxWasteRateID = i;\r\n                }\r\n                /*\r\n                if (minUsedRate > tex.curUsedCovRate) {\r\n                    minUsedRate = tex.curUsedCovRate;\r\n                    minUsedRateID = i;\r\n                }\r\n                */\r\n            }\r\n            // 如果当前贴图的touch时间超出了指定的间隔（单位是帧，例如），则设置回收\r\n            // 可能同时会有多个图集被回收\r\n            dt = curloop - curatlas.texture.lastTouchTm;\r\n            if (dt > destroyDt) {\r\n                TextRender.showLog && console.log('TextRender GC delete atlas ' + tex ? curatlas.texture.id : 'unk');\r\n                curatlas.destroy();\r\n                this.textAtlases[i] = this.textAtlases[sz - 1];\t// 把最后的拿过来冲掉\r\n                sz--;\r\n                i--;\r\n                maxWasteRateID = -1;\r\n            }\r\n        }\r\n        // 缩减图集数组的长度\r\n        this.textAtlases.length = sz;\r\n\r\n        // 独立贴图的清理 TODO 如果多的话，要不要分开处理\r\n        sz = this.isoTextures.length;\r\n        for (i = 0; i < sz; i++) {\r\n            tex = this.isoTextures[i];\r\n            dt = curloop - tex.lastTouchTm;\r\n            if (dt > TextRender.destroyUnusedTextureDt) {\r\n                tex.ri.deleted = true;\r\n                tex.ri.tex = null;\r\n                // 直接删除，不回收\r\n                tex.destroy();\r\n                this.isoTextures[i] = this.isoTextures[sz - 1];\r\n                sz--;\r\n                i--;\r\n            }\r\n        }\r\n        this.isoTextures.length = sz;\r\n\r\n        // 如果超出内存需要清理不常用\r\n        var needGC = this.textAtlases.length > 1 && this.textAtlases.length - totalUsedRateAtlas >= 2;\t// 总量浪费了超过2张\r\n        if (TextRender.atlasWidth * TextRender.atlasWidth * 4 * this.textAtlases.length > TextRender.cleanMem || needGC || TextRender.simClean) {\r\n            TextRender.simClean = false;\r\n            TextRender.showLog && console.log('清理使用率低的贴图。总使用率:', totalUsedRateAtlas, ':', this.textAtlases.length, '最差贴图:' + maxWasteRateID);\r\n            if (maxWasteRateID >= 0) {\r\n                curatlas = this.textAtlases[maxWasteRateID];\r\n                curatlas.destroy();\r\n                this.textAtlases[maxWasteRateID] = this.textAtlases[this.textAtlases.length - 1];\r\n                this.textAtlases.length = this.textAtlases.length - 1;\r\n            }\r\n        }\r\n\r\n        TextTexture.clean();\r\n    }\r\n\r\n    /**\r\n     * 尝试清理大图集\r\n     */\r\n    cleanAtlases(): void {\r\n        // TODO 根据覆盖率决定是否清理\r\n    }\r\n\r\n    getCharBmp(c: string): any {\r\n\r\n    }\r\n\r\n    /**\r\n     * 检查当前线是否存在数据\r\n     * @param\tdata\r\n     * @param\tl\r\n     * @param\tsx\r\n     * @param\tex\r\n     * @return\r\n     */\r\n    private checkBmpLine(data: ImageData, l: number, sx: number, ex: number): boolean {\r\n        if (this.bmpData32.buffer != data.data.buffer) {\r\n            this.bmpData32 = new Uint32Array(data.data.buffer);\r\n        }\r\n        var stpos = data.width * l + sx;\r\n        for (var x = sx; x < ex; x++) {\r\n            if (this.bmpData32[stpos++] != 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 根据bmp数据和当前的包围盒，更新包围盒\r\n     * 由于选择的文字是连续的，所以可以用二分法\r\n     * @param\tdata\r\n     * @param\tcurbbx \t[l,t,r,b]\r\n     * @param   onlyH 不检查左右\r\n     */\r\n    private updateBbx(data: ImageData, curbbx: number[], onlyH: boolean = false): void {\r\n        var w = data.width;\r\n        var h = data.height;\r\n        var x = 0;\r\n        // top\r\n        var sy = curbbx[1];\t//从t到0 sy表示有数据的行\r\n        var ey = 0;\r\n        var y = sy;\r\n        if (this.checkBmpLine(data, sy, 0, w)) {\r\n            // 如果当前行有数据，就要往上找\r\n            while (true) {\r\n                y = (sy + ey) / 2 | 0;\t// 必须是int\r\n                if (y + 1 >= sy) {// \r\n                    // 找到了。严格来说还不知道这个是否有像素，不过这里要求不严格，可以认为有\r\n                    curbbx[1] = y;\r\n                    break;\r\n                }\r\n                if (this.checkBmpLine(data, y, 0, w)) {\r\n                    //中间线有数据，搜索上半部分\r\n                    sy = y;\r\n                } else {\r\n                    //中间线没有有数据，搜索下半部分\r\n                    ey = y;\r\n                }\r\n            }\r\n        }\r\n        // 下半部分\r\n        if (curbbx[3] > h) curbbx[3] = h;\r\n        else {\r\n            y = sy = curbbx[3];\r\n            ey = h;\r\n            if (this.checkBmpLine(data, sy, 0, w)) {\r\n                while (true) {\r\n                    y = (sy + ey) / 2 | 0;\r\n                    if (y - 1 <= sy) {\r\n                        curbbx[3] = y;\r\n                        break;\r\n                    }\r\n                    if (this.checkBmpLine(data, y, 0, w)) {\r\n                        sy = y;\r\n                    } else {\r\n                        ey = y;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (onlyH)\r\n            return;\r\n\r\n        // 左半部分\r\n        var minx = curbbx[0];\r\n        var stpos = w * curbbx[1]; //w*cy+0\r\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\r\n            for (x = 0; x < minx; x++) {\r\n                if (this.bmpData32[stpos + x] != 0) {\r\n                    minx = x;\r\n                    break;\r\n                }\r\n            }\r\n            stpos += w;\r\n        }\r\n        curbbx[0] = minx;\r\n        // 右半部分\r\n        var maxx = curbbx[2];\r\n        stpos = w * curbbx[1]; //w*cy\r\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\r\n            for (x = maxx; x < w; x++) {\r\n                if (this.bmpData32[stpos + x] != 0) {\r\n                    maxx = x;\r\n                    break;\r\n                }\r\n            }\r\n            stpos += w;\r\n        }\r\n        curbbx[2] = maxx;\r\n    }\r\n\r\n    getFontSizeInfo(font: string): number {\r\n        var finfo: any = this.fontSizeInfo[font];\r\n        if (finfo != undefined)\r\n            return finfo;\r\n\r\n        var fontstr: string = 'bold ' + TextRender.standardFontSize + 'px ' + font;\r\n        if (TextRender.isWan1Wan) {\r\n            // 这时候无法获得imagedata，只能采取保险测量\r\n            this.fontSizeW = this.charRender.getWidth(fontstr, '有') * 1.5;\r\n            this.fontSizeH = TextRender.standardFontSize * 1.5;\r\n            var szinfo: number = this.fontSizeW << 8 | this.fontSizeH;\r\n            this.fontSizeInfo[font] = szinfo;\r\n            return szinfo;\r\n        }\r\n        // bbx初始大小\r\n        TextRender.pixelBBX[0] = TextRender.standardFontSize / 2;// 16;\r\n        TextRender.pixelBBX[1] = TextRender.standardFontSize / 2;// 16;\r\n        TextRender.pixelBBX[2] = TextRender.standardFontSize;// 32;\r\n        TextRender.pixelBBX[3] = TextRender.standardFontSize;// 32;\r\n\r\n        var orix: number = 16;\t\t// 左边留白，也就是x原点的位置\r\n        var oriy: number = 16;\r\n        var marginr: number = 16;\r\n        var marginb: number = 16;\r\n        this.charRender.scale(1, 1);\r\n        TextRender.tmpRI.height = TextRender.standardFontSize;\r\n        this.charRender.fontsz = TextRender.standardFontSize;\r\n        var bmpdt = this.charRender.getCharBmp('g', fontstr, 0, 'red', null, TextRender.tmpRI, orix, oriy, marginr, marginb);\r\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\r\n        //测量宽度是 tmpRI.width\r\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);\r\n        bmpdt = this.charRender.getCharBmp('有', fontstr, 0, 'red', null, TextRender.tmpRI, oriy, oriy, marginr, marginb);// '有'比'国'大\r\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\r\n        // 国字的宽度就用系统测量的，不再用像素检测\r\n        if (TextRender.pixelBBX[2] < orix + TextRender.tmpRI.width)\r\n            TextRender.pixelBBX[2] = orix + TextRender.tmpRI.width;\r\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);//TODO 改成 true\r\n        // 原点在 16,16\r\n        var xoff = Math.max(orix - TextRender.pixelBBX[0], 0);\r\n        var yoff = Math.max(oriy - TextRender.pixelBBX[1], 0);\r\n        var bbxw = TextRender.pixelBBX[2] - TextRender.pixelBBX[0];\r\n        var bbxh = TextRender.pixelBBX[3] - TextRender.pixelBBX[1];\r\n        var sizeinfo = xoff << 24 | yoff << 16 | bbxw << 8 | bbxh;\r\n        this.fontSizeInfo[font] = sizeinfo;\r\n        return sizeinfo;\r\n    }\r\n\r\n    printDbgInfo(): void {\r\n        console.log('图集个数:' + this.textAtlases.length + ',每个图集大小:' + TextRender.atlasWidth + 'x' + TextRender.atlasWidth, ' 用canvas:', TextRender.isWan1Wan);\r\n        console.log('图集占用空间:' + (TextRender.atlasWidth * TextRender.atlasWidth * 4 / 1024 / 1024 * this.textAtlases.length) + 'M');\r\n        console.log('缓存用到的字体:');\r\n        for (var f in this.mapFont) {\r\n            var fontsz = this.getFontSizeInfo(f);\r\n            var offx = fontsz >> 24\r\n            var offy = (fontsz >> 16) & 0xff;\r\n            var fw = (fontsz >> 8) & 0xff;\r\n            var fh = fontsz & 0xff;\r\n            console.log('    ' + f, ' off:', offx, offy, ' size:', fw, fh);\r\n        }\r\n        var num = 0;\r\n        console.log('缓存数据:');\r\n        var totalUsedRate = 0;\t// 总使用率\r\n        var totalUsedRateAtlas = 0;\r\n        this.textAtlases.forEach(function (a: TextAtlas): void {\r\n            var id = a.texture.id;\r\n            var dt = RenderInfo.loopCount - a.texture.lastTouchTm\r\n            var dtstr = dt > 0 ? ('' + dt + '帧以前') : '当前帧';\r\n            totalUsedRate += a.texture.curUsedCovRate;\r\n            totalUsedRateAtlas += a.texture.curUsedCovRateAtlas;\r\n            console.log('--图集(id:' + id + ',当前使用率:' + (a.texture.curUsedCovRate * 1000 | 0) + '‰', '当前图集使用率:', (a.texture.curUsedCovRateAtlas * 100 | 0) + '%', '图集使用率:', (a.usedRate * 100 | 0), '%, 使用于:' + dtstr + ')--:');\r\n            for (var k in a.charMaps) {\r\n                var ri: CharRenderInfo = a.charMaps[k];\r\n                console.log('     off:', ri.orix, ri.oriy, ' bmp宽高:', ri.bmpWidth, ri.bmpHeight, '无效:', ri.deleted, 'touchdt:', (RenderInfo.loopCount - ri.touchTick), '位置:', ri.uv[0] * TextRender.atlasWidth | 0, ri.uv[1] * TextRender.atlasWidth | 0,\r\n                    '字符:', ri.char, 'key:', k);\r\n                num++;\r\n            }\r\n        });\r\n        console.log('独立贴图文字(' + this.isoTextures.length + '个):');\r\n        this.isoTextures.forEach(function (tex: TextTexture): void {\r\n            console.log('    size:', tex._texW, tex._texH, 'touch间隔:', (RenderInfo.loopCount - tex.lastTouchTm), 'char:', tex.ri.char);\r\n        });\r\n        console.log('总缓存:', num, '总使用率:', totalUsedRate, '总当前图集使用率:', totalUsedRateAtlas);\r\n\r\n    }\r\n\r\n    // 在屏幕上显示某个大图集\r\n    showAtlas(n: number, bgcolor: string, x: number, y: number, w: number, h: number): Sprite {\r\n        if (!this.textAtlases[n]) {\r\n            console.log('没有这个图集');\r\n            return null;\r\n        }\r\n        var sp = new Sprite();\r\n        var texttex = this.textAtlases[n].texture;\r\n        var texture: any = {\r\n            width: TextRender.atlasWidth,\r\n            height: TextRender.atlasWidth,\r\n            sourceWidth: TextRender.atlasWidth,\r\n            sourceHeight: TextRender.atlasWidth,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            getIsReady: function (): boolean { return true; },\r\n            _addReference: function (): void { },\r\n            _removeReference: function (): void { },\r\n            _getSource: function (): any { return texttex._getSource(); },\r\n            bitmap: { id: texttex.id },\r\n            _uv: Texture.DEF_UV\r\n        };\r\n        ((<any>sp)).size = function (w: number, h: number): Sprite {\r\n            this.width = w;\r\n            this.height = h;\r\n            sp.graphics.clear();\r\n            sp.graphics.drawRect(0, 0, sp.width, sp.height, bgcolor);\r\n            sp.graphics.drawTexture((<Texture>texture), 0, 0, sp.width, sp.height);\r\n            return (<Sprite>this);\r\n        }\r\n        sp.graphics.drawRect(0, 0, w, h, bgcolor);\r\n        sp.graphics.drawTexture((<Texture>texture), 0, 0, w, h);\r\n        sp.pos(x, y);\r\n        ILaya.stage.addChild(sp);\r\n        return sp;\r\n    }\r\n\r\n    /////// native ///////\r\n    filltext_native(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        if (data && data.length <= 0) return;\r\n\r\n        var font = FontInfo.parse(fontStr);\r\n\r\n        var nTextAlign = 0;\r\n        switch (textAlign) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        return this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\r\n    }\r\n}\r\n","import { AtlasGrid } from \"./AtlasGrid\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { Point } from \"../../maths/Point\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { TextRender } from \"./TextRender\";\r\n\r\n/**\r\n *  文字贴图的大图集。\r\n */\r\nexport class TextAtlas {\r\n    texWidth: number = 1024;\r\n    texHeight: number = 1024;\r\n    private atlasgrid: AtlasGrid;\r\n    //private protectDist: number = 1;\r\n    texture: TextTexture|null = null;\r\n    charMaps: any = {};\t\t// 保存文字信息的字典\r\n    static atlasGridW: number = 16;\r\n\r\n    constructor() {\r\n        this.texHeight = this.texWidth = TextRender.atlasWidth;\r\n        this.texture = TextTexture.getTextTexture(this.texWidth, this.texHeight);\r\n        if (this.texWidth / TextAtlas.atlasGridW > 256) {\r\n            TextAtlas.atlasGridW = Math.ceil(this.texWidth / 256);\r\n        }\r\n        this.atlasgrid = new AtlasGrid(this.texWidth / TextAtlas.atlasGridW, this.texHeight / TextAtlas.atlasGridW, this.texture.id);\r\n    }\r\n\r\n    setProtecteDist(d: number): void {\r\n        //this.protectDist = d;\r\n    }\r\n\r\n    /**\r\n     * 如果返回null，则表示无法加入了\r\n     * 分配的时候优先选择最接近自己高度的节点\r\n     * @param\tw\r\n     * @param\th\r\n     * @return\r\n     */\r\n    getAEmpty(w: number, h: number, pt: Point): boolean {\r\n        var find: boolean = this.atlasgrid.addRect(1, Math.ceil(w / TextAtlas.atlasGridW), Math.ceil(h / TextAtlas.atlasGridW), pt);\r\n        if (find) {\r\n            pt.x *= TextAtlas.atlasGridW;\r\n            pt.y *= TextAtlas.atlasGridW;\r\n        }\r\n        return find;\r\n    }\r\n\r\n    /**\r\n     * 大图集格子单元的占用率，老的也算上了。只是表示这个大图集还能插入多少东西。\r\n     */\r\n    get usedRate(): number {\r\n        return this.atlasgrid._used;\r\n    }\r\n    //data 也可能是canvas\r\n    /*\r\n    public function pushData(data:ImageData, node:TextAtlasNode):void {\r\n        texture.addChar(data, node.x, node.y);\r\n    }\r\n    */\r\n\r\n    destroy(): void {\r\n        for (var k in this.charMaps) {\r\n            var ri: CharRenderInfo = this.charMaps[k];\r\n            ri.deleted = true;\r\n        }\r\n        this.texture.discard();\r\n    }\r\n\r\n    printDebugInfo(): void {\r\n\r\n    }\r\n}\r\n\r\n","import { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { Resource } from \"../../resource/Resource\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { IRender2DContext } from \"../../RenderEngine/RenderInterface/IRender2DContext\"\r\nimport { Texture2D } from \"../../resource/Texture2D\";\r\nimport { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { FilterMode } from \"../../RenderEngine/RenderEnum/FilterMode\";\r\nimport { WrapMode } from \"../../RenderEngine/RenderEnum/WrapMode\";\r\nimport { TextAtlas } from \"./TextAtlas\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { TextRender } from \"./TextRender\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\nexport class TextTexture extends Resource {\r\n    private static pool: any[] = new Array(10); // 回收用\r\n    private static poolLen: number = 0;\r\n    private static cleanTm: number = 0;\r\n    private _render2DContext: IRender2DContext;\r\n\r\n    /**@internal */\r\n    _source: Texture2D;\t// webgl 贴图\r\n    /**@internal */\r\n    _texW: number = 0;\r\n    /**@internal */\r\n    _texH: number = 0;\r\n    /**@internal */\r\n    _discardTm: number = 0;\t\t\t//释放的时间。超过一定时间会被真正删除\r\n    genID: number = 0; \t\t\t\t// 这个对象会重新利用，为了能让引用他的人知道自己引用的是否有效，加个id\r\n    bitmap: any = { id: 0, _glTexture: null };\t\t\t\t\t\t//samekey的判断用的\r\n    curUsedCovRate: number = 0; \t// 当前使用到的使用率。根据面积算的\r\n    curUsedCovRateAtlas: number = 0; \t// 大图集中的占用率。由于大图集分辨率低，所以会浪费一些空间\r\n    lastTouchTm: number = 0;\r\n    ri: CharRenderInfo = null; \t\t// 如果是独立文字贴图的话带有这个信息\r\n    //public var isIso:Boolean = false;\r\n    get gammaCorrection(): number {\r\n        return (this.bitmap._glTexture as any).gammaCorrection;\r\n    }\r\n    constructor(textureW: number, textureH: number) {\r\n        super();\r\n        this._texW = textureW || TextRender.atlasWidth;\r\n        this._texH = textureH || TextRender.atlasWidth;\r\n        this.bitmap.id = this.id;\r\n        this.lock = true;//防止被资源管理清除\r\n        this._render2DContext = LayaGL.render2DContext;\r\n    }\r\n\r\n    recreateResource(): void {\r\n        if (this._source)\r\n            return;\r\n        var glTex: Texture2D = this._source = new Texture2D(this._texW, this._texH, TextureFormat.R8G8B8A8, false, false, true, true);\r\n        glTex.setPixelsData(null, true, false);\r\n        glTex.lock = true;\r\n        this.bitmap._glTexture = glTex;\r\n\r\n        this._source.filterMode = FilterMode.Bilinear;\r\n        this._source.wrapModeU = WrapMode.Clamp;\r\n        this._source.wrapModeV = WrapMode.Clamp;\r\n\r\n        //TODO 预乘alpha\r\n        if (TextRender.debugUV) {\r\n            this.fillWhite();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tdata\r\n     * @param\tx\t\t\t拷贝位置。\r\n     * @param\ty\r\n     * @param  uv  \r\n     * @return uv数组  如果uv不为空就返回传入的uv，否则new一个数组\r\n     */\r\n    addChar(data: ImageData, x: number, y: number, uv: any[] = null): any[] {\r\n        //if (!LayaEnv.isConch &&  !__JS__('(data instanceof ImageData)')) {\r\n        if (TextRender.isWan1Wan) {\r\n            return this.addCharCanvas(data, x, y, uv);\r\n        }\r\n        var dt: any = data.data;\r\n        if (data.data instanceof Uint8ClampedArray)\r\n            dt = new Uint8Array(dt.buffer);\r\n        !this._source && this.recreateResource();\r\n\r\n        LayaGL.textureContext.setTextureSubPixelsData(this._source._texture, dt, 0, false, x, y, data.width, data.height, true, false);\r\n        var u0: number;\r\n        var v0: number;\r\n        var u1: number;\r\n        var v1: number;\r\n        u0 = x / this._texW;\r\n        v0 = y / this._texH;\r\n        u1 = (x + data.width) / this._texW;\r\n        v1 = (y + data.height) / this._texH;\r\n        uv = uv || new Array(8);\r\n        uv[0] = u0, uv[1] = v0;\r\n        uv[2] = u1, uv[3] = v0;\r\n        uv[4] = u1, uv[5] = v1;\r\n        uv[6] = u0, uv[7] = v1;\r\n        return uv;\r\n    }\r\n\r\n    /**\r\n     * 玩一玩不支持 getImageData\r\n     * @param\tcanv\r\n     * @param\tx\r\n     * @param\ty\r\n     */\r\n    addCharCanvas(canv: any, x: number, y: number, uv: any[] = null): any[] {\r\n        !this._source && this.recreateResource();\r\n\r\n        LayaGL.textureContext.setTextureSubImageData(this._source._texture, canv, x, y, true, false);\r\n        var u0: number;\r\n        var v0: number;\r\n        var u1: number;\r\n        var v1: number;\r\n        if (LayaEnv.isConch) {\r\n            u0 = x / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\r\n            v0 = y / this._texH;\r\n            u1 = (x + canv.width) / this._texW;\r\n            v1 = (y + canv.height) / this._texH;\r\n        } else {\r\n            u0 = (x + 1) / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\r\n            v0 = (y + 1) / this._texH;\r\n            u1 = (x + canv.width - 1) / this._texW;\r\n            v1 = (y + canv.height - 1) / this._texH;\r\n        }\r\n        uv = uv || new Array(8);\r\n        uv[0] = u0, uv[1] = v0;\r\n        uv[2] = u1, uv[3] = v0;\r\n        uv[4] = u1, uv[5] = v1;\r\n        uv[6] = u0, uv[7] = v1;\r\n        return uv;\r\n    }\r\n\r\n    /**\r\n     * 填充白色。调试用。\r\n     */\r\n    fillWhite(): void {\r\n        !this._source && this.recreateResource();\r\n        var dt: Uint8Array = new Uint8Array(this._texW * this._texH * 4);\r\n        ((<any>dt)).fill(0xff);\r\n        LayaGL.textureContext.setTextureImageData(this._source._getSource(), dt as any, true, false);\r\n    }\r\n\r\n    discard(): void {\r\n        // 文字贴图的释放要触发全局cacheas normal无效\r\n        ILaya.stage.setGlobalRepaint();\r\n        // 不再使用问题贴图的重用，否则会有内容清理问题\r\n        this.destroy();\r\n        return;\r\n    }\r\n\r\n    static getTextTexture(w: number, h: number): TextTexture {\r\n        // 不再回收\r\n        return new TextTexture(w, h);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected _disposeResource(): void {\r\n        //console.log('destroy TextTexture');\r\n        this._source && this._source.destroy();\r\n        this._source = null;\r\n    }\r\n\r\n    /**\r\n     * 定期清理\r\n     * 为了简单，只有发生 getAPage 或者 discardPage的时候才检测是否需要清理\r\n     */\r\n    static clean(): void {\r\n        var curtm: number = RenderInfo.loopStTm;// Laya.stage.getFrameTm();\r\n        if (TextTexture.cleanTm === 0) TextTexture.cleanTm = curtm;\r\n        if (curtm - TextTexture.cleanTm >= TextRender.checkCleanTextureDt) {\t//每10秒看看pool中的贴图有没有很老的可以删除的\r\n            for (var i: number = 0; i < TextTexture.poolLen; i++) {\r\n                var p: TextTexture = TextTexture.pool[i];\r\n                if (curtm - p._discardTm >= TextRender.destroyUnusedTextureDt) {//超过20秒没用的删掉\r\n                    p.destroy();\t\t\t\t\t//真正删除贴图\r\n                    TextTexture.pool[i] = TextTexture.pool[TextTexture.poolLen - 1];\r\n                    TextTexture.poolLen--;\r\n                    i--;\t//这个还要处理，用来抵消i++\r\n                }\r\n            }\r\n            TextTexture.cleanTm = curtm;\r\n        }\r\n    }\r\n\r\n    touchRect(ri: CharRenderInfo, curloop: number): void {\r\n        if (this.lastTouchTm != curloop) {\r\n            this.curUsedCovRate = 0;\r\n            this.curUsedCovRateAtlas = 0;\r\n            this.lastTouchTm = curloop;\r\n        }\r\n        var texw2: number = TextRender.atlasWidth * TextRender.atlasWidth;\r\n        var gridw2: number = TextAtlas.atlasGridW * TextAtlas.atlasGridW;\r\n        this.curUsedCovRate += (ri.bmpWidth * ri.bmpHeight) / texw2;\r\n        this.curUsedCovRateAtlas += (Math.ceil(ri.bmpWidth / TextAtlas.atlasGridW) * Math.ceil(ri.bmpHeight / TextAtlas.atlasGridW)) / (texw2 / gridw2);\r\n    }\r\n\r\n    // 为了与当前的文字渲染兼容的补丁\r\n    get texture(): any {\r\n        return this;\r\n    }\r\n    /**@internal */\r\n    _getSource(): any {\r\n        return this._source._getSource();\r\n    }\r\n\r\n    // for debug\r\n    drawOnScreen(x: number, y: number): void {\r\n\r\n    }\r\n}\r\n","/**\r\n\t * ...\r\n\t * @author xie\r\n\t */\r\nexport class SubmitKey {\r\n    blendShader: number;\r\n    submitType: number;\r\n    other: number;\r\n\r\n    constructor() {\r\n        this.clear();\r\n    }\r\n\r\n    clear(): void {\r\n        this.submitType = -1;\r\n        this.blendShader = this.other = 0;\r\n        //alpha = 1;\r\n    }\r\n\r\n    //TODO:coverage\r\n    copyFrom(src: SubmitKey): void {\r\n        this.other = src.other;\r\n        this.blendShader = src.blendShader;\r\n        this.submitType = src.submitType;\r\n        //alpha = src.alpha;\r\n    }\r\n\r\n    copyFrom2(src: SubmitKey, submitType: number, other: number): void {\r\n        //this.blendShader = src.blendShader;\r\n        //this.alpha = src.alpha;\t\t\t\r\n        this.other = other;\r\n        this.submitType = submitType;\r\n    }\r\n\r\n    //�Ƚ�3�����ⲿ�ṩ2��\r\n    //TODO:coverage\r\n    equal3_2(next: SubmitKey, submitType: number, other: number): boolean {\r\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && this.alpha === alpha;\r\n    }\r\n\r\n    //ȫ�Ƚϡ��ⲿ�ṩ2��\r\n    //TODO:coverage\r\n    equal4_2(next: SubmitKey, submitType: number, other: number): boolean {\r\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n\r\n    //�Ƚ�3��\r\n    //TODO:coverage\r\n    equal_3(next: SubmitKey): boolean {\r\n        return this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n    //ȫ�Ƚϡ�4��\r\n    //TODO:coverage\r\n    equal(next: SubmitKey): boolean {\r\n        return this.other === next.other && this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nexport class SubmitCMD implements ISubmit {\r\n    static POOL: SubmitCMD[] = []; fun: Function;\r\n    /**@internal */\r\n    _this: any;\r\n    args: any[];\r\n    /**@internal */\r\n    _ref: number = 1;\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    renderSubmit(): number {\r\n        this.fun.apply(this._this, this.args);\r\n        return 1;\r\n    }\r\n\r\n    getRenderType(): number {\r\n        return 0;\r\n    }\r\n\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var pool: any = SubmitCMD.POOL;\r\n            pool[pool._length++] = this;\r\n            this.args = null;\r\n            this.fun = null;\r\n            this._this = null;\r\n        }\r\n    }\r\n\r\n    static create(args: any[], fun: Function, thisobj: any): SubmitCMD {\r\n        var o: SubmitCMD = (SubmitCMD.POOL as any)._length ? SubmitCMD.POOL[--(SubmitCMD.POOL as any)._length] : new SubmitCMD();\r\n        o.fun = fun;\r\n        o.args = args;\r\n        o._this = thisobj;\r\n        o._ref = 1;\r\n        o._key.clear();\r\n        return o;\r\n    }\r\n}\r\n{ (SubmitCMD.POOL as any)._length = 0 }\r\n\r\n\r\n","import { IFilter } from \"./IFilter\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { Texture2D } from \"../resource/Texture2D\"\r\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\"\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\"\r\nimport { ColorFilter } from \"./ColorFilter\";\r\n\r\n/**\r\n * <code>Filter</code> 是滤镜基类。\r\n */\r\nexport class Filter implements IFilter {\r\n    /**@private 模糊滤镜。*/\r\n    static BLUR: number = 0x10;\r\n    /**@private 颜色滤镜。*/\r\n    static COLOR: number = 0x20;\r\n    /**@private 发光滤镜。*/\r\n    static GLOW: number = 0x08;\r\n    /** @internal*/\r\n    _glRender: any;\r\n\r\n    /**\r\n     * 创建一个 <code>Filter</code> 实例。\r\n     * */\r\n    constructor() { }\r\n\r\n    /**@private 滤镜类型。*/\r\n    get type(): number { return -1 }\r\n\r\n    static _filter = function (this: RenderSprite, sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var webglctx: Context = context;\r\n        var next: any = ((<RenderSprite>this))._next;\r\n        if (next) {\r\n            var filters: any[] = sprite.filters, len: number = filters.length;\r\n            //如果只有一个滤镜，那么还用原来的方式\r\n            if (len == 1 && (filters[0].type == Filter.COLOR)) {\r\n                context.save();\r\n                context.setColorFilter(filters[0]);\r\n                next._fun.call(next, sprite, context, x, y);\r\n                context.restore();\r\n                return;\r\n            }\r\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\r\n            var svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\t//拷贝用shaderValue\r\n            var b: Rectangle;\r\n\r\n            var p: Point = Point.TEMP;\r\n            var tMatrix: Matrix = webglctx._curMat;\r\n            var mat: Matrix = Matrix.create();\r\n            tMatrix.copyTo(mat);\r\n            var tPadding: number = 0;\t//给glow用\r\n            var tHalfPadding: number = 0;\r\n            var tIsHaveGlowFilter: boolean = false;\r\n            //这里判断是否存储了out，如果存储了直接用;\r\n            var source: RenderTexture2D = null;\r\n            var out: RenderTexture2D = sprite._cacheStyle.filterCache || null;\r\n            if (!out || sprite.getRepaint() != 0) {\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\r\n                //glow需要扩展边缘\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = new Rectangle();\r\n                b.copyFrom(sprite.getSelfBounds());\r\n                b.x += sprite.x;\r\n                b.y += sprite.y;\r\n                b.x -= sprite.pivotX + 4;//blur \r\n                b.y -= sprite.pivotY + 4;//blur\r\n                var tSX: number = b.x;\r\n                var tSY: number = b.y;\r\n                //重新计算宽和高\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                out && WebGLRTMgr.releaseRT(out);// out.recycle();\r\n                source = WebGLRTMgr.getRT(b.width, b.height);\r\n                var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\r\n                sprite._getCacheStyle().filterCache = out;\r\n                //使用RT\r\n                webglctx.pushRT();\r\n                webglctx.useRT(source);\r\n                var tX: number = sprite.x - tSX + tHalfPadding;\r\n                var tY: number = sprite.y - tSY + tHalfPadding;\r\n                //执行节点的渲染\r\n                next._fun.call(next, sprite, context, tX, tY);\r\n                webglctx.useRT(outRT);\r\n                for (var i: number = 0; i < len; i++) {\r\n                    if (i != 0) {\r\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\r\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\r\n                        webglctx.useRT(source);\r\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\r\n                        webglctx.useRT(outRT);\r\n                    }\r\n                    var fil: Filter = filters[i];\r\n                    //把src往out上画\r\n                    switch (fil.type) {\r\n                        case Filter.BLUR:\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\r\n                            break;\r\n                        case Filter.GLOW:\r\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            break;\r\n                        case Filter.COLOR:\r\n                            webglctx.setColorFilter((<ColorFilter>fil));\r\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(RenderSpriteData.Texture2D));\r\n                            webglctx.setColorFilter(null);\r\n                            break;\r\n                    }\r\n                }\r\n                webglctx.popRT();\r\n            } else {\r\n\r\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = sprite.getBounds();\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //edit\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                b.x -= sprite.pivotX + 4; //blur \r\n                b.y -= sprite.pivotY + 4;//blur \r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                //scope.addValue(\"out\", out);\r\n            }\r\n            x = x - tHalfPadding - sprite.x;\r\n            y = y - tHalfPadding - sprite.y;\r\n            p.setTo(x, y);\r\n            mat.transformPoint(p);\r\n            x = p.x + b.x;\r\n            y = p.y + b.y;\r\n            //把最后的out纹理画出来\r\n            webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\r\n\r\n            //把对象放回池子中\r\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\r\n            if (source) {\r\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\r\n                    s.destroy();\r\n                }, this);\r\n                source = null;\r\n                context.addRenderObject(submit);\r\n            }\r\n            mat.destroy();\r\n        }\r\n    }\r\n}\r\n\r\n","import { Utils } from \"./Utils\"\r\n\r\nconst _COLOR_MAP: Record<string, string> = { \"purple\": \"#800080\", \"orange\": \"#ffa500\", \"white\": '#FFFFFF', \"red\": '#FF0000', \"green\": '#00FF00', \"blue\": '#0000FF', \"black\": '#000000', \"yellow\": '#FFFF00', 'gray': '#808080' };\r\n\r\n/**\r\n * @private\r\n * <code>ColorUtils</code> 是一个颜色值处理类。\r\n */\r\nexport class ColorUtils {\r\n    /**@private */\r\n    static _SAVE: any = {};\r\n    /**@private */\r\n    static _SAVE_SIZE: number = 0;\r\n    /**@private */\r\n\r\n    /**@private */\r\n    private static _DEFAULT: any = ColorUtils._initDefault();\r\n\r\n    /**rgba 取值范围0-1*/\r\n    //TODO:delete？\r\n    arrColor: any[] = [];\r\n    /** 字符串型颜色值。*/\r\n    strColor: string;\r\n    /** uint 型颜色值。*/\r\n    numColor: number;\r\n    /**@internal TODO:*/\r\n    _drawStyle: any;\r\n\r\n    /**\r\n     * 根据指定的属性值，创建一个 <code>Color</code> 类的实例。\r\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\r\n     */\r\n    constructor(value: any) {\r\n        if (value == null || value == 'none') {\r\n            this.strColor = \"#00000000\";\r\n            this.numColor = 0;\r\n            this.arrColor = [0, 0, 0, 0];\r\n            return;\r\n        }\r\n\r\n        let color: number;\r\n        if (typeof (value) == 'string') {\r\n            color = Utils.fromStringColor(value);\r\n            this.strColor = value;\r\n        } else {\r\n            color = value;\r\n            this.strColor = Utils.toHexColor(color);\r\n        }\r\n\r\n        if (this.strColor.indexOf(\"rgba\") >= 0 || this.strColor.length === 9) {\r\n            //color:0xrrggbbaa numColor此时为负数\r\n            this.arrColor = [((0xFF000000 & color) >>> 24) / 255, ((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255];\r\n            this.numColor = (0xff000000 & color) >>> 24 | (color & 0xff0000) >> 8 | (color & 0x00ff00) << 8 | ((color & 0xff) << 24);//to 0xffbbggrr\r\n        } else {\r\n            this.arrColor = [((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255, 1];\r\n            this.numColor = 0xff000000 | (color & 0xff0000) >> 16 | (color & 0x00ff00) | (color & 0xff) << 16;//to 0xffbbggrr\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static _initDefault(): any {\r\n        ColorUtils._DEFAULT = {};\r\n        for (var i in _COLOR_MAP) ColorUtils._SAVE[i] = ColorUtils._DEFAULT[i] = new ColorUtils(_COLOR_MAP[i]);\r\n        return ColorUtils._DEFAULT;\r\n    }\r\n\r\n    /**@private 缓存太大，则清理缓存*/\r\n    static _initSaveMap(): void {\r\n        ColorUtils._SAVE_SIZE = 0;\r\n        ColorUtils._SAVE = Object.assign({}, ColorUtils._DEFAULT);\r\n    }\r\n\r\n    /**\r\n     * 根据指定的属性值，创建并返回一个 <code>Color</code> 类的实例。\r\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\r\n     * @return 一个 <code>Color</code> 类的实例。\r\n     */\r\n    static create(value: any): ColorUtils {\r\n        let key: string = value + \"\";\r\n        let color: ColorUtils = ColorUtils._SAVE[key];\r\n        if (color != null) return color;\r\n        if (ColorUtils._SAVE_SIZE > 500) ColorUtils._initSaveMap();\r\n        ColorUtils._SAVE_SIZE++;\r\n        return ColorUtils._SAVE[key] = new ColorUtils(value);\r\n    }\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { IFilter } from \"./IFilter\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\n\r\n/**对比度列表*/\r\nconst DELTA_INDEX: any[] = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0];\r\n/**灰色矩阵*/\r\nconst GRAY_MATRIX: any[] = [0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0];\r\n/**单位矩阵,表示什么效果都没有*/\r\nconst IDENTITY_MATRIX: any[] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\r\n/**标准矩阵长度*/\r\nconst LENGTH: number = 25;\r\n\r\n/**\r\n * <p><code>ColorFilter</code> 是颜色滤镜。使用 ColorFilter 类可以将 4 x 5 矩阵转换应用于输入图像上的每个像素的 RGBA 颜色和 Alpha 值，以生成具有一组新的 RGBA 颜色和 Alpha 值的结果。该类允许饱和度更改、色相旋转、亮度转 Alpha 以及各种其他效果。您可以将滤镜应用于任何显示对象（即，从 Sprite 类继承的对象）。</p>\r\n * <p>注意：对于 RGBA 值，最高有效字节代表红色通道值，其后的有效字节分别代表绿色、蓝色和 Alpha 通道值。</p>\r\n */\r\nexport class ColorFilter extends Filter implements IFilter {\r\n\r\n    /** @internal */\r\n    _mat: Float32Array;\r\n    /** @internal */\r\n    _alpha: Float32Array;\r\n    /**当前使用的矩阵*/\r\n    _matrix: any[];\r\n\r\n    /**\r\n     * 创建一个 <code>ColorFilter</code> 实例。\r\n     * @param mat\t（可选）由 20 个项目（排列成 4 x 5 矩阵）组成的数组，用于颜色转换。\r\n     */\r\n    constructor(mat: any[] = null) {\r\n        super();\r\n        if (!mat) mat = this._copyMatrix(IDENTITY_MATRIX);\r\n        this._mat = new Float32Array(16);\r\n        this._alpha = new Float32Array(4);\r\n        this.setByMatrix(mat);\r\n    }\r\n\r\n    /**\r\n     * 设置为灰色滤镜\r\n     */\r\n    gray(): ColorFilter {\r\n        return this.setByMatrix(GRAY_MATRIX);\r\n    }\r\n\r\n    /**\r\n     * 设置为变色滤镜\r\n     * @param red 红色系数,范围:0~1\r\n     * @param green 绿色系数,范围:0~1\r\n     * @param blue 蓝色系数,范围:0~1\r\n     * @param alpha alpha系数,范围:0~1\r\n     */\r\n    color(red: number = 0, green: number = 0, blue: number = 0, alpha: number = 1): ColorFilter {\r\n        return this.setByMatrix([red, 0, 0, 0, 1, 0, green, 0, 0, 1, 0, 0, blue, 0, 1, 0, 0, 0, alpha, 0]);\r\n    }\r\n\r\n    /**\r\n     * 设置滤镜色\r\n     * @param\tcolor 颜色值\r\n     */\r\n    setColor(color: string): ColorFilter {\r\n        var arr: any[] = ColorUtils.create(color).arrColor;\r\n        var mt: any[] = [0, 0, 0, 0, 256 * arr[0], 0, 0, 0, 0, 256 * arr[1], 0, 0, 0, 0, 256 * arr[2], 0, 0, 0, 1, 0];\r\n        return this.setByMatrix(mt);\r\n    }\r\n\r\n    /**\r\n     * 设置矩阵数据\r\n     * @param matrix 由 20 个项目（排列成 4 x 5 矩阵）组成的数组\r\n     * @return this\r\n     */\r\n    setByMatrix(matrix: any[]): ColorFilter {\r\n        if (this._matrix != matrix) this._copyMatrix(matrix);\r\n        var j: number = 0;\r\n        var z: number = 0;\r\n        for (var i: number = 0; i < 20; i++) {\r\n            if (i % 5 != 4) {\r\n                this._mat[j++] = matrix[i];\r\n            } else {\r\n                this._alpha[z++] = matrix[i];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    get type(): number {\r\n        return Filter.COLOR;\r\n    }\r\n\r\n    /**@internal */\r\n    get typeDefine(): ShaderDefine {\r\n        return ShaderDefines2D.FILTERCOLOR;\r\n    }\r\n\r\n    /**\r\n     * 调整颜色，包括亮度，对比度，饱和度和色调\r\n     * @param brightness 亮度,范围:-100~100\r\n     * @param contrast 对比度,范围:-100~100\r\n     * @param saturation 饱和度,范围:-100~100\r\n     * @param hue 色调,范围:-180~180\r\n     * @return this\r\n     */\r\n    adjustColor(brightness: number, contrast: number, saturation: number, hue: number): ColorFilter {\r\n        this.adjustHue(hue);\r\n        this.adjustContrast(contrast);\r\n        this.adjustBrightness(brightness);\r\n        this.adjustSaturation(saturation);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 调整亮度\r\n     * @param brightness 亮度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustBrightness(brightness: number): ColorFilter {\r\n        brightness = this._clampValue(brightness, 100);\r\n        if (brightness == 0 || isNaN(brightness)) return this;\r\n        return this._multiplyMatrix([1, 0, 0, 0, brightness, 0, 1, 0, 0, brightness, 0, 0, 1, 0, brightness, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整对比度\r\n     * @param contrast 对比度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustContrast(contrast: number): ColorFilter {\r\n        contrast = this._clampValue(contrast, 100);\r\n        if (contrast == 0 || isNaN(contrast)) return this;\r\n        var x: number;\r\n        if (contrast < 0) {\r\n            x = 127 + contrast / 100 * 127\r\n        } else {\r\n            x = contrast % 1;\r\n            if (x == 0) {\r\n                x = DELTA_INDEX[contrast];\r\n            } else {\r\n                x = DELTA_INDEX[(contrast << 0)] * (1 - x) + DELTA_INDEX[(contrast << 0) + 1] * x;\r\n            }\r\n            x = x * 127 + 127;\r\n        }\r\n        var x1: number = x / 127;\r\n        var x2: number = (127 - x) * 0.5;\r\n        return this._multiplyMatrix([x1, 0, 0, 0, x2, 0, x1, 0, 0, x2, 0, 0, x1, 0, x2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整饱和度\r\n     * @param saturation 饱和度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustSaturation(saturation: number): ColorFilter {\r\n        saturation = this._clampValue(saturation, 100);\r\n        if (saturation == 0 || isNaN(saturation)) return this;\r\n        var x: number = 1 + ((saturation > 0) ? 3 * saturation / 100 : saturation / 100);\r\n        var dx: number = 1 - x;\r\n        var r: number = 0.3086 * dx;\r\n        var g: number = 0.6094 * dx;\r\n        var b: number = 0.0820 * dx;\r\n\r\n        return this._multiplyMatrix([r + x, g, b, 0, 0, r, g + x, b, 0, 0, r, g, b + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整色调\r\n     * @param hue 色调,范围:-180~180\r\n     * @return this\r\n     */\r\n    adjustHue(hue: number): ColorFilter {\r\n        hue = this._clampValue(hue, 180) / 180 * Math.PI;\r\n        if (hue == 0 || isNaN(hue)) return this;\r\n        var cos: number = Math.cos(hue);\r\n        var sin: number = Math.sin(hue);\r\n        var r: number = 0.213;\r\n        var g: number = 0.715;\r\n        var b: number = 0.072;\r\n        return this._multiplyMatrix([r + cos * (1 - r) + sin * (-r), g + cos * (-g) + sin * (-g), b + cos * (-b) + sin * (1 - b), 0, 0, r + cos * (-r) + sin * (0.143), g + cos * (1 - g) + sin * (0.140), b + cos * (-b) + sin * (-0.283), 0, 0, r + cos * (-r) + sin * (-(1 - r)), g + cos * (-g) + sin * (g), b + cos * (1 - b) + sin * (b), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 重置成单位矩阵，去除滤镜效果\r\n     */\r\n    reset(): ColorFilter {\r\n        return this.setByMatrix(this._copyMatrix(IDENTITY_MATRIX));\r\n    }\r\n\r\n    /**\r\n     * 矩阵乘法\r\n     * @param matrix\r\n     * @return this\r\n     */\r\n    private _multiplyMatrix(matrix: any[]): ColorFilter {\r\n        var col: any[] = [];\r\n        this._matrix = this._fixMatrix(this._matrix);\r\n        for (var i: number = 0; i < 5; i++) {\r\n            for (var j: number = 0; j < 5; j++) {\r\n                col[j] = this._matrix[j + i * 5];\r\n            }\r\n            for (j = 0; j < 5; j++) {\r\n                var val: number = 0;\r\n                for (var k: number = 0; k < 5; k++) {\r\n                    val += matrix[j + k * 5] * col[k];\r\n                }\r\n                this._matrix[j + i * 5] = val;\r\n            }\r\n        }\r\n        return this.setByMatrix(this._matrix);\r\n    }\r\n\r\n    /**\r\n     * 规范值的范围\r\n     * @param val 当前值\r\n     * @param limit 值的范围-limit~limit\r\n     */\r\n    private _clampValue(val: number, limit: number): number {\r\n        return Math.min(limit, Math.max(-limit, val));\r\n    }\r\n\r\n    /**\r\n     * 规范矩阵,将矩阵调整到正确的大小\r\n     * @param matrix 需要调整的矩阵\r\n     */\r\n    private _fixMatrix(matrix: any[] = null): any[] {\r\n        if (matrix == null) return IDENTITY_MATRIX;\r\n        if (matrix.length < LENGTH) matrix = matrix.slice(0, matrix.length).concat(IDENTITY_MATRIX.slice(matrix.length, LENGTH));\r\n        else if (matrix.length > LENGTH) matrix = matrix.slice(0, LENGTH);\r\n        return matrix;\r\n    }\r\n\r\n    /**\r\n     * 复制矩阵\r\n     */\r\n    private _copyMatrix(matrix: any[]): any[] {\r\n        var len: number = LENGTH;\r\n        if (!this._matrix) this._matrix = [];\r\n        for (var i: number = 0; i < len; i++) {\r\n            this._matrix[i] = matrix[i];\r\n        }\r\n        return this._matrix;\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        let arr: any[] = ColorUtils.create((<any>this)._color || \"#FFFFFF\").arrColor;\r\n        this.color(arr[0], arr[1], arr[2], arr[3]);\r\n        this.adjustColor((<any>this)._brightness || 0, (<any>this)._contrast || 0, (<any>this)._saturation || 0, (<any>this)._hue || 0);\r\n    }\r\n}\r\n\r\n","import { Point } from \"./Point\";\r\nimport { Utils } from \"../utils/Utils\"\r\n\r\n/**\r\n * @private\r\n * 凸包算法。\r\n */\r\nexport class GrahamScan {\r\n\r\n    private static _mPointList: any[];\r\n    private static _tempPointList: any[] = [];\r\n    private static _temPList: any[] = [];\r\n    private static _temArr: any[] = [];\r\n\r\n    static multiply(p1: Point, p2: Point, p0: Point): number {\r\n        return ((p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y));\r\n    }\r\n\r\n    /**\r\n     * 计算两个点的距离。\r\n     * @param\tp1\r\n     * @param\tp2\r\n     * @return\r\n     */\r\n    static dis(p1: Point, p2: Point): number {\r\n        return (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y);\r\n    }\r\n\r\n    private static _getPoints(count: number, tempUse: boolean = false, rst: any[]|null = null): any[] {\r\n        if (!GrahamScan._mPointList) GrahamScan._mPointList = [];\r\n        while (GrahamScan._mPointList.length < count) GrahamScan._mPointList.push(new Point());\r\n        if (!rst) rst = [];\r\n        rst.length = 0;\r\n        if (tempUse) {\r\n            //\t\t\t\trst=_mPointList.slice(0,count);\r\n            GrahamScan.getFrom(rst, GrahamScan._mPointList, count);\r\n        } else {\r\n            //\t\t\t\trst=_mPointList.splice(0,count);\r\n            GrahamScan.getFromR(rst, GrahamScan._mPointList, count);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 将数组 src 从索引0位置 依次取 cout 个项添加至 tst 数组的尾部。\r\n     * @param\trst 原始数组，用于添加新的子元素。\r\n     * @param\tsrc 用于取子元素的数组。\r\n     * @param\tcount 需要取得子元素个数。\r\n     * @return 添加完子元素的 rst 对象。\r\n     */\r\n    static getFrom(rst: any[], src: any[], count: number): any[] {\r\n        var i: number;\r\n        for (i = 0; i < count; i++) {\r\n            rst.push(src[i]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 将数组 src 从末尾索引位置往头部索引位置方向 依次取 cout 个项添加至 tst 数组的尾部。\r\n     * @param\trst 原始数组，用于添加新的子元素。\r\n     * @param\tsrc 用于取子元素的数组。\r\n     * @param\tcount 需要取得子元素个数。\r\n     * @return 添加完子元素的 rst 对象。\r\n     */\r\n    static getFromR(rst: any[], src: any[], count: number): any[] {\r\n        var i: number;\r\n        for (i = 0; i < count; i++) {\r\n            rst.push(src.pop());\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     *  [x,y...]列表 转 Point列表\r\n     * @param pList Point列表\r\n     * @return [x,y...]列表\r\n     */\r\n    static pListToPointList(pList: any[], tempUse: boolean = false): any[] {\r\n        var i: number, len: number = pList.length / 2, rst: any[] = GrahamScan._getPoints(len, tempUse, GrahamScan._tempPointList);\r\n        for (i = 0; i < len; i++) {\r\n            rst[i].setTo(pList[i + i], pList[i + i + 1]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * Point列表转[x,y...]列表\r\n     * @param pointList Point列表\r\n     * @return [x,y...]列表\r\n     */\r\n    static pointListToPlist(pointList: any[]): any[] {\r\n        var i: number, len: number = pointList.length, rst: any[] = GrahamScan._temPList, tPoint: Point;\r\n        rst.length = 0;\r\n        for (i = 0; i < len; i++) {\r\n            tPoint = pointList[i];\r\n            rst.push(tPoint.x, tPoint.y);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     *  寻找包括所有点的最小多边形顶点集合\r\n     * @param pList 形如[x0,y0,x1,y1...]的点列表\r\n     * @return  最小多边形顶点集合\r\n     */\r\n    static scanPList(pList: any[]): any[] {\r\n        return Utils.copyArray(pList, GrahamScan.pointListToPlist(GrahamScan.scan(GrahamScan.pListToPointList(pList, true))));\r\n    }\r\n\r\n    /**\r\n     * 寻找包括所有点的最小多边形顶点集合\r\n     * @param PointSet Point列表\r\n     * @return 最小多边形顶点集合\r\n     */\r\n    static scan(PointSet: any[]): any[] {\r\n        var i: number, j: number, k: number = 0, top: number = 2, tmp: Point, n: number = PointSet.length, ch: any[];\r\n        var _tmpDic: any = {};\r\n        var key: string;\r\n        ch = GrahamScan._temArr;\r\n        ch.length = 0;\r\n        n = PointSet.length;\r\n        for (i = n - 1; i >= 0; i--) {\r\n            tmp = PointSet[i];\r\n            key = tmp.x + \"_\" + tmp.y;\r\n            if (!(key in _tmpDic)) {\r\n                _tmpDic[key] = true;\r\n                ch.push(tmp);\r\n            }\r\n        }\r\n        n = ch.length;\r\n        Utils.copyArray(PointSet, ch);\r\n        //\t\t\tPointSet=ch;\r\n        //\t\t\tn=PointSet.length;\r\n        //找到最下且偏左的那个点  \r\n        for (i = 1; i < n; i++)\r\n            if ((PointSet[i].y < PointSet[k].y) || ((PointSet[i].y == PointSet[k].y) && (PointSet[i].x < PointSet[k].x)))\r\n                k = i;\r\n        //将这个点指定为PointSet[0]  \r\n        tmp = PointSet[0];\r\n        PointSet[0] = PointSet[k];\r\n        PointSet[k] = tmp;\r\n        //按极角从小到大,距离偏短进行排序  \r\n        for (i = 1; i < n - 1; i++) {\r\n            k = i;\r\n            for (j = i + 1; j < n; j++)\r\n                if ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) > 0) || ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) == 0) && (GrahamScan.dis(PointSet[0], PointSet[j]) < GrahamScan.dis(PointSet[0], PointSet[k]))))\r\n                    k = j;//k保存极角最小的那个点,或者相同距离原点最近  \r\n            tmp = PointSet[i];\r\n            PointSet[i] = PointSet[k];\r\n            PointSet[k] = tmp;\r\n        }\r\n        //第三个点先入栈  \r\n        ch = GrahamScan._temArr;\r\n        ch.length = 0;\r\n        //trace(\"scan:\",PointSet[0],PointSet[1],PointSet[2]);\r\n        if (PointSet.length < 3) {\r\n            return Utils.copyArray(ch, PointSet);\r\n        }\r\n        ch.push(PointSet[0], PointSet[1], PointSet[2]);\r\n        //ch=[PointSet[0],PointSet[1],PointSet[2]];\r\n        //判断与其余所有点的关系  \r\n        for (i = 3; i < n; i++) {\r\n            //不满足向左转的关系,栈顶元素出栈  \r\n            while (ch.length >= 2 && GrahamScan.multiply(PointSet[i], ch[ch.length - 1], ch[ch.length - 2]) >= 0) ch.pop();\r\n            //当前点与栈内所有点满足向左关系,因此入栈.  \r\n            PointSet[i] && ch.push(PointSet[i]);\r\n        }\r\n        return ch;\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * @private\r\n */\r\nexport class SpriteConst {\r\n    /** @private */\r\n    static ALPHA: number = 0x01;\r\n    /** @private */\r\n    static TRANSFORM: number = 0x02;\r\n    /** @private */\r\n    static BLEND: number = 0x04;\r\n    /** @private */\r\n    static CANVAS: number = 0x08;\r\n    /** @private */\r\n    static FILTERS: number = 0x10;\r\n    /** @private */\r\n    static MASK: number = 0x20;\r\n    /** @private */\r\n    static CLIP: number = 0x40;\r\n    /** @private */\r\n    static STYLE: number = 0x80;\r\n    /** @private */\r\n    static TEXTURE: number = 0x100;\r\n    /** @private */\r\n    static GRAPHICS: number = 0x200;\r\n    /** @private */\r\n    static LAYAGL3D: number = 0x400;\r\n    /** @private */\r\n    static CUSTOM: number = 0x800;\r\n    /** @private */\r\n    static ONECHILD: number = 0x1000;\r\n    /** @private */\r\n    static HITAREA: number = 0x2000;\r\n    /** @private */\r\n    static CHILDS: number = 0x4000;\r\n\r\n    /** @private */\r\n    static REPAINT_NONE: number = 0;\r\n    /** @private */\r\n    static REPAINT_NODE: number = 0x01;\r\n    /** @private */\r\n    static REPAINT_CACHE: number = 0x02;\r\n    /** @private */\r\n    static REPAINT_ALL: number = 0x03;\r\n}\r\n\r\n\r\n","/**\r\n * 渲染统计数据\r\n */\r\nexport enum RenderStatisticsInfo{\r\n    DrawCall,\r\n    InstanceDrawCall,\r\n    Triangle,\r\n    UniformUpload,//TODO\r\n    GPUMemory,\r\n    TextureMemeory,\r\n    RenderTextureMemory,\r\n    BufferMemory,\r\n}","export enum BufferTargetType{\r\n    ARRAY_BUFFER,//顶点\r\n    ELEMENT_ARRAY_BUFFER,//索引\r\n    //WebGL2.0 UniformBuffer\r\n    UNIFORM_BUFFER,//UBO\r\n    COPY_READ_BUFFER,//TODO\r\n    COPY_WRITE_BUFFER,//TODO\r\n    TRANSFORM_FEEDBACK_BUFFER,//TODO\r\n    PIXEL_PACK_BUFFER,//TODO\r\n    PIXEL_UNPACK_BUFFER,//TODO\r\n}\r\n\r\n\r\n/**\r\n * Buffer usage.\r\n */\r\n export enum BufferUsage {\r\n    /** The buffer content are intended to be specified once, and used many times */\r\n    Static,\r\n    /** The buffer contents are intended to be respecified repeatedly, and used many times */\r\n    Dynamic,\r\n    /** The buffer contents are intended to be specified once, and used at most a few times */\r\n    Stream\r\n  }","export enum IndexFormat {\r\n    /** 8 位无符号整型索引格式。*/\r\n    UInt8,\r\n    /** 16 位无符号整型索引格式。*/\r\n    UInt16,\r\n    /** 32 位无符号整型索引格式。*/\r\n    UInt32\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { RenderStatisticsInfo } from \"../RenderEngine/RenderEnum/RenderStatInfo\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Browser } from \"./Browser\";\r\nimport { ClassUtils } from \"./ClassUtils\";\r\nimport { IStatUI, StatToggleUIParams, StatUIParams } from \"./IStatUI\";\r\n\r\n/**\r\n * <p> <code>Stat</code> 是一个性能统计面板，可以实时更新相关的性能参数。</p>\r\n * <p>参与统计的性能参数如下（所有参数都是每大约1秒进行更新）：<br/>\r\n * FPS(WebGL)：WebGL 模式下的帧频，也就是每秒显示的帧数，值越高、越稳定，感觉越流畅；<br/>\r\n * Sprite：统计所有渲染节点（包括容器）数量，它的大小会影响引擎进行节点遍历、数据组织和渲染的效率。其值越小，游戏运行效率越高；<br/>\r\n * DrawCall：此值是决定性能的重要指标，其值越小，游戏运行效率越高。Canvas模式下表示每大约1秒的图像绘制次数；WebGL模式下表示每大约1秒的渲染提交批次，每次准备数据并通知GPU渲染绘制的过程称为1次DrawCall，在每次DrawCall中除了在通知GPU的渲染上比较耗时之外，切换材质与shader也是非常耗时的操作；<br/>\r\n * CurMem：Canvas模式下，表示内存占用大小，值越小越好，过高会导致游戏闪退；WebGL模式下，表示内存与显存的占用，值越小越好；<br/>\r\n * Shader：是 WebGL 模式独有的性能指标，表示每大约1秒 Shader 提交次数，值越小越好；<br/>\r\n * Canvas：由三个数值组成，只有设置 CacheAs 后才会有值，默认为0/0/0。从左到右数值的意义分别为：每帧重绘的画布数量 / 缓存类型为\"normal\"类型的画布数量 / 缓存类型为\"bitmap\"类型的画布数量。</p>\r\n */\r\nexport class Stat {\r\n    //FPS\r\n    public static FPSStatUIParams: StatUIParams = { title: \"FPS\", value: \"_fpsStr\", color: \"yellow\", units: \"int\", mode: \"summit\" };\r\n    //Node nums\r\n    public static NodeStatUIParams: StatUIParams = { title: \"Node\", value: \"spriteCount\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //Sprite3D nums\r\n    public static Sprite3DStatUIParams: StatUIParams = { title: \"Sprite3D\", value: \"sprite3DCount\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //DrawCall\r\n    public static DrawCall: StatUIParams = { title: \"DrawCall\", value: \"drawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //triangleFace\r\n    public static TriangleFace: StatUIParams = { title: \"TriangleFace\", value: \"trianglesFaces\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //RenderNoe 渲染节点数量\r\n    public static RenderNode: StatUIParams = { title: \"RenderNode\", value: \"renderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //SkinRenderNode\r\n    public static SkinRenderNode: StatUIParams = { title: \"SkinRenderNode\", value: \"skinRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //ParticleRenderNode\r\n    public static ParticleRenderNode: StatUIParams = { title: \"ParticleRenderNode\", value: \"particleRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //FrustumCulling\r\n    public static FrustumCulling: StatUIParams = { title: \"FrustumCulling\", value: \"frustumCulling\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //uniformUpload\r\n    public static UniformUpload: StatUIParams = { title: \"UniformUpload\", value: \"uniformUpload\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //OpaqueDrawCall\r\n    public static OpaqueDrawCall: StatUIParams = { title: \"OpaqueDrawCall\", value: \"opaqueDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //TransformDrawCall\r\n    public static TransDrawCall: StatUIParams = { title: \"TransDrawCall\", value: \"transDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //DepthCastDrawCall\r\n    public static DepthCastDrawCall: StatUIParams = { title: \"DepthCastDrawCall\", value: \"depthCastDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //InstanceDrawCall\r\n    public static InstanceDrawCall: StatUIParams = { title: \"InstanceDrawCall\", value: \"instanceDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //CMDDrawCall\r\n    public static CMDDrawCall: StatUIParams = { title: \"CMDDrawCall\", value: \"cmdDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //BlitDrawCall\r\n    public static BlitDrawCall: StatUIParams = { title: \"BlitDrawCall\", value: \"blitDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //GPU 显存:\r\n    public static GPUMemory: StatUIParams = { title: \"GPUMemory\", value: \"gpuMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //Texture2D memory\r\n    public static TextureMemeory: StatUIParams = { title: \"TextureMemory\", value: \"textureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //RenderTexture memory\r\n    public static RenderTextureMemory: StatUIParams = { title: \"RenderTextureMemory\", value: \"renderTextureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //BufferMemory\r\n    public static BufferMemory: StatUIParams = { title: \"BufferMemory\", value: \"bufferMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //upload Uniform\r\n    public static uploadUniformNum: StatUIParams = { title: \"UploadUniformNum\", value: \"uploadUniform\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //所有显示\r\n    public static AllShow: Array<StatUIParams> = [Stat.FPSStatUIParams, Stat.NodeStatUIParams, Stat.Sprite3DStatUIParams, Stat.DrawCall, Stat.TriangleFace, Stat.RenderNode, Stat.SkinRenderNode, Stat.ParticleRenderNode\r\n        , Stat.FrustumCulling, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall, Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory, Stat.uploadUniformNum];\r\n    //memory显示\r\n    public static memoryShow: Array<StatUIParams> = [Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory];\r\n    //渲染显示\r\n    public static renderShow: Array<StatUIParams> = [Stat.DrawCall, Stat.TriangleFace, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall];\r\n\r\n    /**@internal 开启关闭阴影 */\r\n    public static toogle_Shadow: StatToggleUIParams = { title: \"Shadow\", value: \"enableShadow\", color: \"white\" };\r\n    /**@internal 开启关闭多光源 */\r\n    public static toogle_MulLight: StatToggleUIParams = { title: \"MulLight\", value: \"enableMulLight\", color: \"white\" };\r\n    /**@internal 开启关闭光源 */\r\n    public static toogle_Light: StatToggleUIParams = { title: \"Light\", value: \"enableLight\", color: \"white\" };\r\n    /**@internal 开启关闭后期处理 */\r\n    public static toogle_Postprocess: StatToggleUIParams = { title: \"Postprocess\", value: \"enablePostprocess\", color: \"white\" };\r\n    /**@internal 开启关闭动画更新 */\r\n    public static toogle_AnimatorUpdate: StatToggleUIParams = { title: \"AnimatorUpdate\", value: \"enableAnimatorUpdate\", color: \"white\" };\r\n    /**@internal 开启关闭物理更新*/\r\n    public static toogle_PhysicsUpdate: StatToggleUIParams = { title: \"PhysicsUpdate\", value: \"enablePhysicsUpdate\", color: \"white\" };\r\n    /**@internal 开启关闭skin渲染 */\r\n    public static toogle_Skin: StatToggleUIParams = { title: \"Skin\", value: \"enableSkin\", color: \"white\" };\r\n    /**@internal 开启关闭透明渲染 */\r\n    public static toogle_Transparent: StatToggleUIParams = { title: \"Transparent\", value: \"enableTransparent\", color: \"white\" };\r\n    /**@internal 开启关闭粒子 */\r\n    public static toogle_Particle: StatToggleUIParams = { title: \"Particle\", value: \"enableParticle\", color: \"white\" };\r\n    /**@internal 开启关闭msaa */\r\n    public static toogle_msaa: StatToggleUIParams = { title: \"MSAA\", value: \"enablemsaa\", color: \"white\" };\r\n    /**@internal 开启关闭CMD */\r\n    public static toogle_CameraCMD: StatToggleUIParams = { title: \"CameraCMD\", value: \"enableCameraCMD\", color: \"white\" };\r\n    /**@internal 开启关闭非透明物体渲染 */\r\n    public static toogle_Opaque: StatToggleUIParams = { title: \"Opaque\", value: \"enableOpaque\", color: \"white\" };\r\n\r\n    //所有开关\r\n    public static AllToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate, Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\r\n    //渲染开关\r\n    public static RenderModeToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate];\r\n    //功能开关\r\n    public static RenderFuncToggle: Array<StatToggleUIParams> = [Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\r\n\r\n    /** 每秒帧数。*/\r\n    public static FPS: number = 0;\r\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\r\n    public static loopCount: number = 0;\r\n    /** 精灵渲染使用缓存<code>Sprite</code> 的数量。*/\r\n    public static spriteRenderUseCacheCount: number = 0;\r\n\r\n    /** 画布 canvas 使用标准渲染的次数。*/\r\n    static canvasNormal: number = 0;\r\n    /** 画布 canvas 使用位图渲染的次数。*/\r\n    static canvasBitmap: number = 0;\r\n    /** 画布 canvas 缓冲区重绘次数。*/\r\n    static canvasReCache: number = 0;\r\n    /** 表示当前使用的是否为慢渲染模式。*/\r\n    static renderSlow: boolean = false;\r\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\r\n    //static gpuMemory: number;\r\n    static cpuMemory: number;\r\n\r\n    /**@internal */\r\n    public static _timer: number = 0;\r\n    /**@internal */\r\n    public static _count: number = 0;\r\n\r\n    /**@internal */\r\n    public static _fpsStr: string = \"\";\r\n    /**@internal */\r\n    public static spriteCount: number = 0;//TODO\r\n    /**@internal */\r\n    public static sprite3DCount: number = 0;//TODO\r\n    /**@internal */\r\n    public static drawCall: number = 0;\r\n    /**@internal */\r\n    public static trianglesFaces: number = 0;\r\n    /**@internal */\r\n    public static renderNode: number = 0;\r\n    /**@internal */\r\n    public static skinRenderNode: number = 0;\r\n    /**@internal */\r\n    public static particleRenderNode: number = 0;\r\n    /**@internal 视锥剔除次数。*/\r\n    public static frustumCulling: number = 0;\r\n    /**@internal */\r\n    public static uniformUpload: number = 0;\r\n    /**@internal */\r\n    public static opaqueDrawCall: number = 0;\r\n    /**@internal */\r\n    public static transDrawCall: number = 0;\r\n    /**@internal */\r\n    public static depthCastDrawCall: number = 0;\r\n    /**@internal */\r\n    public static instanceDrawCall: number = 0;\r\n    /**@internal */\r\n    public static cmdDrawCall: number = 0;\r\n\r\n    public static blitDrawCall: number = 0;\r\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\r\n    public static gpuMemory: number;\r\n    /**@internal */\r\n    public static textureMemory: number = 0;\r\n    /**@internal */\r\n    public static renderTextureMemory: number = 0;\r\n    /**@interanl */\r\n    public static bufferMemory: number = 0;\r\n    /**@internal */\r\n    public static uploadUniform: number = 0;\r\n\r\n    //Toggle\r\n    /**@internal 开启关闭阴影 */\r\n    public static enableShadow: boolean = true;\r\n    /**@internal 开启关闭多光源 */\r\n    public static enableMulLight: boolean = true;\r\n    /**@internal 开启关闭光源 */\r\n    public static enableLight: boolean = true;\r\n    /**@internal 开启关闭CMD */\r\n    public static enableCameraCMD: boolean = true;\r\n    /**@internal 开启关闭后期处理 */\r\n    public static enablePostprocess: boolean = true;\r\n    /**@internal 开启关闭skin渲染 */\r\n    public static enableSkin: boolean = true;\r\n    /**@internal 开启关闭透明渲染 */\r\n    public static enableTransparent: boolean = true;\r\n    /**@internal 开启关闭粒子 */\r\n    public static enableParticle: boolean = true;\r\n    /**@internal 开启关闭动画更新 */\r\n    public static enableAnimatorUpdate: boolean = true;\r\n    /**@internal 开启关闭物理更新*/\r\n    public static enablePhysicsUpdate: boolean = true;\r\n    /**@internal 开启关闭msaa */\r\n    public static enablemsaa: boolean = true;\r\n    /**@internal 开启关闭非透明物体渲染 */\r\n    public static enableOpaque: boolean = true;\r\n\r\n    static _statUI: IStatUI;\r\n\r\n    /**@internal */\r\n    private static _currentShowArray: Array<StatUIParams>;\r\n    /**@internal */\r\n    private static _currentToggleArray: Array<StatToggleUIParams>;\r\n    /**@internal */\r\n    private static _show: boolean;\r\n\r\n    /**\r\n     * 显示性能统计信息。\r\n     * @param\tx X轴显示位置。\r\n     * @param\ty Y轴显示位置。\r\n     */\r\n    static show(x?: number, y?: number, views?: Array<StatUIParams>): void {\r\n        if (!Stat.checkUI())\r\n            return;\r\n        this.hide();\r\n\r\n        Stat._show = true;\r\n        Stat._currentShowArray = views||Stat.AllShow;\r\n        Stat._statUI.show(x, y, Stat._currentShowArray);\r\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\r\n    }\r\n\r\n    static showToggle(x?: number, y?: number, views?: Array<StatToggleUIParams>): void {\r\n        if (!Stat.checkUI())\r\n            return;\r\n        this.hide();\r\n\r\n        Stat._show = true;\r\n        Stat._currentToggleArray = views;\r\n        Stat._statUI.showToggle(x, y, views);\r\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\r\n    }\r\n\r\n    private static checkUI() {\r\n        if (!Stat._statUI) {\r\n            let cls = ClassUtils.getClass(\"StatUI\");\r\n            if (!cls) {\r\n                console.error(\"StatUI not found\");\r\n                return false;\r\n            }\r\n            Stat._statUI = new cls();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 隐藏性能统计信息。\r\n     */\r\n    static hide(): void {\r\n        if (!Stat._show)\r\n            return;\r\n\r\n        Stat._show = false;\r\n        Stat._currentShowArray = null;\r\n        Stat._currentToggleArray = null;\r\n        ILaya.systemTimer.clear(null, Stat.loop);\r\n        if (Stat._statUI)\r\n            Stat._statUI.hide();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 性能统计参数计算循环处理函数。\r\n     */\r\n    static loop(): void {\r\n        Stat._count++;\r\n        let timer: number = Browser.now();\r\n        if (timer - Stat._timer < 1000) return;\r\n\r\n        let count: number = Stat._count;\r\n        //计算更精确的FPS值\r\n        Stat.FPS = Math.round((count * 1000) / (timer - Stat._timer));\r\n\r\n        if (Stat._show) {\r\n            Stat.updateEngineData();\r\n            let delay: string = Stat.FPS > 0 ? Math.floor(1000 / Stat.FPS).toString() : \" \";\r\n            Stat._fpsStr = Stat.FPS + (Stat.renderSlow ? \" slow\" : \"\") + \" \" + delay + \"ms\";\r\n            Stat._statUI.update();\r\n            Stat.clear();\r\n        }\r\n\r\n        Stat._count = 0;\r\n        Stat._timer = timer;\r\n    }\r\n\r\n    static updateEngineData(): void {\r\n        Stat.trianglesFaces = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.Triangle);\r\n        Stat.drawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.DrawCall);\r\n        Stat.instanceDrawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\r\n\r\n        Stat.gpuMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.GPUMemory);\r\n        Stat.textureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.TextureMemeory);\r\n        Stat.renderTextureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory);\r\n        Stat.bufferMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.BufferMemory);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清零性能统计计算相关的数据。\r\n     */\r\n    static clear(): void {\r\n        if (!Stat._currentShowArray)\r\n            return;\r\n        Stat._currentShowArray.forEach(element => {\r\n            if (element.mode == \"average\")\r\n                (Stat as any)[element.value] = 0;\r\n        });\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.Triangle);\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.DrawCall);\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\r\n    }\r\n\r\n    static render(ctx: any, x: number, y: number) {\r\n        if (Stat._show)\r\n            Stat._statUI.render(ctx, x, y);\r\n    }\r\n}\r\n\r\n(window as any).Stat = Stat;\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\n\r\nexport class SubmitBase implements ISubmit {\r\n\r\n    static TYPE_2D: number = 10000;\r\n    static TYPE_CANVAS: number = 10003;\r\n    static TYPE_CMDSETRT: number = 10004;\r\n    static TYPE_CUSTOM: number = 10005;\r\n    static TYPE_BLURRT: number = 10006;\r\n    static TYPE_CMDDESTORYPRERT: number = 10007;\r\n    static TYPE_DISABLESTENCIL: number = 10008;\r\n    static TYPE_OTHERIBVB: number = 10009;\r\n    static TYPE_PRIMITIVE: number = 10010;\r\n    static TYPE_RT: number = 10011;\r\n    static TYPE_BLUR_RT: number = 10012;\r\n    static TYPE_TARGET: number = 10013;\r\n    static TYPE_CHANGE_VALUE: number = 10014;\r\n    static TYPE_SHAPE: number = 10015;\r\n    static TYPE_TEXTURE: number = 10016;\r\n    static TYPE_FILLTEXTURE: number = 10017;\r\n\r\n    static KEY_ONCE: number = -1;\r\n    static KEY_FILLRECT: number = 1;\r\n    static KEY_DRAWTEXTURE: number = 2;\r\n    static KEY_VG: number = 3;\r\n    static KEY_TRIANGLES: number = 4;\r\n\r\n    static RENDERBASE: SubmitBase;\r\n    static ID: number = 1;\r\n    static preRender: ISubmit = null;\t//上一个submit，主要用来比较key,以减少uniform的重复提交。\r\n\r\n    clipInfoID: number = -1;\t//用来比较clipinfo\r\n    /**@internal */\r\n    _mesh: Mesh2D | null = null;\t\t\t//代替 _vb,_ib\r\n    /**@internal */\r\n    _blendFn: Function = null;\r\n    protected _id: number = 0;\r\n    /**@internal */\r\n    _renderType: number = 0;\r\n    /**@internal */\r\n    _parent: ISubmit = null;\r\n    //渲染key，通过key判断是否是同一个\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n\r\n    // 从VB中什么地方开始画，画到哪\r\n    /**@internal */\r\n    _startIdx: number = 0;\t\t//indexbuffer 的偏移，单位是byte\r\n    /**@internal */\r\n    _numEle: number = 0;\r\n    /**@internal */\r\n    _ref: number = 1;\t// 其实已经没有用了\r\n\r\n    shaderValue: Value2D = null;\r\n\r\n    static __init__(): void {\r\n        var s: SubmitBase = SubmitBase.RENDERBASE = new SubmitBase(-1);\r\n        s.shaderValue = new Value2D(RenderSpriteData.Zero);\r\n        s.shaderValue.ALPHA = 1;\r\n        s._ref = 0xFFFFFFFF;\r\n    }\r\n\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        this._renderType = renderType;\r\n        this._id = ++SubmitBase.ID;\r\n    }\r\n\r\n    getID(): number {\r\n        return this._id;\r\n    }\r\n\r\n\r\n    getRenderType(): number {\r\n        return this._renderType;\r\n    }\r\n\r\n    toString(): string {\r\n        return \"ibindex:\" + this._startIdx + \" num:\" + this._numEle + \" key=\" + this._key;\r\n    }\r\n\r\n    renderSubmit(): number { return 1; }\r\n    releaseRender(): void { }\r\n}\r\n\r\n\r\n","import { VertexBuffer } from \"./VertexBuffer\";\r\n//vertex Layout cache pool\r\nexport interface VAElement { format: string, stride: number, shaderLocation: number };\r\nexport class VertexAttributeLayout {\r\n    static IPoint: number = 0;\r\n    static _pool: { [key: number]: VertexAttributeLayout } = {};\r\n\r\n    static getVertexLayoutByPool(vertexs: VertexBuffer[]) {\r\n        let pool =VertexAttributeLayout._pool;\r\n        for(var i in pool){\r\n            let layout = pool[i];\r\n            if(layout.deepthEqaul(vertexs)){\r\n                return layout\r\n            }\r\n        }\r\n        return new VertexAttributeLayout(vertexs);\r\n    }\r\n\r\n    /**\r\n     * vertex attribute byte size Array\r\n     */\r\n    attributeByteSize:Array<number>;\r\n\r\n    /**\r\n     * vertex Layout des\r\n     */\r\n    VAElements: Array<VAElement[]>;\r\n\r\n    instanceMode:Array<boolean>;\r\n    /**\r\n     * pool index\r\n     */\r\n    id: number;\r\n\r\n    \r\n\r\n    /**\r\n     * instance one VertexAttributeLayout\r\n     * @param vertexs \r\n     */\r\n    constructor(vertexs: VertexBuffer[]) {\r\n        this.VAElements = new Array();\r\n        this.attributeByteSize = new Array();\r\n        this.instanceMode = new Array();\r\n        //this.VAElements.length = vertexs.length;\r\n        for (let i = 0; i < vertexs.length; i++) {\r\n            let vaelements: VAElement[] = [];\r\n            let oneAttributeSize = vertexs[i].vertexDeclaration.vertexStride;\r\n            let vdec = vertexs[i].vertexDeclaration._VAElements;\r\n\r\n            for (let j = 0; j < vdec.length; j++) {\r\n                vaelements.push({ format: vdec[j].format, stride: vdec[j].stride, shaderLocation: vdec[j].shaderLocation });\r\n            }\r\n            this.attributeByteSize.push(oneAttributeSize);\r\n            this.VAElements.push(vaelements);\r\n            this.instanceMode.push(vertexs[i].instanceBuffer);\r\n        }\r\n        this.id = VertexAttributeLayout.IPoint;\r\n        VertexAttributeLayout._pool[VertexAttributeLayout.IPoint++] = this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param vertexs \r\n     * @returns \r\n     */\r\n    deepthEqaul(vertexs: VertexBuffer[]): boolean {\r\n        if (vertexs.length != this.VAElements.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < vertexs.length; i++) {\r\n            let vaelemets = vertexs[i]._vertexDeclaration._VAElements;\r\n            let thisVaeEs = this.VAElements[i];\r\n            if (vaelemets.length != thisVaeEs.length) {\r\n                return false;\r\n            } else {\r\n                for (var ii = 0, nn = vaelemets.length; ii < nn; ii++) {\r\n                    let v0 = vaelemets[ii];\r\n                    let v1 = thisVaeEs[ii];\r\n                    if (v0.format != v1.format || v0.stride != v1.stride || v0.shaderLocation != v1.shaderLocation)\r\n                        return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}","import { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderEngine/RenderInterface/IRenderVertexState\";\r\nimport { VertexAttributeLayout } from \"../../RenderEngine/VertexAttributeLayout\";\r\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n\r\n\r\n/**\r\n * <code>BufferState</code> 类用于实现渲染所需的Buffer状态集合。\r\n */\r\nexport class BufferState {\r\n\tstatic _curBindedBufferState: BufferState;\r\n\t/**@private [只读]*/\r\n\tprotected _nativeVertexArrayObject: IRenderVertexState;\r\n\r\n\t/**@internal [只读]*/\r\n\t_bindedIndexBuffer: IndexBuffer;\r\n\r\n\t/**@internal */\r\n\t_vertexBuffers: VertexBuffer[];\r\n\r\n\t/**@internal */\r\n\tvertexlayout: VertexAttributeLayout;\r\n\r\n\t/**\r\n\t * 创建一个 <code>BufferState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._nativeVertexArrayObject = LayaGL.renderEngine.createVertexState();\r\n\t}\r\n\r\n\tprotected applyVertexBuffers(): void {\r\n\t\tthis._nativeVertexArrayObject&&this._nativeVertexArrayObject.applyVertexBuffer(this._vertexBuffers);\r\n\t}\r\n\r\n\tprotected applyIndexBuffers(): void {\r\n\t\tthis._nativeVertexArrayObject&&this._nativeVertexArrayObject.applyIndexBuffer(this._bindedIndexBuffer);\r\n\t}\r\n\r\n\r\n\tapplyState(vertexBuffers: VertexBuffer[], indexBuffer: IndexBuffer | null) {\r\n\t\tthis.vertexlayout = VertexAttributeLayout.getVertexLayoutByPool(vertexBuffers);\r\n\t\tthis._vertexBuffers = vertexBuffers;\r\n\t\tthis._bindedIndexBuffer = indexBuffer;\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\r\n\t\tthis.bind();\r\n\t\tthis.applyVertexBuffers();\r\n\t\tthis.applyIndexBuffers();\r\n\t\tthis.unBind();\r\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\r\n\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tbind(): void {\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tthis._nativeVertexArrayObject.bindVertexArray();\r\n\t\tBufferState._curBindedBufferState = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tunBind(): void {\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tif (BufferState._curBindedBufferState == this) {\r\n\t\t\tthis._nativeVertexArrayObject.unbindVertexArray();\r\n\t\t\tBufferState._curBindedBufferState = null;\r\n\t\t} else {\r\n\t\t\tthrow \"BufferState: must call bind() function first.\";\r\n\t\t}\r\n\t}\r\n\r\n\tisbind(): boolean {\r\n\t\treturn (BufferState._curBindedBufferState == this);\r\n\t}\r\n\r\n\tstatic clearbindBufferState() {\r\n\t\tLayaGL.renderEngine.unbindVertexState();\r\n\t\tBufferState._curBindedBufferState = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tthis._nativeVertexArrayObject.destroy();\r\n\t\tthis._nativeVertexArrayObject = null;\r\n\t}\r\n}\r\n\r\n\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { IRenderBuffer } from \"./RenderInterface/IRenderBuffer\";\r\n\r\nexport class Buffer {\r\n\r\n\t_glBuffer: IRenderBuffer;\r\n\t_buffer: Float32Array|Uint16Array|Uint8Array|Uint32Array;\r\n\r\n\t_bufferType: number;\r\n\t_bufferUsage: number;\r\n\r\n\t_byteLength: number = 0; \r\n\r\n\tget bufferUsage(): number {\r\n\t\treturn this._bufferUsage;\r\n\t}\r\n\r\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n\t\tthis._glBuffer = LayaGL.renderEngine.createBuffer(targetType,bufferUsageType);\r\n\t\tthis._bufferType = targetType;\r\n\t\tthis._bufferUsage = bufferUsageType;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tbind(): boolean {\r\n\t\treturn this._glBuffer.bindBuffer();\r\n\t}\r\n\r\n\tunbind():void{\r\n\t\treturn this._glBuffer.unbindBuffer();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tif (this._glBuffer) {\r\n\t\t\tthis._glBuffer.destroy();\r\n\t\t\tthis._glBuffer = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { IndexFormat } from \"./RenderEnum/IndexFormat\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { BufferState } from \"../webgl/utils/BufferState\";\r\n\r\nexport class IndexBuffer extends Buffer {\r\n    /** @internal */\r\n    protected _indexType: IndexFormat = IndexFormat.UInt16;\r\n    /** @internal */\r\n    protected _indexTypeByteCount: number;\r\n    /** @internal */\r\n    protected _indexCount: number;\r\n    constructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n        super(targetType, bufferUsageType);\r\n    }\r\n\r\n\r\n    _setIndexData(data: number): void;\r\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array, bufferOffset: number): void;\r\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array | number, bufferOffset?: number): void {\r\n        var curBufSta: BufferState = BufferState._curBindedBufferState;\r\n\r\n        if (curBufSta) {\r\n            if (curBufSta._bindedIndexBuffer === this) {\r\n                this._glBuffer.setDataLength(0);\r\n            } else {\r\n                curBufSta.unBind();//避免影响VAO\r\n                this.bind();\r\n                if (typeof data === \"number\")\r\n                    this._glBuffer.setDataLength(data);\r\n                else\r\n                    this._glBuffer.setData(data, bufferOffset);\r\n                curBufSta.bind();\r\n            }\r\n        } else {\r\n            this.bind();\r\n            if (typeof data === \"number\")\r\n                this._glBuffer.setDataLength(data);\r\n            else\r\n                this._glBuffer.setData(data, bufferOffset)\r\n        }\r\n    }\r\n}","import { RenderInfo } from \"../../renders/RenderInfo\";\r\nimport { BaseShader } from \"../shader/BaseShader\";\r\nimport { Buffer } from \"../../RenderEngine/Buffer\";\r\n\r\nexport class Buffer2D {\r\n\r\n    static FLOAT32: number = 4;\r\n    static SHORT: number = 2;\r\n\r\n    protected _maxsize: number = 0;\r\n\r\n    _upload: boolean = true;\r\n    protected _uploadSize: number = 0;\r\n    protected _bufferSize: number = 0;\r\n    protected _u8Array: Uint8Array = null;\t\t//反正常常要拷贝老的数据，所以保留这个可以提高效率\r\n    _floatArray32: Float32Array;\r\n    _uint32Array: Uint32Array;\r\n    _uint16Array: Uint16Array;\r\n\r\n    private constBuffer: Buffer;\r\n\r\n    get bufferLength(): number {\r\n        return this.constBuffer._buffer.byteLength;\r\n    }\r\n\r\n    set byteLength(value: number) {\r\n        this.setByteLength(value);\r\n    }\r\n\r\n    setByteLength(value: number): void {\r\n        if (this.constBuffer._byteLength !== value) {\r\n            value <= this._bufferSize || (this._resizeBuffer(value * 2 + 256, true));\r\n            this.constBuffer._byteLength = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 在当前的基础上需要多大空间，单位是byte\r\n     * @param\tsz\r\n     * @return  增加大小之前的写位置。单位是byte\r\n     */\r\n    needSize(sz: number): number {\r\n        var old: number = this.constBuffer._byteLength;\r\n        if (sz) {\r\n            var needsz: number = this.constBuffer._byteLength + sz;\r\n            needsz <= this._bufferSize || (this._resizeBuffer(needsz << 1, true));\r\n            this.constBuffer._byteLength = needsz;\r\n        }\r\n        return old;\r\n    }\r\n\r\n    constructor(buffer: Buffer) {\r\n        this.constBuffer = buffer;\r\n    }\r\n\r\n    getFloat32Array(): Float32Array {\r\n        if (!this._floatArray32) {\r\n            this._floatArray32 = new Float32Array(this.constBuffer._buffer.buffer);\r\n        }\r\n        return this._floatArray32;\r\n    }\r\n\r\n    protected _bufferData(): void {\r\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\r\n        if (RenderInfo.loopCount % 30 == 0) {//每30帧缩小一下buffer\t。TODO 这个有问题。不知道_maxsize和_byteLength是怎么维护的，这里会导致重新分配64字节\r\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\r\n                //_setGPUMemory(_buffer.byteLength);\r\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\r\n                this._bufferSize = this.constBuffer._buffer.byteLength;\r\n                this._checkArrayUse();\r\n                let buff = this.constBuffer._buffer.buffer;\r\n                ((this._bufferSize % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\r\n                ((this._bufferSize % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\r\n                this._uint16Array = new Uint16Array(buff);\r\n            }\r\n            this._maxsize = this.constBuffer._byteLength;\r\n        }\r\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\r\n            this._uploadSize = this.constBuffer._buffer.byteLength;\r\n\r\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\r\n        }\r\n        this.constBuffer._glBuffer.setData(new Uint8Array(this.constBuffer._buffer.buffer, 0, this.constBuffer._byteLength), 0);\r\n        this.constBuffer.unbind();\r\n    }\r\n\r\n    //TODO:coverage\r\n    protected _bufferSubData(offset: number = 0, dataStart: number = 0, dataLength: number = 0): void {\r\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\r\n        if (RenderInfo.loopCount % 30 == 0) {\r\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\r\n                //_setGPUMemory(_buffer.byteLength);\r\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\r\n                this._bufferSize = this.constBuffer._buffer.byteLength;\r\n                this._checkArrayUse();\r\n            }\r\n            this._maxsize = this.constBuffer._byteLength;\r\n        }\r\n\r\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\r\n            this._uploadSize = this.constBuffer._buffer.byteLength;\r\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\r\n            //_setGPUMemory(_uploadSize);\r\n        }\r\n\r\n        if (dataStart || dataLength) {\r\n            var subBuffer: ArrayBuffer = this.constBuffer._buffer.buffer.slice(dataStart, dataLength);\r\n            this.constBuffer._glBuffer.setData(subBuffer, offset);\r\n        } else {\r\n            this.constBuffer._glBuffer.setData(this.constBuffer._buffer.buffer, offset);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * buffer重新分配了，继承类根据需要做相应的处理。\r\n     */\r\n    protected _checkArrayUse(): void {\r\n\r\n    }\r\n\r\n    // /**\r\n    //  * 给vao使用的 _bind_upload函数。不要与已经绑定的判断是否相同\r\n    //  * @return\r\n    //  */\r\n    // _bind_uploadForVAO(): boolean {\r\n    // \tif (!this._upload)\r\n    // \t\treturn false;\r\n    // \tthis._upload = false;\r\n    // \tthis.constBuffer.bind();\r\n    // \tthis._bufferData();\r\n    // \treturn true;\r\n    // }\r\n\r\n    _bind_upload(): boolean {\r\n        if (!this._upload)\r\n            return false;\r\n        this._upload = false;\r\n        this.constBuffer.bind();\r\n        this._bufferData();\r\n        return true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    _bind_subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\r\n        if (!this._upload)\r\n            return false;\r\n\r\n        this._upload = false;\r\n        this.constBuffer.bind();\r\n        this._bufferSubData(offset, dataStart, dataLength);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 重新分配buffer大小，如果nsz比原来的小则什么都不做。\r\n     * @param\tnsz\t\tbuffer大小，单位是byte。\r\n     * @param\tcopy\t是否拷贝原来的buffer的数据。\r\n     * @return\r\n     */\r\n    _resizeBuffer(nsz: number, copy: boolean): Buffer2D //是否修改了长度\r\n    {\r\n        var buff: any = this.constBuffer._buffer;\r\n        if (buff && nsz <= buff.byteLength)\r\n            return this;\r\n        var u8buf: Uint8Array = this._u8Array;\r\n        //_setGPUMemory(nsz);\r\n        if (copy && buff && buff.byteLength > 0) {\r\n            var oldU8Arr: Uint8Array = new Uint8Array(buff.buffer);\r\n            var newbuffer: Uint8Array = new Uint8Array(nsz);\r\n            newbuffer.set(oldU8Arr, 0);\r\n            buff = this.constBuffer._buffer = newbuffer;\r\n            this._u8Array = new Uint8Array(this.constBuffer._buffer.buffer);\r\n        } else {\r\n            var data = new ArrayBuffer(nsz);\r\n            buff = this.constBuffer._buffer = new Uint8Array(data);\r\n            this._u8Array = new Uint8Array(buff.buffer);\r\n        }\r\n        buff = this.constBuffer._buffer.buffer;\r\n        ((nsz % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\r\n        ((nsz % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\r\n        this._uint16Array = new Uint16Array(buff);\r\n        this._checkArrayUse();\r\n        this._upload = true;\r\n        this._bufferSize = buff.byteLength;\r\n        return this;\r\n    }\r\n\r\n    append(data: any): void {\r\n        this._upload = true;\r\n        var byteLen: number, n: any;\r\n        byteLen = data.byteLength;\r\n        if (data instanceof Uint8Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Uint8Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        } else if (data instanceof Uint16Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        } else if (data instanceof Float32Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Float32Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        }\r\n        n.set(data, 0);\r\n        this.constBuffer._byteLength += byteLen;\r\n        this._checkArrayUse();\r\n    }\r\n\r\n    /**\r\n     * 附加Uint16Array的数据。数据长度是len。byte的话要*2\r\n     * @param\tdata\r\n     * @param\tlen\r\n     */\r\n    appendU16Array(data: Uint16Array, len: number): void {\r\n        this._resizeBuffer(this.constBuffer._byteLength + len * 2, true);\r\n        //(new Uint16Array(_buffer, _byteLength, len)).set(data.slice(0, len));\r\n        //下面这种写法比上面的快多了\r\n        var u: Uint16Array = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength, len);\t//TODO 怎么能不用new\r\n        if (len == 6) {\r\n            u[0] = data[0]; u[1] = data[1]; u[2] = data[2];\r\n            u[3] = data[3]; u[4] = data[4]; u[5] = data[5];\r\n        } else if (len >= 100) {\r\n            u.set(new Uint16Array(data.buffer, 0, len));\r\n        } else {\r\n            for (var i: number = 0; i < len; i++) {\r\n                u[i] = data[i];\r\n            }\r\n        }\r\n        this.constBuffer._byteLength += len * 2;\r\n        this._checkArrayUse();\r\n    }\r\n\r\n    //TODO:coverage\r\n    getBuffer(): ArrayBuffer {\r\n        return this.constBuffer._buffer.buffer;\r\n    }\r\n\r\n    setNeedUpload(): void {\r\n        this._upload = true;\r\n    }\r\n\r\n\r\n    //TODO:coverage\r\n    subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\r\n        var scuess: boolean = this._bind_subUpload();\r\n        this.constBuffer.unbind();\r\n        //gl.bindBuffer(this._bufferType, null);\r\n        //if (this._bufferType == gl.ARRAY_BUFFER) Buffer._bindedVertexBuffer = null;\r\n        //if (this._bufferType == gl.ELEMENT_ARRAY_BUFFER) Buffer._bindedIndexBuffer = null;\r\n        BaseShader.activeShader = null\r\n        return scuess;\r\n    }\r\n\r\n    _disposeResource(): void {\r\n        this._upload = true;\r\n        this._uploadSize = 0;\r\n        this._floatArray32 = null;\r\n        this._uint32Array = null;\r\n        this._u8Array = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * 清理数据。保留ArrayBuffer\r\n     */\r\n    clear(): void {\r\n        this.constBuffer._byteLength = 0;\r\n        this._upload = true;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { Buffer2D } from \"./Buffer2D\";\r\n\r\nexport class IndexBuffer2D extends IndexBuffer {\r\n    static create: Function = function (bufferUsage: number = BufferUsage.Static): IndexBuffer2D {\r\n        return new IndexBuffer2D(bufferUsage);\r\n    }\r\n\r\n    protected _uint16Array: Uint16Array;\r\n    buffer2D:Buffer2D;\r\n    constructor(bufferUsage: number = BufferUsage.Static) {\r\n        super(BufferTargetType.ELEMENT_ARRAY_BUFFER,bufferUsage);\r\n        this.buffer2D = new Buffer2D(this);\r\n        this._bufferUsage = bufferUsage;\r\n        this._buffer = new Uint8Array(8);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    // protected _checkArrayUse(): void {\r\n    //     this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer));\r\n    // }\r\n\r\n    // getUint16Array(): Uint16Array {\r\n    //     return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer));\r\n    // }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _bindForVAO(): void {\r\n        \r\n        this._glBuffer.bindBuffer()\r\n    }\r\n\r\n    destory(): void {\r\n        this._uint16Array = null;\r\n        this._buffer = null;\r\n    }\r\n\r\n    disposeResource(): void {\r\n        this.buffer2D._disposeResource();\r\n    }\r\n}\r\n\r\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { VertexDeclaration } from \"./VertexDeclaration\";\r\n\r\nexport class VertexBuffer extends Buffer {\r\n\tprivate _instanceBuffer: boolean = false;\r\n\t/** @internal */\r\n\t_vertexDeclaration: VertexDeclaration | null = null;\r\n\r\n\t/**\r\n\t * 获取顶点声明。\r\n\t */\r\n\tget vertexDeclaration(): VertexDeclaration | null {\r\n\t\treturn this._vertexDeclaration;\r\n\t}\r\n\r\n\tset vertexDeclaration(value: VertexDeclaration | null) {\r\n\t\tthis._vertexDeclaration = value;\r\n\t}\r\n\tget instanceBuffer(): boolean {\r\n\t\treturn this._instanceBuffer;\r\n\t}\r\n\r\n\tset instanceBuffer(value: boolean) {\r\n\t\tthis._instanceBuffer = value;\r\n\t}\r\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n\t\tsuper(targetType, bufferUsageType);\r\n\t}\r\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\r\nimport { Buffer2D } from \"./Buffer2D\";\r\n\r\nexport class VertexBuffer2D extends VertexBuffer {\r\n    static create: Function = function (vertexStride: number, bufferUsage: number = BufferUsage.Dynamic): VertexBuffer2D {\r\n        return new VertexBuffer2D(vertexStride, bufferUsage);\r\n    }\r\n\r\n    buffer2D: Buffer2D;\r\n\r\n    private _vertexStride: number;\r\n\r\n    get vertexStride(): number {\r\n        return this._vertexStride;\r\n    }\r\n\r\n    constructor(vertexStride: number, bufferUsage: number) {\r\n        super(BufferTargetType.ARRAY_BUFFER, bufferUsage);\r\n        this.buffer2D = new Buffer2D(this);\r\n        this._vertexStride = vertexStride;\r\n        this._bufferUsage = bufferUsage;\r\n        //this._buffer = new Uint8Array(8);\r\n        //this._floatArray32 = new Float32Array(this._buffer);\r\n        //this._uint32Array = new Uint32Array(this._buffer);\r\n    }\r\n\r\n    getFloat32Array(): Float32Array {\r\n        return this.buffer2D._floatArray32;\r\n    }\r\n\r\n    get _floatArray32() {\r\n        return this.buffer2D._floatArray32;\r\n    }\r\n\r\n    get _uint32Array() {\r\n        return this.buffer2D._uint32Array;\r\n    }\r\n\r\n    /**\r\n     * 在当前位置插入float数组。\r\n     * @param\tdata\r\n     * @param\tpos\r\n     */\r\n    appendArray(data: any[]): void {\r\n        var oldoff: number = this._byteLength >> 2;\r\n        this.buffer2D.setByteLength(this._byteLength + data.length * 4);\r\n        var vbdata: Float32Array = this.getFloat32Array();\r\n        vbdata.set(data, oldoff);\r\n        this.buffer2D._upload = true;\r\n    }\r\n    // \t/**\r\n    // \t * @override\r\n    // \t */\r\n    // \t protected _checkArrayUse(): void {\r\n    //     this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer));\r\n    //     this._uint32Array && (this._uint32Array = new Uint32Array(this._buffer));\r\n    // }\r\n\r\n    //只删除buffer，不disableVertexAttribArray\r\n    deleteBuffer(): void {\r\n        this.buffer2D._disposeResource();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _bindForVAO(): void {\r\n        this._glBuffer.bindBuffer();\r\n    }\r\n    /**\r\n     * @override\r\n     * override\r\n     */\r\n    destroy(): void {\r\n        super.destroy();\r\n        this._byteLength = 0;\r\n        this.buffer2D._upload = true;\r\n        this._buffer = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { Config } from \"./../../../Config\";\r\nimport { BufferState } from \"./BufferState\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * Mesh2d只是保存数据。描述attribute用的。本身不具有渲染功能。\r\n */\r\nexport class Mesh2D {\r\n    _stride = 0;\t\t\t//顶点结构大小。每个mesh的顶点结构是固定的。\r\n    vertNum = 0;\t\t\t\t//当前的顶点的个数\r\n    indexNum = 0;\t\t\t//实际index 个数。例如一个三角形是3个。由于ib本身可能超过实际使用的数量，所以需要一个indexNum\r\n    protected _applied = false;\t//是否已经设置给webgl了\r\n    _vb: VertexBuffer2D;\t\t\t//vb和ib都可能需要在外部修改，所以public\r\n    _ib: IndexBuffer2D;\r\n    private _vao: BufferState;\t\t\t\t\t\t//webgl VAO对象。需要WebGL扩展。\r\n    private static _gvaoid = 0;\r\n    private _attribInfo: any[];\t\t\t//保存起来的属性定义数组。\r\n    protected _quadNum = 0;\r\n    //public static var meshlist:Array = [];\t//活着的mesh对象列表。\r\n    canReuse = false;\t//用完以后，是删除还是回收。\r\n\r\n    /**\r\n     * @param\tstride\r\n     * @param\tvballoc  vb预分配的大小。主要是用来提高效率。防止不断的resizebfufer\r\n     * @param\tiballoc\r\n     */\r\n    constructor(stride: number, vballoc: number, iballoc: number) {\r\n        this._stride = stride;\r\n        this._vb = new VertexBuffer2D(stride, BufferUsage.Dynamic);\r\n        if (vballoc) {\r\n            this._vb.buffer2D._resizeBuffer(vballoc, false);\r\n        } else {\r\n            Config.webGL2D_MeshAllocMaxMem && this._vb.buffer2D._resizeBuffer(64 * 1024 * stride, false);\r\n        }\r\n        this._ib = new IndexBuffer2D();\r\n        if (iballoc) {\r\n            this._ib.buffer2D._resizeBuffer(iballoc, false);\r\n        }\r\n        //meshlist.push(this);\r\n    }\r\n\r\n    /**\r\n     * 直接创建一个固定的ib。按照固定四边形的索引。\r\n     * @param\tvar QuadNum\r\n     */\r\n    createQuadIB(QuadNum: number): void {\r\n        this._quadNum = QuadNum;\r\n        this._ib.buffer2D._resizeBuffer(QuadNum * 6 * 2, false);\t//short类型\r\n        this._ib.buffer2D.byteLength = this._ib.buffer2D.bufferLength;\t//这个我也不知道是什么意思\r\n\r\n        var bd: Uint16Array = this._ib.buffer2D._uint16Array;\r\n        var idx: number = 0;\r\n        var curvert: number = 0;\r\n        for (var i: number = 0; i < QuadNum; i++) {\r\n            bd[idx++] = curvert;\r\n            bd[idx++] = curvert + 2;\r\n            bd[idx++] = curvert + 1;\r\n            bd[idx++] = curvert;\r\n            bd[idx++] = curvert + 3;\r\n            bd[idx++] = curvert + 2;\r\n            curvert += 4;\r\n        }\r\n\r\n        this._ib.buffer2D.setNeedUpload();\r\n    }\r\n\r\n    /**\r\n     * 设置mesh的属性。每3个一组，对应的location分别是0,1,2...\r\n     * 含义是：type,size,offset\r\n     * 不允许多流。因此stride是固定的，offset只是在一个vertex之内。\r\n     * @param\tattribs\r\n     */\r\n    setAttributes(attribs: any[]): void {\r\n        this._attribInfo = attribs;\r\n        if (this._attribInfo.length % 3 != 0) {\r\n            throw 'Mesh2D setAttributes error!';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化VAO的配置，只需要执行一次。以后使用的时候直接bind就行\r\n     * @param\tgl\r\n     */\r\n    private configVAO(): void {\r\n        if (this._applied)\r\n            return;\r\n        this._applied = true;\r\n        if (!this._vao) {\r\n            //_vao = __JS__('gl.createVertexArray();');\r\n            this._vao = new BufferState();\r\n            //_vao.dbgid = _gvaoid++;\r\n        }\r\n        this._vao.applyState([this._vb], this._ib);\r\n        // var attribNum: number = this._attribInfo.length / 3;\r\n        // var idx: number = 0;\r\n        // for (var i: number = 0; i < attribNum; i++) {\r\n        //     var _size: number = this._attribInfo[idx + 1];\r\n        //     var _type: number = this._attribInfo[idx];\r\n        //     var _off: number = this._attribInfo[idx + 2];\r\n        //     gl.enableVertexAttribArray(i);\r\n        //     gl.vertexAttribPointer(i, _size, _type, false, this._stride, _off); //注意 normalize都设置为false了，想必没人要用这个功能把。\r\n        //     idx += 3;\r\n        // }\r\n        // this._vao.unBind();\r\n        //gl.bindVertexArray(null);\r\n    }\r\n\r\n    /**\r\n     * 应用这个mesh\r\n     * @param\tgl\r\n     */\r\n    useMesh(): void {\r\n        if ((this._vao && !this._vao.isbind()) || this._ib.buffer2D._upload || this._vb.buffer2D._upload) {\r\n            BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n        }\r\n        //要先bind，在bufferData\r\n        this._applied || this.configVAO();\r\n        this._ib.buffer2D._bind_upload();\r\n        this._vb.buffer2D._bind_upload();\r\n        this._vao.bind();\r\n    }\r\n\r\n    // //TODO:coverage\r\n    // getEleNum(): number {\r\n    //     return this._ib.buffer2D.getBuffer().byteLength / 2;\r\n    // }\r\n\r\n    /**\r\n     * 子类实现。用来把自己放到对应的回收池中，以便复用。\r\n     */\r\n    releaseMesh(): void { }\r\n\r\n    /**\r\n     * 释放资源。\r\n     */\r\n    destroy(): void {\r\n    }\r\n\r\n    /**\r\n     * 清理vb数据\r\n     */\r\n    clearVB(): void {\r\n        this._vb.buffer2D.clear();\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\r\n */\r\nexport class MeshQuadTexture extends Mesh2D {\r\n\tstatic const_stride: number = 24;// 48;  24是不带clip的\r\n\tprivate static _fixib: IndexBuffer2D;\r\n\tprivate static _maxIB: number = 16 * 1024;\r\n\tprivate static _fixattriInfo: any[];\r\n\tprivate static _POOL: any[] = [];\r\n\t//private static var _num;\r\n\tstatic VertexDeclarition: VertexDeclaration;\r\n\tstatic __int__(): void {\r\n\t\t//var gl: WebGLRenderingContext = LayaGL.instance;\r\n\t\tMeshQuadTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\r\n\t\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\r\n\t\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 20];\r\n\t}\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper(MeshQuadTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\r\n\t\tthis.canReuse = true;\r\n\t\tthis.setAttributes(MeshQuadTexture._fixattriInfo);\r\n\t\tif (!MeshQuadTexture._fixib) {\r\n\t\t\tthis.createQuadIB(MeshQuadTexture._maxIB);\t//每个quad 4个顶点。正好达到64k的索引。\r\n\t\t\tMeshQuadTexture._fixib = this._ib;\r\n\t\t} else {\r\n\t\t\tthis._ib = MeshQuadTexture._fixib;\r\n\t\t\tthis._quadNum = MeshQuadTexture._maxIB;\r\n\t\t}\r\n\t\tif (!MeshQuadTexture.VertexDeclarition)\r\n\t\t\tMeshQuadTexture.VertexDeclarition = new VertexDeclaration(24, [\r\n\t\t\t\tnew VertexElement(0, VertexElementFormat.Vector4, 0),\r\n\t\t\t\tnew VertexElement(16, VertexElementFormat.Byte4, 1),\r\n\t\t\t\tnew VertexElement(20, VertexElementFormat.Byte4, 2),\r\n\t\t\t])\r\n\t\tthis._vb.vertexDeclaration = MeshQuadTexture.VertexDeclarition;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tstatic getAMesh(mainctx: boolean): MeshQuadTexture {\r\n\t\t//console.log('getmesh');\r\n\t\tvar ret: MeshQuadTexture = null;\r\n\t\tif (MeshQuadTexture._POOL.length) {\r\n\t\t\tret = MeshQuadTexture._POOL.pop();\r\n\t\t} else\r\n\t\t\tret = new MeshQuadTexture();\r\n\t\t// 先分配64k顶点的空间，这样可以避免浪费内存，否则后面增加内存的时候是成倍增加的，当快超过64k的时候，直接变成了128k\r\n\t\tmainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshQuadTexture.const_stride, false);\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * 把本对象放到回收池中，以便getMesh能用。\r\n\t * @override\r\n\t */\r\n\treleaseMesh(): void {\r\n\t\tthis._vb.buffer2D.setByteLength(0);\r\n\t\tthis.vertNum = 0;\r\n\t\tthis.indexNum = 0;\r\n\t\t//_applied = false;\r\n\t\tMeshQuadTexture._POOL.push(this);\r\n\t}\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tdestroy(): void {\r\n\t\t//_ib.destroy(); ib是公用的。\r\n\t\tthis._vb.destroy();\r\n\t\tthis._vb.deleteBuffer();\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param pos 顶点坐标\r\n\t * @param uv 纹理坐标\r\n\t * @param color 顶点颜色\r\n\t * @param useTex 是否使用贴图。false的话是给fillRect用的\r\n\t */\r\n\taddQuad(pos: ArrayLike<number>, uv: ArrayLike<number>, color: number, useTex: boolean): void {\r\n\t\tvar vb: VertexBuffer2D = this._vb;\r\n\t\tvar vpos: number = (vb._byteLength >> 2);\t//float数组的下标\r\n\t\t//x,y,u,v,rgba\r\n\t\tvb.buffer2D.setByteLength((vpos + MeshQuadTexture.const_stride) << 2); //是一个四边形的大小，也是这里填充的大小\r\n\t\tvar vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\r\n\t\tvar vbu32Arr: Uint32Array = vb._uint32Array;\r\n\t\tvar cpos: number = vpos;\r\n\t\tvar useTexVal: number = useTex ? 0xff : 0;\r\n\t\tvbdata[cpos++] = pos[0]; vbdata[cpos++] = pos[1]; vbdata[cpos++] = uv[0]; vbdata[cpos++] = uv[1]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[2]; vbdata[cpos++] = pos[3]; vbdata[cpos++] = uv[2]; vbdata[cpos++] = uv[3]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[4]; vbdata[cpos++] = pos[5]; vbdata[cpos++] = uv[4]; vbdata[cpos++] = uv[5]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[6]; vbdata[cpos++] = pos[7]; vbdata[cpos++] = uv[6]; vbdata[cpos++] = uv[7]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvb.buffer2D._upload = true;\r\n\t}\r\n}\r\n\r\n","import { Matrix } from \"../../maths/Matrix\";\r\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * 与MeshQuadTexture基本相同。不过index不是固定的\r\n */\r\nexport class MeshTexture extends Mesh2D {\r\n    static const_stride: number = 24;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n\r\n    static VertexDeclarition: VertexDeclaration;\r\n\r\n\r\n\r\n    static __init__(): void {\r\n        MeshTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 20];\r\n    }\r\n\r\n    constructor() {\r\n        super(MeshTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshTexture._fixattriInfo);\r\n        if (!MeshTexture.VertexDeclarition)\r\n            MeshTexture.VertexDeclarition = new VertexDeclaration(24, [\r\n                new VertexElement(0, VertexElementFormat.Vector4, 0),\r\n                new VertexElement(16, VertexElementFormat.Byte4, 1),\r\n                new VertexElement(20, VertexElementFormat.Byte4, 2),\r\n            ])\r\n        this._vb.vertexDeclaration = MeshTexture.VertexDeclarition;\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getAMesh(mainctx: boolean): MeshTexture {\r\n        //console.log('getmesh');\r\n        var ret: MeshTexture;\r\n        if (MeshTexture._POOL.length) {\r\n            ret = MeshTexture._POOL.pop();\r\n        }\r\n        else ret = new MeshTexture();\r\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshTexture.const_stride, false);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 增加四个顶点\r\n     * @param vertices \r\n     * @param uvs \r\n     * @param idx \r\n     * @param matrix \r\n     * @param rgba \r\n     */\r\n    addData(vertices: Float32Array, uvs: Float32Array, idx: Uint16Array, matrix: Matrix, rgba: number): void {\r\n        //vb\r\n        var vb: VertexBuffer2D = this._vb;\r\n        var ib: IndexBuffer2D = this._ib;\r\n        var vertsz: number = vertices.length >> 1;\r\n        var startpos: number = vb.buffer2D.needSize(vertsz * MeshTexture.const_stride);//vb的起点。\t\t\t\r\n        var f32pos: number = startpos >> 2;\r\n        var vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\r\n        var vbu32Arr: Uint32Array = vb._uint32Array;\r\n        var ci: number = 0;\r\n        var m00: number = matrix.a;\r\n        var m01: number = matrix.b;\r\n        var m10: number = matrix.c;\r\n        var m11: number = matrix.d;\r\n        var tx: number = matrix.tx;\r\n        var ty: number = matrix.ty;\r\n        var i: number = 0;\r\n        //var clipinfo:Array = ctx.getTransedClipInfo();\r\n        for (i = 0; i < vertsz; i++) {\r\n            var x: number = vertices[ci], y: number = vertices[ci + 1];\r\n            vbdata[f32pos] = x * m00 + y * m10 + tx;\r\n            vbdata[f32pos + 1] = x * m01 + y * m11 + ty;\r\n            vbdata[f32pos + 2] = uvs[ci];\r\n            vbdata[f32pos + 3] = uvs[ci + 1];\r\n            vbu32Arr[f32pos + 4] = rgba;\r\n            vbu32Arr[f32pos + 5] = 0xff;\r\n            f32pos += 6;\r\n            //裁剪信息。\r\n            //vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\r\n            //vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1];\t//cliprect的位置\r\n            ci += 2;\r\n        }\r\n        vb.buffer2D.setNeedUpload();\r\n\r\n        var vertN: number = this.vertNum;\r\n        var sz: number = idx.length;\r\n        var stib: number = ib.buffer2D.needSize(idx.byteLength);\r\n        var cidx: Uint16Array = ib.buffer2D._uint16Array;\r\n        //var cidx:Uint16Array = new Uint16Array(__JS__('ib._buffer'), stib);\r\n        var stibid: number = stib >> 1;\t// indexbuffer的起始位置\r\n        if (vertN > 0) {\r\n            var end: number = stibid + sz;\r\n            var si: number = 0;\r\n            for (i = stibid; i < end; i++, si++) {\r\n                cidx[i] = idx[si] + vertN;\r\n            }\r\n        } else {\r\n            cidx.set(idx, stibid);\r\n        }\r\n        ib.buffer2D.setNeedUpload();\r\n\r\n        this.vertNum += vertsz;\r\n        this.indexNum += idx.length;\r\n    }\r\n\r\n\t\t/**\r\n\t\t * 把本对象放到回收池中，以便getMesh能用。\r\n\t\t * @override\r\n\t\t */\r\n\t\t /*override*/ releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this._ib.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshTexture._POOL.push(this);\r\n    }\r\n/**\r\n * @override\r\n */\r\n\t\t /*override*/ destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._ib.disposeResource();\r\n        this._vb.deleteBuffer();\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\n\r\n/**\r\n * 用来画矢量的mesh。顶点格式固定为 x,y,rgba\r\n */\r\nexport class MeshVG extends Mesh2D {\r\n    static const_stride: number = 12;// 36;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n    static vertexDeclaration: VertexDeclaration = null;\r\n\r\n    static __init__(): void {\r\n        MeshVG._fixattriInfo = [5126/*gl.FLOAT*/, 2, 0,\t//x,y\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 8];\r\n    }\r\n\r\n    constructor() {\r\n        super(MeshVG.const_stride, 4, 4);\t//x,y,rgba\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshVG._fixattriInfo);\r\n        if (!MeshVG.vertexDeclaration)\r\n            MeshVG.vertexDeclaration = new VertexDeclaration(12, [\r\n                new VertexElement(0, VertexElementFormat.Vector2, 0),\r\n                new VertexElement(8, VertexElementFormat.Byte4, 1),\r\n            ]);\r\n        this._vb.vertexDeclaration = MeshVG.vertexDeclaration;\r\n    }\r\n\r\n    static getAMesh(mainctx: boolean): MeshVG {\r\n        //console.log('getmeshvg');\r\n        var ret: MeshVG;\r\n        if (MeshVG._POOL.length) {\r\n            ret = MeshVG._POOL.pop();\r\n        } else\r\n            ret = new MeshVG();\r\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshVG.const_stride, false);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 往矢量mesh中添加顶点和index。会把rgba和points在mesh中合并。\r\n     * @param\tpoints\t顶点数组，只包含x,y。[x,y,x,y...]\r\n     * @param\trgba\trgba颜色\r\n     * @param\tib\t\tindex数组。\r\n     */\r\n    addVertAndIBToMesh(ctx: Context, points: any[], rgba: number, ib: any[]): void {\r\n        var startpos: number = this._vb.buffer2D.needSize(points.length / 2 * MeshVG.const_stride);//vb的起点。\r\n        var f32pos: number = startpos >> 2;\r\n        var vbdata: Float32Array = this._vb._floatArray32 || this._vb.getFloat32Array();\r\n        var vbu32Arr: Uint32Array = this._vb._uint32Array;\r\n        var ci: number = 0;\r\n        //vb\r\n        //var clipinfo:Array = ctx.getTransedClipInfo();\r\n        var sz: number = points.length / 2;\r\n        for (var i: number = 0; i < sz; i++) {\r\n            vbdata[f32pos++] = points[ci]; vbdata[f32pos++] = points[ci + 1]; ci += 2;\r\n            vbu32Arr[f32pos++] = rgba;\r\n            /*\r\n            //裁剪信息。\r\n            vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\r\n            vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1]; //cliprect的位置\r\n            */\r\n        }\r\n        this._vb.buffer2D.setNeedUpload();\r\n\r\n        //ib\r\n        //TODO 现在这种添加数据的方法效率非常低。而且会引起大量的gc\r\n        this._ib.buffer2D.append(new Uint16Array(ib));\r\n        this._ib.buffer2D.setNeedUpload();\r\n\r\n        this.vertNum += sz;\r\n        this.indexNum += ib.length;\r\n    }\r\n\r\n    /**\r\n     * 把本对象放到回收池中，以便getMesh能用。\r\n     * @override\r\n     */\r\n    releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this._ib.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshVG._POOL.push(this);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._ib.disposeResource();\r\n        this._vb.deleteBuffer();\r\n    }\r\n}\r\n\r\n","export class NativeWebGLCacheAsNormalCanvas {\r\n    _nativeObj: any;\r\n    _context: any;\r\n    constructor(ctx: any, sp: any)\r\n    {\r\n        this._context = ctx;\r\n        this._nativeObj = new (window as any)._conchWebGLCacheAsNormalCanvas(ctx._nativeObj, 0);\r\n    }\r\n    startRec(): void {\r\n        this._nativeObj.startRec();\r\n    }\r\n    endRec(): void {\r\n        this._nativeObj.endRec();\r\n    }\r\n    isCacheValid(): boolean {\r\n        return this._nativeObj.isCacheValid();\r\n    }  \r\n    isTextNeedRestore(): boolean {\r\n        return this._nativeObj.isTextNeedRestore();\r\n    }\r\n    get context() {\r\n        return this._context;\r\n    }\r\n}\r\n","import { Sprite } from \"../../display/Sprite\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Submit } from \"../submit/Submit\"\r\nimport { SubmitBase } from \"../submit/SubmitBase\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\r\nimport { MeshTexture } from \"../utils/MeshTexture\"\r\nimport { MeshVG } from \"../utils/MeshVG\"\r\nimport { NativeWebGLCacheAsNormalCanvas } from \"./NativeWebGLCacheAsNormalCanvas\"\r\n\r\n/**\r\n * 对象 cacheas normal的时候，本质上只是想把submit缓存起来，以后直接执行\r\n * 为了避免各种各样的麻烦，这里采用复制相应部分的submit的方法。执行环境还是在原来的context中\r\n * 否则包括clip等都非常难以处理\r\n */\r\nexport class WebGLCacheAsNormalCanvas {\r\n    submitStartPos: number = 0;\t// 对应的context的submit的开始的地方\r\n    submitEndPos: number = 0;\r\n    context: Context;\r\n    touches: any[] = [];\t\t//记录的文字信息。cacheas normal的话，文字要能正确touch\r\n    submits: any[] = [];\t\t// 从context中剪切的submit\r\n    sprite: Sprite|null = null;\t// 对应的sprite对象\r\n\r\n    // submit需要关联稳定独立的mesh。所以这里要创建自己的mesh对象\r\n    /**@internal */\r\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\r\n    private _pathMesh: MeshVG;\t\t\t//矢量专用mesh。\r\n    private _triangleMesh: MeshTexture;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\r\n    meshlist: any[] = [];\t\t\t//本context用到的mesh\r\n\r\n    // 原始context的原始值\r\n    private _oldMesh: MeshQuadTexture|null;\r\n    private _oldPathMesh: MeshVG|null;\r\n    private _oldTriMesh: MeshTexture|null;\r\n    private _oldMeshList: any[];\r\n\r\n    // cache的时候对应的clip\r\n    private cachedClipInfo: Matrix = new Matrix();\t// 用来判断是否需要把cache无效\r\n    //private var oldMatrix:Matrix = null;\t\t\t\t//本地画的时候完全不应用矩阵，所以需要先保存老的，以便恢复\t\t这样会丢失缩放信息，导致文字模糊，所以不用这种方式了\r\n    private oldTx: number = 0;\r\n    private oldTy: number = 0;\r\n    private static matI: Matrix = new Matrix();\r\n\r\n    // 创建这个canvas的时候对应的矩阵的逆矩阵。因为要保留矩阵的缩放信息。所以采用逆矩阵的方法。\r\n    invMat: Matrix = new Matrix();\r\n\r\n    constructor(ctx: Context, sp: Sprite) {\r\n        this.context = ctx;\r\n        this.sprite = sp;\r\n        ctx._globalClipMatrix.copyTo(this.cachedClipInfo);\r\n    }\r\n\r\n    startRec(): void {\r\n\t\tlet context = this.context;\r\n        // 如果有文字优化，这里要先提交一下\r\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\r\n            context._charSubmitCache.enable(false, context);\r\n            context._charSubmitCache.enable(true, context);\r\n        }\r\n        context._incache = true;\r\n        this.touches.length = 0;\r\n        //记录需要touch的文字资源\r\n        ((<any>context)).touches = this.touches;\r\n        context._globalClipMatrix.copyTo(this.cachedClipInfo);\r\n\r\n        this.submits.length = 0;\r\n        this.submitStartPos = context._submits._length;\r\n\r\n        // 先把之前的释放掉\r\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this._mesh = MeshQuadTexture.getAMesh(false);\r\n        this._pathMesh = MeshVG.getAMesh(false);\r\n        this._triangleMesh = MeshTexture.getAMesh(false);\r\n\r\n        this.meshlist.push(this._mesh);\r\n        this.meshlist.push(this._pathMesh);\r\n        this.meshlist.push(this._triangleMesh);\r\n\r\n        // 打断合并\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        // 接管context中的一些值\r\n        this._oldMesh = context._mesh;\r\n        this._oldPathMesh = context._pathMesh;\r\n        this._oldTriMesh = context._triangleMesh;\r\n        this._oldMeshList = context.meshlist;\r\n\r\n        context._mesh = this._mesh;\r\n        context._pathMesh = this._pathMesh;\r\n        context._triangleMesh = this._triangleMesh;\r\n        context.meshlist = this.meshlist;\r\n\r\n        // 要取消位置，因为以后会再传入位置。这里好乱\r\n        this.oldTx = context._curMat.tx;\r\n        this.oldTy = context._curMat.ty;\r\n        context._curMat.tx = 0;\r\n        context._curMat.ty = 0;\r\n\r\n        // 取消缩放等\r\n        context._curMat.copyTo(this.invMat);\r\n        this.invMat.invert();\r\n        //oldMatrix = context._curMat;\r\n        //context._curMat = matI;\r\n    }\r\n\r\n    endRec(): void {\r\n\t\tlet context = this.context;\r\n        // 如果有文字优化，这里要先提交一下\r\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\r\n            context._charSubmitCache.enable(false, context);\r\n            context._charSubmitCache.enable(true, context);\r\n        }\r\n        // copy submit\r\n        var parsubmits: any = context._submits;\r\n        this.submitEndPos = parsubmits._length;\r\n        var num: number = this.submitEndPos - this.submitStartPos;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this.submits.push(parsubmits[this.submitStartPos + i]);\r\n        }\r\n        parsubmits._length -= num;\r\n\r\n        // 恢复原始context的值\r\n        context._mesh = this._oldMesh;\r\n        context._pathMesh = this._oldPathMesh;\r\n        context._triangleMesh = this._oldTriMesh;\r\n        context.meshlist = this._oldMeshList;\r\n\r\n        // 打断合并\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        // 恢复matrix\r\n        //context._curMat = oldMatrix;\r\n        context._curMat.tx = this.oldTx;\r\n        context._curMat.ty = this.oldTy;\r\n        ((<any>context)).touches = null;\r\n        context._incache = false;\r\n    }\r\n\r\n    /**\r\n     * 当前缓存是否还有效。例如clip变了就失效了，因为clip太难自动处理\r\n     * @return\r\n     */\r\n    isCacheValid(): boolean {\r\n        var curclip: Matrix = this.context._globalClipMatrix;\r\n        if (curclip.a != this.cachedClipInfo.a || curclip.b != this.cachedClipInfo.b || curclip.c != this.cachedClipInfo.c\r\n            || curclip.d != this.cachedClipInfo.d || curclip.tx != this.cachedClipInfo.tx || curclip.ty != this.cachedClipInfo.ty)\r\n            return false;\r\n        return true;\r\n    }\r\n    isTextNeedRestore(): boolean {\r\n        var textNeedRestore: boolean = false;\r\n        var charRIs: any[] = this.touches;\r\n\t\tif (charRIs) {\r\n\t\t\tfor (var ci: number = 0; ci < charRIs.length; ci++) {\r\n\t\t\t\tif (charRIs[ci].deleted) {\r\n\t\t\t\t\ttextNeedRestore = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        return textNeedRestore;\r\n    }\r\n    flushsubmit(): void {\r\n        var curSubmit: SubmitBase = SubmitBase.RENDERBASE;\r\n        this.submits.forEach(function (subm: Submit): void {\r\n            if (subm == SubmitBase.RENDERBASE) return;\r\n            SubmitBase.preRender = curSubmit;\r\n            curSubmit = subm;\r\n            subm.renderSubmit();\r\n        });\r\n    }\r\n\r\n    releaseMem(): void {\r\n\r\n    }\r\n}\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n\t//@ts-ignore\r\n\tWebGLCacheAsNormalCanvas = NativeWebGLCacheAsNormalCanvas;\r\n}","import { NodeFlags } from \"../Const\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { SpriteStyle } from \"../display/css/SpriteStyle\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { _RenderFunction } from \"./RenderSprite\"\r\n\r\n/**\r\n * @internal\r\n * 快速节点命令执行器\r\n * 多个指令组合才有意义，单个指令没必要在下面加\r\n */\r\nexport class LayaGLQuickRunner {\r\n    /*[FILEINDEX:10000]*/\r\n    static map: _RenderFunction[] = [];\r\n    private static curMat: Matrix = new Matrix();\r\n    /**@internal */\r\n    static __init__(): void {\r\n        /*\r\n           glQuickMap[\"drawNode;\"] = drawNode;\r\n           glQuickMap[\"drawNodes;\"] = drawNodes;\r\n           glQuickMap[\"drawLayaGL;\"] = drawLayaGL;\r\n           glQuickMap[\"drawLayaGL;drawNodes;\"] = drawLayaGL_drawNodes;\r\n           glQuickMap[\"save;alpha;drawNode;restore;\"] = save_alpha_drawNode_restore;\r\n           glQuickMap[\"save;alpha;drawLayaGL;restore;\"] = save_alpha_drawLayaGL_restore;\r\n         */\r\n        //glQuickMap[\"save;alpha;drawTextureWithGr;restore;\"] = save_alpha_drawTextureWithGr_restore;\r\n        //glQuickMap[\"save;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\r\n        //glQuickMap[\"drawTextureWithGr;\"] = drawTextureWithGr;\r\n        //glQuickMap[\"save;transform;drawNodes;restore;\"] = save_transform_drawNodes_restore;\r\n        //glQuickMap[\"save;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //map[SpriteConst.TEXTURE] = _drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_transform_drawLayaGL;\r\n        //map[ SpriteConst.GRAPHICS] = _drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.transform_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.CHILDS] = LayaGLQuickRunner.transform_drawNodes;\r\n\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_transform_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.transform_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.GRAPHICS | SpriteConst.CHILDS] = LayaGLQuickRunner.drawLayaGL_drawNodes;\r\n    }\r\n\r\n    static transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var tex: Texture = sprite.texture;\r\n\r\n\r\n        /*\r\n        var ctx:WebGLContext2D = context as WebGLContext2D;\r\n        var ctxm:Matrix = ctx._curMat;\r\n        ctxm.copyTo(curMat);\r\n        //context.saveTransform(curMat);\r\n        ctx.transformByMatrixNoSave(sprite.getTransform(), x, y);\r\n        ctx.drawTexture(tex, -style.pivotX, -style.pivotY, sprite._width || tex.width, sprite._height || tex.height);\r\n        curMat.copyTo(ctxm);\r\n        //ctx.restoreTransform(curMat);\r\n        */\r\n\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n\r\n        var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n        var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n        var wRate: number = width / tex.sourceWidth;\r\n        var hRate: number = height / tex.sourceHeight;\r\n        width = tex.width * wRate;\r\n        height = tex.height * hRate;\r\n        if (width <= 0 || height <= 0) return null;\r\n        var px: number = -sprite.pivotX + tex.offsetX * wRate;\r\n        var py: number = -sprite.pivotY + tex.offsetY * hRate;\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            context.drawTexture(tex, px, py, width, height);\r\n\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n        /*\r\n        context.saveTransform(curMat);\r\n        var w:int = sprite._width || tex.width;\r\n        var h:int = sprite._height || tex.height;\r\n        var mat:Matrix = sprite.transform;// (sprite as Object)._tfChanged?(sprite as Object)._adjustTransform():(sprite as Object)._transform;\r\n        mat.tx += x; mat.ty += y;\r\n        //(context as WebGLContext2D).drawTextureWithTransform(tex, -style.pivotX, -style.pivotY, w, h,mat,x,y,1,null,null);\r\n    \t\r\n        var ctx:WebGLContext2D = context;\r\n        var curMat:Matrix = ctx._curMat;\r\n        var tmpMat:Matrix = ctx._tmpMatrix;\r\n        var transform = mat;\r\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\r\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + x; tmpMat.ty = transform.ty + y;\r\n        tmpMat._bTransform = transform._bTransform;\r\n        if (transform && curMat._bTransform) {\r\n            Matrix.mul(tmpMat, curMat, tmpMat);\r\n            transform = tmpMat;\r\n            transform._bTransform = true;\r\n        }else {\r\n            //如果curmat没有旋转。\r\n            transform = tmpMat;\r\n        }\r\n        ctx._drawTextureM(tex, x, y, w,h, mat, 1,null);\r\n    \t\r\n        //var st = __JS__(\"performance.now()\");\r\n        //Laya.stage.perfdt += (__JS__(\"performance.now()\")-st);\r\n        context.restoreTransform(curMat);\r\n        */\r\n    }\r\n\r\n    //static public function _drawTexture(sprite:Sprite, context:Context, x:Number, y:Number):void {\r\n    //var tex:Texture = sprite.texture;\r\n    //context.drawTexture(tex, x-sprite.pivotX, y-sprite.pivotY, sprite._width || tex.width, sprite._height || tex.height);\r\n    //}\r\n\r\n    static alpha_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        var tex: Texture = sprite.texture;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n            var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n            var wRate: number = width / tex.sourceWidth;\r\n            var hRate: number = height / tex.sourceHeight;\r\n            width = tex.width * wRate;\r\n            height = tex.height * hRate;\r\n            if (width <= 0 || height <= 0) return null;\r\n            var px: number = x - style.pivotX + tex.offsetX * wRate;\r\n            var py: number = y - style.pivotY + tex.offsetY * hRate;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                context.drawTexture(tex, px, py, width, height);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        var tex: Texture = sprite.texture;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n\r\n            context.saveTransform(LayaGLQuickRunner.curMat);\r\n            context.transformByMatrix(sprite.transform, x, y);\r\n            var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n            var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n            var wRate: number = width / tex.sourceWidth;\r\n            var hRate: number = height / tex.sourceHeight;\r\n            width = tex.width * wRate;\r\n            height = tex.height * hRate;\r\n            if (width <= 0 || height <= 0) return null;\r\n            var px: number = -style.pivotX + tex.offsetX * wRate;\r\n            var py: number = -style.pivotY + tex.offsetY * hRate;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                context.drawTexture(tex, px, py, width, height);\r\n            context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n\r\n            context.saveTransform(LayaGLQuickRunner.curMat);\r\n            context.transformByMatrix(sprite.transform, x, y);\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n            context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                sprite._graphics && sprite._graphics._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    //static public function _drawLayaGL(sprite:Sprite, context:Context, x:Number, y:Number):void {\r\n    //sprite._graphics._render(sprite, context, x, y);\r\n    //}\t\t\r\n\r\n    static transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        //var transform:Matrix = sprite.transform;\r\n\r\n        //临时\r\n        //if (transform) {\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n        //}else {\r\n        //sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n        //}\t\t\t\r\n    }\r\n\r\n    static transform_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        //var transform:Matrix = sprite.transform;\r\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n\r\n        var style: SpriteStyle = sprite._style;\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n\r\n        //x = x-style.pivotX;\r\n        //y = y - style.pivotY;\r\n\r\n        x = -style.pivotX;\r\n        y = -style.pivotY;\r\n\r\n        var childs: any[] = sprite._children, n: number = childs.length;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\r\n                visFlag = false;\r\n\r\n            if (visFlag)\r\n                ele.render(context, x, y);\r\n        }\r\n\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n\r\n    static drawLayaGL_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n\r\n        var style: SpriteStyle = sprite._style;\r\n        x = x - style.pivotX;\r\n        y = y - style.pivotY;\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            sprite._graphics && sprite._graphics._render(sprite, context, x, y);\r\n\r\n        var childs: any[] = sprite._children, n: number = childs.length;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\r\n                visFlag = false;\r\n\r\n            if (visFlag)\r\n                ele.render(context, x, y);\r\n\r\n        }\r\n\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n}\r\n\r\n","import { IFilter } from \"./IFilter\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { ColorFilter } from \"./ColorFilter\";\r\nimport { BlurFilter } from \"./BlurFilter\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>Filter</code> 是滤镜基类。\r\n */\r\nexport class NativeFilter implements IFilter {\r\n    /**@private 模糊滤镜。*/\r\n    static BLUR: number = 0x10;\r\n    /**@private 颜色滤镜。*/\r\n    static COLOR: number = 0x20;\r\n    /**@private 发光滤镜。*/\r\n    static GLOW: number = 0x08;\r\n    /** @internal*/\r\n    _glRender: any;\r\n\r\n    /**\r\n     * 创建一个 <code>Filter</code> 实例。\r\n     * */\r\n    constructor() { }\r\n\r\n    /**@private 滤镜类型。*/\r\n    get type(): number { return -1 }\r\n\r\n    static _filter = function (this: RenderSprite, sprite: Sprite, context: any, x: number, y: number): void {\r\n        var webglctx: any = context;\r\n        var next: any = ((<RenderSprite>this))._next;\r\n        if (next) {\r\n            var filters: any[] = sprite.filters, len: number = filters.length;\r\n            //如果只有一个滤镜，那么还用原来的方式\r\n            if (len == 1 && (filters[0].type == NativeFilter.COLOR)) {\r\n                context.save();\r\n                context.setColorFilter(filters[0]);\r\n                next._fun.call(next, sprite, context, x, y);\r\n                context.restore();\r\n                return;\r\n            }\r\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\r\n            var svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\t//拷贝用shaderValue\r\n            var b: Rectangle;\r\n\r\n            var p: Point = Point.TEMP;\r\n            var tMatrix: Matrix = webglctx._curMat;\r\n            var mat: Matrix = Matrix.create();\r\n            tMatrix.copyTo(mat);\r\n            var tPadding: number = 0;\t//给glow用\r\n            var tHalfPadding: number = 0;\r\n            var tIsHaveGlowFilter: boolean = false;\r\n            //这里判断是否存储了out，如果存储了直接用;\r\n            var source: any = null;\r\n            var out: any = sprite._cacheStyle.filterCache || null;\r\n            if (!out || sprite.getRepaint() != 0) {\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\r\n                //glow需要扩展边缘\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = new Rectangle();\r\n                b.copyFrom(sprite.getSelfBounds());\r\n                b.x += sprite.x;\r\n                b.y += sprite.y;\r\n                b.x -= sprite.pivotX + 4;//blur \r\n                b.y -= sprite.pivotY + 4;//blur\r\n                var tSX: number = b.x;\r\n                var tSY: number = b.y;\r\n                //重新计算宽和高\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //out && WebGLRTMgr.releaseRT(out);// out.recycle();\r\n                out && out.destroy();// out.recycle();\r\n                //source = WebGLRTMgr.getRT(b.width, b.height);\r\n                source = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n                //var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\r\n                var outRT: any = out = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n                sprite._getCacheStyle().filterCache = out;\r\n                //使用RT\r\n                webglctx.pushRT();\r\n                webglctx.useRT(source);\r\n                var tX: number = sprite.x - tSX + tHalfPadding;\r\n                var tY: number = sprite.y - tSY + tHalfPadding;\r\n                //执行节点的渲染\r\n                next._fun.call(next, sprite, context, tX, tY);\r\n                webglctx.useRT(outRT);\r\n                for (var i: number = 0; i < len; i++) {\r\n                    if (i != 0) {\r\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\r\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\r\n                        webglctx.useRT(source);\r\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\r\n                        webglctx.useRT(outRT);\r\n                    }\r\n                    var fil: NativeFilter = filters[i];\r\n                    //把src往out上画\r\n                    switch (fil.type) {\r\n                        case NativeFilter.BLUR:\r\n                            //fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\r\n                            webglctx.drawTargetBlurFilter(source, 0, 0, b.width, b.height, (fil as BlurFilter).strength);\r\n                            break;\r\n                        case NativeFilter.GLOW:\r\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            break;\r\n                        case NativeFilter.COLOR:\r\n                            webglctx.setColorFilter((<ColorFilter>fil));\r\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(RenderSpriteData.Texture2D));\r\n                            webglctx.setColorFilter(null);\r\n                            break;\r\n                    }\r\n                }\r\n                webglctx.popRT();\r\n            } else {\r\n\r\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = sprite.getBounds();\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //edit\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                b.x -= sprite.pivotX + 4; //blur \r\n                b.y -= sprite.pivotY + 4;//blur \r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                //scope.addValue(\"out\", out);\r\n            }\r\n            x = x - tHalfPadding - sprite.x;\r\n            y = y - tHalfPadding - sprite.y;\r\n            p.setTo(x, y);\r\n            mat.transformPoint(p);\r\n            x = p.x + b.x;\r\n            y = p.y + b.y;\r\n            //把最后的out纹理画出来\r\n            //webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\r\n\r\n            //把对象放回池子中\r\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\r\n            /*if (source) {\r\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\r\n                    s.destroy();\r\n                }, this);\r\n                source = null;\r\n                context.addRenderObject(submit);\r\n            }*/\r\n            webglctx.drawFilter(out, source, x, y, b.width, b.height);\r\n            mat.destroy();\r\n        }\r\n    }\r\n}\r\n\r\n","import { NodeFlags } from \"../Const\";\r\nimport { CacheStyle } from \"../display/css/CacheStyle\";\r\nimport { SpriteStyle } from \"../display/css/SpriteStyle\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { SpriteConst } from \"../display/SpriteConst\";\r\nimport { Filter } from \"../filters/Filter\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\r\nimport { LayaGLQuickRunner } from \"./LayaGLQuickRunner\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { NativeFilter } from \"../filters/NativeFilter\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { HitArea } from \"../utils/HitArea\";\r\n\r\n/**\r\n * @private\r\n * \r\n */\r\nexport interface _RenderFunction {\r\n    (sp: Sprite, ctx: Context, x: number, y: number): void;\r\n}\r\n\r\nconst INIT = 0x11111;\r\n/**\r\n * @private\r\n * 精灵渲染器\r\n */\r\nexport class RenderSprite {\r\n    /** @private */\r\n    static renders: RenderSprite[] = [];\r\n    /** @private */\r\n    protected static NORENDER: RenderSprite = new RenderSprite(0, null);\r\n    /** @internal */\r\n    _next: RenderSprite;\r\n    /** @internal */\r\n    _fun: Function;\r\n\r\n    /** @internal */\r\n    static __init__(): void {\r\n        LayaGLQuickRunner.__init__();\r\n        var i: number, len: number;\r\n        var initRender: RenderSprite;\r\n        initRender = new RenderSprite(INIT, null);\r\n        len = RenderSprite.renders.length = SpriteConst.CHILDS * 2;\r\n        for (i = 0; i < len; i++)\r\n            RenderSprite.renders[i] = initRender;\r\n\r\n        RenderSprite.renders[0] = new RenderSprite(0, null);\r\n    }\r\n\r\n    private static _initRenderFun(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var type: number = sprite._renderType;\r\n        var r: RenderSprite = RenderSprite.renders[type] = RenderSprite._getTypeRender(type);\r\n        r._fun(sprite, context, x, y);\r\n    }\r\n\r\n    private static _getTypeRender(type: number): RenderSprite {\r\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) return new RenderSprite(type, null);\r\n        var rst: RenderSprite | null = null;\r\n        var tType: number = SpriteConst.CHILDS;\r\n        while (tType > 0) {\r\n            if (tType & type)\r\n                rst = new RenderSprite(tType, rst);\r\n            tType = tType >> 1;\r\n        }\r\n        return rst as RenderSprite;\r\n    }\r\n\r\n    constructor(type: number, next: RenderSprite | null) {\r\n\r\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) {\r\n            this._fun = LayaGLQuickRunner.map[type];\r\n            this._next = RenderSprite.NORENDER;\r\n            return;\r\n        }\r\n        this._next = next || RenderSprite.NORENDER;\r\n        switch (type) {\r\n            case 0:\r\n                this._fun = this._no;\r\n                return;\r\n            case SpriteConst.ALPHA:\r\n                this._fun = this._alpha;\r\n                return;\r\n            case SpriteConst.TRANSFORM:\r\n                this._fun = this._transform;\r\n                return;\r\n            case SpriteConst.BLEND:\r\n                this._fun = this._blend;\r\n                return;\r\n            case SpriteConst.CANVAS:\r\n                this._fun = this._canvas;\r\n                return;\r\n            case SpriteConst.MASK:\r\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\r\n                    this._fun = this._maskNative;\r\n                }\r\n                else {\r\n                    this._fun = this._mask;\r\n                }\r\n                return;\r\n            case SpriteConst.CLIP:\r\n                this._fun = this._clip;\r\n                return;\r\n            case SpriteConst.STYLE:\r\n                this._fun = this._style;\r\n                return;\r\n            case SpriteConst.GRAPHICS:\r\n                this._fun = this._graphics;\r\n                return;\r\n            case SpriteConst.CHILDS:\r\n                this._fun = this._children;\r\n                return;\r\n            case SpriteConst.CUSTOM:\r\n                this._fun = this._custom;\r\n                return;\r\n            case SpriteConst.TEXTURE:\r\n                this._fun = this._texture;\r\n                return;\r\n            case SpriteConst.FILTERS:\r\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\r\n                    this._fun = NativeFilter._filter;\r\n                }\r\n                else {\r\n                    this._fun = Filter._filter;\r\n                }\r\n                return;\r\n            case SpriteConst.HITAREA:\r\n                this._fun = this._hitarea;\r\n                return;\r\n            case INIT:\r\n                this._fun = RenderSprite._initRenderFun;\r\n                return;\r\n        }\r\n\r\n        this.onCreate(type);\r\n    }\r\n\r\n    protected onCreate(type: number): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _style(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        //这里的功能取消了，应该不会走进这里\r\n    }\r\n\r\n    /**@internal */\r\n    _no(sprite: Sprite, context: Context, x: number, y: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _custom(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        sprite.customRender(context, x, y);\r\n        this._next._fun.call(this._next, sprite, context, 0, 0);\r\n    }\r\n\r\n    /**@internal */\r\n    _clip(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        let next: RenderSprite = this._next;\r\n        if (next == RenderSprite.NORENDER) return;\r\n\r\n        if (sprite._getBit(NodeFlags.DISABLE_INNER_CLIPPING) && !context._drawingToTexture) {\r\n            next._fun.call(next, sprite, context, x, y);\r\n            return;\r\n        }\r\n\r\n        let r = sprite._style.scrollRect;\r\n        let width = r.width;\r\n        let height = r.height;\r\n        if (width === 0)\r\n            width = 0.001;\r\n        if (height === 0)\r\n            height = 0.001;\r\n        context.save();\r\n        context.clipRect(x, y, width, height);\r\n        next._fun.call(next, sprite, context, x - r.x, y - r.y);\r\n        context.restore();\r\n    }\r\n\r\n    /**@internal */\r\n    _texture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\r\n            var tex: Texture = sprite.texture;\r\n            if (tex._getSource()) {\r\n                var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n                var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n                var wRate: number = width / tex.sourceWidth;\r\n                var hRate: number = height / tex.sourceHeight;\r\n                width = tex.width * wRate;\r\n                height = tex.height * hRate;\r\n                if (width > 0 && height > 0) {\r\n                    let px = x - sprite.pivotX + tex.offsetX * wRate;\r\n                    let py = y - sprite.pivotY + tex.offsetY * hRate;\r\n                    context.material = sprite.graphics.material;\r\n                    context.drawTexture(tex, px, py, width, height, 0xffffffff);\r\n                    context.material = null;\r\n                }\r\n            }\r\n        }\r\n        var next: RenderSprite = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    _graphics(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\r\n            var style = sprite._style;\r\n            var g = sprite._graphics;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n        }\r\n        var next = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal IDE only*/\r\n    _hitarea(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!context._drawingToTexture && sprite.hitArea) {\r\n            var style = sprite._style;\r\n            var g = (<HitArea>sprite.hitArea)._hit;\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= 0.5;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            g = (<HitArea>sprite.hitArea)._unHit;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            context.globalAlpha = temp;\r\n        }\r\n        var next = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _alpha(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            var next: RenderSprite = this._next;\r\n            next._fun.call(next, sprite, context, x, y);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _transform(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var transform: Matrix = sprite.transform, _next: RenderSprite = this._next;\r\n        if (transform && _next != RenderSprite.NORENDER) {\r\n            context.save();\r\n            context.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + x, transform.ty + y);\r\n            _next._fun.call(_next, sprite, context, 0, 0);\r\n            context.restore();\r\n        } else {\r\n            if (_next != RenderSprite.NORENDER)\r\n                _next._fun.call(_next, sprite, context, x, y);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _children(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        let style: SpriteStyle = sprite._style;\r\n        let childs = <Sprite[]>sprite._children, n: number = childs.length;\r\n        x = x - sprite.pivotX;\r\n        y = y - sprite.pivotY;\r\n        let textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, x2: number, y2: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (visFlag) {\r\n                if (rect && ((x2 = ele._x) >= right || (x2 + ele.width) <= left || (y2 = ele._y) >= bottom || (y2 + ele.height) <= top))\r\n                    visFlag = false;\r\n                else if (sprite._cacheStyle.mask == ele && !ele._getBit(NodeFlags.DISABLE_VISIBILITY))\r\n                    visFlag = false;\r\n            }\r\n\r\n            if (visFlag) {\r\n                if (ele._getBit(NodeFlags.DISABLE_OUTER_CLIPPING))\r\n                    context.clipRect(0, 0, 1, 1, true);\r\n\r\n                ele.render(context, x, y);\r\n            }\r\n        }\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n\r\n        if (!_cacheStyle.enableCanvasRender || !context._drawingToTexture && _cacheStyle.mask && _cacheStyle.mask._getBit(NodeFlags.DISABLE_VISIBILITY)) {\r\n            _next._fun.call(_next, sprite, context, x, y);\r\n            return;\r\n        }\r\n        _cacheStyle.cacheAs === 'bitmap' ? (Stat.canvasBitmap++) : (Stat.canvasNormal++);\r\n\r\n        //检查保存的文字是否失效了\r\n        var cacheNeedRebuild: boolean = false;\r\n        var textNeedRestore: boolean = false;\r\n\r\n        if (_cacheStyle.canvas) {\r\n            // 检查文字是否被释放了，以及clip是否改变了，需要重新cache了\r\n            var canv: any = _cacheStyle.canvas;\r\n            textNeedRestore = canv.isTextNeedRestore && canv.isTextNeedRestore();\r\n            cacheNeedRebuild = canv.isCacheValid && !canv.isCacheValid();\r\n        }\r\n\r\n        if (sprite._needRepaint() || (!_cacheStyle.canvas) || textNeedRestore || cacheNeedRebuild || ILaya.stage.isGlobalRepaint()) {\r\n            if (_cacheStyle.cacheAs === 'normal') {\r\n                if (context._targets) {// 如果有target说明父节点已经是一个cacheas bitmap了，就不再走cacheas normal的流程了\r\n                    _next._fun.call(_next, sprite, context, x, y);\r\n                    return;\t//不再继续\r\n                } else {\r\n                    this._canvas_webgl_normal_repaint(sprite, context);\r\n                }\r\n            } else {\r\n                this._canvas_repaint(sprite, context, x, y);\r\n            }\r\n        }\r\n        var tRec: Rectangle = _cacheStyle.cacheRect;\r\n        //Stage._dbgSprite.graphics.drawRect(x, y, 30,30, null, 'red');\r\n        context.material = sprite.graphics.material;\r\n        context.drawCanvas(_cacheStyle.canvas, x + tRec.x, y + tRec.y, tRec.width, tRec.height);\r\n        context.material = null;\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas_repaint(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n        var tx: Context;\r\n        var canvas: HTMLCanvas = _cacheStyle.canvas;\r\n        var left: number;\r\n        var top: number;\r\n        var tRec: Rectangle;\r\n        var tCacheType: string = _cacheStyle.cacheAs;\r\n\r\n        var w: number, h: number;\r\n        var scaleX: number, scaleY: number;\r\n\r\n        var scaleInfo: Point;\r\n        scaleInfo = _cacheStyle._calculateCacheRect(sprite, tCacheType, x, y);\r\n        scaleX = scaleInfo.x;\r\n        scaleY = scaleInfo.y;\r\n\r\n        //显示对象实际的绘图区域\r\n        tRec = _cacheStyle.cacheRect;\r\n\r\n        //计算cache画布的大小\r\n        w = tRec.width * scaleX;\r\n        h = tRec.height * scaleY;\r\n        left = tRec.x;\r\n        top = tRec.y;\r\n\r\n        if (tCacheType === 'bitmap' && (w > 2048 || h > 2048)) {\r\n            console.warn(\"cache bitmap size larger than 2048, cache ignored\");\r\n            _cacheStyle.releaseContext();\r\n            _next._fun.call(_next, sprite, context, x, y);\r\n            return;\r\n        }\r\n        if (!canvas) {\r\n            _cacheStyle.createContext();\r\n            canvas = _cacheStyle.canvas;\r\n        }\r\n        tx = canvas.context as Context;\r\n\r\n        //WebGL用\r\n        tx.sprite = sprite;\r\n\r\n        (canvas.width != w || canvas.height != h) && canvas.size(w, h);//asbitmap需要合理的大小，所以size放到前面\r\n\r\n        if (tCacheType === 'bitmap') tx.asBitmap = true;\r\n        else if (tCacheType === 'normal') tx.asBitmap = false;\r\n\r\n        //清理画布。之前记录的submit会被全部清掉\r\n        tx.clear();\r\n\r\n        //TODO:测试webgl下是否有缓存模糊\r\n        if (scaleX != 1 || scaleY != 1) {\r\n            var ctx: any = tx;\r\n            ctx.save();\r\n            ctx.scale(scaleX, scaleY);\r\n            _next._fun.call(_next, sprite, tx, -left, -top);\r\n            ctx.restore();\r\n            sprite._applyFilters();\r\n        } else {\r\n            ctx = tx;\r\n            _next._fun.call(_next, sprite, tx, -left, -top);\r\n            sprite._applyFilters();\r\n        }\r\n\r\n        if (_cacheStyle.staticCache) _cacheStyle.reCache = false;\r\n        Stat.canvasReCache++;\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas_webgl_normal_repaint(sprite: Sprite, context: Context): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n        var canvas: WebGLCacheAsNormalCanvas = _cacheStyle.canvas as unknown as WebGLCacheAsNormalCanvas;\r\n\r\n        var tCacheType: string = _cacheStyle.cacheAs;\r\n        _cacheStyle._calculateCacheRect(sprite, tCacheType, 0, 0);\r\n\r\n        if (!canvas) {\r\n            canvas = new WebGLCacheAsNormalCanvas(context, sprite);\r\n            _cacheStyle.canvas = ((canvas as any) as HTMLCanvas);\r\n        }\r\n        var tx: Context = canvas.context as Context;\r\n\r\n\r\n        canvas.startRec();\r\n        _next._fun.call(_next, sprite, tx, sprite.pivotX, sprite.pivotY);\t// 由于后面的渲染会减去pivot，而cacheas normal并不希望这样，只希望创建一个原始的图像。所以在这里补偿。\r\n        sprite._applyFilters();\r\n\r\n        Stat.canvasReCache++;\r\n        canvas.endRec();\r\n\r\n        //context.drawCanvas(canvas, x , y , 1, 1); // 这种情况下宽高没用\r\n    }\r\n\r\n    /**@internal */\r\n    _blend(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var next: RenderSprite = this._next;\r\n        if (style.blendMode) {\r\n            context.save();\r\n            context.globalCompositeOperation = style.blendMode;\r\n            next._fun.call(next, sprite, context, x, y);\r\n            context.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, context, x, y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * mask的渲染。 sprite有mask属性的情况下，来渲染这个sprite\r\n     * @param\tsprite\r\n     * @param\tcontext\r\n     * @param\tx\r\n     * @param\ty\r\n     */\r\n    _mask(sprite: Sprite, ctx: Context, x: number, y: number): void {\r\n        let next = this._next;\r\n        let mask = sprite.mask;\r\n        if (mask && (!mask._getBit(NodeFlags.DISABLE_VISIBILITY) || ctx._drawingToTexture)) {\r\n            ctx.save();\r\n\r\n            let preBlendMode: string = ctx.globalCompositeOperation;\r\n            let tRect: Rectangle = new Rectangle();\r\n            //裁剪范围是根据mask来定的\r\n            tRect.copyFrom(mask.getBounds());\r\n            // 为什么round\r\n            let w = tRect.width = Math.round(tRect.width);\r\n            let h = tRect.height = Math.round(tRect.height);\r\n            tRect.x = Math.round(tRect.x);\r\n            tRect.y = Math.round(tRect.y);\r\n\r\n            if (w > 0 && h > 0) {\r\n                let tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\r\n\r\n                ctx.breakNextMerge();\r\n                //先把mask画到tmpTarget上\r\n                ctx.pushRT();\r\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));\r\n                mask.render(ctx, -tRect.x, -tRect.y);\r\n                ctx.breakNextMerge();\r\n                ctx.popRT();\r\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\r\n                ctx.save();\r\n\r\n                /**\r\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\r\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\r\n                 */\r\n                let shrink = 0.1;\r\n                ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n\r\n                //画出本节点的内容\r\n                next._fun.call(next, sprite, ctx, x, y);\r\n                ctx.restore();\r\n\r\n                //设置混合模式\r\n                preBlendMode = ctx.globalCompositeOperation;\r\n                ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\r\n\r\n                let shaderValue: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n                let uv = Texture.INV_UV;\r\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\r\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\r\n                //所以增加的限制。王亚伟\r\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\r\n\r\n                ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\r\n                ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\r\n            }\r\n\r\n            //恢复混合模式\r\n            ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\r\n\r\n            ctx.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, ctx, x, y);\r\n        }\r\n\r\n    }\r\n    _maskNative(sprite: Sprite, ctx: Context, x: number, y: number): void {\r\n        var next: RenderSprite = this._next;\r\n        var mask: Sprite = sprite.mask;\r\n        if (mask) {\r\n            ctx.save();\r\n            var preBlendMode: string = ctx.globalCompositeOperation;\r\n            var tRect: Rectangle = new Rectangle();\r\n            //裁剪范围是根据mask来定的\r\n            tRect.copyFrom(mask.getBounds());\r\n            // 为什么round\r\n            let w = tRect.width = Math.round(tRect.width);\r\n            let h = tRect.height = Math.round(tRect.height);\r\n            tRect.x = Math.round(tRect.x);\r\n            tRect.y = Math.round(tRect.y);\r\n\r\n            if (w > 0 && h > 0) {\r\n                let tmpRT: any = (ctx as any).drawMask(w, h);\r\n                /*var tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\r\n\r\n                ctx.breakNextMerge();\r\n                //先把mask画到tmpTarget上\r\n                ctx.pushRT();\r\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));*/\r\n                mask.render(ctx, -tRect.x, -tRect.y);\r\n                let shrink = 0.1;\r\n                (ctx as any).drawMasked(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\r\n                //ctx.breakNextMerge();\r\n                //ctx.popRT();\r\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\r\n                //ctx.save();\r\n\r\n                /**\r\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\r\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\r\n                 */\r\n                //let shrink = 0.1;\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w-shrink*2, h-shrink*2);\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n\r\n                //画出本节点的内容\r\n                next._fun.call(next, sprite, ctx, x, y);\r\n\r\n                (ctx as any).drawMaskComposite(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n                //ctx.restore();\r\n\r\n                //设置混合模式\r\n                //preBlendMode = ctx.globalCompositeOperation;\r\n                //ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\r\n\r\n                //var shaderValue: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\r\n                //var uv = Texture.INV_UV;\r\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\r\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\r\n                //所以增加的限制。王亚伟\r\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\r\n\r\n                //ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\r\n                //ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\r\n\r\n                //恢复混合模式\r\n                //ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\r\n            }\r\n            ctx.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, ctx, x, y);\r\n        }\r\n\r\n    }\r\n\r\n    //static tempUV: any[] = new Array(8);\r\n    static tmpTarget(ctx: Context, rt: RenderTexture2D, w: number, h: number): void {\r\n        rt.start();\r\n        rt.clear(0, 0, 0, 0);\r\n    }\r\n\r\n    static recycleTarget(rt: RenderTexture2D): void {\r\n        WebGLRTMgr.releaseRT(rt);\r\n    }\r\n\r\n    static setBlendMode(blendMode: string): void {\r\n        BlendMode.targetFns[BlendMode.TOINT[blendMode]]();\r\n    }\r\n}\r\n\r\n","import { Point } from \"./Point\";\r\n\r\n/**\r\n * @private\r\n * 计算贝塞尔曲线的工具类。\r\n */\r\nexport class Bezier {\r\n\r\n    /**\r\n     * 工具类单例\r\n     */\r\n    static I: Bezier = new Bezier();\r\n    /** @private */\r\n    private _controlPoints: any[] = [new Point(), new Point(), new Point()];\r\n    /** @private */\r\n    private _calFun: Function = this.getPoint2;\r\n\r\n    /** @private */\r\n    private _switchPoint(x: number, y: number): void {\r\n        var tPoint: Point = this._controlPoints.shift();\r\n        tPoint.setTo(x, y);\r\n        this._controlPoints.push(tPoint);\r\n    }\r\n\r\n    /**\r\n     * 计算二次贝塞尔点。\r\n     */\r\n    getPoint2(t: number, rst: any[]): void {\r\n        //二次贝塞尔曲线公式\r\n        var p1: Point = this._controlPoints[0];\r\n        var p2: Point = this._controlPoints[1];\r\n        var p3: Point = this._controlPoints[2];\r\n        var lineX: number = Math.pow((1 - t), 2) * p1.x + 2 * t * (1 - t) * p2.x + Math.pow(t, 2) * p3.x;\r\n        var lineY: number = Math.pow((1 - t), 2) * p1.y + 2 * t * (1 - t) * p2.y + Math.pow(t, 2) * p3.y;\r\n        rst.push(lineX, lineY);\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔点\r\n     */\r\n    getPoint3(t: number, rst: any[]): void {\r\n        //三次贝塞尔曲线公式\r\n        var p1: Point = this._controlPoints[0];\r\n        var p2: Point = this._controlPoints[1];\r\n        var p3: Point = this._controlPoints[2];\r\n        var p4: Point = this._controlPoints[3];\r\n        var lineX: number = Math.pow((1 - t), 3) * p1.x + 3 * p2.x * t * (1 - t) * (1 - t) + 3 * p3.x * t * t * (1 - t) + p4.x * Math.pow(t, 3);\r\n        var lineY: number = Math.pow((1 - t), 3) * p1.y + 3 * p2.y * t * (1 - t) * (1 - t) + 3 * p3.y * t * t * (1 - t) + p4.y * Math.pow(t, 3);\r\n        rst.push(lineX, lineY);\r\n    }\r\n\r\n    /**\r\n     * 计算贝塞尔点序列\r\n     */\r\n    insertPoints(count: number, rst: any[]): void {\r\n        var i: number;\r\n        count = count > 0 ? count : 5;\r\n        var dLen: number;\r\n        dLen = 1 / count;\r\n        for (i = 0; i <= 1; i += dLen) {\r\n            this._calFun(i, rst);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取贝塞尔曲线上的点。\r\n     * @param pList 控制点[x0,y0,x1,y1...]\r\n     * @param inSertCount 每次曲线的插值数量\r\n     */\r\n    getBezierPoints(pList: any[], inSertCount: number = 5, count: number = 2): any[] {\r\n        var i: number, len: number;\r\n        len = pList.length;\r\n        if (len < (count + 1) * 2) return [];\r\n        var rst: any[] = [];\r\n        switch (count) {\r\n            case 2:\r\n                this._calFun = this.getPoint2;\r\n                break;\r\n            case 3:\r\n                this._calFun = this.getPoint3;\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        while (this._controlPoints.length <= count) {\r\n            this._controlPoints.push(Point.create());\r\n        }\r\n        for (i = 0; i < count * 2; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n        }\r\n        for (i = count * 2; i < len; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n            if ((i / 2) % count == 0) this.insertPoints(inSertCount, rst);\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\n","export enum RenderStateType{\r\n    DepthTest,\r\n    DepthMask,\r\n    DepthFunc,\r\n    StencilTest,\r\n    StencilMask,\r\n    StencilFunc,\r\n    StencilOp,\r\n    BlendType,\r\n    BlendEquation,\r\n    BlendEquationSeparate,\r\n    BlendFunc,\r\n    BlendFuncSeperate,\r\n    CullFace,\r\n    FrontFace,\r\n}","import { ColorUtils } from \"../../utils/ColorUtils\"\r\n\r\nexport class DrawStyle {\r\n    static DEFAULT: DrawStyle = new DrawStyle(\"#000000\")\r\n\r\n    _color: ColorUtils;\r\n\r\n    static create(value: any): DrawStyle {\r\n        if (value) {\r\n            var color: ColorUtils = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\r\n            return color._drawStyle || (color._drawStyle = new DrawStyle(value));\r\n        }\r\n        return DrawStyle.DEFAULT;\r\n    }\r\n\r\n    constructor(value: any) {\r\n        this.setValue(value);\r\n    }\r\n\r\n    setValue(value: any): void {\r\n        if (value) {\r\n            this._color = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\r\n        }\r\n        else this._color = ColorUtils.create(\"#000000\");\r\n    }\r\n\r\n    reset(): void {\r\n        this._color = ColorUtils.create(\"#000000\");\r\n    }\r\n\r\n    toInt(): number {\r\n        return this._color.numColor;\r\n    }\r\n\r\n    equal(value: any): boolean {\r\n        if (typeof (value) == 'string') return this._color.strColor === (<string>value);\r\n        if (value instanceof ColorUtils) return this._color.numColor === ((<ColorUtils>value)).numColor;\r\n        return false;\r\n    }\r\n\r\n    toColorStr(): string {\r\n        return this._color.strColor;\r\n    }\r\n}\r\n\r\n\r\n","\r\nexport class Path {\r\n\r\n    //public var _rect:Rectangle;\r\n    /**@internal */\r\n    _lastOriX: number = 0;\t//moveto等的原始位置。没有经过内部矩阵变换的\r\n    /**@internal */\r\n    _lastOriY: number = 0;\r\n    paths: any[] = [];\t//所有的路径。{@type renderPath[] }\r\n    private _curPath: renderPath = null;\r\n\r\n\r\n    constructor() {\r\n    }\r\n\r\n    beginPath(convex: boolean): void {\r\n        this.paths.length = 1;\r\n        this._curPath = this.paths[0] = new renderPath();\r\n        this._curPath.convex = convex;\r\n        //_curPath.path = [];\r\n    }\r\n\r\n    closePath(): void {\r\n        this._curPath.loop = true;\r\n    }\r\n\r\n    newPath(): void {\r\n        this._curPath = new renderPath();\r\n        this.paths.push(this._curPath);\r\n    }\r\n\r\n    addPoint(pointX: number, pointY: number): void {\r\n        //tempArray.push(pointX, pointY);\r\n        this._curPath.path.push(pointX, pointY);\r\n    }\r\n\r\n    //直接添加一个完整的path\r\n    push(points: any[], convex: boolean): void {\r\n        if (!this._curPath) {\r\n            this._curPath = new renderPath();\r\n            this.paths.push(this._curPath);\r\n        } else if (this._curPath.path.length > 0) {\r\n            this._curPath = new renderPath();\r\n            this.paths.push(this._curPath);\r\n        }\r\n        var rp: renderPath = this._curPath;\r\n        rp.path = points.slice();//TODO 这个可能多次slice了\r\n        rp.convex = convex;\r\n    }\r\n\r\n    reset(): void {\r\n        this.paths.length = 0;//TODO 复用\r\n    }\r\n}\r\n\r\n\r\n\r\nclass renderPath {\r\n    path: any[] = []; //[x,y,x,y,....]的数组\r\n    loop: boolean = false;\r\n    convex: boolean = false;\r\n}\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { Context } from \"../../../resource/Context\"\r\nimport { SubmitBase } from \"../../submit/SubmitBase\"\r\n\r\nexport class SaveBase implements ISaveData {\r\n\r\n    /*[FILEINDEX:1]*/\r\n    /*[DISBALEOUTCONST-BEGIN]*/\r\n    static TYPE_ALPHA: number = 0x1;\r\n    static TYPE_FILESTYLE: number = 0x2;\r\n    static TYPE_FONT: number = 0x8;\r\n    static TYPE_LINEWIDTH: number = 0x100;\r\n    static TYPE_STROKESTYLE: number = 0x200;\r\n    static TYPE_MARK: number = 0x400;\r\n    static TYPE_TRANSFORM: number = 0x800;\r\n    static TYPE_TRANSLATE: number = 0x1000;\r\n    static TYPE_ENABLEMERGE: number = 0x2000;\r\n\r\n    static TYPE_TEXTBASELINE: number = 0x4000;\r\n    static TYPE_TEXTALIGN: number = 0x8000;\r\n    static TYPE_GLOBALCOMPOSITEOPERATION: number = 0x10000;\r\n    static TYPE_CLIPRECT: number = 0x20000;\r\n    static TYPE_CLIPRECT_STENCIL: number = 0x40000;\r\n    static TYPE_IBVB: number = 0x80000;\r\n    static TYPE_SHADER: number = 0x100000;\r\n    static TYPE_FILTERS: number = 0x200000;\r\n    static TYPE_FILTERS_TYPE: number = 0x400000;\r\n    static TYPE_COLORFILTER: number = 0x800000;\r\n    /*[DISBALEOUTCONST-END]*/\r\n    private static POOL: any = SaveBase._createArray();\r\n    private static _namemap: any = SaveBase._init();\r\n    /**@internal */\r\n    static _createArray(): any[] {\r\n        var value: any = [];\r\n        value._length = 0;\r\n        return value;\r\n    }\r\n    /**@internal */\r\n    static _init(): any {\r\n        var namemap: any = SaveBase._namemap = {};\r\n\r\n        namemap[SaveBase.TYPE_ALPHA] = \"ALPHA\";\r\n        namemap[SaveBase.TYPE_FILESTYLE] = \"fillStyle\";\r\n        namemap[SaveBase.TYPE_FONT] = \"font\";\r\n        namemap[SaveBase.TYPE_LINEWIDTH] = \"lineWidth\";\r\n        namemap[SaveBase.TYPE_STROKESTYLE] = \"strokeStyle\";\r\n\r\n        namemap[SaveBase.TYPE_ENABLEMERGE] = \"_mergeID\";\r\n\r\n        namemap[SaveBase.TYPE_MARK] = namemap[SaveBase.TYPE_TRANSFORM] = namemap[SaveBase.TYPE_TRANSLATE] = [];\r\n\r\n        namemap[SaveBase.TYPE_TEXTBASELINE] = \"textBaseline\";\r\n        namemap[SaveBase.TYPE_TEXTALIGN] = \"textAlign\";\r\n        namemap[SaveBase.TYPE_GLOBALCOMPOSITEOPERATION] = \"_nBlendType\";\r\n        namemap[SaveBase.TYPE_SHADER] = \"shader\";\r\n        namemap[SaveBase.TYPE_FILTERS] = \"filters\";\r\n        namemap[SaveBase.TYPE_COLORFILTER] = '_colorFiler';\r\n        return namemap;\r\n    }\r\n\r\n    private _valueName: string;\r\n    private _value: any;\r\n    private _dataObj: any;\r\n    private _newSubmit: boolean;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._dataObj[this._valueName] = this._value;\r\n        SaveBase.POOL[SaveBase.POOL._length++] = this;\r\n        this._newSubmit && (context._curSubmit = SubmitBase.RENDERBASE);\r\n    }\r\n\r\n    static save(context: Context, type: number, dataObj: any, newSubmit: boolean): void {\r\n        if ((context._saveMark._saveuse & type) !== type) {\r\n            context._saveMark._saveuse |= type;\r\n            var cache: any = SaveBase.POOL;\r\n            var o: any = cache._length > 0 ? cache[--cache._length] : (new SaveBase());\r\n            o._value = dataObj[o._valueName = SaveBase._namemap[type]];\r\n            o._dataObj = dataObj;\r\n            o._newSubmit = newSubmit;\r\n            var _save: any = context._save;\r\n            _save[_save._length++] = o;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Rectangle } from \"../../../maths/Rectangle\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveClipRect implements ISaveData {\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n\r\n    _globalClipMatrix: Matrix = new Matrix();\r\n    _clipInfoID: number = -1;\r\n    _clipRect: Rectangle = new Rectangle();\r\n    incache: boolean = false;\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._globalClipMatrix.copyTo(context._globalClipMatrix);\r\n        this._clipRect.clone(context._clipRect);\r\n        context._clipInfoID = this._clipInfoID;\r\n        SaveClipRect.POOL[SaveClipRect.POOL._length++] = this;\r\n        context._clipInCache = this.incache;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        if ((context._saveMark._saveuse & SaveBase.TYPE_CLIPRECT) == SaveBase.TYPE_CLIPRECT) return;\r\n        context._saveMark._saveuse |= SaveBase.TYPE_CLIPRECT;\r\n        var cache: any = SaveClipRect.POOL;\r\n        var o: SaveClipRect = cache._length > 0 ? cache[--cache._length] : (new SaveClipRect());\r\n        context._globalClipMatrix.copyTo(o._globalClipMatrix);\r\n        context._clipRect.clone(o._clipRect);\r\n        o._clipInfoID = context._clipInfoID;\r\n        o.incache = context._clipInCache;\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n}\r\n\r\n","import { Context } from \"../../../resource/Context\";\r\nimport { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\n\r\nexport class SaveMark implements ISaveData {\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _saveuse: number = 0;\r\n    /**@internal */\r\n    _preSaveMark: SaveMark;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean {\r\n        return true;\r\n    }\r\n\r\n    restore(context: Context): void {\r\n        context._saveMark = this._preSaveMark;\r\n        SaveMark.POOL[SaveMark.POOL._length++] = this;\r\n    }\r\n\r\n    static Create(context: Context): SaveMark {\r\n        var no: any = SaveMark.POOL;\r\n        var o: SaveMark = no._length > 0 ? no[--no._length] : (new SaveMark());\r\n        o._saveuse = 0;\r\n        o._preSaveMark = context._saveMark;\r\n        context._saveMark = o;\r\n        return o;\r\n    }\r\n}\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveTransform implements ISaveData {\r\n\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _savematrix: Matrix;\r\n    /**@internal */\r\n    _matrix: Matrix = new Matrix();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        context._curMat = this._savematrix;\r\n        SaveTransform.POOL[SaveTransform.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        var _saveMark: any = context._saveMark;\r\n        if ((_saveMark._saveuse & SaveBase.TYPE_TRANSFORM) === SaveBase.TYPE_TRANSFORM) return;\r\n        _saveMark._saveuse |= SaveBase.TYPE_TRANSFORM;\r\n        var no: any = SaveTransform.POOL;\r\n        var o: SaveTransform = no._length > 0 ? no[--no._length] : (new SaveTransform());\r\n        o._savematrix = context._curMat;\r\n        context._curMat = context._curMat.copyTo(o._matrix);\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n}\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveTranslate implements ISaveData {\r\n\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _mat: Matrix = new Matrix();\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._mat.copyTo(context._curMat);\r\n        SaveTranslate.POOL[SaveTranslate.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        var no: any = SaveTranslate.POOL;\r\n        var o: SaveTranslate = no._length > 0 ? no[--no._length] : (new SaveTranslate());\r\n        context._curMat.copyTo(o._mat);\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n\r\n}\r\n\r\n\r\n","#define SHADER_NAME TextureVS2D\r\n#include \"Sprite2DVertex.glsl\";\r\n\r\nvoid main() {\r\n\tvertexInfo info;\r\n\tgetVertexInfo(info);\r\n\r\n\tv_cliped = info.cliped;\r\n\tv_texcoordAlpha = info.texcoordAlpha;\r\n\tv_useTex = info.useTex;\r\n\tv_color = info.color;\r\n\r\n\tvec4 pos;\r\n\tgetPosition(pos);\r\n\tgl_Position = pos;\r\n\r\n}\r\n","/**\r\n * Mesh topology.\r\n */\r\n export enum MeshTopology {\r\n    /** Draws a single dot */\r\n    Points,\r\n    /** Draws a line between a pair of vertices */\r\n    Lines,\r\n    /** Draws a straight line to the next vertex, and connects the last vertex back to the first */\r\n    LineLoop,\r\n    /** Draws a straight line to the next vertex. */\r\n    LineStrip,\r\n    /** Draws a triangle for a group of three vertices */\r\n    Triangles,\r\n    /** Draws a triangle strip */\r\n    TriangleStrip,\r\n    /** Draws a triangle fan */\r\n    TriangleFan\r\n  }\r\n  ","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { Const } from \"../Const\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\r\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { NativeWebGLCacheAsNormalCanvas } from \"../webgl/canvas/NativeWebGLCacheAsNormalCanvas\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\r\nimport { HTMLCanvas } from \"./HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Texture } from \"./Texture\";\r\nimport { BufferState } from \"../webgl/utils/BufferState\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * @internal\r\n */\r\nenum CONTEXT2D_FUNCTION_ID {\r\n    SIZE = 0,\r\n    CLEAR,\r\n    SAVE,\r\n    TRANSFORM,\r\n    ALPHA,\r\n    RESTORE,\r\n    FILL_STYLE,\r\n    FILL_RECT,\r\n    STROKE_STYLE,\r\n    LINE_WIDTH,\r\n    STROKE_RECT,\r\n    FILL_WORD_TEXT,\r\n    DRAW_TEXTURE_SIZE_GRID,\r\n    DRAW_TEXTURE,\r\n    CLIP_RECT,\r\n    DRAW_LINE,\r\n    DRAW_LINES,\r\n    SCALE,\r\n    TRANSLATE,\r\n    ROTATE,\r\n    DRAW_CIRCLE,\r\n    DRAW_PIE,\r\n    DRAW_POLY,\r\n    DRAW_CURVES,\r\n    BEGIN_PATH,\r\n    MOVE_TO,\r\n    LINE_TO,\r\n    ARC_TO,\r\n    CLOSE_PATH,\r\n    FILL,\r\n    STROKE,\r\n    SET_AS_BITMAP,\r\n    DRAW_MASKED,\r\n    DRAW_TRANGLES,\r\n    SET_GLOBAL_COMPOSITE_OPERTAION,\r\n    FILL_WORDS,\r\n    FILL_TEXTURE,\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class NativeContext {\r\n    public static readonly ARRAY_BUFFER_TYPE_DATA = 0;          //创建ArrayBuffer时的类型为Data\r\n    public static readonly ARRAY_BUFFER_TYPE_CMD = 1;           //创建ArrayBuffer时的类型为Command\r\n    public static readonly ARRAY_BUFFER_REF_REFERENCE = 0;          //创建ArrayBuffer时的类型为引用\r\n    public static readonly ARRAY_BUFFER_REF_COPY = 1;               //创建ArrayBuffer时的类型为拷贝\r\n\r\n    public _idata: Int32Array;\r\n    public _fdata: Float32Array;\r\n    public _byteArray: Uint8Array;\r\n    public _buffer: ArrayBuffer;\r\n    private _byteLen: number = 0;\r\n\r\n\r\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\r\n    static ENUM_TEXTALIGN_CENTER: number = 1;\r\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\r\n    private _nativeObj: any;\r\n    private _tempRenderTexture2D: any;\r\n    sprite: any = null;\r\n    private _renderObject3DList: any[] = [];\r\n    /**@internal */\r\n    _tmpMatrix: Matrix = new Matrix();\r\n    static __init__(): void {\r\n    }\r\n    constructor() {\r\n        this._nativeObj = new (window as any)._conchContext((LayaGL.renderEngine as any)._nativeObj);\r\n        this._byteLen = 1024 * 512;\r\n        this._tempRenderTexture2D = new NativeRenderTexture2D(0, 0, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None, false);\r\n        this._init(false);\r\n    }\r\n    _init(isSyncToRenderThread: boolean): void {\r\n        this._buffer = new ArrayBuffer(this._byteLen);\r\n        this._idata = new Int32Array(this._buffer);\r\n        this._fdata = new Float32Array(this._buffer);\r\n        this._byteArray = new Uint8Array(this._buffer);\r\n\r\n        var bufferConchRef: any = (window as any).webglPlus.createArrayBufferRef(this._buffer, NativeContext.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread, NativeContext.ARRAY_BUFFER_REF_REFERENCE);\r\n        this._nativeObj.setSharedCommandBuffer(bufferConchRef);\r\n        //this._layagl.createArrayBufferRef(this._buffer, NativeCommandEncoder.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread);\r\n        this._idata[0] = 1;\r\n    }\r\n    _need(sz: number): void {\r\n        if ((this._byteLen - (this._idata[0] << 2)) >= sz) return;\r\n        this._nativeObj.flushCommand();\r\n        if (sz > this._byteLen) {\r\n            throw \"too big\";\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get lineJoin(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineJoin(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get lineCap(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineCap(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get miterLimit(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set miterLimit(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    clearRect(x: number, y: number, width: number, height: number): void {\r\n    }\r\n\r\n    set isMain(value: boolean) {\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.isMain = value;\r\n    }\r\n    get isMain() {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.isMain;\r\n    }\r\n    set _targets(target: RenderTexture2D) {\r\n        if (target) {\r\n            this._nativeObj.flushCommand();\r\n            this._nativeObj._target = (target as any)._nativeObj;\r\n        }\r\n    }\r\n    get _targets(): RenderTexture2D {\r\n        this._nativeObj.flushCommand();\r\n        let target = this._nativeObj._target;\r\n        //if (target && !this._tempRenderTexture2D._renderTarget) {\r\n        if (target) {\r\n            this._tempRenderTexture2D.width = this._nativeObj.width;\r\n            this._tempRenderTexture2D.height = this._nativeObj.height;\r\n            this._tempRenderTexture2D._nativeObj = target;\r\n            this._tempRenderTexture2D._renderTarget = target._renderTarget;\r\n            this._tempRenderTexture2D._texture = target._renderTarget._textures[0];\r\n            return this._tempRenderTexture2D;\r\n        }\r\n        return null;\r\n    }\r\n    alpha(value: number): void {\r\n        //this._nativeObj.globalAlpha *= value;\r\n        //this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\r\n        this.globalAlpha *= value;\r\n    }\r\n    flush(): void {\r\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n        //this._nativeObj.flush();\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.flush();\r\n\r\n    }\r\n    clear(): void {\r\n        //this._nativeObj.clear();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.CLEAR);\r\n        this._nativeObj.flushCommand();\r\n        this._renderObject3DList.length = 0;\r\n    }\r\n    /**\r\n     * 释放所有资源\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    destroy(keepRT: boolean = false): void {\r\n        this._nativeObj.flushCommand();\r\n        if (this._tempRenderTexture2D._nativeObj) {\r\n            this._tempRenderTexture2D._nativeObj._deleteRT = keepRT;\r\n        }\r\n        this._nativeObj.destroy(keepRT);\r\n    }\r\n\r\n    static const2DRenderCMD: RenderStateCommand;\r\n    static set2DRenderConfig(): void {\r\n\r\n        if (!NativeContext.const2DRenderCMD) {\r\n            const cmd = NativeContext.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\r\n            cmd.addCMD(RenderStateType.BlendType, true);\r\n            //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n            cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\r\n            BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n            //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\r\n            //WebGLContext.setDepthTest(gl, false);\r\n            cmd.addCMD(RenderStateType.DepthTest, false);\r\n            //WebGLContext.setDepthMask(gl, true);\r\n            cmd.addCMD(RenderStateType.DepthMask, true);\r\n            //WebGLContext.setCullFace(gl, false);\r\n            cmd.addCMD(RenderStateType.CullFace, false);\r\n            //WebGLContext.setFrontFace(gl, gl.CCW);\r\n            cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\r\n        }\r\n        NativeContext.const2DRenderCMD.applyCMD();\r\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\r\n        (window as any).set2DRenderConfig();\r\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n    }\r\n    set globalCompositeOperation(value: string) {\r\n        //this._nativeObj.globalCompositeOperation = value;\r\n        this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, value);\r\n    }\r\n\r\n    get globalCompositeOperation(): string {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.globalCompositeOperation;\r\n    }\r\n    set fillStyle(value: any) {\r\n        var c: ColorUtils = ColorUtils.create(value);\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\r\n    }\r\n\r\n    get fillStyle(): any {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.fillStyle;\r\n    }\r\n    set globalAlpha(value: number) {\r\n        this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\r\n    }\r\n\r\n    get globalAlpha(): number {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.globalAlpha;\r\n    }\r\n    save(): void {\r\n        //this._nativeObj.save();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n    }\r\n    restore(): void {\r\n        //this._nativeObj.restore();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n    saveTransform(matrix: Matrix): void {\r\n        //this._nativeObj.save();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n    }\r\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        //this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n    }\r\n    restoreTransform(matrix: Matrix): void {\r\n        //this._nativeObj.restore();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n    clipRect(x: number, y: number, width: number, height: number): void {\r\n        //this._nativeObj.clipRect(x, y, width, height);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.CLIP_RECT, x, y, width, height);\r\n    }\r\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n        //this._nativeObj.transform(a, b, c, d, tx, ty);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, a, b, c, d, tx, ty);\r\n    }\r\n    scale(scaleX: number, scaleY: number): void {\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\r\n    }\r\n\r\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        //this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width, height, (tex as any).uv);\r\n        this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width, height\r\n            , (tex as any).uv[0]\r\n            , (tex as any).uv[1]\r\n            , (tex as any).uv[2]\r\n            , (tex as any).uv[3]\r\n            , (tex as any).uv[4]\r\n            , (tex as any).uv[5]\r\n            , (tex as any).uv[6]\r\n            , (tex as any).uv[7]\r\n            , color);\r\n    }\r\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        /*this._nativeObj.save();\r\n        this._nativeObj.globalAlpha = alpha;\r\n        if (transform) {\r\n            this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\r\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height|| tex.height, uv || (tex as any).uv);\r\n        }\r\n        else {\r\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height|| tex.height, uv || (tex as any).uv);\r\n        }\r\n        this._nativeObj.restore();*/\r\n        this.save();\r\n        this.alpha(alpha);\r\n        var uvs: any = uv || (tex as any).uv;\r\n        if (transform) {\r\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\r\n            this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\r\n                , uvs[0]\r\n                , uvs[1]\r\n                , uvs[2]\r\n                , uvs[3]\r\n                , uvs[4]\r\n                , uvs[5]\r\n                , uvs[6]\r\n                , uvs[7]\r\n                , color);\r\n        }\r\n        else {\r\n            this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height || tex.height\r\n                , uvs[0]\r\n                , uvs[1]\r\n                , uvs[2]\r\n                , uvs[3]\r\n                , uvs[4]\r\n                , uvs[5]\r\n                , uvs[6]\r\n                , uvs[7]\r\n                , color);\r\n        }\r\n        this.restore();\r\n    }\r\n\r\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n\r\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\r\n\r\n        var top: number = sizeGrid[0];\r\n        var left: number = sizeGrid[3];\r\n        var right: number = sizeGrid[1];\r\n        var bottom: number = sizeGrid[2];\r\n        var repeat: boolean = sizeGrid[4];\r\n\r\n        /*this._nativeObj.drawTextureWithSizeGrid((tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat, gx, gy, uv[0]\r\n            ,uv[1]\r\n            ,uv[2]\r\n            ,uv[3]\r\n            ,uv[4]\r\n            ,uv[5]\r\n            ,uv[6]\r\n            ,uv[7]);*/\r\n        this.add_iiffffffffiffffffffffi(\r\n            CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE_SIZE_GRID,\r\n            (tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat ? 1 : 0, gx, gy\r\n            , uv[0]\r\n            , uv[1]\r\n            , uv[2]\r\n            , uv[3]\r\n            , uv[4]\r\n            , uv[5]\r\n            , uv[6]\r\n            , uv[7]\r\n            , color);\r\n    }\r\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix, alpha: number, uv: any[] | null, color: number): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        /*this._nativeObj.save();\r\n        this._nativeObj.globalAlpha = alpha;\r\n        transform && this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n        this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height, uv || (tex as any).uv);\r\n        this._nativeObj.restore();*/\r\n\r\n        this.save();\r\n        this.alpha(alpha);\r\n        if (transform) {\r\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n        }\r\n        var uvs: any = uv || (tex as any).uv;\r\n        this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\r\n            , uvs[0]\r\n            , uvs[1]\r\n            , uvs[2]\r\n            , uvs[3]\r\n            , uvs[4]\r\n            , uvs[5]\r\n            , uvs[6]\r\n            , uvs[7]\r\n            , color);\r\n        this.restore();\r\n\r\n    }\r\n    translate(x: number, y: number): void {\r\n        //this._nativeObj.translate(x, y);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, x, y);\r\n    }\r\n    _transform(mat: any/*Matrix*/, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.rotate(angle);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_if(CONTEXT2D_FUNCTION_ID.ROTATE, angle);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.scale(scaleX, scaleY);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawLine(x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\r\n        this.add_iffffffif(CONTEXT2D_FUNCTION_ID.DRAW_LINE, x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\r\n    }\r\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawLines(x, y, new Float32Array(points), c1.numColor, lineWidth);\r\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_LINES, x, y, c1.numColor, lineWidth, new Float32Array(points));\r\n    }\r\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawCircle(x, y, radius, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\r\n        this.add_ifffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_CIRCLE, x, y, radius, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\r\n    }\r\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawPie(x, y, radius, startAngle, endAngle, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\r\n        this.add_ifffffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_PIE, x, y, radius, startAngle, endAngle, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\r\n    }\r\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawPoly(x, y, new Float32Array(points), fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth, isConvexPolygon);\r\n        this.add_iffiiiifi_ab(CONTEXT2D_FUNCTION_ID.DRAW_POLY, x, y, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth, isConvexPolygon ? 1 : 0, new Float32Array(points));\r\n    }\r\n    fillRect(x: number, y: number, width: number, height: number, fillColor: any) {\r\n        if (fillColor != null) {\r\n            var c: ColorUtils = ColorUtils.create(fillColor);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\r\n        }\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n\r\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\r\n        if (!this.checkTexture(texture)) {\r\n            return;\r\n        }\r\n        var typeValue: number = 0;\r\n        switch (type) {\r\n            case \"repeat\": typeValue = 0; break;\r\n            case \"repeat-x\": typeValue = 1; break;\r\n            case \"repeat-y\": typeValue = 2; break;\r\n            case \"no-repeat\": typeValue = 3; break;\r\n            default: break;\r\n        }\r\n\r\n        this.add_iiffffiffi(CONTEXT2D_FUNCTION_ID.FILL_TEXTURE, (texture as any).bitmap._texture.id, x, y, width, height, typeValue, offset.x, offset.y, color);\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\r\n\r\n        /*if (fillColor != null) {\r\n            var c1: ColorUtils = ColorUtils.create(fillColor);\r\n   \r\n            this._nativeObj.save(); \r\n            this._nativeObj.fillStyle = c1.numColor;\r\n            this._nativeObj.fillRect(x, y, width, height);\r\n            this._nativeObj.restore();\r\n        }\r\n        if (lineColor != null) {         \r\n            var c2: ColorUtils = ColorUtils.create(lineColor);\r\n            this._nativeObj.save(); \r\n            this._nativeObj.strokeStyle = c2.numColor;\r\n            this._nativeObj.lineWidth = lineWidth;//lineColor\r\n            this._nativeObj.strokeRect(x, y, width, height);\r\n            this._nativeObj.restore();\r\n        }*/\r\n\r\n        if (fillColor != null) {\r\n            var c1: ColorUtils = ColorUtils.create(fillColor);\r\n\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\r\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n        if (lineColor != null) {\r\n            var c2: ColorUtils = ColorUtils.create(lineColor);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\r\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, lineWidth);\r\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.STROKE_RECT, x, y, width, height);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n    }\r\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\r\n        //形成路径\r\n        /*this._nativeObj.beginPath(false);\r\n        //x += args[0], y += args[1];\r\n\r\n        //var paths:Array = args[2];\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this._nativeObj.moveTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this._nativeObj.lineTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this._nativeObj.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this._nativeObj.closePath();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\r\n            this._nativeObj.fillStyle = c1.numColor;\r\n            this._nativeObj.fill();\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\r\n            this._nativeObj.strokeStyle = c2.numColor;\r\n            this._nativeObj.lineWidth = pen.lineWidth || 1;\r\n            this._nativeObj.lineJoin = pen.lineJoin;\r\n            this._nativeObj.lineCap = pen.lineCap;\r\n            this._nativeObj.miterLimit = pen.miterLimit;\r\n            this._nativeObj.stroke();\r\n        }*/\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.BEGIN_PATH, 0);\r\n\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.MOVE_TO, x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.LINE_TO, x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this.add_ifffff(CONTEXT2D_FUNCTION_ID.ARC_TO, x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this.add_i(CONTEXT2D_FUNCTION_ID.CLOSE_PATH);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.FILL);\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\r\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, pen.lineWidth || 1);\r\n            //this._nativeObj.lineJoin = pen.lineJoin;\r\n            //this._nativeObj.lineCap = pen.lineCap;\r\n            //this._nativeObj.miterLimit = pen.miterLimit;\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.STROKE);\r\n        }\r\n    }\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n\r\n        /*this._nativeObj.beginPath(false);\r\n        this._nativeObj.strokeStyle = c1.numColor;\r\n        this._nativeObj.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        //x += args[0], y += args[1];\r\n        this._nativeObj.moveTo(x + points[0], y + points[1]);\r\n        var i: number = 2, n: number = points.length;\r\n        while (i < n) {\r\n            this._nativeObj.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\r\n        }\r\n        this._nativeObj.stroke();*/\r\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_CURVES, x, y, c1.numColor, lineWidth, new Float32Array(points));\r\n    }\r\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\r\n        if (!canvas) return;\r\n        this._nativeObj.flushCommand();\r\n        if (canvas instanceof (NativeWebGLCacheAsNormalCanvas)) {\r\n            this._nativeObj.drawCanvasNormal(canvas._nativeObj, x, y, width, height);\r\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_NORMAL, canvas._nativeObj.id, x, y, width, height);\r\n        }\r\n        else {\r\n            this._nativeObj.drawCanvasBitmap((canvas.context as any)._nativeObj, x, y, width, height);\r\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_BITMAP, (canvas.context as any)._nativeObj.id, x, y, width, height);\r\n        }\r\n    }\r\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(borderColor);\r\n        if (typeof (txt) === 'string') {\r\n            //this._nativeObj.fillWords(txt, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, fontStr)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\r\n        }\r\n    }\r\n    // 与fillText的区别是没有border信息\r\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(null);\r\n        if (typeof (text) === 'string') {\r\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, 0, text, font)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, 0, nTextAlign, font);\r\n        }\r\n    }\r\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(null);\r\n        if (typeof (text) === 'string') {\r\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, text, font);\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\r\n        }\r\n    }\r\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(borderColor);\r\n        if (typeof (txt) === 'string') {\r\n            //this._nativeObj.fillWords(txt, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, font);\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\r\n        }\r\n    }\r\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\r\n        if (typeof (data) === 'string') {\r\n            //this._nativeObj.fillWords(data, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, data, fontStr)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((data as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: any, color: string, strokeColor: string | null, lineWidth: number, textAlign: number, underLine: number = 0): void {\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\r\n\r\n        if (typeof (data) === 'string') {\r\n            //this._nativeObj.fillWords(data, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, textAlign, x, y, lineWidth, data, (fontObj as any)._font)\r\n        }\r\n        else {\r\n\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, textAlign, (fontObj as any)._font);\r\n            //this._nativeObj.fillWordText(data._nativeObj.id, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\r\n        }\r\n    }\r\n    drawTriangles(tex: Texture,\r\n        x: number, y: number,\r\n        vertices: Float32Array,\r\n        uvs: Float32Array,\r\n        indices: Uint16Array,\r\n        matrix: Matrix, alpha: number, blendMode: string, colorNum: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        var m: Matrix = matrix ? matrix : this._tmpMatrix;\r\n        if (blendMode != null) {\r\n\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            //to do ColorFilter \r\n            this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, blendMode);\r\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\r\n                , x\r\n                , y\r\n                , alpha\r\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\r\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\r\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\r\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\r\n            );\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n        else {\r\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\r\n                , x\r\n                , y\r\n                , alpha\r\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\r\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\r\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\r\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\r\n            );\r\n        }\r\n    }\r\n    drawMask(w: number, h: number): any {\r\n        //return this._nativeObj.drawMask(w, h);\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.drawMask(w, h);\r\n    }\r\n    drawMasked(x: number, y: number, w: number, h: number): void {\r\n        //this._nativeObj.drawMasked(x, y, w, h);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.DRAW_MASKED, x, y, w, h);\r\n    }\r\n    drawMaskComposite(rt: any, x: number, y: number, w: number, h: number): void {\r\n        //this._nativeObj.drawMaskComposite(rt, x, y, w, h);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawMaskComposite(rt, x, y, w, h);\r\n    }\r\n    set asBitmap(value: boolean) {\r\n        //this._nativeObj.setAsBitmap(value);\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.SET_AS_BITMAP, value ? 1 : 0);\r\n    }\r\n    size(w: number, h: number): void {\r\n        //this._nativeObj.size(w, h);\r\n        this.add_iii(CONTEXT2D_FUNCTION_ID.SIZE, w, h);\r\n    }\r\n    setColorFilter(filter: ColorFilter): void {\r\n        /*if (filter) {\r\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\r\n        }\r\n        else {\r\n            this._nativeObj.setColorFilter(false, null, null);\r\n        }*/\r\n        this._nativeObj.flushCommand();\r\n        if (filter) {\r\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\r\n        }\r\n        else {\r\n            this._nativeObj.setColorFilter(false, null, null);\r\n        }\r\n    }\r\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, matrix: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1): boolean {\r\n        //return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty, blend);\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty, blend);\r\n    }\r\n    drawTargetBlurFilter(rt: RenderTexture2D, x: number, y: number, width: number, height: number, strength: number): void {\r\n        //this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\r\n    }\r\n    get _curMat(): Matrix {\r\n        /*var data: any = this._nativeObj._curMat;\r\n        var mat: Matrix = Matrix.create();\r\n        mat.a = data[0];\r\n        mat.b = data[1];\r\n        mat.c = data[2];\r\n        mat.d = data[3];\r\n        mat.tx = data[4];\r\n        mat.ty = data[5];*/\r\n\r\n        this._nativeObj.flushCommand();\r\n\r\n        var data: any = this._nativeObj._curMat;\r\n        var mat: Matrix = Matrix.create();\r\n        mat.a = data[0];\r\n        mat.b = data[1];\r\n        mat.c = data[2];\r\n        mat.d = data[3];\r\n        mat.tx = data[4];\r\n        mat.ty = data[5];\r\n\r\n        return mat;\r\n    }\r\n    addRenderObject3D(scene3D: ISubmit): void {\r\n        //this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\r\n        this._renderObject3DList.push((scene3D as any)._nativeObj);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\r\n    }\r\n    pushRT(): void {\r\n        //this._nativeObj.pushRT();\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.pushRT();\r\n    }\r\n    popRT(): void {\r\n        //this._nativeObj.popRT();\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.popRT();\r\n    }\r\n    useRT(rt: RenderTexture2D): void {\r\n        //this._nativeObj.useRT(rt);\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.useRT(rt);\r\n    }\r\n    drawFilter(out: RenderTexture2D, src: RenderTexture2D, x: number, y: number, width: number, height: number): void {\r\n        //this._nativeObj.drawFilter(out, src, x, y, width, height);\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawFilter(out, src, x, y, width, height);\r\n    }\r\n    protected checkTexture(tex: Texture): boolean {\r\n        // 注意sprite要保存，因为后面会被冲掉\r\n        var cs = this.sprite;\r\n        if (!tex._getSource(function (): void {\r\n            if (cs) {\r\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\r\n            }\r\n        })) { //source内调用tex.active();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    add_i(i: number): void {\r\n        this._need(4);\r\n        this._idata[this._idata[0]++] = i;\r\n    }\r\n    add_ii(a: number, b: number): void {\r\n        this._need(8);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        this._idata[0] = i;\r\n    }\r\n    add_if(a: number, b: number): void {\r\n        this._need(8);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._fdata[i++] = b;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iff(a: number, b: number, c: number): void {\r\n        this._need(12);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._fdata[i++] = b;\r\n        this._fdata[i++] = c;\r\n        this._idata[0] = i;\r\n    }\r\n\r\n    add_iffif(a: number, b: number, c: number, d: number, e: number) {\r\n        this._need(20);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        this._idata[i++] = d;\r\n        fdata[i++] = e;\r\n        this._idata[0] = i;\r\n    }\r\n\r\n    add_iffff(a: number, b: number, c: number, d: number, e: number): void {\r\n        this._need(20);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iii(a: number, b: number, c: number): void {\r\n        this._need(12);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = this._idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        idata[i++] = c;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffff(a: number, b: number, c: number, d: number, e: number, f: number) {\r\n        this._need(24);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        this._idata[0] = i;\r\n    }\r\n    add_ifffff(a: number, b: number, c: number, d: number, e: number, f: number) {\r\n        this._need(24);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void {\r\n        this._need(28);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[0] = i;\r\n    }\r\n    add_ifffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\r\n        this._need(36);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        idata[i++] = e;\r\n        idata[i++] = f;\r\n        idata[i++] = g;\r\n        idata[i++] = h;\r\n        fdata[i++] = ii;\r\n        idata[0] = i;\r\n    }\r\n    add_ifffffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number): void {\r\n        this._need(44);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        idata[i++] = g;\r\n        idata[i++] = h;\r\n        idata[i++] = ii;\r\n        idata[i++] = j;\r\n        fdata[i++] = k;\r\n        idata[0] = i;\r\n    }\r\n    add_iffffffif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\r\n        this._need(36);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        idata[i++] = h;\r\n        fdata[i++] = ii;\r\n        idata[0] = i;\r\n    }\r\n    add_String(ab: ArrayBuffer): void {\r\n        var len: number = ab.byteLength;\r\n        this._need(len + 4);\r\n        this._idata[this._idata[0]++] = len;\r\n        if (len == 0) return;\r\n        var uint8array: Uint8Array = new Uint8Array(ab);\r\n        this._byteArray.set(uint8array, this._idata[0] * 4);\r\n        this._idata[0] += len / 4;\r\n    }\r\n    add_iffiiiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number) {\r\n        this._need(45);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        this._idata[i++] = d;\r\n        this._idata[i++] = e;\r\n        this._idata[i++] = f;\r\n        this._idata[i++] = g;\r\n        fdata[i++] = h;\r\n        this._idata[i++] = ii;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) {\r\n        this._need(32);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        this._idata[i++] = e;\r\n        this._idata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[i++] = h;\r\n        this._idata[0] = i;\r\n    }\r\n    add_i_String(a: number, str: string): void {\r\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\r\n        this._need(4 + ab.byteLength + 4);\r\n        this.add_i(a);\r\n        this.add_String(ab);\r\n    }\r\n    add_iiiifff(a: number, b: number, c: number, d: number, e: number, f: number, g: number) {\r\n        this._need(28);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        this._idata[i++] = c;\r\n        this._idata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffiifi_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, str: string): void {\r\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\r\n        this._need(32 + ab.byteLength + 4);\r\n        this.add_iiffiifi(a, b, c, d, e, f, g, h);\r\n        this.add_String(ab);\r\n    }\r\n    add_iiiifff_String_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, str0: string, str1: string): void {\r\n        var ab0: ArrayBuffer = (window as any).conch.strTobufer(str0);\r\n        var ab1: ArrayBuffer = (window as any).conch.strTobufer(str1);\r\n        this._need(28 + (ab0.byteLength + 4) + (ab1.byteLength + 4));\r\n\r\n        this.add_iiiifff(a, b, c, d, e, f, g);\r\n        this.add_String(ab0);\r\n        this.add_String(ab1);\r\n    }\r\n    add_iiffffffffffffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number, l: number, m: number, n: number, o: number) {\r\n        this._need(60);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        fdata[i++] = k;\r\n        fdata[i++] = l;\r\n        fdata[i++] = m;\r\n        fdata[i++] = n;\r\n        idata[i++] = o;\r\n        idata[0] = i;\r\n    }\r\n    add_iiffffffffiffffffffffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number\r\n        , u: number, v: number) {\r\n        this._need(88);\r\n        var idata: Int32Array = this._idata;\r\n        var fdata: Float32Array = this._fdata;\r\n        var i: number = idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        idata[i++] = k;\r\n        fdata[i++] = l;\r\n        fdata[i++] = m;\r\n        fdata[i++] = n;\r\n        fdata[i++] = o;\r\n        fdata[i++] = p;\r\n        fdata[i++] = q;\r\n        fdata[i++] = r;\r\n        fdata[i++] = s;\r\n        fdata[i++] = t;\r\n        fdata[i++] = u;\r\n        idata[i++] = v;\r\n        idata[0] = i;\r\n    }\r\n    add_iiifffffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number) {\r\n        this._need(48);\r\n        var idata: Int32Array = this._idata;\r\n        var fdata: Float32Array = this._fdata;\r\n        var i: number = idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        idata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        fdata[i++] = k;\r\n        fdata[i++] = l;\r\n        idata[0] = i;\r\n    }\r\n    add_iiffffiffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void {\r\n        this._need(40);\r\n        let idata: Int32Array = this._idata;\r\n        let fdata: Float32Array = this._fdata;\r\n        var idx: number = idata[0];\r\n        idata[idx++] = a;\r\n        idata[idx++] = b;\r\n        fdata[idx++] = c;\r\n        fdata[idx++] = d;\r\n        fdata[idx++] = e;\r\n        fdata[idx++] = f;\r\n        idata[idx++] = g;\r\n        fdata[idx++] = h;\r\n        fdata[idx++] = i;\r\n        idata[idx++] = j;\r\n        idata[0] = idx;\r\n    }\r\n\r\n    add_iiifffffffff_ab_ab_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number, arraybuffer0: any, arraybuffer1: any, arraybuffer2: any) {\r\n\r\n        var nAlignLength0 = this.getAlignLength(arraybuffer0);\r\n        var nAlignLength1 = this.getAlignLength(arraybuffer1);\r\n        var nAlignLength2 = this.getAlignLength(arraybuffer2);\r\n        d\r\n        this._need(48 + (nAlignLength0 + 4) + (nAlignLength1 + 4) + (nAlignLength2 + 4));\r\n\r\n        this.add_iiifffffffff(a, b, c, d, e, f, g, h, ii, j, k, l);\r\n        this.wab(arraybuffer0, arraybuffer0.byteLength, nAlignLength0, 0);\r\n        this.wab(arraybuffer1, arraybuffer1.byteLength, nAlignLength1, 0);\r\n        this.wab(arraybuffer2, arraybuffer2.byteLength, nAlignLength2, 0);\r\n\r\n    }\r\n    wab(arraybuffer: any, length: number, nAlignLength: number, offset?: number): void {\r\n        offset = offset ? offset : 0;\r\n        this._need(nAlignLength + 4);\r\n        //写入长度\r\n        this._idata[this._idata[0]++] = length;\r\n        //写入数据\r\n        var uint8array: Uint8Array = null;\r\n        if (arraybuffer instanceof Float32Array && offset == 0) {\r\n            this._fdata.set(arraybuffer, this._idata[0]);\r\n        }\r\n        else {\r\n            if (arraybuffer instanceof ArrayBuffer) {\r\n                uint8array = new Uint8Array(arraybuffer, offset, length);\r\n            }\r\n            else if (arraybuffer.buffer) {\r\n                uint8array = new Uint8Array(arraybuffer.buffer, offset + arraybuffer.byteOffset, length);\r\n            }\r\n            else {\r\n                console.log(\"not arraybuffer/dataview\");\r\n                return;\r\n            }\r\n            this._byteArray.set(uint8array, this._idata[0] * 4);\r\n        }\r\n        this._idata[0] += nAlignLength / 4;\r\n    }\r\n    getAlignLength(data: any): number {\r\n        var byteLength = data.byteLength;\r\n        return (byteLength + 3) & 0xfffffffc;\r\n    }\r\n    add_iif_ab(a: number, b: number, c: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(12 + nAlignLength + 4);\r\n        this.add_iff(a, b, c);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n    add_iffif_ab(a: number, b: number, c: number, d: number, e: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(20 + nAlignLength + 4);\r\n        this.add_iffif(a, b, c, d, e);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n    add_iffiiiifi_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(45 + nAlignLength + 4);\r\n        this.add_iffiiiifi(a, b, c, d, e, f, g, h, ii);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n} \r\n","import { ShaderDefines2D } from \"./ShaderDefines2D\";\r\nimport { DrawStyle } from \"../../canvas/DrawStyle\"\r\n\r\nimport texture_vs from './files/texture.vs.glsl';\r\nimport texture_ps from './files/texture.ps.glsl';\r\nimport prime_vs from './files/primitive.vs.glsl';\r\nimport prime_ps from './files/primitive.ps.glsl';\r\n\r\n\r\nimport Sprite2DFrag from './NewShader/Sprite2DFrag.glsl';\r\nimport Sprite2DVertex from './NewShader/Sprite2DVertex.glsl';\r\nimport Sprite2DShaderInfo from './NewShader/Sprite2DShaderInfo.glsl';\r\n\r\nimport { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderCompile } from \"../../utils/ShaderCompile\";\r\nimport { ShaderDataType } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\r\nimport { Material } from \"../../../resource/Material\";\r\n\r\nexport class Shader2D {\r\n    /**@internal */\r\n    static textureShader: Shader3D;\r\n    /**@internal */\r\n    static primitiveShader: Shader3D;\r\n\r\n    /**@internal */\r\n    ALPHA: number = 1;\r\n    /**@internal */\r\n    filters: any[];\r\n    /**@internal */\r\n    shaderType: number = 0;\r\n    /**@internal */\r\n    colorAdd: any[];\r\n    /**@internal */\r\n    fillStyle = DrawStyle.DEFAULT;\r\n    /**@internal */\r\n    strokeStyle = DrawStyle.DEFAULT;\r\n    /**@internal */\r\n    material: Material = null;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy(): void {\r\n        this.filters = null;\r\n    }\r\n\r\n    /**\r\n     * primitive Mesh Descript\r\n     */\r\n    public static readonly primitiveAttribute: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_position': [0, ShaderDataType.Vector4],\r\n        'a_attribColor': [1, ShaderDataType.Vector4],\r\n    }\r\n\r\n    /**\r\n     * TextureSV Mesh Descript\r\n     */\r\n    public static readonly textureAttribute: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_posuv': [0, ShaderDataType.Vector4],\r\n        'a_attribColor': [1, ShaderDataType.Vector4],\r\n        'a_attribFlags': [2, ShaderDataType.Vector4]\r\n    }\r\n\r\n    /**\r\n     * init 2D internal Shader\r\n     */\r\n    static __init__(): void {\r\n        Shader3D.addInclude(\"Sprite2DFrag.glsl\", Sprite2DFrag);\r\n        Shader3D.addInclude(\"Sprite2DVertex.glsl\", Sprite2DVertex);\r\n        Shader3D.addInclude(\"Sprite2DShaderInfo.glsl\", Sprite2DShaderInfo);\r\n\r\n        //textureShader\r\n        Shader2D.textureShader = Shader3D.add(\"Sprite2DTexture\", false, false);\r\n        let subShader = new SubShader(Shader2D.textureAttribute, {}, {});\r\n        Shader2D.textureShader.addSubShader(subShader);\r\n        subShader.addShaderPass(texture_vs, texture_ps);\r\n\r\n        //primitiveShader\r\n        Shader2D.primitiveShader = Shader3D.add(\"Sprite2DPrimitive\", false, false);\r\n        subShader = new SubShader(Shader2D.primitiveAttribute, {}, {});\r\n        Shader2D.primitiveShader.addSubShader(subShader);\r\n        subShader.addShaderPass(prime_vs, prime_ps);\r\n    }\r\n}\r\n\r\n","vec3 gammaToLinear(in vec3 value)\r\n{\r\n    return pow((value + 0.055) / 1.055, vec3(2.4));\r\n}\r\n\r\nvec4 gammaToLinear(in vec4 value)\r\n{\r\n    return vec4(gammaToLinear(value.rgb), value.a);\r\n}\r\n\r\nvec3 linearToGamma(in vec3 value)\r\n{\r\n    return vec3(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))));\r\n\r\n    // return pow(value, vec3(1.0 / 2.2));\r\n    // return pow(value, vec3(0.455));\r\n}\r\n\r\nvec4 linearToGamma(in vec4 value)\r\n{\r\n    return vec4(linearToGamma(value.rgb), value.a);\r\n}\r\n\r\nvec4 sampleTexture(sampler2D spriteTexture, vec2 uv)\r\n{\r\n    vec4 color = texture2D(spriteTexture, uv);\r\n#ifndef GAMMATEXTURE\r\n    //是linear数据\r\n    #ifdef GAMMASPACE\r\n        color.xyz = linearToGamma(color.xyz);    \r\n    #endif\r\n#else\r\n    //gamma数据\r\n    #ifndef GAMMASPACE\r\n        color.xyz = gammaToLinear(color.xyz);\r\n    #endif\r\n#endif\r\n    return color;\r\n}\r\n\r\n#if defined(PRIMITIVEMESH)\r\n    varying vec4 v_color;\r\n    varying vec2 v_cliped;\r\n  \r\n\r\n    vec4 getGlColor(vec4 color){\r\n        #ifdef GAMMASPACE\r\n            return color;\r\n        #else\r\n            return gammaToLinear(color);\r\n        #endif\r\n    }\r\n\r\n#elif defined(TEXTUREVS)\r\n    varying vec2 v_cliped;\r\n    varying vec4 v_texcoordAlpha;\r\n    varying vec4 v_color;\r\n    varying float v_useTex;\r\n    \r\n    //uniform\r\n    uniform sampler2D u_spriteTexture;\r\n\r\n    #ifdef BLUR_FILTER\r\n        uniform vec4 u_strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\r\n        uniform vec2 u_blurInfo;\r\n        #define PI 3.141593\r\n    #endif\r\n\r\n    #ifdef COLOR_FILTER\r\n        uniform vec4 u_colorAlpha;\r\n        uniform mat4 u_colorMat;\r\n    #endif\r\n\r\n    #ifdef GLOW_FILTER\r\n        uniform vec4 u_color;\r\n        uniform vec4 u_blurInfo1;\r\n        uniform vec4 u_blurInfo2;\r\n    #endif\r\n\r\n    #ifdef COLOR_ADD\r\n        uniform vec4 u_colorAdd;\r\n    #endif\r\n\r\n    #ifdef FILLTEXTURE\r\n        uniform vec4 u_TexRange; // startu,startv,urange, vrange\r\n    #endif\r\n\r\n\r\n    #ifdef BLUR_FILTER\r\n        float getGaussian(float x, float y)\r\n        {\r\n            return u_strength_sig2_2sig2_gauss1.w * exp(-(x * x + y * y) / u_strength_sig2_2sig2_gauss1.z);\r\n        }\r\n\r\n        vec4 blur()\r\n        {\r\n            const float blurw = 9.0;\r\n            vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\r\n            vec2 halfsz = vec2(blurw, blurw) / 2.0 / u_blurInfo;\r\n            vec2 startpos = v_texcoordAlpha.xy - halfsz;\r\n            vec2 ctexcoord = startpos;\r\n            vec2 step = 1.0 / u_blurInfo; //每个像素\r\n\r\n            for (float y = 0.0; y <= blurw; ++y)\r\n            {\r\n                ctexcoord.x = startpos.x;\r\n                for (float x = 0.0; x <= blurw; ++x)\r\n                {\r\n                    // TODO 纹理坐标的固定偏移应该在vs中处理\r\n                    vec4Color += sampleTexture(u_spriteTexture, ctexcoord) * getGaussian(x - blurw / 2.0, y - blurw / 2.0);\r\n                    ctexcoord.x += step.x;\r\n                }\r\n                ctexcoord.y += step.y;\r\n            }\r\n            // vec4Color.w=1.0;  这个会导致丢失alpha。以后有时间再找模糊会导致透明的问题\r\n            return vec4Color;\r\n        }\r\n    #endif\r\n\r\n    vec4 getSpriteTextureColor(){\r\n        #ifdef FILLTEXTURE\r\n            return sampleTexture(u_spriteTexture, fract(v_texcoordAlpha.xy) * u_TexRange.zw + u_TexRange.xy);\r\n        #else\r\n            return sampleTexture(u_spriteTexture, v_texcoordAlpha.xy);\r\n        #endif\r\n    }\r\n\r\n    void setglColor(in vec4 color){\r\n        if (v_useTex <= 0.)\r\n            color = vec4(1., 1., 1., 1.);\r\n\r\n        color.a *= v_color.w;\r\n        // color.rgb*=v_color.w;\r\n        vec4 transColor = v_color;\r\n        #ifndef GAMMASPACE\r\n            transColor = gammaToLinear(v_color);\r\n        #endif\r\n        color.rgb *= transColor.rgb;\r\n        gl_FragColor = color;\r\n\r\n        #ifdef COLOR_ADD\r\n            gl_FragColor = vec4(u_colorAdd.rgb, u_colorAdd.a * gl_FragColor.a);\r\n            gl_FragColor.xyz *= u_colorAdd.a;\r\n        #endif\r\n\r\n        #ifdef BLUR_FILTER\r\n            gl_FragColor = blur();\r\n            gl_FragColor.w *= v_color.w;\r\n        #endif\r\n\r\n        #ifdef COLOR_FILTER\r\n            mat4 alphaMat = u_colorMat;\r\n\r\n            alphaMat[0][3] *= gl_FragColor.a;\r\n            alphaMat[1][3] *= gl_FragColor.a;\r\n            alphaMat[2][3] *= gl_FragColor.a;\r\n\r\n            gl_FragColor = gl_FragColor * alphaMat;\r\n            gl_FragColor += u_colorAlpha / 255.0 * gl_FragColor.a;\r\n        #endif\r\n\r\n        #ifdef GLOW_FILTER\r\n            const float c_IterationTime = 10.0;\r\n            float floatIterationTotalTime = c_IterationTime * c_IterationTime;\r\n            vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\r\n            vec2 vec2FilterDir = vec2(-(u_blurInfo1.z) / u_blurInfo2.x, -(u_blurInfo1.w) / u_blurInfo2.y);\r\n            vec2 vec2FilterOff = vec2(u_blurInfo1.x / u_blurInfo2.x / c_IterationTime * 2.0, u_blurInfo1.y / u_blurInfo2.y / c_IterationTime * 2.0);\r\n            float maxNum = u_blurInfo1.x * u_blurInfo1.y;\r\n            vec2 vec2Off = vec2(0.0, 0.0);\r\n            float floatOff = c_IterationTime / 2.0;\r\n            for (float i = 0.0; i <= c_IterationTime; ++i)\r\n            {\r\n                for (float j = 0.0; j <= c_IterationTime; ++j)\r\n                {\r\n                    vec2Off = vec2(vec2FilterOff.x * (i - floatOff), vec2FilterOff.y * (j - floatOff));\r\n                    vec4Color += sampleTexture(u_spriteTexture, v_texcoordAlpha.xy + vec2FilterDir + vec2Off) / floatIterationTotalTime;\r\n                }\r\n            }\r\n            gl_FragColor = vec4(u_color.rgb, vec4Color.a * u_blurInfo2.z);\r\n            gl_FragColor.rgb *= gl_FragColor.a;\r\n        #endif\r\n    }\r\n#endif\r\n\r\n\r\n\r\nvoid clip(){\r\n    if(v_cliped.x<0.) discard;\r\n    if(v_cliped.x>1.) discard;\r\n    if(v_cliped.y<0.) discard;\r\n    if(v_cliped.y>1.) discard;\r\n}","#include \"Sprite2DShaderInfo.glsl\";\r\n#if defined(PRIMITIVEMESH)\r\n    // attribute vec4 a_position;\r\n    // attribute vec4 a_attribColor;\r\n    #ifdef WORLDMAT\r\n        uniform mat4 u_mmat;\r\n    #endif//WORLDMAT\r\n\r\n    varying vec4 v_color;\r\n    varying vec2 v_cliped;\r\n\r\n    uniform vec4 u_clipMatDir;\r\n    uniform vec2 u_clipMatPos;\r\n    uniform vec2 u_size;\r\n\r\n    void getVertexInfo(inout vertexInfo info){\r\n        float clipw = length(u_clipMatDir.xy);\r\n        float cliph = length(u_clipMatDir.zw);\r\n        vec2 clippos = a_position.xy - u_clipMatPos.xy;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\r\n        if(clipw>20000. && cliph>20000.)\r\n            info.cliped = vec2(0.5,0.5);\r\n        else {\r\n            //clipdir是带缩放的方向，由于上面clippos是在缩放后的空间计算的，所以需要把方向先normalize一下\r\n            info.cliped =vec2( dot(clippos,u_clipMatDir.xy)/clipw/clipw, dot(clippos,u_clipMatDir.zw)/cliph/cliph);\r\n        }\r\n        info.color = a_attribColor/255.;\r\n    }\r\n\r\n    void getPosition(inout vec4 pos){\r\n        #ifdef WORLDMAT\r\n            vec4 pos = u_mmat*vec4(a_position.xy,0.,1.);\r\n            pos = vec4((pos.x/u_size.x-0.5)*2.0,(0.5-pos.y/u_size.y)*2.0,pos.z,1.0);\r\n        #else\r\n            pos = vec4((a_position.x/u_size.x-0.5)*2.0,(0.5-a_position.y/u_size.y)*2.0,a_position.z,1.0);\r\n        #endif\r\n    }\r\n\r\n#elif defined(TEXTUREVS)\r\n\t//texture和fillrect使用的。\r\n    // attribute vec4 a_posuv;\r\n    // attribute vec4 a_attribColor;\r\n    // attribute vec4 a_attribFlags;\r\n\r\n    uniform vec4 u_clipMatDir;\r\n    uniform vec2 u_clipMatPos;\t\t// 这个是全局的，不用再应用矩阵了。\r\n\r\n    uniform vec2 u_size;\r\n    uniform vec2 u_clipOff;\t\t\t// 使用要把clip偏移。cacheas normal用. 只用了[0]\r\n    #ifdef WORLDMAT\r\n        uniform mat4 u_mmat;\r\n    #endif\r\n\r\n    #ifdef MVP3D\r\n        uniform mat4 u_MvpMatrix;\r\n    #endif\r\n\r\n    varying vec2 v_cliped;\r\n    varying vec4 v_texcoordAlpha;\r\n    varying vec4 v_color;\r\n    varying float v_useTex;\r\n\r\n    void getVertexInfo(inout vertexInfo info){\r\n       \t//texcoordAlpha\r\n        info.texcoordAlpha.xy = a_posuv.zw;\r\n        //color\r\n        info.color = a_attribColor/255.0;\r\n\t    info.color.xyz*= info.color.w;//反正后面也要预乘\r\n        //useTex\r\n        info.useTex = a_attribFlags.r/255.0;\r\n\r\n        //clip\r\n    \tfloat clipw = length(u_clipMatDir.xy);\r\n    \tfloat cliph = length(u_clipMatDir.zw);\r\n\t    vec2 clpos = u_clipMatPos.xy;\r\n        #ifdef WORLDMAT\r\n            // 如果有mmat，需要修改clipMatPos,因为 这是cacheas normal （如果不是就错了）， clipMatPos被去掉了偏移\r\n            if(u_clipOff[0]>0.0){\r\n                clpos.x+=u_mmat[3].x;\t//tx\t最简单处理\r\n                clpos.y+=u_mmat[3].y;\t//ty\r\n            }\r\n        #endif\r\n        vec2 clippos = a_posuv.xy - clpos;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\r\n        if(clipw>20000. && cliph>20000.)\r\n            info.cliped = vec2(0.5,0.5);\r\n        else {\r\n            //转成0到1之间。/clipw/clipw 表示clippos与normalize之后的clip朝向点积之后，再除以clipw\r\n            info.cliped = vec2( dot(clippos,u_clipMatDir.xy)/clipw/clipw, dot(clippos,u_clipMatDir.zw)/cliph/cliph);\r\n        }\r\n    }\r\n\r\n    void getPosition(inout vec4 glPosition){\r\n        vec4 pos = vec4(a_posuv.xy,0.,1.);\r\n        #ifdef WORLDMAT\r\n            pos= u_mmat * pos;\r\n        #endif\r\n            vec4 pos1 = vec4((pos.x/u_size.x-0.5)*2.0,(0.5-pos.y/u_size.y)*2.0,0.,1.0);\r\n        #ifdef MVP3D\r\n            glPosition = u_MvpMatrix * pos1;\r\n        #else\r\n            glPosition = pos1;\r\n        #endif\r\n        \r\n        #ifdef INVERTY\r\n            glPosition.y = -glPosition.y;\r\n        #endif\r\n    }\r\n\r\n#endif","\r\n#if defined(PRIMITIVEMESH)\r\n    struct vertexInfo {\r\n        vec4 color;\r\n        vec2 cliped;\r\n    };\r\n#elif defined(TEXTUREVS)\r\n   struct vertexInfo {\r\n        vec4 color;\r\n        vec2 cliped;\r\n        vec4 texcoordAlpha;\r\n        float useTex;\r\n    };\r\n#endif","#define SHADER_NAME TextureFS2D\r\n//texture和fillrect使用的。\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH) // 原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成 if defined 了\r\nprecision highp float;\r\n#else\r\nprecision mediump float;\r\n#endif\r\n\r\n#include \"Sprite2DFrag.glsl\";\r\n\r\nvoid main()\r\n{\r\n    clip();\r\n    vec4 color = getSpriteTextureColor();\r\n    setglColor(color);\r\n}\r\n","#define SHADER_NAME PrimitiveVS2D\r\n#include \"Sprite2DVertex.glsl\";\r\n\r\n\r\n#ifdef WORLDMAT\r\n\tuniform mat4 mmat;\r\n#endif\r\n\r\nvoid main(){\r\n\tvertexInfo info;\r\n\tgetVertexInfo(info);\r\n\t\r\n\t//Update \r\n\tv_color = info.color;\r\n\tv_cliped = info.cliped;\r\n\t\r\n\tvec4 pos;\r\n\t\r\n\tgetPosition(pos);\r\n\tgl_Position = pos;\r\n}","#define SHADER_NAME PrimitiveFS2D\r\nprecision mediump float;\r\n\r\n#include \"Sprite2DFrag.glsl\";\r\n\r\nvoid main(){\r\n\tclip();\r\n\tgl_FragColor = getGlColor(v_color);\r\n\tgl_FragColor.rgb*=gl_FragColor.a;\r\n}","import { IndexBuffer2D } from \"../../../utils/IndexBuffer2D\"\r\nimport { VertexBuffer2D } from \"../../../utils/VertexBuffer2D\"\r\nimport { BufferUsage } from \"../../../../RenderEngine/RenderEnum/BufferTargetType\";\r\n\r\nexport class SkinMeshBuffer {\r\n\r\n    ib: IndexBuffer2D;\r\n    vb: VertexBuffer2D;\r\n\r\n    static instance: SkinMeshBuffer;\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        this.ib = IndexBuffer2D.create(BufferUsage.Dynamic);\r\n        this.vb = VertexBuffer2D.create(8);\r\n    }\r\n\r\n    //TODO:coverage\r\n    static getInstance(): SkinMeshBuffer {\r\n        return SkinMeshBuffer.instance = SkinMeshBuffer.instance || new SkinMeshBuffer();\r\n    }\r\n\r\n    //TODO:coverage\r\n    addSkinMesh(skinMesh: any): void {\r\n        //skinMesh.getData(vb, ib, vb.byteLength / 32);\r\n        skinMesh.getData2(this.vb, this.ib, this.vb._byteLength / 32);\r\n    }\r\n\r\n\r\n    reset(): void {\r\n        this.vb.buffer2D.clear();\r\n        this.ib.buffer2D.clear();\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Vector2 } from \"../../maths/Vector2\";\r\n\r\nexport class BasePoly {\r\n\r\n    private static tempData: any[] = new Array(256);\r\n    private static vec2: Vector2;\r\n\r\n    /**\r\n     * 构造线的三角形数据。根据一个位置数组生成vb和ib\r\n     * @param\tp\r\n     * @param\tindices\r\n     * @param\tlineWidth\r\n     * @param\tindexBase\t\t\t\t顶点开始的值，ib中的索引会加上这个\r\n     * @param\toutVertex\r\n     * @return\r\n     */\r\n    static createLine2(p: any[], indices: any[], lineWidth: number, indexBase: number, outVertex: any[], loop: boolean): any[] {\r\n\r\n        if (p.length < 4) return null;\r\n        var points: any[] = BasePoly.tempData.length > (p.length + 2) ? BasePoly.tempData : new Array(p.length + 2);\t//可能有loop，所以+2\r\n        points[0] = p[0]; points[1] = p[1];\r\n        /*\r\n        var points:Array = p.concat();\r\n        if (loop) {\r\n            points.push(points[0], points[1]);\r\n        }\r\n        */\r\n        var newlen: number = 2;\t//points的下标，也是points的实际长度\r\n        var i: number = 0;\r\n        var length: number = p.length;\r\n        //先过滤一下太相近的点\r\n        for (i = 2; i < length; i += 2) {\r\n            if (Math.abs(p[i] - p[i - 2]) + Math.abs(p[i + 1] - p[i - 1]) > 0.01) {//只是判断是否重合，所以不用sqrt\r\n                points[newlen++] = p[i]; points[newlen++] = p[i + 1];\r\n            }\r\n        }\r\n        //如果终点和起点没有重合，且要求loop的情况的处理\r\n        if (loop && Math.abs(p[0] - points[newlen - 2]) + Math.abs(p[1] - points[newlen - 1]) > 0) {\r\n            points[newlen++] = p[0]; points[newlen++] = p[1];\r\n        }\r\n\r\n        var result: any[] = outVertex;\r\n        length = newlen / 2;\t//points可能有多余的点，所以要用inew来表示\r\n        var w: number = lineWidth / 2;\r\n\r\n        var p1x: number, p1y: number, p2x: number, p2y: number, p3x: number, p3y: number;\r\n\r\n        p1x = points[0];\r\n        p1y = points[1];\r\n        p2x = points[2];\r\n        p2y = points[3];\r\n        let startIndex = result.length;\r\n\r\n        this.vec2 = this.getNormal(p1x, p1y, p2x, p2y, w, this.vec2);\r\n        result.push(p1x - this.vec2.x, p1y - this.vec2.y, p1x + this.vec2.x, p1y + this.vec2.y);\r\n        for (i = 1; i < length - 1; i++) {\r\n            p1x = points[(i - 1) * 2];\r\n            p1y = points[(i - 1) * 2 + 1];\r\n            p2x = points[(i) * 2];\r\n            p2y = points[(i) * 2 + 1];\r\n            p3x = points[(i + 1) * 2];\r\n            p3y = points[(i + 1) * 2 + 1];\r\n\r\n            this._setMiddleVertexs(p1x, p1y, p2x, p2y, p3x, p3y, w, result, this.vec2);\r\n        }\r\n\r\n        p1x = points[newlen - 4];\r\n        p1y = points[newlen - 3];\r\n        p2x = points[newlen - 2];\r\n        p2y = points[newlen - 1];\r\n\r\n\r\n        if (p2x == points[0] && p2y == points[1]) {\r\n            p3x = points[2];\r\n            p3y = points[3];\r\n            this._setMiddleVertexs(p1x, p1y, p2x, p2y, p3x, p3y, w, result, this.vec2);\r\n            let len = result.length;\r\n            result[startIndex] = result[len - 4];\r\n            result[startIndex + 1] = result[len - 3];\r\n            result[startIndex + 2] = result[len - 2];\r\n            result[startIndex + 3] = result[len - 1];\r\n\r\n        } else {\r\n            this.vec2 = this.getNormal(p1x, p1y, p2x, p2y, w, this.vec2);\r\n            result.push(p2x - this.vec2.x, p2y - this.vec2.y, p2x + this.vec2.x, p2y + this.vec2.y);\r\n        }\r\n        for (i = 1; i < length; i++) {\r\n            indices.push(indexBase + (i - 1) * 2, indexBase + (i - 1) * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2, indexBase + (i - 1) * 2);\r\n        }\r\n\r\n        return result;\r\n    }\r\n    private static _setMiddleVertexs(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, w: number, vertexs: number[], out: Vector2) {\r\n        this.getNormal(x1, y1, x2, y2, w, out);\r\n        let perpx = out.x;\r\n        let perpy = out.y;\r\n        this.getNormal(x2, y2, x3, y3, w, out);\r\n        let perp2x = out.x;\r\n        let perp2y = out.y;\r\n\r\n        let a1 = (-perpy + y1) - (-perpy + y2);\r\n        let b1 = (-perpx + x2) - (-perpx + x1);\r\n        let c1 = (-perpx + x1) * (-perpy + y2) - (-perpx + x2) * (-perpy + y1);\r\n        let a2 = (-perp2y + y3) - (-perp2y + y2);\r\n        let b2 = (-perp2x + x2) - (-perp2x + x3);\r\n        let c2 = (-perp2x + x3) * (-perp2y + y2) - (-perp2x + x2) * (-perp2y + y3);\r\n        let denom = a1 * b2 - a2 * b1;\r\n        denom = a1 * b2 - a2 * b1;\r\n        if (Math.abs(denom) < 0.1) {\r\n            denom += 10.1;\r\n            vertexs.push(x2 - perpx, y2 - perpy, x2 + perpx, y2 + perpy);\r\n            return;\r\n        }\r\n\r\n        let px = (b1 * c2 - b2 * c1) / denom;\r\n        let py = (a2 * c1 - a1 * c2) / denom;\r\n        vertexs.push(px, py, x2 - (px - x2), y2 - (py - y2));\r\n    }\r\n\r\n    static getNormal(x1: number, y1: number, x2: number, y2: number, w: number, out?: Vector2) {\r\n        if (!out) {\r\n            out = new Vector2();\r\n        }\r\n\r\n        let perpx = y2 - y1;\r\n        let perpy = x1 - x2;\r\n        let dist = Math.sqrt(perpx * perpx + perpy * perpy);\r\n        out.x = perpx / dist * w;\r\n        out.y = perpy / dist * w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 相邻的两段线，边界会相交，这些交点可以作为三角形的顶点。有两种可选，一种是采用左左,右右交点，一种是采用 左右，左右交点。当两段线夹角很小的时候，如果采用\r\n     * 左左，右右会产生很长很长的交点，这时候就要采用左右左右交点，相当于把尖角截断。\r\n     * 当采用左左右右交点的时候，直接用切线的垂线。采用左右左右的时候，用切线\r\n     * 切线直接采用两个方向的平均值。不能用3-1的方式，那样垂线和下一段可能都在同一方向（例如都在右方）\r\n     * 注意把重合的点去掉\r\n     * @param\tpath\r\n     * @param\tcolor\r\n     * @param\twidth\r\n     * @param\tloop\r\n     * @param\toutvb\r\n     * @param\tvbstride  顶点占用几个float,(bytelength/4)\r\n     * @param\toutib\r\n     * test:\r\n     * 横线\r\n     * [100,100, 400,100]\r\n     * 竖线\r\n     * [100,100, 100,400]\r\n     * 直角\r\n     * [100,100, 400,100, 400,400]\r\n     * 重合点\r\n     * [100,100,100,100,400,100]\r\n     * 同一直线上的点\r\n     * [100,100,100,200,100,3000]\r\n     * 像老式电视的左边不封闭的图形\r\n     * [98,176,  163,178, 95,66, 175,177, 198,178, 252,56, 209,178,  248,175,  248,266,  209,266, 227,277, 203,280, 188,271,  150,271, 140,283, 122,283, 131,268, 99,268]\r\n     * \r\n     */\r\n    //TODO:coverage\r\n    static createLineTriangle(path: any[], color: number, width: number, loop: boolean, outvb: Float32Array, vbstride: number, outib: Uint16Array): void {\r\n\r\n        var points: any[] = path.slice();\r\n        var ptlen: number = points.length;\r\n        var p1x: number = points[0], p1y: number = points[1];\r\n        var p2x: number = points[2], p2y: number = points[2];\r\n        var len: number = 0;\r\n        var rp: number = 0;\r\n        var dx: number = 0, dy: number = 0;\r\n\r\n        //计算每一段的长度，取出有效数据。保存:长度，方向，拐角，切线\r\n        //x,y,len,dx,dy,tx,ty,dot\r\n        //数组中每个都表示当前点开始的长度，方向\r\n        //x,y,dx,dy\r\n\r\n        var pointnum: number = ptlen / 2;\r\n        if (pointnum <= 1) return;\r\n        if (pointnum == 2) {\r\n            //TODO\r\n            return;\r\n        }\r\n\r\n        var tmpData: any[] = new Array(pointnum * 4);//TODO 做到外面\r\n        var realPtNum: number = 0;\t//去掉重复点后的实际点个数。同一直线上的点不做优化\r\n        //var segNum:int = pointnum + (loop?1:0);\r\n        var ci: number = 0;\r\n        for (var i: number = 0; i < pointnum - 1; i++) {\r\n            p1x = points[ci++], p1y = points[ci++];\r\n            p2x = points[ci++], p2y = points[ci++];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        }\r\n        if (loop) {//loop的话，需要取第一个点来算\r\n            p1x = points[ptlen - 2], p1y = points[ptlen - 1];\r\n            p2x = points[0], p2y = points[1];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {//如果长度为零的话，最后这个点就不用加了，上一个点就是指向了第一个点。\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        } else {//不是loop的话，直接取当前段的朝向，记录在上一个点上\r\n            rp = realPtNum * 4;\r\n            tmpData[rp] = p1x;\r\n            tmpData[rp + 1] = p1y;\r\n            tmpData[rp + 2] = dx / len;\r\n            tmpData[rp + 3] = dy / len;\r\n            realPtNum++;\r\n        }\r\n        ci = 0;\r\n\r\n        /**\r\n         * 根据前后两段的方向，计算垂线的方向，根据这个方向和任意一边的dxdy的垂线的点积为w/2可以得到长度。就可以得到增加的点\r\n         */\r\n        //如果相邻两段朝向的dot值接近-1，则表示反向了，需要改成切\r\n\r\n        for (i = 0; i < pointnum; i++) {\r\n            p1x = points[ci], p1y = points[ci + 1];\r\n            p2x = points[ci + 2], p2y = points[ci + 3];\r\n            //var p3x: number = points[ci + 4], p3y: number = points[ci + 5];\r\n\r\n        }\r\n        if (loop) {\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","export class EarcutNode {\r\n    i: any;\r\n    x: any;\r\n    y: any;\r\n    prev: any;\r\n    next: any;\r\n    z: any;\r\n    prevZ: any;\r\n    nextZ: any;\r\n    steiner: any;\r\n    constructor(i: any, x: any, y: any) {\r\n        // vertice index in coordinates array\r\n        this.i = i;\r\n\r\n        // vertex coordinates\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        // previous and next vertice nodes in a polygon ring\r\n        this.prev = null;\r\n        this.next = null;\r\n\r\n        // z-order curve value\r\n        this.z = null;\r\n\r\n        // previous and next nodes in z-order\r\n        this.prevZ = null;\r\n        this.nextZ = null;\r\n\r\n        // indicates whether this is a steiner point\r\n        this.steiner = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { EarcutNode } from \"./EarcutNode\";\r\nexport class Earcut {\r\n    static earcut(data: any, holeIndices: any, dim: any): any {\r\n\r\n        dim = dim || 2;\r\n\r\n        var hasHoles: any = holeIndices && holeIndices.length,\r\n            outerLen: any = hasHoles ? holeIndices[0] * dim : data.length,\r\n            outerNode: any = Earcut.linkedList(data, 0, outerLen, dim, true),\r\n            triangles: any = [];\r\n\r\n        if (!outerNode) return triangles;\r\n\r\n        var minX: any, minY: any, maxX: any, maxY: any, x: any, y: any, invSize: any;\r\n\r\n        if (hasHoles) outerNode = Earcut.eliminateHoles(data, holeIndices, outerNode, dim);\r\n\r\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n        if (data.length > 80 * dim) {\r\n            minX = maxX = data[0];\r\n            minY = maxY = data[1];\r\n\r\n            for (var i: any = dim; i < outerLen; i += dim) {\r\n                x = data[i];\r\n                y = data[i + 1];\r\n                if (x < minX) minX = x;\r\n                if (y < minY) minY = y;\r\n                if (x > maxX) maxX = x;\r\n                if (y > maxY) maxY = y;\r\n            }\r\n\r\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n            invSize = Math.max(maxX - minX, maxY - minY);\r\n            invSize = invSize !== 0 ? 1 / invSize : 0;\r\n        }\r\n\r\n        Earcut.earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\r\n\r\n        return triangles;\r\n    }\r\n\r\n    // create a circular doubly linked list from polygon points in the specified winding order\r\n    static linkedList(data: any, start: any, end: any, dim: any, clockwise: any): any {\r\n        var i: any, last: any;\r\n\r\n        if (clockwise === (Earcut.signedArea(data, start, end, dim) > 0)) {\r\n            for (i = start; i < end; i += dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\r\n        } else {\r\n            for (i = end - dim; i >= start; i -= dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\r\n        }\r\n\r\n        if (last && Earcut.equals(last, last.next)) {\r\n            Earcut.removeNode(last);\r\n            last = last.next;\r\n        }\r\n\r\n        return last;\r\n    }\r\n\r\n    // eliminate colinear or duplicate points\r\n    static filterPoints(start: any, end: any): any {\r\n        if (!start) return start;\r\n        if (!end) end = start;\r\n\r\n        var p: any = start,\r\n            again: any;\r\n        do {\r\n            again = false;\r\n\r\n            if (!p.steiner && (Earcut.equals(p, p.next) || Earcut.area(p.prev, p, p.next) === 0)) {\r\n                Earcut.removeNode(p);\r\n                p = end = p.prev;\r\n                if (p === p.next) break;\r\n                again = true;\r\n\r\n            } else {\r\n                p = p.next;\r\n            }\r\n        } while (again || p !== end);\r\n\r\n        return end;\r\n    }\r\n\r\n    // main ear slicing loop which triangulates a polygon (given as a linked list)\r\n    static earcutLinked(ear: any, triangles: any, dim: any, minX: any, minY: any, invSize: any, pass: any = null): any {\r\n        if (!ear) return;\r\n\r\n        // interlink polygon nodes in z-order\r\n        if (!pass && invSize) Earcut.indexCurve(ear, minX, minY, invSize);\r\n\r\n        var stop: any = ear,\r\n            prev: any, next: any;\r\n\r\n        // iterate through ears, slicing them one by one\r\n        while (ear.prev !== ear.next) {\r\n            prev = ear.prev;\r\n            next = ear.next;\r\n\r\n            if (invSize ? Earcut.isEarHashed(ear, minX, minY, invSize) : Earcut.isEar(ear)) {\r\n                // cut off the triangle\r\n                triangles.push(prev.i / dim);\r\n                triangles.push(ear.i / dim);\r\n                triangles.push(next.i / dim);\r\n\r\n                Earcut.removeNode(ear);\r\n\r\n                // skipping the next vertice leads to less sliver triangles\r\n                ear = next.next;\r\n                stop = next.next;\r\n\r\n                continue;\r\n            }\r\n\r\n            ear = next;\r\n\r\n            // if we looped through the whole remaining polygon and can't find any more ears\r\n            if (ear === stop) {\r\n                // try filtering points and slicing again\r\n                if (!pass) {\r\n                    Earcut.earcutLinked(Earcut.filterPoints(ear, null), triangles, dim, minX, minY, invSize, 1);\r\n\r\n                    // if this didn't work, try curing all small self-intersections locally\r\n                } else if (pass === 1) {\r\n                    ear = Earcut.cureLocalIntersections(ear, triangles, dim);\r\n                    Earcut.earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\r\n\r\n                    // as a last resort, try splitting the remaining polygon into two\r\n                } else if (pass === 2) {\r\n                    Earcut.splitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // check whether a polygon node forms a valid ear with adjacent nodes\r\n    static isEar(ear: any): any {\r\n        var a: any = ear.prev,\r\n            b: any = ear,\r\n            c: any = ear.next;\r\n\r\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n        // now make sure we don't have other points inside the potential ear\r\n        var p: any = ear.next.next;\r\n\r\n        while (p !== ear.prev) {\r\n            if (Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.next;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static isEarHashed(ear: any, minX: any, minY: any, invSize: any): boolean {\r\n        var a: any = ear.prev,\r\n            b: any = ear,\r\n            c: any = ear.next;\r\n\r\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n        // triangle bbox; min & max are calculated like this for speed\r\n        var minTX: any = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\r\n            minTY: any = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\r\n            maxTX: any = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\r\n            maxTY: any = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\r\n\r\n        // z-order range for the current triangle bbox;\r\n        var minZ: any = Earcut.zOrder(minTX, minTY, minX, minY, invSize),\r\n            maxZ: any = Earcut.zOrder(maxTX, maxTY, minX, minY, invSize);\r\n\r\n        // first look for points inside the triangle in increasing z-order\r\n        var p: any = ear.nextZ;\r\n\r\n        while (p && p.z <= maxZ) {\r\n            if (p !== ear.prev && p !== ear.next &&\r\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.nextZ;\r\n        }\r\n\r\n        // then look for points in decreasing z-order\r\n        p = ear.prevZ;\r\n\r\n        while (p && p.z >= minZ) {\r\n            if (p !== ear.prev && p !== ear.next &&\r\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.prevZ;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // go through all polygon nodes and cure small local self-intersections\r\n    //TODO:coverage\r\n    static cureLocalIntersections(start: any, triangles: any, dim: any): any {\r\n        var p: any = start;\r\n        do {\r\n            var a: any = p.prev,\r\n                b: any = p.next.next;\r\n\r\n            if (!Earcut.equals(a, b) && Earcut.intersects(a, p, p.next, b) && Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a)) {\r\n\r\n                triangles.push(a.i / dim);\r\n                triangles.push(p.i / dim);\r\n                triangles.push(b.i / dim);\r\n\r\n                // remove two nodes involved\r\n                Earcut.removeNode(p);\r\n                Earcut.removeNode(p.next);\r\n\r\n                p = start = b;\r\n            }\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        return p;\r\n    }\r\n\r\n    // try splitting polygon into two and triangulate them independently\r\n    //TODO:coverage\r\n    static splitEarcut(start: any, triangles: any, dim: any, minX: any, minY: any, invSize: any): void {\r\n        // look for a valid diagonal that divides the polygon into two\r\n        var a: any = start;\r\n        do {\r\n            var b: any = a.next.next;\r\n            while (b !== a.prev) {\r\n                if (a.i !== b.i && Earcut.isValidDiagonal(a, b)) {\r\n                    // split the polygon in two by the diagonal\r\n                    var c: any = Earcut.splitPolygon(a, b);\r\n\r\n                    // filter colinear points around the cuts\r\n                    a = Earcut.filterPoints(a, a.next);\r\n                    c = Earcut.filterPoints(c, c.next);\r\n\r\n                    // run earcut on each half\r\n                    Earcut.earcutLinked(a, triangles, dim, minX, minY, invSize);\r\n                    Earcut.earcutLinked(c, triangles, dim, minX, minY, invSize);\r\n                    return;\r\n                }\r\n                b = b.next;\r\n            }\r\n            a = a.next;\r\n        } while (a !== start);\r\n    }\r\n\r\n    // link every hole into the outer loop, producing a single-ring polygon without holes\r\n    //TODO:coverage\r\n    static eliminateHoles(data: any, holeIndices: any, outerNode: any, dim: any): any {\r\n        var queue: any = [],\r\n            i: any, len: any, start: any, end: any, list: any;\r\n\r\n        for (i = 0, len = holeIndices.length; i < len; i++) {\r\n            start = holeIndices[i] * dim;\r\n            end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n            list = Earcut.linkedList(data, start, end, dim, false);\r\n            if (list === list.next) list.steiner = true;\r\n            queue.push(Earcut.getLeftmost(list));\r\n        }\r\n\r\n        queue.sort(Earcut.compareX);\r\n\r\n        // process holes from left to right\r\n        for (i = 0; i < queue.length; i++) {\r\n            Earcut.eliminateHole(queue[i], outerNode);\r\n            outerNode = Earcut.filterPoints(outerNode, outerNode.next);\r\n        }\r\n\r\n        return outerNode;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static compareX(a: any, b: any): any {\r\n        return a.x - b.x;\r\n    }\r\n\r\n    // find a bridge between vertices that connects hole with an outer ring and and link it\r\n    //TODO:coverage\r\n    static eliminateHole(hole: any, outerNode: any): void {\r\n        outerNode = Earcut.findHoleBridge(hole, outerNode);\r\n        if (outerNode) {\r\n            var b: any = Earcut.splitPolygon(outerNode, hole);\r\n            Earcut.filterPoints(b, b.next);\r\n        }\r\n    }\r\n\r\n    // David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n    //TODO:coverage\r\n    static findHoleBridge(hole: any, outerNode: any): any {\r\n        var p: any = outerNode,\r\n            hx: any = hole.x,\r\n            hy: any = hole.y,\r\n            qx: any = -Infinity,\r\n            m: any;\r\n\r\n        // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n        // segment's endpoint with lesser x will be potential connection point\r\n        do {\r\n            if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n                var x: any = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n                if (x <= hx && x > qx) {\r\n                    qx = x;\r\n                    if (x === hx) {\r\n                        if (hy === p.y) return p;\r\n                        if (hy === p.next.y) return p.next;\r\n                    }\r\n                    m = p.x < p.next.x ? p : p.next;\r\n                }\r\n            }\r\n            p = p.next;\r\n        } while (p !== outerNode);\r\n\r\n        if (!m) return null;\r\n\r\n        if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\r\n\r\n        // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n        // if there are no points found, we have a valid connection;\r\n        // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n        var stop: any = m,\r\n            mx: any = m.x,\r\n            my: any = m.y,\r\n            tanMin: any = Infinity,\r\n            tan: any;\r\n\r\n        p = m.next;\r\n\r\n        while (p !== stop) {\r\n            if (hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                Earcut.pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\r\n                tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n                if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && Earcut.locallyInside(p, hole)) {\r\n                    m = p;\r\n                    tanMin = tan;\r\n                }\r\n            }\r\n\r\n            p = p.next;\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    // interlink polygon nodes in z-order\r\n    //TODO:coverage\r\n    static indexCurve(start: any, minX: any, minY: any, invSize: any): void {\r\n        var p: any = start;\r\n        do {\r\n            if (p.z === null) p.z = Earcut.zOrder(p.x, p.y, minX, minY, invSize);\r\n            p.prevZ = p.prev;\r\n            p.nextZ = p.next;\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        p.prevZ.nextZ = null;\r\n        p.prevZ = null;\r\n\r\n        Earcut.sortLinked(p);\r\n    }\r\n\r\n    // Simon Tatham's linked list merge sort algorithm\r\n    // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n    //TODO:coverage\r\n    static sortLinked(list: any): any {\r\n        var i: any, p: any, q: any, e: any, tail: any, numMerges: any, pSize: any, qSize: any,\r\n            inSize: any = 1;\r\n\r\n        do {\r\n            p = list;\r\n            list = null;\r\n            tail = null;\r\n            numMerges = 0;\r\n\r\n            while (p) {\r\n                numMerges++;\r\n                q = p;\r\n                pSize = 0;\r\n                for (i = 0; i < inSize; i++) {\r\n                    pSize++;\r\n                    q = q.nextZ;\r\n                    if (!q) break;\r\n                }\r\n                qSize = inSize;\r\n\r\n                while (pSize > 0 || (qSize > 0 && q)) {\r\n\r\n                    if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n                        e = p;\r\n                        p = p.nextZ;\r\n                        pSize--;\r\n                    } else {\r\n                        e = q;\r\n                        q = q.nextZ;\r\n                        qSize--;\r\n                    }\r\n\r\n                    if (tail) tail.nextZ = e;\r\n                    else list = e;\r\n\r\n                    e.prevZ = tail;\r\n                    tail = e;\r\n                }\r\n\r\n                p = q;\r\n            }\r\n\r\n            tail.nextZ = null;\r\n            inSize *= 2;\r\n\r\n        } while (numMerges > 1);\r\n\r\n        return list;\r\n    }\r\n\r\n    // z-order of a point given coords and inverse of the longer side of data bbox\r\n    //TODO:coverage\r\n    static zOrder(x: any, y: any, minX: any, minY: any, invSize: any): any {\r\n        // coords are transformed into non-negative 15-bit integer range\r\n        x = 32767 * (x - minX) * invSize;\r\n        y = 32767 * (y - minY) * invSize;\r\n\r\n        x = (x | (x << 8)) & 0x00FF00FF;\r\n        x = (x | (x << 4)) & 0x0F0F0F0F;\r\n        x = (x | (x << 2)) & 0x33333333;\r\n        x = (x | (x << 1)) & 0x55555555;\r\n\r\n        y = (y | (y << 8)) & 0x00FF00FF;\r\n        y = (y | (y << 4)) & 0x0F0F0F0F;\r\n        y = (y | (y << 2)) & 0x33333333;\r\n        y = (y | (y << 1)) & 0x55555555;\r\n\r\n        return x | (y << 1);\r\n    }\r\n\r\n    // find the leftmost node of a polygon ring\r\n    //TODO:coverage\r\n    static getLeftmost(start: any): any {\r\n        var p: any = start,\r\n            leftmost: any = start;\r\n        do {\r\n            if (p.x < leftmost.x) leftmost = p;\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        return leftmost;\r\n    }\r\n\r\n    // check if a point lies within a convex triangle\r\n    static pointInTriangle(ax: any, ay: any, bx: any, by: any, cx: any, cy: any, px: any, py: any): boolean {\r\n        return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\r\n            (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\r\n            (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\r\n    }\r\n\r\n    // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n    //TODO:coverage\r\n    static isValidDiagonal(a: any, b: any): boolean {\r\n        return a.next.i !== b.i && a.prev.i !== b.i && !Earcut.intersectsPolygon(a, b) &&\r\n            Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a) && Earcut.middleInside(a, b);\r\n    }\r\n\r\n    // signed area of a triangle\r\n    static area(p: any, q: any, r: any): any {\r\n        return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n    }\r\n\r\n    // check if two points are equal\r\n    static equals(p1: any, p2: any): boolean {\r\n        return p1.x === p2.x && p1.y === p2.y;\r\n    }\r\n\r\n    // check if two segments intersect\r\n    //TODO:coverage\r\n    static intersects(p1: any, q1: any, p2: any, q2: any): boolean {\r\n        if ((Earcut.equals(p1, q1) && Earcut.equals(p2, q2)) ||\r\n            (Earcut.equals(p1, q2) && Earcut.equals(p2, q1))) return true;\r\n        return Earcut.area(p1, q1, p2) > 0 !== Earcut.area(p1, q1, q2) > 0 &&\r\n            Earcut.area(p2, q2, p1) > 0 !== Earcut.area(p2, q2, q1) > 0;\r\n    }\r\n\r\n    // check if a polygon diagonal intersects any polygon segments\r\n    //TODO:coverage\r\n    static intersectsPolygon(a: any, b: any): boolean {\r\n        var p: any = a;\r\n        do {\r\n            if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                Earcut.intersects(p, p.next, a, b)) return true;\r\n            p = p.next;\r\n        } while (p !== a);\r\n\r\n        return false;\r\n    }\r\n\r\n    // check if a polygon diagonal is locally inside the polygon\r\n    //TODO:coverage\r\n    static locallyInside(a: any, b: any): boolean {\r\n        return Earcut.area(a.prev, a, a.next) < 0 ?\r\n            Earcut.area(a, b, a.next) >= 0 && Earcut.area(a, a.prev, b) >= 0 :\r\n            Earcut.area(a, b, a.prev) < 0 || Earcut.area(a, a.next, b) < 0;\r\n    }\r\n\r\n    // check if the middle point of a polygon diagonal is inside the polygon\r\n    //TODO:coverage\r\n    static middleInside(a: any, b: any): boolean {\r\n        var p: any = a,\r\n            inside: any = false,\r\n            px: any = (a.x + b.x) / 2,\r\n            py: any = (a.y + b.y) / 2;\r\n        do {\r\n            if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\r\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\r\n                inside = !inside;\r\n            p = p.next;\r\n        } while (p !== a);\r\n\r\n        return inside;\r\n    }\r\n\r\n    // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n    // if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n    //TODO:coverage\r\n    static splitPolygon(a: any, b: any): any {\r\n        var a2: any = new EarcutNode(a.i, a.x, a.y),\r\n            b2: any = new EarcutNode(b.i, b.x, b.y),\r\n            an: any = a.next,\r\n            bp: any = b.prev;\r\n\r\n        a.next = b;\r\n        b.prev = a;\r\n\r\n        a2.next = an;\r\n        an.prev = a2;\r\n\r\n        b2.next = a2;\r\n        a2.prev = b2;\r\n\r\n        bp.next = b2;\r\n        b2.prev = bp;\r\n\r\n        return b2;\r\n    }\r\n\r\n    // create a node and optionally link it with previous one (in a circular doubly linked list)\r\n    static insertNode(i: any, x: any, y: any, last: any): any {\r\n        var p: any = new EarcutNode(i, x, y);\r\n\r\n        if (!last) {\r\n            p.prev = p;\r\n            p.next = p;\r\n\r\n        } else {\r\n            p.next = last.next;\r\n            p.prev = last;\r\n            last.next.prev = p;\r\n            last.next = p;\r\n        }\r\n        return p;\r\n    }\r\n\r\n    static removeNode(p: any): void {\r\n        p.next.prev = p.prev;\r\n        p.prev.next = p.next;\r\n\r\n        if (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n        if (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n    }\r\n    // return a percentage difference between the polygon area and its triangulation area;\r\n    // used to verify correctness of triangulation\r\n    /*earcut.deviation = function (data, holeIndices, dim, triangles) {\r\n        var hasHoles = holeIndices && holeIndices.length;\r\n        var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n    \r\n        var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\r\n        if (hasHoles) {\r\n            for (var i = 0, len = holeIndices.length; i < len; i++) {\r\n                var start = holeIndices[i] * dim;\r\n                var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n                polygonArea -= Math.abs(signedArea(data, start, end, dim));\r\n            }\r\n        }\r\n    \r\n        var trianglesArea = 0;\r\n        for (i = 0; i < triangles.length; i += 3) {\r\n            var a = triangles[i] * dim;\r\n            var b = triangles[i + 1] * dim;\r\n            var c = triangles[i + 2] * dim;\r\n            trianglesArea += Math.abs(\r\n                (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\r\n                (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\r\n        }\r\n    \r\n        return polygonArea === 0 && trianglesArea === 0 ? 0 :\r\n            Math.abs((trianglesArea - polygonArea) / polygonArea);\r\n    };*/\r\n\r\n    static signedArea(data: any, start: any, end: any, dim: any): any {\r\n        var sum: any = 0;\r\n        for (var i: any = start, j: any = end - dim; i < end; i += dim) {\r\n            sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n            j = i;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    // turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\r\n    /*earcut.flatten = function (data) {\r\n        var dim = data[0][0].length,\r\n            result = {vertices: [], holes: [], dimensions: dim},\r\n            holeIndex = 0;\r\n    \r\n        for (var i = 0; i < data.length; i++) {\r\n            for (var j = 0; j < data[i].length; j++) {\r\n                for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\r\n            }\r\n            if (i > 0) {\r\n                holeIndex += data[i - 1].length;\r\n                result.holes.push(holeIndex);\r\n            }\r\n        }\r\n        return result;\r\n    };*/\r\n}\r\n\r\n","import { Const } from \"../../Const\";\r\nimport { Material } from \"../../resource/Material\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { BlendMode } from \"../canvas/BlendMode\";\r\nimport { Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { Mesh2D } from \"../utils/Mesh2D\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\n\r\nexport class Submit extends SubmitBase {\r\n\r\n    protected static _poolSize: number = 0;\r\n    protected static POOL: Submit[] = [];\r\n    material: Material;\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        super(renderType);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    renderSubmit(): number {\r\n        if (this._numEle === 0 || !this._mesh || this._numEle == 0) return 1;//怎么会有_numEle是0的情况?\r\n\r\n        var _tex = this.shaderValue.textureHost;\r\n        if (_tex) {\r\n            var source: any = _tex._getSource();\r\n            if (!source)\r\n                return 1;\r\n            this.shaderValue.texture = source;\r\n        }\r\n\r\n        this._mesh.useMesh();//bind 顶点\r\n        this.shaderValue.upload(this.material);//绑定shader，uploadMaterial\r\n\r\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\r\n            RenderStateContext.setBlend(true);\r\n            this._blendFn();\r\n            BlendMode.activeBlendFunction = this._blendFn;\r\n        }\r\n        LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        // Stat.renderBatches++;\r\n        // Stat.trianglesFaces += this._numEle / 3;\r\n\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if (SubmitBase.RENDERBASE == this)\r\n            return;\r\n\r\n        if ((--this._ref) < 1) {\r\n            Submit.POOL[Submit._poolSize++] = this;\r\n            this.shaderValue.release();\r\n            this.shaderValue = null;\r\n            //_vb = null;\r\n            //_mesh.destroy();\r\n            this._mesh = null;\r\n            this._parent && (this._parent.releaseRender(), this._parent = null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * create方法只传对submit设置的值\r\n     */\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): Submit {\r\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : new Submit();\r\n        o._ref = 1;\r\n        o._mesh = mesh;\r\n        o._key.clear();\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._numEle = 0;\r\n        var blendType = context._nBlendType;\r\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        o.shaderValue = sv;\r\n        o.material = context.material;\r\n        var filters: any[] = context._shader2D.filters;\r\n        filters && o.shaderValue.setFilters(filters);\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * 创建一个矢量submit\r\n     * @param\tctx\r\n     * @param\tmesh\r\n     * @param\tnumEle\t\t对应drawElement的第二个参数:count\r\n     * @param\toffset\t\tdrawElement的时候的ib的偏移。\r\n     * @param\tsv\t\t\tValue2D\r\n     * @return\r\n     */\r\n    static createShape(ctx: Context, mesh: Mesh2D, numEle: number, sv: Value2D): Submit {\r\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : (new Submit());\r\n        o._mesh = mesh;\r\n        o._numEle = numEle;\r\n        o._startIdx = mesh.indexNum * 2;\r\n        o._ref = 1;\r\n        o.shaderValue = sv;\r\n        var blendType = ctx._nBlendType;\r\n        o._key.blendShader = blendType;\r\n        o.material = ctx.material;\r\n        o._blendFn = ctx._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        return o;\r\n    }\r\n}\r\n\r\n\r\n","import { Matrix } from \"../../maths/Matrix\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { RenderState2D } from \"../utils/RenderState2D\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\n\r\n/**\r\n * cache as normal 模式下的生成的canvas的渲染。\r\n */\r\nexport class SubmitCanvas extends SubmitBase {\r\n    /**@internal */\r\n    _matrix: Matrix = new Matrix();\t\t// 用来计算当前的世界矩阵\r\n    canv: Context;\r\n    /**@internal */\r\n    _matrix4: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    static POOL: SubmitCanvas[] = [];\r\n\r\n    static create(canvas: any, alpha: number, filters: any[]): SubmitCanvas {\r\n        var o = (!(SubmitCanvas.POOL as any)._length) ? (new SubmitCanvas()) : SubmitCanvas.POOL[--(SubmitCanvas.POOL as any)._length];\r\n        o.canv = canvas;\r\n        o._ref = 1;\r\n        o._numEle = 0;\r\n        var v: Value2D = o.shaderValue;\r\n        v.alpha = alpha;\r\n        v.defines.clearDefine();\r\n        filters && filters.length && v.setFilters(filters);\r\n        return o;\r\n    }\r\n\r\n    constructor() {\r\n        super(SubmitBase.TYPE_2D);\r\n        this.shaderValue = new Value2D(RenderSpriteData.Zero);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    renderSubmit(): number {\r\n        // 下面主要是为了给canvas设置矩阵。因为canvas保存的是没有偏移的。\r\n        var preAlpha = RenderState2D.worldAlpha;\r\n        var preMatrix4 = RenderState2D.worldMatrix4;\r\n        var preMatrix = RenderState2D.worldMatrix;\r\n\r\n        var preFilters: any[] = RenderState2D.worldFilters;\r\n        var preWorldShaderDefines = RenderState2D.worldShaderDefines;\r\n\r\n        var v = this.shaderValue;\r\n        var m = this._matrix;\r\n        var m4 = this._matrix4;\r\n        var mout = Matrix.TEMP;\r\n        Matrix.mul(m, preMatrix, mout);\r\n        m4[0] = mout.a;\r\n        m4[1] = mout.b;\r\n        m4[4] = mout.c;\r\n        m4[5] = mout.d;\r\n        m4[12] = mout.tx;\r\n        m4[13] = mout.ty;\r\n\r\n        RenderState2D.worldMatrix = mout.clone();\r\n        RenderState2D.worldMatrix4 = m4;\r\n        RenderState2D.worldAlpha = RenderState2D.worldAlpha * v.alpha;\r\n        if (v.filters && v.filters.length) {\r\n            RenderState2D.worldFilters = v.filters;\r\n            RenderState2D.worldShaderDefines = v.defines;\r\n        }\r\n        (this.canv as any)['flushsubmit']();\r\n        RenderState2D.worldAlpha = preAlpha;\r\n        RenderState2D.worldMatrix4 = preMatrix4;\r\n        RenderState2D.worldMatrix.destroy();\r\n        RenderState2D.worldMatrix = preMatrix;\r\n\r\n        RenderState2D.worldFilters = preFilters;\r\n        RenderState2D.worldShaderDefines = preWorldShaderDefines;\r\n        return 1;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var cache = SubmitCanvas.POOL;\r\n            //_vb = null;\r\n            this._mesh = null;\r\n            cache[(cache as any)._length++] = this;\r\n        }\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    getRenderType(): number {\r\n        return SubmitBase.TYPE_CANVAS;\r\n    }\r\n\r\n}\r\n{ (SubmitCanvas.POOL as any)._length = 0 }\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nimport { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { RenderTexture2D } from \"../../resource/RenderTexture2D\"\r\nimport { BlendMode } from \"../canvas/BlendMode\"\r\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\r\nimport { Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { Const } from \"../../Const\";\r\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\r\nimport { Vector4 } from \"../../maths/Vector4\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\nexport class SubmitTarget implements ISubmit {\r\n    /**@internal */\r\n    _mesh: Mesh2D;\t\t\t//代替 _vb,_ib\r\n    /**@internal */\r\n    _startIdx: number;\r\n    /**@internal */\r\n    _numEle: number;\r\n    shaderValue: Value2D;\r\n    blendType: number = 0;\r\n    /**@internal */\r\n    _ref: number = 1;\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n    srcRT: RenderTexture2D;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    static POOL: SubmitTarget[] = [];\r\n    renderSubmit(): number {\r\n        this._mesh.useMesh();\r\n\r\n        var target = this.srcRT;\r\n        if (target) {//??为什么会出现为空的情况\r\n            this.shaderValue.textureHost = target;\r\n            this.shaderValue.upload();\r\n            this.blend();\r\n            LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    blend(): void {\r\n        if (BlendMode.activeBlendFunction !== BlendMode.fns[this.blendType]) {\r\n            RenderStateContext.setBlend(true);\r\n            BlendMode.fns[this.blendType]();\r\n            BlendMode.activeBlendFunction = BlendMode.fns[this.blendType];\r\n        }\r\n    }\r\n\r\n    getRenderType(): number {\r\n        return 0;\r\n    }\r\n\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var pool: any = SubmitTarget.POOL;\r\n            pool[pool._length++] = this;\r\n        }\r\n    }\r\n\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D, rt: RenderTexture2D): SubmitTarget {\r\n        var o: SubmitTarget = (SubmitTarget.POOL as any)._length ? SubmitTarget.POOL[--(SubmitTarget.POOL as any)._length] : new SubmitTarget();\r\n        o._mesh = mesh;\r\n        o.srcRT = rt;\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._ref = 1;\r\n        o._key.clear();\r\n        o._numEle = 0;\r\n        o.blendType = context._nBlendType;\r\n        o._key.blendShader = o.blendType;\r\n        o.shaderValue = sv;\r\n        if (context._colorFiler) {\r\n            var ft: ColorFilter = context._colorFiler;\r\n            sv.defines.addDefine(ft.typeDefine);\r\n            Matrix4x4.TEMPMatrix0.cloneByArray(ft._mat);\r\n            (<TextureSV>sv).colorMat = Matrix4x4.TEMPMatrix0;\r\n            Vector4.tempVec4.setValue(ft._alpha[0], ft._alpha[1], ft._alpha[2], ft._alpha[3]);\r\n            (<TextureSV>sv).colorAlpha = Vector4.tempVec4;\r\n        }\r\n        return o;\r\n    }\r\n}\r\n\r\n{\r\n    (SubmitTarget.POOL as any)._length = 0;\r\n}\r\n\r\n\r\n","import { SubmitBase } from \"./SubmitBase\";\r\nimport { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { BlendMode } from \"../canvas/BlendMode\"\r\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\r\nimport { Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { Const } from \"../../Const\";\r\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\r\nimport { Vector4 } from \"../../maths/Vector4\";\r\nimport { Material } from \"../../resource/Material\";\r\nimport { Laya } from \"../../../Laya\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\nexport class SubmitTexture extends SubmitBase {\r\n    private static _poolSize: number = 0;\r\n    private static POOL: SubmitTexture[] = [];\r\n    material: Material;\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        super(renderType);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            SubmitTexture.POOL[SubmitTexture._poolSize++] = this;\r\n            this.shaderValue.release();\r\n            //_vb = null;\r\n            this._mesh = null;\t\t//下次create会重新赋值。既然会重新赋值，那还设置干嘛\r\n            this._parent && (this._parent.releaseRender(), this._parent = null);\r\n        }\r\n    }\r\n\r\n    renderSubmit(): number {\r\n        if (this._numEle === 0)\r\n            return 1;\r\n\r\n        var tex = this.shaderValue.textureHost;\r\n        if (tex) {//现在fillrect也用的这个submit，所以不必要求有texture\r\n            var source: any = tex ? tex._getSource() : null;\r\n            if (!source) return 1;\r\n        }\r\n\r\n        this._mesh.useMesh();//Mesh2D  ->    Geometry  Vao  Vb  ib\r\n\r\n        //bind Shader uploadData\r\n        this.shaderValue.updateShaderData();//Material   Shader   ShaderData\r\n\r\n        //如果shader参数都相同，只要提交texture就行了\r\n        var lastSubmit = <SubmitTexture>SubmitBase.preRender;\r\n        var prekey = ((<SubmitBase>SubmitBase.preRender))._key;\r\n        //         if (this._key.blendShader === 0 && (this._key.submitType === prekey.submitType && this._key.blendShader === prekey.blendShader) && BaseShader.activeShader &&\r\n        //             (<SubmitBase>SubmitBase.preRender).clipInfoID == this.clipInfoID &&\r\n        // //            lastSubmit.shaderValue.defines._value === this.shaderValue.defines._value && //shader define要相同. \r\n        //             (this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERGLOW) || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERBLUR)\r\n        //                 || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERCOLOR) || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILLTEXTURE))  //只有基本类型的shader走这个，像blur，glow，filltexture等都不要这样优化\r\n        //         ) {\r\n        //             (<Shader>BaseShader.activeShader).uploadTexture2D(source);\r\n        //         }\r\n        //         else {\r\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\r\n            RenderStateContext.setBlend(true);\r\n            this._blendFn();\r\n            BlendMode.activeBlendFunction = this._blendFn;\r\n        }\r\n        this.shaderValue.texture = source;\r\n        this.shaderValue.upload(this.material);//Update Uniform\r\n        //}\r\n        //Draw\r\n        LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        return 1;\r\n    }\r\n\r\n    /*\r\n       create方法只传对submit设置的值\r\n     */\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): SubmitTexture {\r\n        var o = SubmitTexture._poolSize ? SubmitTexture.POOL[--SubmitTexture._poolSize] : new SubmitTexture(SubmitBase.TYPE_TEXTURE);\r\n        o._mesh = mesh;\r\n        o._key.clear();\r\n        o._key.submitType = SubmitBase.KEY_DRAWTEXTURE;\r\n        o._ref = 1;\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._numEle = 0;\r\n        var blendType = context._nBlendType;\r\n        o._key.blendShader = blendType;\r\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        o.shaderValue = sv;\r\n        o.material = context.material;\r\n        //sv.setValue(context._shader2D);\r\n        if (context._colorFiler) {\r\n            var ft: ColorFilter = context._colorFiler;\r\n            sv.defines.addDefine(ft.typeDefine);\r\n            Matrix4x4.TEMPMatrix0.cloneByArray(ft._mat);\r\n            (<TextureSV>sv).colorMat = Matrix4x4.TEMPMatrix0;\r\n            Vector4.tempVec4.setValue(ft._alpha[0], ft._alpha[1], ft._alpha[2], ft._alpha[3]);\r\n            (<TextureSV>sv).colorAlpha = Vector4.tempVec4;\r\n        }\r\n        return o;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { SubmitTexture } from \"../submit/SubmitTexture\"\r\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\";\r\n/**\r\n * ...\r\n * @author laoxie\r\n */\r\nexport class CharSubmitCache {\r\n    private static __posPool: any[] = [];\r\n    private static __nPosPool: number = 0;\r\n\r\n    private _data: any[] = [];\r\n    private _ndata: number = 0;\r\n    private _tex: Texture;\r\n    private _imgId: number;\r\n    private _clipid: number = -1;\r\n    private _clipMatrix: Matrix = new Matrix();\r\n    /**@internal */\r\n    _enable: boolean = false;\r\n    /**@internal */\r\n    _colorFiler: ColorFilter;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    clear(): void {\r\n        this._tex = null;\r\n        this._imgId = -1;\r\n        this._ndata = 0;\r\n        this._enable = false;\r\n        this._colorFiler = null;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.clear();\r\n        this._data.length = 0;\r\n        this._data = null;\r\n    }\r\n\r\n    add(ctx: Context, tex: Texture, imgid: number, pos: any[], uv: ArrayLike<number>, color: number): void {\r\n        if (this._ndata > 0 && (this._tex != tex || this._imgId != imgid ||\r\n            (this._clipid >= 0 && this._clipid != ctx._clipInfoID))) {\r\n            this.submit(ctx);\r\n        }\r\n\r\n        this._clipid = ctx._clipInfoID;\r\n        ctx._globalClipMatrix.copyTo(this._clipMatrix);\r\n        this._tex = tex;\r\n        this._imgId = imgid;\r\n        this._colorFiler = ctx._colorFiler;\r\n\r\n        this._data[this._ndata] = pos;\r\n        this._data[this._ndata + 1] = uv;\r\n        this._data[this._ndata + 2] = color;\r\n        this._ndata += 3;\r\n    }\r\n\r\n    getPos(): any[] {\r\n        if (CharSubmitCache.__nPosPool == 0)\r\n            return new Array(8);\r\n        return CharSubmitCache.__posPool[--CharSubmitCache.__nPosPool];\r\n    }\r\n\r\n    enable(value: boolean, ctx: Context): void {\r\n        if (value === this._enable)\r\n            return;\r\n        this._enable = value;\r\n        this._enable || this.submit(ctx);\r\n    }\r\n\r\n    submit(ctx: Context): void {\r\n        var n: number = this._ndata;\r\n        if (!n)\r\n            return;\r\n\r\n        var _mesh: MeshQuadTexture = ctx._mesh;\r\n\r\n        var colorFiler: ColorFilter = ctx._colorFiler;\r\n        ctx._colorFiler = this._colorFiler;\r\n        var submit: SubmitTexture = SubmitTexture.create(ctx, _mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n        ctx._submits[ctx._submits._length++] = ctx._curSubmit = submit;\r\n        submit.shaderValue.textureHost = this._tex;\r\n        submit._key.other = this._imgId;\r\n        ctx._colorFiler = colorFiler;\r\n        ctx._copyClipInfo(submit, this._clipMatrix);\r\n        submit.clipInfoID = this._clipid;\r\n\r\n        for (var i: number = 0; i < n; i += 3) {\r\n            _mesh.addQuad(this._data[i], this._data[i + 1], this._data[i + 2], true);\r\n            CharSubmitCache.__posPool[CharSubmitCache.__nPosPool++] = this._data[i];\r\n        }\r\n\r\n        n /= 3;\r\n        submit._numEle += n * 6;\r\n        _mesh.indexNum += n * 6;\r\n        _mesh.vertNum += n * 4;\r\n        ctx._drawCount += n;\r\n        this._ndata = 0;\r\n\r\n        if (RenderInfo.loopCount % 100 == 0)\r\n            this._data.length = 0;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Config } from \"./Config\";\r\nimport { Vector3 } from \"./laya/maths/Vector3\";\r\n\r\n/**\r\n * <code>Config3D</code> 类用于创建3D初始化配置。\r\n */\r\nexport class Config3D {\r\n    /**\r\n     * 控制是否动态合并 \r\n     */\r\n    static enableDynamicBatch: boolean = true;\r\n    /**\r\n     * 是否静态合并 \r\n     */\r\n    static enableStaticBatch: boolean = true;\r\n    /** \r\n     * 是否开启UniformBuffer\r\n     */\r\n    static enableUniformBufferObject = true;\r\n    /**\r\n     * 设置3DRT分辨率倍数\r\n     */\r\n    static pixelRatio: number = 1;\r\n    /**\r\n     *  设置自定义分辨率\r\n     */\r\n    static customResolution: boolean = false;\r\n    /**\r\n     *  设置最大RendertexturePool缓存的值\r\n     */\r\n    static defaultCacheRTMemory: number = 256;\r\n    /**\r\n     * 默认物理功能初始化内存，单位为M。\r\n     */\r\n    static defaultPhysicsMemory: number = 16;\r\n    /**\r\n     *  是否开启多光源,如果场景不需要多光源，关闭后可提升性能。\r\n     */\r\n    static enableMultiLight: boolean = true;\r\n    /**\r\n     * 最大光源数量。\r\n     */\r\n    static maxLightCount: number = 32;\r\n    /**\r\n    * X、Y、Z轴的光照集群数量,Z值会影响Cluster接受区域光(点光、聚光)影响的数量,Math.floor(2048 / lightClusterCount.z - 1) * 4 为每个Cluster的最大平均接受区域光数量,如果每个Cluster所接受光源影响的平均数量大于该值，则较远的Cluster会忽略其中多余的光照影响。\r\n    */\r\n    static lightClusterCount: Vector3 = new Vector3(12, 12, 12);\r\n\r\n    /**\r\n     * 最大形变数量\r\n     */\r\n    static maxMorphTargetCount: number = 32;\r\n\r\n    /**\r\n    * 设置分辨率大小（并不是实际渲染分辨率）\r\n    * @param width \r\n    * @param height \r\n    */\r\n    static setResolution(width: number, height: number) {\r\n        Config3D.customResolution = true;\r\n        Config3D._resoluWidth = width;\r\n        Config3D._resoluHeight = height;\r\n    }\r\n\r\n    /**BVHRenderConfig */\r\n    /**是否使用BVH裁剪 */\r\n    static useBVHCull: boolean = false;\r\n    /**一个BVH节点最大的cell数，超过这个数会分离 */\r\n    static BVH_max_SpatialCount = 7;\r\n    /**最大BVH节点的大小 */\r\n    static BVH_limit_size = 32;\r\n    /**最小cellbuild数，如果小于这个数，不会BVH构建 */\r\n    static BVH_Min_Build_nums = 10\r\n\r\n\r\n    //----引擎内部使用,不暴露给开发者----\r\n    /**@internal */\r\n    static _uniformBlock: boolean;\r\n    /**@internal 设置分辨率宽度*/\r\n    static _resoluWidth: number = -1;\r\n    /**@internal 设置分辨率高度*/\r\n    static _resoluHeight: number = -1;\r\n    /**@internal*/\r\n    static _maxAreaLightCountPerClusterAverage: number;\r\n    /**@internal*/\r\n    static _multiLighting: boolean;\r\n    /** @internal是否开启视锥裁剪调试。\r\n     */\r\n    static debugFrustumCulling: boolean = false;\r\n}\r\n\r\nConfig.isStencil = true;","import { Config3D } from \"../../Config3D\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\nexport class RenderTexture extends BaseTexture implements IRenderTarget {\r\n\r\n    // todo 记录当前 绑定 rt  位置不放在这里\r\n    protected static _currentActive: RenderTexture = null;\r\n\r\n    static get currentActive(): RenderTexture {\r\n        return RenderTexture._currentActive;\r\n    }\r\n\r\n    protected static _configInstance: any = {};\r\n    static configRenderContextInstance(value: any) {\r\n        RenderTexture._configInstance = value;\r\n    }\r\n\r\n    private static _pool: RenderTexture[] = [];\r\n    private static _poolMemory: number = 0;\r\n\r\n    /**\r\n     * 创建一个RenderTexture\r\n     * @param width\r\n     * @param height\r\n     * @param colorFormat\r\n     * @param depthFormat\r\n     * @param mipmap \r\n     * @param multiSamples \r\n     * @param depthTexture \r\n     * @param sRGB \r\n     * @returns \r\n     */\r\n    static createFromPool(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, mipmap: boolean = false, multiSamples: number = 1, depthTexture: boolean = false, sRGB: boolean = false) {\r\n\r\n        // todo mipmap 判断\r\n        mipmap = mipmap && (width & (width - 1)) === 0 && (height & (height - 1)) === 0;\r\n\r\n        let n = RenderTexture._pool.length;\r\n        for (let index = 0; index < n; index++) {\r\n            let rt = RenderTexture._pool[index];\r\n\r\n            if (rt.width == width && rt.height == height && rt.colorFormat == colorFormat && rt.depthStencilFormat == depthFormat && rt._generateMipmap == mipmap && rt.multiSamples == multiSamples && rt.generateDepthTexture == depthTexture && rt._gammaSpace == sRGB) {\r\n                rt._inPool = false;\r\n                let end = RenderTexture._pool[n - 1];\r\n                RenderTexture._pool[index] = end;\r\n                RenderTexture._pool.length -= 1;\r\n                RenderTexture._poolMemory -= (rt._renderTarget.gpuMemory / 1024 / 1024);\r\n                return rt;\r\n            }\r\n        }\r\n\r\n        let rt = new RenderTexture(width, height, colorFormat, depthFormat, mipmap, multiSamples, depthTexture, sRGB);\r\n        rt.lock = true;\r\n        return rt;\r\n    }\r\n\r\n    static recoverToPool(rt: RenderTexture): void {\r\n        if (rt._inPool || rt.destroyed)\r\n            return;\r\n        RenderTexture._pool.push(rt);\r\n        RenderTexture._poolMemory += (rt._renderTarget.gpuMemory / 1024 / 1024);\r\n        rt._inPool = true;\r\n    }\r\n\r\n    static clearPool() {\r\n        if (RenderTexture._poolMemory < Config3D.defaultCacheRTMemory) {\r\n            return;\r\n        }\r\n        for (var i in RenderTexture._pool) {\r\n            RenderTexture._pool[i].destroy();\r\n        }\r\n        RenderTexture._pool = [];\r\n        RenderTexture._poolMemory = 0;\r\n    }\r\n\r\n    /** @internal 最后绑定到主画布上的结果 此值可能为null*/\r\n    private static _bindCanvasRender: RenderTexture;\r\n    /**\r\n     * 绑定到主画布上的RenderTexture\r\n     */\r\n    static get bindCanvasRender(): RenderTexture {\r\n        return RenderTexture._bindCanvasRender;\r\n    }\r\n\r\n    static set bindCanvasRender(value: RenderTexture) {\r\n        if (value != this._bindCanvasRender)\r\n            //(this._bindCanvasRender) && RenderTexture.recoverToPool(this._bindCanvasRender);\r\n            this._bindCanvasRender = value;\r\n    }\r\n\r\n\r\n    _inPool: boolean = false;\r\n\r\n    _isCameraTarget: boolean = false;\r\n\r\n    _renderTarget: InternalRenderTarget;\r\n\r\n    private _generateDepthTexture: boolean = false;\r\n    public get generateDepthTexture(): boolean {\r\n        return this._generateDepthTexture;\r\n    }\r\n    public set generateDepthTexture(value: boolean) {\r\n\r\n        // todo  重复 设置\r\n        if (value && !this._depthStencilTexture) {\r\n            // todo  base texture format 移出构造函数\r\n            this._depthStencilTexture = new BaseTexture(this.width, this.height, this.depthStencilFormat);\r\n            // @ts-ignore\r\n            this._depthStencilTexture._dimension = TextureDimension.Tex2D;\r\n\r\n\r\n            this._depthStencilTexture._texture = LayaGL.textureContext.createRenderTextureInternal(TextureDimension.Tex2D, this.width, this.height, this.depthStencilFormat, false, false);\r\n\r\n            LayaGL.textureContext.setupRendertargetTextureAttachment(this._renderTarget, this._depthStencilTexture._texture);\r\n\r\n        }\r\n\r\n        this._generateDepthTexture = value;\r\n    }\r\n\r\n    private _depthStencilTexture: BaseTexture;\r\n\r\n    get depthStencilTexture(): BaseTexture {\r\n        return this._depthStencilTexture;\r\n    }\r\n\r\n    _generateMipmap: boolean;\r\n\r\n    get colorFormat(): RenderTargetFormat {\r\n        return this._renderTarget.colorFormat;\r\n    }\r\n\r\n    protected _depthStencilFormat: RenderTargetFormat;\r\n    get depthStencilFormat(): RenderTargetFormat {\r\n        return this._renderTarget.depthStencilFormat;\r\n    }\r\n\r\n    protected _multiSamples: number;\r\n    public get multiSamples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    get isCube(): boolean {\r\n        return this._renderTarget._isCube;\r\n    }\r\n\r\n    get samples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    get generateMipmap(): boolean {\r\n        return this._renderTarget._generateMipmap;\r\n    }\r\n\r\n    /**\r\n     * @param width \r\n     * @param height \r\n     * @param colorFormat \r\n     * @param depthFormat \r\n     * @param generateMipmap \r\n     * @param multiSamples \r\n     * @param generateDepthTexture \r\n     * @param sRGB \r\n     */\r\n    constructor(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\r\n        super(width, height, colorFormat);\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\r\n\r\n        this._generateMipmap = generateMipmap;\r\n        this._multiSamples = multiSamples;\r\n        this._generateDepthTexture = generateDepthTexture;\r\n\r\n        // todo format \r\n        this._createRenderTarget();\r\n    }\r\n\r\n    _createRenderTarget() {\r\n        this._dimension = TextureDimension.Tex2D;\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\r\n\r\n        // rt 格式 宽高可能不支持\r\n        this._generateMipmap = this._renderTarget._generateMipmap;\r\n        this._texture = this._renderTarget._textures[0];\r\n\r\n        this.generateDepthTexture = this._generateDepthTexture;\r\n    }\r\n\r\n    //@internal\r\n    recreate(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._format = <TextureFormat><any>colorFormat;\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\r\n\r\n        this._generateMipmap = generateMipmap;\r\n        this._multiSamples = multiSamples;\r\n        this._generateDepthTexture = generateDepthTexture;\r\n\r\n        this._disposeResource();\r\n\r\n        // todo format \r\n        this._createRenderTarget();\r\n    }\r\n\r\n    _start() {\r\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\r\n        if (RenderTexture._currentActive != this) {\r\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\r\n            RenderTexture._currentActive = this;\r\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget);\r\n        }\r\n    }\r\n\r\n    _end() {\r\n        RenderTexture._currentActive = null;\r\n\r\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n        (this._isCameraTarget) && (RenderTexture._configInstance.invertY = false);\r\n    }\r\n\r\n    getData(xOffset: number, yOffset: number, width: number, height: number, out: Uint8Array | Float32Array): Uint8Array | Float32Array {\r\n        LayaGL.textureContext.readRenderTargetPixelData(this._renderTarget, xOffset, yOffset, width, height, out);\r\n        return out;\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n\r\n        if (RenderTexture._currentActive == this) {\r\n            this._end();\r\n        }\r\n\r\n        this._renderTarget.dispose();\r\n        this._renderTarget = null;\r\n        this._depthStencilTexture?.destroy();\r\n        this._depthStencilTexture = null;\r\n    }\r\n\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Bezier } from \"../maths/Bezier\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\r\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { FontInfo } from \"../utils/FontInfo\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { DrawStyle } from \"../webgl/canvas/DrawStyle\";\r\nimport { Path } from \"../webgl/canvas/Path\";\r\nimport { ISaveData } from \"../webgl/canvas/save/ISaveData\";\r\nimport { SaveBase } from \"../webgl/canvas/save/SaveBase\";\r\nimport { SaveClipRect } from \"../webgl/canvas/save/SaveClipRect\";\r\nimport { SaveMark } from \"../webgl/canvas/save/SaveMark\";\r\nimport { SaveTransform } from \"../webgl/canvas/save/SaveTransform\";\r\nimport { SaveTranslate } from \"../webgl/canvas/save/SaveTranslate\";\r\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\r\nimport { BaseShader } from \"../webgl/shader/BaseShader\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { SkinMeshBuffer } from \"../webgl/shader/d2/skinAnishader/SkinMeshBuffer\";\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { BasePoly } from \"../webgl/shapes/BasePoly\";\r\nimport { Earcut } from \"../webgl/shapes/Earcut\";\r\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\r\nimport { Submit } from \"../webgl/submit/Submit\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { SubmitCanvas } from \"../webgl/submit/SubmitCanvas\";\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\r\nimport { SubmitKey } from \"../webgl/submit/SubmitKey\";\r\nimport { SubmitTarget } from \"../webgl/submit/SubmitTarget\";\r\nimport { SubmitTexture } from \"../webgl/submit/SubmitTexture\";\r\nimport { CharRenderInfo } from \"../webgl/text/CharRenderInfo\";\r\nimport { CharSubmitCache } from \"../webgl/text/CharSubmitCache\";\r\nimport { TextRender } from \"../webgl/text/TextRender\";\r\nimport { Mesh2D } from \"../webgl/utils/Mesh2D\";\r\nimport { MeshQuadTexture } from \"../webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"../webgl/utils/MeshTexture\";\r\nimport { MeshVG } from \"../webgl/utils/MeshVG\";\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { HTMLCanvas } from \"./HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Texture } from \"./Texture\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nimport { NativeContext } from \"./NativeContext\";\r\nimport { Const } from \"../Const\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { Material } from \"./Material\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nconst defaultClipMatrix = new Matrix(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE, 0, 0);\r\n\r\n/**\r\n * @private\r\n * Context扩展类\r\n */\r\nexport class Context {\r\n\r\n    /**@internal */\r\n    static _rendercontex: Context;\r\n    /**@internal */\r\n    _canvas: HTMLCanvas;\r\n    /**@internal */\r\n    _drawingToTexture: boolean;\r\n\r\n    static _SUBMITVBSIZE: number = 32000;\r\n\r\n    private static _MAXVERTNUM: number = 65535;\r\n\r\n    static MAXCLIPRECT: Rectangle = null;\r\n\r\n    static _COUNT: number = 0;\r\n\r\n    /**@internal */\r\n    _tmpMatrix: Matrix = new Matrix();\t\t// chrome下静态的访问比从this访问要慢\r\n\r\n    private static SEGNUM: number = 32;\r\n\r\n    private static _contextcount: number = 0;\r\n\r\n    private _drawTexToDrawTri_Vert: Float32Array = new Float32Array(8);\t\t// 从速度考虑，不做成static了\r\n    private _drawTexToDrawTri_Index: Uint16Array = new Uint16Array([0, 1, 2, 0, 2, 3]);\r\n    private _tempUV: Float32Array = new Float32Array(8);\r\n    private _drawTriUseAbsMatrix: boolean = false;\t//drawTriange函数的矩阵是全局的，不用再乘以当前矩阵了。这是一个补丁。\r\n\r\n    static __init__(): void {\r\n        Context.MAXCLIPRECT = new Rectangle(0, 0, Const.MAX_CLIP_SIZE, Const.MAX_CLIP_SIZE);\r\n        ContextParams.DEFAULT = new ContextParams();\r\n        WebGLCacheAsNormalCanvas;\r\n    }\r\n\r\n    /**@private */\r\n    drawImage(...args: any[]): void {\r\n    }\r\n\r\n    /**@private */\r\n    getImageData(...args: any[]): any {\r\n    }\r\n\r\n    /**@private */\r\n    measureText(text: string): any {\r\n        return null;\r\n    }\r\n\r\n    /**@private */\r\n    setTransform(...args: any[]): void {\r\n    }\r\n\r\n\r\n    /**@private */\r\n    $transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n    }\r\n\r\n    set material(value: Material) {\r\n        this._shader2D.material = value;\r\n    }\r\n\r\n    get material() {\r\n        return this._shader2D.material;\r\n    }\r\n\r\n\r\n    /**@private */\r\n    get lineJoin(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineJoin(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get lineCap(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineCap(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get miterLimit(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set miterLimit(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    clearRect(x: number, y: number, width: number, height: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _drawRect(x: number, y: number, width: number, height: number, style: any): void {\r\n        style && (this.fillStyle = style);\r\n        this.fillRect(x, y, width, height, null);\r\n    }\r\n\r\n    ///**@private */\r\n    //public function transformByMatrix(value:Matrix):void {\r\n    //this.transform(value.a, value.b, value.c, value.d, value.tx, value.ty);\r\n    //}\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    //public function setTransformByMatrix(value:Matrix):void {\r\n    //\tthis.setTransform(value.a, value.b, value.c, value.d, value.tx, value.ty);\r\n    //}\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    drawTexture2(x: number, y: number, pivotX: number, pivotY: number, m: Matrix, args2: any[]): void {\r\n    }\r\n\r\n    //=============新增==================\r\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n    }\r\n\r\n    saveTransform(matrix: Matrix): void {\r\n        this.save();\r\n    }\r\n\r\n    restoreTransform(matrix: Matrix): void {\r\n        this.restore();\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\r\n        var ctx: any = this;\r\n\r\n        //填充矩形\r\n        if (fillColor != null) {\r\n            ctx.fillStyle = fillColor;\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n\r\n        //绘制矩形边框\r\n        if (lineColor != null) {\r\n            ctx.strokeStyle = lineColor;\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    alpha(value: number): void {\r\n        this.globalAlpha *= value;\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _transform(mat: Matrix, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.rotate(angle);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.scale(scaleX, scaleY);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        this.moveTo(x + fromX, y + fromY);\r\n        this.lineTo(x + toX, y + toY);\r\n        this.stroke();\r\n    }\r\n\r\n    /**@internal */\r\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\r\n        this.beginPath();\r\n        //x += args[0], y += args[1];\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        this.addPath(points.slice(), false, false, x, y);\r\n        this.stroke();\r\n    }\r\n\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        //x += args[0], y += args[1];\r\n        this.moveTo(x + points[0], y + points[1]);\r\n        var i: number = 2, n: number = points.length;\r\n        while (i < n) {\r\n            this.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\r\n        }\r\n        this.stroke();\r\n    }\r\n\r\n    private _fillAndStroke(fillColor: string, strokeColor: string, lineWidth: number, isConvexPolygon: boolean = false): void {\r\n        //绘制填充区域\r\n        if (fillColor != null) {\r\n            this.fillStyle = fillColor;\r\n            this.fill();\r\n        }\r\n\r\n        //绘制边框\r\n        if (strokeColor != null && lineWidth > 0) {\r\n            this.strokeStyle = strokeColor;\r\n            this.lineWidth = lineWidth;\r\n            this.stroke();\r\n        }\r\n    }\r\n    /**Math.PI*2的结果缓存 */\r\n    static PI2: number = 2 * Math.PI;\r\n    /**@internal */\r\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        this.beginPath(true);\r\n        this.arc(x, y, radius, radius, 0, Context.PI2, false, true, 40);\r\n        this.closePath();\r\n        //绘制\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n    /**@internal */\r\n    _drawEllipse(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number) {\r\n        this.beginPath(true);\r\n        this.arc(x, y, width, height, 0, Context.PI2, false, true, 40);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n    /**Math.PI*0.5的结果缓存 */\r\n    static HPI = Math.PI * 0.5;\r\n    /**@internal */\r\n    _drawRoundRect(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any, lineWidth: number) {\r\n        this.beginPath(true);\r\n        var tPath = this._getPath();\r\n        if (0 >= lt) {\r\n            tPath.addPoint(x, y);\r\n        } else {\r\n            this.arc(x + lt, y + lt, lt, lt, Math.PI, Math.PI + Context.HPI);\r\n        }\r\n        let startX = x + width - rt;\r\n        if (0 >= rt) {\r\n            tPath.addPoint(startX, y);\r\n        } else {\r\n            this.arc(startX, y + rt, rt, rt, Math.PI + Context.HPI, Context.PI2);\r\n        }\r\n        startX = x + width - rb;\r\n        let startY = y + height - rb;\r\n        if (0 >= rb) {\r\n            tPath.addPoint(startX, startY);\r\n        } else {\r\n            this.arc(startX, startY, rb, rb, 0, Context.HPI);\r\n        }\r\n        startX = x + lb;\r\n        startY = y + height - lb;\r\n        if (0 >= lb) {\r\n            tPath.addPoint(startX, startY);\r\n        } else {\r\n            this.arc(startX, startY, lb, lb, Math.PI - Context.HPI, Math.PI);\r\n        }\r\n        tPath.addPoint(x, y + lt);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n\r\n    //矢量方法\t\r\n    /**@internal */\r\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        //移动中心点\r\n        //ctx.translate(x + args[0], y + args[1]);\r\n        //形成路径\r\n        this.beginPath();\r\n        this.moveTo(x, y);\r\n        this.arc(x, y, radius, radius, startAngle, endAngle);\r\n        this.closePath();\r\n        //绘制\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n        //恢复中心点\r\n        //ctx.translate(-x - args[0], -y - args[1]);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\r\n        //var points:Array = args[2];\r\n        this.beginPath();\r\n        //poly一定是close的\r\n        this.addPath(points.slice(), true, isConvexPolygon, x, y);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth, isConvexPolygon);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\r\n        //形成路径\r\n        this.beginPath();\r\n        //x += args[0], y += args[1];\r\n\r\n        //var paths:Array = args[2];\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this.moveTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this.lineTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            this.fillStyle = brush.fillStyle;\r\n            this.fill();\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            this.strokeStyle = pen.strokeStyle;\r\n            this.lineWidth = pen.lineWidth || 1;\r\n            this.lineJoin = pen.lineJoin;\r\n            this.lineCap = pen.lineCap;\r\n            this.miterLimit = pen.miterLimit;\r\n            this.stroke();\r\n        }\r\n    }\r\n\r\n    static const2DRenderCMD: RenderStateCommand;\r\n    static set2DRenderConfig(): void {\r\n\r\n        if (!Context.const2DRenderCMD) {\r\n            const cmd = Context.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\r\n            if (cmd) {\r\n                cmd.addCMD(RenderStateType.BlendType, true);\r\n                //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n                cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\r\n                BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n                //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n                cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\r\n                //WebGLContext.setDepthTest(gl, false);\r\n                cmd.addCMD(RenderStateType.DepthTest, false);\r\n                //WebGLContext.setDepthMask(gl, true);\r\n                cmd.addCMD(RenderStateType.DepthMask, true);\r\n                //WebGLContext.setCullFace(gl, false);\r\n                cmd.addCMD(RenderStateType.CullFace, false);\r\n                //WebGLContext.setFrontFace(gl, gl.CCW);\r\n                cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\r\n            }\r\n        }\r\n        Context.const2DRenderCMD && Context.const2DRenderCMD.applyCMD();\r\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\r\n        // WebGLContext.setBlend(gl, true);//还原2D设置\r\n        // WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n        // BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n        // WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        // WebGLContext.setDepthTest(gl, false);\r\n        // WebGLContext.setDepthMask(gl, true);\r\n        // WebGLContext.setCullFace(gl, false);\r\n        // WebGLContext.setFrontFace(gl, gl.CCW);\r\n        RenderTexture2D.currentActive && RenderTexture2D.currentActive.end();\r\n        LayaGL.renderEngine.viewport(0, 0, RenderState2D.width, RenderState2D.height);//还原2D视口\r\n        LayaGL.renderEngine.scissorTest(true);\r\n        LayaGL.renderEngine.scissor(0, 0, RenderState2D.width, RenderState2D.height);\r\n    }\r\n\r\n    /**@internal */\r\n    _id: number = ++Context._COUNT;\r\n\r\n    private _other: ContextParams | null = null;\r\n    private _renderNextSubmitIndex: number = 0;\r\n\r\n    private _path: Path | null = null;\r\n    /**@internal */\r\n    _drawCount: number = 1;\r\n    private _width: number = Const.MAX_CLIP_SIZE;\r\n    private _height: number = Const.MAX_CLIP_SIZE;\r\n    private _renderCount: number = 0;\r\n    /**@internal */\r\n    _submits: any = null;\r\n    /**@internal */\r\n    _curSubmit: any = null;\r\n    /**@internal */\r\n    _submitKey: SubmitKey = new SubmitKey();\t//当前将要使用的设置。用来跟上一次的_curSubmit比较\r\n\r\n    /**@internal */\r\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\r\n    /**@internal */\r\n    _pathMesh: MeshVG | null = null;\t\t\t//矢量专用mesh。\r\n    /**@internal */\r\n    _triangleMesh: MeshTexture | null = null;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\r\n\r\n    meshlist: any[] = [];\t//本context用到的mesh\r\n\r\n    //public var _vbs:Array = [];\t//双buffer管理。TODO 临时删掉，需要mesh中加上\r\n    private _transedPoints: any[] = new Array(8);\t//临时的数组，用来计算4个顶点的转换后的位置。\r\n    private _temp4Points: any[] = new Array(8);\t\t//临时数组。用来保存4个顶点的位置。\r\n\r\n    /**@internal */\r\n    _clipRect: Rectangle = Context.MAXCLIPRECT;\r\n    //public var _transedClipInfo:Array = [0, 0, Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE];\t//应用矩阵后的clip。ox,oy, xx,xy,yx,yy \txx,xy等是缩放*宽高\r\n    /**@internal */\r\n    _globalClipMatrix: Matrix = defaultClipMatrix.clone();\t//用矩阵描述的clip信息。最终的点投影到这个矩阵上，在0~1之间就可见。\r\n    /**@internal */\r\n    _clipInCache: boolean = false; \t// 当前记录的clipinfo是在cacheas normal后赋值的，因为cacheas normal会去掉当前矩阵的tx，ty，所以需要记录一下，以便在是shader中恢复\r\n    /**@internal */\r\n    _clipInfoID: number = 0;\t\t\t\t\t//用来区分是不是clipinfo已经改变了\r\n    private _clipID_Gen: number = 0;\t\t\t//生成clipid的，原来是  _clipInfoID=++_clipInfoID 这样会有问题，导致兄弟clip的id都相同\r\n    /**@internal */\r\n    _curMat: Matrix;\r\n\r\n    //计算矩阵缩放的缓存\r\n    /**@internal */\r\n    _lastMatScaleX: number = 1.0;\r\n    /**@internal */\r\n    _lastMatScaleY: number = 1.0;\r\n    private _lastMat_a: number = 1.0;\r\n    private _lastMat_b: number = 0.0;\r\n    private _lastMat_c: number = 0.0;\r\n    private _lastMat_d: number = 1.0;\r\n    /**@internal */\r\n    _nBlendType: number = 0;\r\n    /**@internal */\r\n    _save: ISaveData[] & { _length?: number } = null;\r\n    /**@internal */\r\n    _targets: RenderTexture2D | null = null;\r\n    /**@internal */\r\n    _charSubmitCache: CharSubmitCache | null = null;\r\n    /**@internal */\r\n    _saveMark: SaveMark | null = null;\r\n    /**@internal */\r\n    _shader2D: Shader2D = new Shader2D();\t//\r\n\r\n    /**\r\n     * 所cacheAs精灵\r\n     * 对于cacheas bitmap的情况，如果图片还没准备好，需要有机会重画，所以要保存sprite。例如在图片\r\n     * 加载完成后，调用repaint\r\n     */\r\n    sprite: Sprite | null = null;\r\n\r\n    /**@internal */\r\n    public static _textRender: TextRender | null = null;// new TextRender();\r\n    /**@internal */\r\n    _italicDeg: number = 0;//文字的倾斜角度\r\n    /**@internal */\r\n    _lastTex: Texture | null = null; //上次使用的texture。主要是给fillrect用，假装自己也是一个drawtexture\r\n\r\n    private _fillColor: number = 0;\r\n    private _flushCnt: number = 0;\r\n\r\n    private defTexture: Texture | null = null;\t//给fillrect用\r\n    /**@internal */\r\n    _colorFiler: ColorFilter | null = null;\r\n\r\n    drawTexAlign: boolean = false;\t\t// 按照像素对齐\r\n    /**@internal */\r\n    _incache: boolean = false;\t\t\t// 正处在cacheas normal过程中\r\n\r\n    isMain: boolean = false;\t\t\t\t// 是否是主context\r\n\r\n    clearColor: Color = new Color();\r\n\r\n    constructor() {\r\n        Context._contextcount++;\r\n        Context._textRender = Context._textRender || new TextRender();\r\n        //_ib = IndexBuffer2D.QuadrangleIB;\r\n        if (!this.defTexture) {\r\n            var defTex2d: Texture2D = new Texture2D(2, 2, TextureFormat.R8G8B8A8, true, false, false);\r\n            defTex2d.setPixelsData(new Uint8Array(16), false, false);\r\n            defTex2d.lock = true;\r\n            this.defTexture = new Texture(defTex2d);\r\n        }\r\n        this._lastTex = this.defTexture;\r\n        this.clear();\r\n    }\r\n\r\n    clearBG(r: number, g: number, b: number, a: number): void {\r\n        // var gl: WebGLRenderingContext = RenderStateContext.mainContext;\r\n        this.clearColor.r = r;\r\n        this.clearColor.g = g;\r\n        this.clearColor.b = b;\r\n        this.clearColor.a = a;\r\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color, this.clearColor, 1);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**@internal */\r\n    _getSubmits(): any[] {\r\n        return this._submits;\r\n    }\r\n\r\n    /**\r\n     * 释放占用内存\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    private _releaseMem(keepRT: boolean = false): void {\r\n        if (!this._submits)\r\n            return;\r\n\r\n        this._curMat && this._curMat.destroy();\r\n        //@ts-ignore\r\n        this._curMat = null;\r\n        this._shader2D.destroy();\r\n        //@ts-ignore\r\n        this._shader2D = null;\r\n        //@ts-ignore\r\n        this._charSubmitCache.clear();\r\n\r\n        for (var i: number = 0, n: number = this._submits._length; i < n; i++) {\r\n            this._submits[i].releaseRender();\r\n        }\r\n        this._submits.length = 0;\r\n        this._submits._length = 0;\r\n        this._submits = null;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n\r\n        this._path = null;\r\n        //_other && (_other.font = null);\r\n        this._save = null;\r\n\r\n        var sz: number;\r\n        for (i = 0, sz = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.destroy();\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this.sprite = null;\r\n        if (!keepRT) {\r\n            this._targets && (this._targets.destroy());\r\n            this._targets = null;\r\n        }\r\n        //TODO mesh 暂时releaseMem了\r\n    }\r\n\r\n    /**\r\n     * 释放所有资源\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    destroy(keepRT: boolean = false): void {\r\n        --Context._contextcount;\r\n        this.sprite = null;\r\n        this._releaseMem(keepRT);\r\n        this._charSubmitCache && this._charSubmitCache.destroy();\r\n        //_ib && (_ib != IndexBuffer2D.QuadrangleIB) && _ib.releaseResource();\r\n        this._mesh.destroy();\r\n        if (!keepRT) {\r\n            this._targets && this._targets.destroy();//用回收么？可能没什么重复利用的价值\r\n            this._targets = null;\r\n        }\r\n        if (this.defTexture) {\r\n            this.defTexture.bitmap && this.defTexture.bitmap.destroy();\r\n            this.defTexture.destroy();\r\n        }\r\n\r\n    }\r\n\r\n    clear(): void {\r\n        if (!this._submits) {//第一次\r\n            this._other = ContextParams.DEFAULT;\r\n            this._curMat = Matrix.create();\r\n            this._charSubmitCache = new CharSubmitCache();\r\n            //_vb = _vbs[0] = VertexBuffer2D.create( -1);\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n            this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n            this.meshlist.push(this._pathMesh);\r\n            this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._triangleMesh);\r\n            //if(Config.smartCache) _vbs[1] = VertexBuffer2D.create( -1);\r\n            this._submits = [];\r\n            this._save = [SaveMark.Create(this)];\r\n            this._save.length = 10;\r\n            this._shader2D = new Shader2D();\r\n        }\r\n\r\n        this._submitKey.clear();\r\n\r\n        //_vb = _vbs[_renderCount%2];\r\n        //_vb.clear();\r\n        this._mesh.clearVB();\r\n\r\n        //_targets && (_targets.repaint = true);\r\n\r\n        this._drawCount = 1;\r\n\r\n        this._other = ContextParams.DEFAULT;\r\n        this._other.lineWidth = this._shader2D.ALPHA = 1.0;\r\n\r\n        this._nBlendType = 0;\r\n\r\n        this._clipRect = Context.MAXCLIPRECT;\r\n\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        SubmitBase.RENDERBASE._ref = 0xFFFFFF;\r\n        SubmitBase.RENDERBASE._numEle = 0;\r\n\r\n        this._shader2D.fillStyle = this._shader2D.strokeStyle = DrawStyle.DEFAULT;\r\n\r\n        for (let i = 0, n = this._submits._length; i < n; i++)\r\n            this._submits[i].releaseRender();\r\n\r\n        this._submits._length = 0;\r\n\r\n        this._curMat.identity();\r\n        this._other.clear();\r\n\r\n        this._saveMark = <SaveMark>this._save[0];\r\n        this._save._length = 1;\r\n    }\r\n\r\n    /**\r\n     * 设置ctx的size，这个不允许直接设置，必须是canvas调过来的。所以这个函数里也不用考虑canvas相关的东西\r\n     * @param\tw\r\n     * @param\th\r\n     */\r\n    size(w: number, h: number): void {\r\n        if (this._width != w || this._height != h) {\r\n            this._width = w;\r\n            this._height = h;\r\n            //TODO 问题：如果是rendertarget 计算内存会有问题，即canvas算一次，rt又算一次,所以这里要修改\r\n            //这种情况下canvas应该不占内存\r\n            if (this._targets) {\r\n                this._targets.destroy();\r\n                this._targets = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, -1);\r\n            }\r\n            //如果是主画布，要记录窗口大小\r\n            //如果不是 TODO\r\n            if (this.isMain) {\r\n                LayaGL.renderEngine.viewport(0, 0, w, h);\r\n                LayaGL.renderEngine.scissor(0, 0, w, h);\r\n                RenderState2D.width = w;\r\n                RenderState2D.height = h;\r\n            }\r\n        }\r\n        if (w === 0 && h === 0) this._releaseMem();\r\n    }\r\n\r\n    /**\r\n     * 当前canvas请求保存渲染结果。\r\n     * 实现：\r\n     * 如果value==true，就要给_target赋值\r\n     * @param value {Boolean} \r\n     */\r\n    set asBitmap(value: boolean) {\r\n        if (value) {\r\n            //缺省的RGB没有a，不合理把。况且没必要自定义一个常量。\r\n            //深度格式为-1表示不用深度缓存。\r\n            let rt = this._targets;\r\n            if (!this._width || !this._height)\r\n                throw Error(\"asBitmap no size!\");\r\n            if (!rt || rt.width != this._width || rt.height != this._height) {\r\n                if (rt) {\r\n                    rt.destroy();\r\n                }\r\n                this._targets = new RenderTexture2D(this._width, this._height, RenderTargetFormat.R8G8B8A8);\r\n            }\r\n        } else {\r\n            this._targets && this._targets.destroy();\r\n            this._targets = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得当前矩阵的缩放值\r\n     * 避免每次都计算getScaleX\r\n     * @return\r\n     */\r\n    getMatScaleX(): number {\r\n        if (this._lastMat_a == this._curMat.a && this._lastMat_b == this._curMat.b)\r\n            return this._lastMatScaleX;\r\n        this._lastMatScaleX = this._curMat.getScaleX();\r\n        this._lastMat_a = this._curMat.a;\r\n        this._lastMat_b = this._curMat.b;\r\n        return this._lastMatScaleX;\r\n    }\r\n\r\n    getMatScaleY(): number {\r\n        if (this._lastMat_c == this._curMat.c && this._lastMat_d == this._curMat.d)\r\n            return this._lastMatScaleY;\r\n        this._lastMatScaleY = this._curMat.getScaleY();\r\n        this._lastMat_c = this._curMat.c;\r\n        this._lastMat_d = this._curMat.d;\r\n        return this._lastMatScaleY;\r\n    }\r\n\r\n    getFillColor(): number {\r\n        return this._fillColor;\r\n    }\r\n\r\n    set fillStyle(value: any) {\r\n        if (!this._shader2D.fillStyle.equal(value)) {\r\n            SaveBase.save(this, SaveBase.TYPE_FILESTYLE, this._shader2D, false);\r\n            this._shader2D.fillStyle = DrawStyle.create(value);\r\n            this._submitKey.other = -this._shader2D.fillStyle.toInt();\r\n        }\r\n    }\r\n\r\n    get fillStyle(): any {\r\n        return this._shader2D.fillStyle;\r\n    }\r\n\r\n    set globalAlpha(value: number) {\r\n        value = Math.floor(value * 1000) / 1000;\r\n        if (value != this._shader2D.ALPHA) {\r\n            SaveBase.save(this, SaveBase.TYPE_ALPHA, this._shader2D, false);\r\n            this._shader2D.ALPHA = value;\r\n        }\r\n    }\r\n\r\n    get globalAlpha(): number {\r\n        return this._shader2D.ALPHA;\r\n    }\r\n\r\n    set textAlign(value: string) {\r\n        (this._other.textAlign === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTALIGN, this._other, false), this._other.textAlign = value);\r\n    }\r\n\r\n    get textAlign(): string {\r\n        return this._other.textAlign;\r\n    }\r\n\r\n    set textBaseline(value: string) {\r\n        (this._other.textBaseline === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTBASELINE, this._other, false), this._other.textBaseline = value);\r\n    }\r\n\r\n    get textBaseline(): string {\r\n        return this._other.textBaseline;\r\n    }\r\n\r\n    set globalCompositeOperation(value: string) {\r\n        var n = BlendMode.TOINT[value];\r\n        n == null || (this._nBlendType === n) || (SaveBase.save(this, SaveBase.TYPE_GLOBALCOMPOSITEOPERATION, this, true), this._curSubmit = SubmitBase.RENDERBASE, this._nBlendType = n /*, _shader2D.ALPHA = 1*/);\r\n    }\r\n\r\n    get globalCompositeOperation(): string {\r\n        return BlendMode.NAMES[this._nBlendType];\r\n    }\r\n\r\n    set strokeStyle(value: any) {\r\n        this._shader2D.strokeStyle.equal(value) || (SaveBase.save(this, SaveBase.TYPE_STROKESTYLE, this._shader2D, false), this._shader2D.strokeStyle = DrawStyle.create(value), this._submitKey.other = -this._shader2D.strokeStyle.toInt());\r\n    }\r\n\r\n    get strokeStyle(): any {\r\n        return this._shader2D.strokeStyle;\r\n    }\r\n\r\n    translate(x: number, y: number): void {\r\n        if (x !== 0 || y !== 0) {\r\n            SaveTranslate.save(this);\r\n            if (this._curMat._bTransform) {\r\n                SaveTransform.save(this);\r\n                //_curMat.transformPointN(Point.TEMP.setTo(x, y));\r\n                //x = Point.TEMP.x;\r\n                //y = Point.TEMP.y;\r\n                //translate的话，相当于在当前坐标系下移动x,y，所以直接修改_curMat,然后x,y就消失了。\r\n                this._curMat.tx += (x * this._curMat.a + y * this._curMat.c);\r\n                this._curMat.ty += (x * this._curMat.b + y * this._curMat.d);\r\n            } else {\r\n                this._curMat.tx = x;\r\n                this._curMat.ty = y;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lineWidth(value: number) {\r\n        (this._other.lineWidth === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_LINEWIDTH, this._other, false), this._other.lineWidth = value);\r\n    }\r\n\r\n    get lineWidth(): number {\r\n        return this._other.lineWidth;\r\n    }\r\n\r\n    save(): void {\r\n        this._save[this._save._length++] = SaveMark.Create(this);\r\n    }\r\n\r\n    restore(): void {\r\n        var sz: number = this._save._length;\r\n        var lastBlend: number = this._nBlendType;\r\n        if (sz < 1)\r\n            return;\r\n        for (var i: number = sz - 1; i >= 0; i--) {\r\n            var o: ISaveData = this._save[i];\r\n            o.restore(this);\r\n            if (o.isSaveMark()) {\r\n                this._save._length = i;\r\n                return;\r\n            }\r\n        }\r\n        if (lastBlend != this._nBlendType) {\r\n            //阻止合并\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n    }\r\n\r\n    set font(str: string) {\r\n        //if (str == _other.font.toString())\r\n        //\treturn;\r\n        this._other = this._other.make();\r\n        SaveBase.save(this, SaveBase.TYPE_FONT, this._other, false);\r\n        //_other.font === FontInContext.EMPTY ? (_other.font = new FontInContext(str)) : (_other.font.setFont(str));\r\n    }\r\n\r\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\r\n        Context._textRender!.filltext(this, txt, x, y, fontStr, color, borderColor, lineWidth, align);\r\n    }\r\n    // 与fillText的区别是没有border信息\r\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): void {\r\n        Context._textRender!.filltext(this, text, x, y, font, color, null, 0, textAlign);\r\n    }\r\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, text, x, y, font, null, color, lineWidth, textAlign);\r\n    }\r\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, txt, x, y, font, color, borderColor, lineWidth, textAlign);\r\n    }\r\n\r\n    /**@internal */\r\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\r\n        Context._textRender!._fast_filltext(this, data, x, y, fontObj, color, strokeColor, lineWidth, textAlign);\r\n    }\r\n\r\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, data, x, y, fontStr, color, strokeColor, lineWidth, textAlign);\r\n    }\r\n\r\n    private _fillRect(x: number, y: number, width: number, height: number, rgba: number): void {\r\n        var submit: Submit = this._curSubmit;\r\n        var sameKey = submit._key.submitType === SubmitBase.KEY_DRAWTEXTURE && \r\n                        submit._key.blendShader === this._nBlendType &&\r\n                        this.isSameClipInfo(submit) &&\r\n                        this._curSubmit.material==this.material\r\n                ;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n            sameKey = false;\r\n        }\r\n\r\n        this.transformQuad(x, y, width, height, 0, this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, Texture.NO_UV, rgba, false);\r\n            //if (GlUtils.fillRectImgVb(_mesh._vb, _clipRect, x, y, width, height, Texture.DEF_UV, _curMat, rgba,this)){\r\n            if (!sameKey) {\r\n                submit = this._curSubmit = SubmitTexture.create(this, this._mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n                this._submits[this._submits._length++] = submit;\r\n                this._copyClipInfo(submit, this._globalClipMatrix);\r\n                if (!this._lastTex || this._lastTex.destroyed) {\r\n                    submit.shaderValue.textureHost = this.defTexture;\r\n                } else {\r\n                    submit.shaderValue.textureHost = this._lastTex;\r\n                }\r\n                //这里有一个问题。例如 clip1, drawTex(tex1), clip2, fillRect, drawTex(tex2)\t会被分成3个submit，\r\n                //submit._key.copyFrom2(_submitKey, SubmitBase.KEY_DRAWTEXTURE, (_lastTex && _lastTex.bitmap)?_lastTex.bitmap.id: -1);\r\n                submit._key.other = (this._lastTex && this._lastTex.bitmap) ? (this._lastTex.bitmap as Texture2D).id : -1\r\n                submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            }\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n    }\r\n\r\n    fillRect(x: number, y: number, width: number, height: number, fillStyle: any): void {\r\n        var drawstyle: DrawStyle = fillStyle ? DrawStyle.create(fillStyle) : this._shader2D.fillStyle;\r\n        //var rgb = drawstyle.toInt() ;\r\n        //由于显卡的格式是 rgba，所以需要处理一下\r\n        //var rgba:uint = ((rgb & 0xff0000) >> 16) | (rgb & 0x00ff00) | ((rgb & 0xff) << 16) | (_shader2D.ALPHA * 255) << 24;\r\n        var rgba: number = this.mixRGBandAlpha(drawstyle.toInt());\r\n        this._fillRect(x, y, width, height, rgba);\r\n    }\r\n\r\n    //TODO:coverage\r\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\r\n        //test\r\n        /*\r\n        var aa = 95 / 274, bb = 136 / 341, cc = (95 + 41) / 274, dd = (136 + 48) / 341;\r\n        texture.uv = [aa,bb, cc,bb, cc,dd, aa,dd];\r\n        texture.width = 41;\r\n        texture.height = 48;\r\n        */\r\n        //test\r\n\r\n        if (!texture._getSource()) {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n        this._fillTexture(texture, texture.width, texture.height, texture.uvrect, x, y, width, height, type, offset.x, offset.y, color);\r\n    }\r\n\r\n    /**@internal */\r\n    _fillTexture(texture: Texture, texw: number, texh: number, texuvRect: number[], x: number, y: number, width: number, height: number, type: string, offsetx: number, offsety: number, color: number): void {\r\n        var submit: Submit = this._curSubmit;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n        }\r\n\r\n        //filltexture相关逻辑。计算rect大小以及对应的uv\r\n        var repeatx: boolean = true;\r\n        var repeaty: boolean = true;\r\n        switch (type) {\r\n            case \"repeat\": break;\r\n            case \"repeat-x\": repeaty = false; break;\r\n            case \"repeat-y\": repeatx = false; break;\r\n            case \"no-repeat\": repeatx = repeaty = false; break;\r\n            default: break;\r\n        }\r\n        //用 _temp4Points 来存计算出来的顶点的uv。这里的uv用0到1表示纹理的uv区域。这样便于计算，直到shader中才真的转成了实际uv\r\n        var uv: any[] = this._temp4Points;\r\n        var stu: number = 0; //uv起点\r\n        var stv: number = 0;\r\n        var stx: number = 0, sty: number = 0, edx: number = 0, edy: number = 0;\r\n        if (offsetx < 0) {\r\n            stx = x;\r\n            stu = (-offsetx % texw) / texw;//有偏移的情况下的u不是从头开始\r\n        } else {\r\n            stx = x + offsetx;\r\n        }\r\n        if (offsety < 0) {\r\n            sty = y;\r\n            stv = (-offsety % texh) / texh;//有偏移的情况下的v不是从头开始\r\n        } else {\r\n            sty = y + offsety;\r\n        }\r\n\r\n        edx = x + width;\r\n        edy = y + height;\r\n        (!repeatx) && (edx = Math.min(edx, x + offsetx + texw));//x不重复的话，最多只画一个\r\n        (!repeaty) && (edy = Math.min(edy, y + offsety + texh));//y不重复的话，最多只画一个\r\n        if (edx < x || edy < y)\r\n            return;\r\n        if (stx > edx || sty > edy)\r\n            return;\r\n\r\n        //计算最大uv\r\n        var edu: number = (edx - x - offsetx) / texw;\r\n        var edv: number = (edy - y - offsety) / texh;\r\n\r\n        this.transformQuad(stx, sty, edx - stx, edy - sty, 0, this._curMat, this._transedPoints);\r\n        //四个点对应的uv。必须在transformQuad后面，因为共用了_temp4Points\r\n        uv[0] = stu; uv[1] = stv; uv[2] = edu; uv[3] = stv; uv[4] = edu; uv[5] = edv; uv[6] = stu; uv[7] = edv;\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            //不依赖于wrapmode了，都走filltexture流程，自己修改纹理坐标\r\n            //tex2d.wrapModeU = BaseTexture.WRAPMODE_REPEAT;\t//这里会有重复判断\r\n            //tex2d.wrapModeV = BaseTexture.WRAPMODE_REPEAT;\r\n            //var rgba:int = mixRGBandAlpha(0xffffffff);\r\n            //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\r\n            var rgba: number = this._mixRGBandAlpha(color, this._shader2D.ALPHA);\r\n\r\n            this._mesh.addQuad(this._transedPoints, uv, rgba, true);\r\n\r\n            var sv = Value2D.create(RenderSpriteData.Texture2D) as TextureSV;\r\n            //这个优化先不要了，因为没太弄明白wrapmode的设置，总是不起作用。\r\n            //if(texture.uvrect[2]<1.0||texture.uvrect[3]<1.0)//这表示是大图集中的一部分，只有这时候才用特殊shader\r\n            sv.defines.addDefine(ShaderDefines2D.FILLTEXTURE);\r\n            var arry = texuvRect.concat();\r\n            Vector4.tempVec4.setValue(arry[0], arry[1], arry[2], arry[3]);\r\n            sv.u_TexRange = Vector4.tempVec4;\r\n            submit = this._curSubmit = SubmitTexture.create(this, this._mesh, sv);\r\n            this._submits[this._submits._length++] = submit;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            submit.shaderValue.textureHost = texture;\r\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n        this.breakNextMerge();\t//暂不合并\r\n    }\r\n\r\n\r\n    /**\r\n     * 反正只支持一种filter，就不要叫setFilter了，直接叫setColorFilter\r\n     * @param\tvalue\r\n     */\r\n    setColorFilter(filter: ColorFilter): void {\r\n        SaveBase.save(this, SaveBase.TYPE_COLORFILTER, this, true);\r\n        //_shader2D.filters = value;\r\n        this._colorFiler = filter;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        //_reCalculateBlendShader();\r\n    }\r\n\r\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color: number = 0xffffffff): void {\r\n        this._drawTextureM(tex, x, y, width, height, null, 1, null, color);\r\n    }\r\n\r\n    drawTextures(tex: Texture, pos: ArrayLike<number>, tx: number, ty: number, colors: number[]): void {\r\n        if (!tex._getSource()) //source内调用tex.active();\r\n        {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n\r\n        //TODO 还没实现\r\n        var n: number = pos.length / 2;\r\n        var ipos: number = 0;\r\n        var bmpid: number = (tex.bitmap as Texture2D).id;\r\n        for (var i: number = 0; i < n; i++) {\r\n            const color = typeof colors[i] === 'number' ? colors[i] : 0xffffffff;\r\n            this._inner_drawTexture(tex, bmpid, pos[ipos++] + tx, pos[ipos++] + ty, 0, 0, null, null, 1.0, false, color);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[] | null, color: number): boolean {\r\n        // 注意sprite要保存，因为后面会被冲掉\r\n        var cs = this.sprite;\r\n        if (!tex._getSource(function (): void {\r\n            if (cs) {\r\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\r\n            }\r\n        })) { //source内调用tex.active();\r\n            return false;\r\n        }\r\n        return this._inner_drawTexture(tex, (tex.bitmap as Texture2D).id, x, y, width, height, m, uv, alpha, false, color);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawRenderTexture(tex: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[], color: number = 0xffffffff): boolean {\r\n        return this._inner_drawTexture((<Texture>(tex as any)), -1, x, y, width, height, m, uv, alpha, false, color);\r\n    }\r\n\r\n    //TODO:coverage\r\n    submitDebugger(): void {\r\n        this._submits[this._submits._length++] = SubmitCMD.create([], function (): void { debugger; }, this);\r\n    }\r\n\r\n    /*\r\n    private function copyClipInfo(submit:Submit, clipInfo:Array):void {\r\n        var cd:Array = submit.shaderValue.clipDir;\r\n        cd[0] = clipInfo[2]; cd[1] = clipInfo[3]; cd[2] = clipInfo[4]; cd[3] = clipInfo[5];\r\n        var cp:Array = submit.shaderValue.clipRect;\r\n        cp[0] = clipInfo[0]; cp[1] = clipInfo[1];\r\n        submit.clipInfoID = this._clipInfoID;\r\n    }\r\n    */\r\n    /**@internal */\r\n    _copyClipInfo(submit: SubmitBase, clipInfo: Matrix): void {\r\n        var cm: Vector4 = submit.shaderValue.clipMatDir;\r\n        cm.x = clipInfo.a; cm.y = clipInfo.b; cm.z = clipInfo.c; cm.w = clipInfo.d;\r\n        submit.shaderValue.clipMatDir = cm;\r\n        var cmp: Vector2 = submit.shaderValue.clipMatPos;\r\n        cmp.x = clipInfo.tx; cmp.y = clipInfo.ty;\r\n        submit.shaderValue.clipMatPos = cmp;\r\n        submit.clipInfoID = this._clipInfoID;\r\n\r\n        if (this._clipInCache) {\r\n            submit.shaderValue.clipOff.x = 1;\r\n            submit.shaderValue.clipOff = submit.shaderValue.clipOff;\r\n        }\r\n    }\r\n\r\n\r\n    private isSameClipInfo(submit: SubmitBase): boolean {\r\n        return (submit.clipInfoID === this._clipInfoID);\r\n        /*\r\n        var cd:Array = submit.shaderValue.clipDir;\r\n        var cp:Array = submit.shaderValue.clipRect;\r\n        \r\n        if (clipInfo[0] != cp[0] || clipInfo[1] != cp[1] || clipInfo[2] != cd[0] || clipInfo[3] != cd[1] || clipInfo[4] != cd[2] || clipInfo[5] != cd[3] ) \r\n            return false;\r\n        return true;\r\n        */\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 这个还是会检查是否合并\r\n     * @param\ttex\r\n     * @param\tminVertNum\r\n     */\r\n    _useNewTex2DSubmit(tex: Texture, minVertNum: number): void {\r\n        //var sameKey:Boolean = tex.bitmap.id >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === tex.bitmap.id ;\r\n\r\n        if (this._mesh.vertNum + minVertNum > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n            //sameKey = false;\r\n        }\r\n\r\n        var submit: SubmitTexture = SubmitTexture.create(this, this._mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n        this._submits[this._submits._length++] = this._curSubmit = submit;\r\n        submit.shaderValue.textureHost = tex;\r\n        this._copyClipInfo(submit, this._globalClipMatrix);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用上面的设置（texture，submit，alpha，clip），画一个rect\r\n     */\r\n    _drawTexRect(x: number, y: number, w: number, h: number, uv: any[]): void {\r\n        this.transformQuad(x, y, w, h, this._italicDeg, this._curMat, this._transedPoints);\r\n        //这个是给文字用的，为了清晰，必须要按照屏幕像素对齐，并且四舍五入。\r\n        var ops: any[] = this._transedPoints;\r\n        ops[0] = (ops[0] + 0.5) | 0;\r\n        ops[1] = (ops[1] + 0.5) | 0;\r\n        ops[2] = (ops[2] + 0.5) | 0;\r\n        ops[3] = (ops[3] + 0.5) | 0;\r\n        ops[4] = (ops[4] + 0.5) | 0;\r\n        ops[5] = (ops[5] + 0.5) | 0;\r\n        ops[6] = (ops[6] + 0.5) | 0;\r\n        ops[7] = (ops[7] + 0.5) | 0;\r\n\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, uv, this._fillColor, true);\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n    }\r\n\r\n    drawCallOptimize(enable: boolean): boolean {\r\n        this._charSubmitCache.enable(enable, this);\r\n        return enable;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param\ttex {Texture | RenderTexture }\r\n     * @param  imgid 图片id用来比较合并的\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\tm\r\n     * @param\talpha\r\n     * @param\tuv\r\n     * @return\r\n     */\r\n    _inner_drawTexture(tex: Texture, imgid: number, x: number, y: number, width: number, height: number, m: Matrix, uv: ArrayLike<number> | null, alpha: number, lastRender: boolean, color: number): boolean {\r\n        if (width <= 0 || height <= 0) {\r\n            return false;\r\n        }\r\n        var preKey: SubmitKey = this._curSubmit._key;\r\n        uv = uv || tex._uv\r\n        //为了优化，如果上次是画三角形，并且贴图相同，会认为他们是一组的，把这个也转成三角形，以便合并。\r\n        //因为好多动画是drawTexture和drawTriangle混用的\r\n        if (preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === imgid) {\r\n            var tv: Float32Array = this._drawTexToDrawTri_Vert;\r\n            tv[0] = x; tv[1] = y; tv[2] = x + width, tv[3] = y, tv[4] = x + width, tv[5] = y + height, tv[6] = x, tv[7] = y + height;\r\n            this._drawTriUseAbsMatrix = true;\r\n            var tuv: Float32Array = this._tempUV;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3]; tuv[4] = uv[4]; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\r\n            this.drawTriangles(tex, 0, 0, tv, tuv, this._drawTexToDrawTri_Index, m || this._curMat, alpha, null, null);//用tuv而不是uv会提高效率\r\n            this._drawTriUseAbsMatrix = false;\r\n            return true;\r\n        }\r\n\r\n        var mesh = this._mesh;\r\n        var submit: SubmitTexture = this._curSubmit;\r\n        var ops: any[] = lastRender ? this._charSubmitCache.getPos() : this._transedPoints;\r\n\r\n        //凡是这个都是在_mesh上操作，不用考虑samekey\r\n        this.transformQuad(x, y, width || tex.width, height || tex.height, this._italicDeg, m || this._curMat, ops);\r\n\r\n        if (this.drawTexAlign) {\r\n            var round: Function = Math.round;\r\n            ops[0] = round(ops[0]);//  (ops[0] + 0.5) | 0;\t// 这么计算负的时候会有问题\r\n            ops[1] = round(ops[1]);\r\n            ops[2] = round(ops[2]);\r\n            ops[3] = round(ops[3]);\r\n            ops[4] = round(ops[4]);\r\n            ops[5] = round(ops[5]);\r\n            ops[6] = round(ops[6]);\r\n            ops[7] = round(ops[7]);\r\n            this.drawTexAlign = false;\t//一次性的\r\n        }\r\n\r\n        var rgba: number = this._mixRGBandAlpha(color, this._shader2D.ALPHA * alpha);\r\n\r\n        //lastRender = false;\r\n        if (lastRender) {\r\n            this._charSubmitCache.add(this, tex, imgid, ops, uv, rgba);\r\n            return true;\r\n        }\r\n\r\n        this._drawCount++;\r\n\r\n        var sameKey = imgid >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === imgid &&\r\n            this.isSameClipInfo(submit) && this._curSubmit.material==this.material;\r\n\r\n        this._lastTex = tex;\r\n\r\n        if (mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            mesh = this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(mesh);\r\n            sameKey = false;\t//新的mesh不能算samekey了\r\n        }\r\n\r\n        {\r\n            mesh.addQuad(ops, uv, rgba, true);\r\n            if (!sameKey) {\r\n                this._submits[this._submits._length++] = this._curSubmit = submit = SubmitTexture.create(this, mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n                submit.shaderValue.textureHost = tex;\r\n                submit._key.other = imgid;\r\n                this._copyClipInfo(submit, this._globalClipMatrix);\r\n            }\r\n            submit._numEle += 6;\r\n            mesh.indexNum += 6;\r\n            mesh.vertNum += 4;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 转换4个顶点。为了效率这个不做任何检查。需要调用者的配合。\r\n     * @param\ta\t\t输入。8个元素表示4个点\r\n     * @param\tout\t\t输出\r\n     */\r\n    transform4Points(a: any[], m: Matrix, out: any[]): void {\r\n        /*\r\n            out[0] = 846;\r\n            out[1] = 656;\r\n            out[2] = 881;\r\n            out[3] = 657;\r\n            out[4] = 880;\r\n            out[5] = 732;\r\n            out[6] = 844;\r\n            out[7] = 731;\r\n            return ;\r\n        */\r\n        //var m:Matrix = _curMat;\r\n        var tx: number = m.tx;\r\n        var ty: number = m.ty;\r\n        var ma: number = m.a;\r\n        var mb: number = m.b;\r\n        var mc: number = m.c;\r\n        var md: number = m.d;\r\n        var a0: number = a[0];\r\n        var a1: number = a[1];\r\n        var a2: number = a[2];\r\n        var a3: number = a[3];\r\n        var a4: number = a[4];\r\n        var a5: number = a[5];\r\n        var a6: number = a[6];\r\n        var a7: number = a[7];\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\r\n        } else {\r\n            out[0] = a0 + tx; out[1] = a1 + ty;\r\n            out[2] = a2 + tx; out[3] = a3 + ty;\r\n            out[4] = a4 + tx; out[5] = a5 + ty;\r\n            out[6] = a6 + tx; out[7] = a7 + ty;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * pt所描述的多边形完全在clip外边，整个被裁掉了\r\n     * @param\tpt\r\n     * @return\r\n     */\r\n    clipedOff(pt: any[]): boolean {\r\n        //TODO\r\n        if (this._clipRect.width <= 0 || this._clipRect.height <= 0)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 应用当前矩阵。把转换后的位置放到输出数组中。 \r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tw\r\n     * @param\th\r\n     * @param   italicDeg 倾斜角度，单位是度。0度无，目前是下面不动。以后要做成可调的\r\n     */\r\n    transformQuad(x: number, y: number, w: number, h: number, italicDeg: number, m: Matrix, out: any[]): void {\r\n        /*\r\n        out[0] = 100.1; out[1] = 100.1;\r\n        out[2] = 101.1; out[3] = 100.1;\r\n        out[4] = 101.1; out[5] = 101.1;\r\n        out[6] = 100.1; out[7] = 101.1;\r\n        return;\r\n        */\r\n        var xoff: number = 0;\r\n        if (italicDeg != 0) {\r\n            xoff = Math.tan(italicDeg * Math.PI / 180) * h;\r\n        }\r\n        var maxx: number = x + w; var maxy: number = y + h;\r\n\r\n        var tx: number = m.tx;\r\n        var ty: number = m.ty;\r\n        var ma: number = m.a;\r\n        var mb: number = m.b;\r\n        var mc: number = m.c;\r\n        var md: number = m.d;\r\n        var a0: number = x + xoff;\r\n        var a1: number = y;\r\n        var a2: number = maxx + xoff;\r\n        var a3: number = y;\r\n        var a4: number = maxx;\r\n        var a5: number = maxy;\r\n        var a6: number = x;\r\n        var a7: number = maxy;\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\r\n            /* 旋转的情况下这个是错的。TODO\r\n            let dx = out[2] - out[0];\r\n            let minw = 1;\t// 限制最小宽度为1，防止细线在缩小的情况下消失。\r\n            if (dx < minw) {\r\n                dx = minw - dx;\r\n                out[2] += dx;\r\n            }\r\n            dx = out[4] - out[6];\r\n            if (dx < minw) {\r\n                dx = minw - dx;\r\n                out[4] += dx;\r\n            }\r\n            */\r\n        } else {\r\n            out[0] = a0 + tx; out[1] = a1 + ty;\r\n            out[2] = a2 + tx; out[3] = a3 + ty;\r\n            out[4] = a4 + tx; out[5] = a5 + ty;\r\n            out[6] = a6 + tx; out[7] = a7 + ty;\r\n        }\r\n    }\r\n\r\n    pushRT(): void {\r\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.pushRT, this));\r\n    }\r\n    popRT(): void {\r\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.popRT, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    //TODO:coverage\r\n    useRT(rt: RenderTexture2D): void {\r\n        //这里并没有做cliprect的保存恢复。因为认为调用这个函数的话，就是完全不走context流程了，完全自己控制。\r\n        function _use(rt: RenderTexture2D): void {\r\n            if (!rt) {\r\n                throw 'error useRT'\r\n            } else {\r\n                rt.start();\r\n                rt.clear(0, 0, 0, 0);\r\n            }\r\n        }\r\n\r\n        this.addRenderObject(SubmitCMD.create([rt], _use, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    /**\r\n     * 异步执行rt的restore函数\r\n     * @param\trt\r\n     */\r\n    //TODO:coverage\r\n    RTRestore(rt: RenderTexture2D): void {\r\n        function _restore(rt: RenderTexture2D): void {\r\n            rt.restore();\r\n        }\r\n        this.addRenderObject(SubmitCMD.create([rt], _restore, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    /**\r\n     * 强制拒绝submit合并\r\n     * 例如切换rt的时候\r\n     */\r\n    breakNextMerge(): void {\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _repaintSprite(): void {\r\n        this.sprite && this.sprite.repaint();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\ttex\r\n     * @param\tx\t\t\t\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\ttransform\t图片本身希望的矩阵\r\n     * @param\ttx\t\t\t节点的位置\r\n     * @param\tty\r\n     * @param\talpha\r\n     */\r\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color = 0xffffffff): void {\r\n        var oldcomp: string;\r\n        var curMat: Matrix = this._curMat;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n\r\n        if (!transform) {\r\n            this._drawTextureM(tex, x + tx, y + ty, width, height, curMat, alpha, uv, color);\r\n            if (blendMode) {\r\n                this.globalCompositeOperation = oldcomp;\r\n            }\r\n            return;\r\n        }\r\n        var tmpMat: Matrix = this._tmpMatrix;\r\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\r\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + tx; tmpMat.ty = transform.ty + ty;\r\n        tmpMat._bTransform = transform._bTransform;\r\n\r\n        if (transform && curMat._bTransform) {\r\n            // 如果当前矩阵不是只有平移，则只能用mul的方式\r\n            Matrix.mul(tmpMat, curMat, tmpMat);\r\n            transform = tmpMat;\r\n            transform._bTransform = true;\r\n        } else {\r\n            //如果curmat没有旋转。\r\n            tmpMat.tx += curMat.tx;\r\n            tmpMat.ty += curMat.ty;\r\n            transform = tmpMat;\r\n        }\r\n        this._drawTextureM(tex, x, y, width, height, transform, alpha, uv, color);\r\n        if (blendMode)\r\n            this.globalCompositeOperation = oldcomp;\r\n    }\r\n\r\n    /**\r\n     * * 把ctx中的submits提交。结果渲染到target上\r\n     * @param\tctx\r\n     * @param\ttarget\r\n     */\r\n    private _flushToTarget(context: Context, target: RenderTexture2D): void {\r\n        //if (target._destroy) return;\r\n        //var preworldClipRect:Rectangle = RenderState2D.worldClipRect;\r\n        //裁剪不用考虑，现在是在context内部自己维护，不会乱窜\r\n        RenderState2D.worldScissorTest = false;\r\n        LayaGL.renderEngine.scissorTest(false);\r\n\r\n        var preAlpha: number = RenderState2D.worldAlpha;\r\n        var preMatrix4: any[] = RenderState2D.worldMatrix4;\r\n        var preMatrix: Matrix = RenderState2D.worldMatrix;\r\n\r\n        var preShaderDefines: ShaderDefines2D = RenderState2D.worldShaderDefines;\r\n\r\n        RenderState2D.worldMatrix = Matrix.EMPTY;\r\n\r\n        RenderState2D.restoreTempArray();\r\n        RenderState2D.worldMatrix4 = RenderState2D.TEMPMAT4_ARRAY;\r\n        RenderState2D.worldAlpha = 1;\r\n        //RenderState2D.worldFilters = null;\r\n        //RenderState2D.worldShaderDefines = null;\r\n        BaseShader.activeShader = null;\r\n\r\n        target.start();\r\n        // 如果没有命令就不要clear。这么改是因为嵌套cacheas出问题了\r\n        // 如果一个sprite cacheas normal ，他的子节点有cacheas bitmap的（包括mask等）就会不断的执行 _flushToTarget和drawCamvase,从而把target上的内容清掉\r\n        // 由于cacheas normal 导致 RenderSprite没有机会执行 _cacheStyle.canvas 存在的分支。在\r\n        if (context._submits._length > 0)\r\n            target.clear(0, 0, 0, 0);\r\n\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        context.flush();\r\n        context.clear();\r\n        target.restore();\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        //context._canvas\r\n        BaseShader.activeShader = null;\r\n        RenderState2D.worldAlpha = preAlpha;\r\n        RenderState2D.worldMatrix4 = preMatrix4;\r\n        RenderState2D.worldMatrix = preMatrix;\r\n        //RenderState2D.worldFilters = preFilters;\r\n        //RenderState2D.worldShaderDefines = preShaderDefines;\r\n    }\r\n\r\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\r\n        if (!canvas) return;\r\n        var src: Context = canvas.context as Context;\r\n        var submit: ISubmit;\r\n        if (src._targets) {\r\n            //生成渲染结果到src._targets上\r\n            /*\r\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\r\n            _curSubmit = SubmitBase.RENDERBASE;\r\n            //画出src._targets\r\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\r\n            */\r\n            //应用并清空canvas中的指令。如果内容需要重画，RenderSprite会给他重新加入submit\r\n            if (src._submits._length > 0) {\r\n                submit = SubmitCMD.create([src, src._targets], this._flushToTarget, this);\r\n                this._submits[this._submits._length++] = submit;\r\n            }\r\n            //在这之前就已经渲染出结果了。\r\n            this._drawRenderTexture(src._targets, x, y, width, height, null, 1.0, RenderTexture2D.flipyuv);\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n            /*\r\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\r\n            //src._targets.flush(src);\r\n            _curSubmit = SubmitBase.RENDERBASE;\r\n            //src._targets.drawTo(this, x, y, width, height);\r\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\r\n            _drawRenderTexture(src._targets, x, y, width, height,null,1.0, RenderTexture.flipyuv);\r\n            */\r\n        } else {\r\n            var canv: WebGLCacheAsNormalCanvas = (<WebGLCacheAsNormalCanvas>(canvas as any));\r\n            if (canv.touches) {\r\n                ((<any[]>canv.touches)).forEach(function (v: CharRenderInfo): void { v.touch(); });\r\n            }\r\n\r\n            submit = SubmitCanvas.create(canvas, this._shader2D.ALPHA, this._shader2D.filters);\r\n            this._submits[this._submits._length++] = submit;\r\n            ((<SubmitCanvas>submit))._key.clear();\r\n            //var sx:Number = width / canvas.width;\r\n            //var sy:Number = height / canvas.height;\r\n            var mat: Matrix = ((<SubmitCanvas>submit))._matrix;\r\n            this._curMat.copyTo(mat);\r\n            //sx != 1 && sy != 1 && mat.scale(sx, sy);\r\n            // 先加上位置，最后再乘逆\r\n            var tx: number = mat.tx, ty: number = mat.ty;\r\n            mat.tx = mat.ty = 0;\r\n            mat.transformPoint(Point.TEMP.setTo(x, y));\t// 用当前矩阵变换 (x,y)\r\n            mat.translate(Point.TEMP.x + tx, Point.TEMP.y + ty);\t// 加上原来的 (tx,ty)\r\n\r\n            Matrix.mul(canv.invMat, mat, mat);\r\n\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n    }\r\n\r\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1, color: number = 0xffffffff): boolean {\r\n        this._drawCount++;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n        }\r\n\r\n        //凡是这个都是在_mesh上操作，不用考虑samekey\r\n        this.transformQuad(x, y, width, height, 0, m || this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, uv || Texture.DEF_UV, color, true);\r\n            //if (GlUtils.fillRectImgVb( _mesh._vb, _clipRect, x, y, width , height , uv || Texture.DEF_UV, m || _curMat, rgba, this)) {\r\n            var submit: SubmitTarget = this._curSubmit = SubmitTarget.create(this, this._mesh, shaderValue, rt);\r\n            submit.blendType = (blend == -1) ? this._nBlendType : blend;\r\n            this._copyClipInfo((<SubmitBase>(submit as any)), this._globalClipMatrix);\r\n            submit._numEle = 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n            this._submits[this._submits._length++] = submit;\r\n            //暂时drawTarget不合并\r\n            this._curSubmit = SubmitBase.RENDERBASE\r\n            return true;\r\n        }\r\n        //暂时drawTarget不合并\r\n        this._curSubmit = SubmitBase.RENDERBASE\r\n        return false;\r\n    }\r\n\r\n    drawTriangles(tex: Texture,\r\n        x: number, y: number,\r\n        vertices: Float32Array,\r\n        uvs: Float32Array,\r\n        indices: Uint16Array,\r\n        matrix: Matrix, alpha: number, blendMode: string, colorNum: number = 0xffffffff): void {\r\n\r\n        if (!tex._getSource()) { //source内调用tex.active();\r\n            if (this.sprite) {\r\n                ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            }\r\n            return;\r\n        }\r\n        var oldcomp: string | null = null;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n        this._drawCount++;\r\n\r\n        // 为了提高效率，把一些变量放到这里\r\n        var tmpMat = this._tmpMatrix;\r\n        var triMesh = this._triangleMesh!;\r\n\r\n        var webGLImg = tex.bitmap;\r\n        var preKey: SubmitKey = this._curSubmit._key;\r\n        var sameKey = preKey.submitType === SubmitBase.KEY_TRIANGLES && \r\n                        preKey.other === webGLImg.id && \r\n                        preKey.blendShader == this._nBlendType &&\r\n                        this._curSubmit.material==this.material;\r\n\r\n        //var rgba:int = mixRGBandAlpha(0xffffffff);\r\n        //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\r\n        if (triMesh.vertNum + vertices.length / 2 > Context._MAXVERTNUM) {\r\n            triMesh = this._triangleMesh = MeshTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(triMesh);\r\n            sameKey = false;\t//新的mesh不能算samekey了\r\n        }\r\n        if (!sameKey) {\r\n            //添加一个新的submit\r\n            var submit: SubmitTexture = this._curSubmit = SubmitTexture.create(this, triMesh, Value2D.create(RenderSpriteData.Texture2D));\r\n            submit.shaderValue.textureHost = tex;\r\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            submit._key.submitType = SubmitBase.KEY_TRIANGLES;\r\n            submit._key.other = webGLImg.id;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            this._submits[this._submits._length++] = submit;\r\n        }\r\n\r\n        var rgba: number = this._mixRGBandAlpha(colorNum, this._shader2D.ALPHA * alpha);\r\n        if (!this._drawTriUseAbsMatrix) {\r\n            if (!matrix) {\r\n                tmpMat.a = 1; tmpMat.b = 0; tmpMat.c = 0; tmpMat.d = 1; tmpMat.tx = x; tmpMat.ty = y;\r\n            } else {\r\n                tmpMat.a = matrix.a; tmpMat.b = matrix.b; tmpMat.c = matrix.c; tmpMat.d = matrix.d; tmpMat.tx = matrix.tx + x; tmpMat.ty = matrix.ty + y;\r\n            }\r\n            Matrix.mul(tmpMat, this._curMat, tmpMat);\r\n            triMesh.addData(vertices, uvs, indices, tmpMat || this._curMat, rgba);\r\n        } else {\r\n            // 这种情况是drawtexture转成的drawTriangle，直接使用matrix就行，传入的xy都是0\r\n            triMesh.addData(vertices, uvs, indices, matrix, rgba);\r\n        }\r\n        this._curSubmit._numEle += indices.length;\r\n\r\n        if (blendMode) {\r\n            this.globalCompositeOperation = oldcomp!;\r\n        }\r\n        //return true;\r\n    }\r\n\r\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n        SaveTransform.save(this);\r\n        Matrix.mul(Matrix.TEMP.setTo(a, b, c, d, tx, ty), this._curMat, this._curMat);\t//TODO 这里会有效率问题。一堆的set\r\n        this._curMat._checkTransform();\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**@internal */\r\n    _transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        matrix.setTranslate(tx, ty);\r\n        Matrix.mul(matrix, this._curMat, this._curMat);\r\n        matrix.setTranslate(0, 0);\r\n        this._curMat._bTransform = true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    setTransformByMatrix(value: Matrix): void {\r\n        value.copyTo(this._curMat);\r\n    }\r\n\r\n    rotate(angle: number): void {\r\n        SaveTransform.save(this);\r\n        this._curMat.rotateEx(angle);\r\n    }\r\n\r\n    scale(scaleX: number, scaleY: number): void {\r\n        SaveTransform.save(this);\r\n        this._curMat.scaleEx(scaleX, scaleY);\r\n    }\r\n\r\n    clipRect(x: number, y: number, width: number, height: number, escape?: boolean): void {\r\n        SaveClipRect.save(this);\r\n        if (this._clipRect == Context.MAXCLIPRECT) {\r\n            this._clipRect = new Rectangle(x, y, width, height);\r\n        } else {\r\n            this._clipRect.width = width;\r\n            this._clipRect.height = height;\r\n\r\n            //把xy转换到当前矩阵空间。宽高不用转换，这样在shader中计算的时候就不用把方向normalize了\r\n            this._clipRect.x = x;\r\n            this._clipRect.y = y;\r\n        }\r\n        this._clipID_Gen++;\r\n        this._clipID_Gen %= 10000;\r\n        this._clipInfoID = this._clipID_Gen;\r\n\r\n        if (escape) {\r\n            defaultClipMatrix.copyTo(this._globalClipMatrix);\r\n            return;\r\n        }\r\n\r\n        var cm: Matrix = this._globalClipMatrix;\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转，翻转\r\n        var minx: number = cm.tx;\r\n        var miny: number = cm.ty;\r\n        var maxx: number = minx + cm.a;\r\n        var maxy: number = miny + cm.d;\r\n        //TEMP end\r\n\r\n        if (this._clipRect.width >= Const.MAX_CLIP_SIZE) {\r\n            cm.a = cm.d = Const.MAX_CLIP_SIZE;\r\n            cm.b = cm.c = cm.tx = cm.ty = 0;\r\n        } else {\r\n            //其实就是矩阵相乘\r\n            if (this._curMat._bTransform) {\r\n                cm.tx = this._clipRect.x * this._curMat.a + this._clipRect.y * this._curMat.c + this._curMat.tx;\r\n                cm.ty = this._clipRect.x * this._curMat.b + this._clipRect.y * this._curMat.d + this._curMat.ty;\r\n                cm.a = this._clipRect.width * this._curMat.a;\r\n                cm.b = this._clipRect.width * this._curMat.b;\r\n                cm.c = this._clipRect.height * this._curMat.c;\r\n                cm.d = this._clipRect.height * this._curMat.d;\r\n            } else {\r\n                cm.tx = this._clipRect.x + this._curMat.tx;\r\n                cm.ty = this._clipRect.y + this._curMat.ty;\r\n                cm.a = this._clipRect.width;\r\n                cm.b = cm.c = 0;\r\n                cm.d = this._clipRect.height;\r\n            }\r\n            if (this._incache) {\r\n                this._clipInCache = true;\r\n            }\r\n        }\r\n\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转,翻转\r\n        if (cm.a > 0 && cm.d > 0) {\r\n            var cmaxx: number = cm.tx + cm.a;\r\n            var cmaxy: number = cm.ty + cm.d;\r\n            if (cmaxx <= minx || cmaxy <= miny || cm.tx >= maxx || cm.ty >= maxy) {\r\n                //超出范围了\r\n                cm.a = -0.1; cm.d = -0.1;\r\n            } else {\r\n                if (cm.tx < minx) {\r\n                    cm.a -= (minx - cm.tx);\r\n                    cm.tx = minx;\r\n                }\r\n                if (cmaxx > maxx) {\r\n                    cm.a -= (cmaxx - maxx);\r\n                }\r\n                if (cm.ty < miny) {\r\n                    cm.d -= (miny - cm.ty);\r\n                    cm.ty = miny;\r\n                }\r\n                if (cmaxy > maxy) {\r\n                    cm.d -= (cmaxy - maxy);\r\n                }\r\n                if (cm.a <= 0) cm.a = -0.1;\r\n                if (cm.d <= 0) cm.d = -0.1;\r\n            }\r\n        }\r\n        //TEMP end\r\n    }\r\n\r\n    addRenderObject(o: ISubmit): void {\r\n        this._submits[this._submits._length++] = o;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tstart\r\n     * @param\tend\r\n     */\r\n    submitElement(start: number, end: number): number {\r\n        var mainCtx: boolean = this.isMain;\r\n        var renderList: any[] = this._submits;\r\n        var ret: number = ((<any>renderList))._length;\r\n        end < 0 && (end = ((<any>renderList))._length);\r\n        var submit = SubmitBase.RENDERBASE;\r\n        while (start < end) {\r\n            this._renderNextSubmitIndex = start + 1;\r\n            if (renderList[start] === SubmitBase.RENDERBASE) {\r\n                start++;\r\n                continue;\r\n            }\r\n            SubmitBase.preRender = submit;\r\n            submit = renderList[start];\r\n            //只有submitscissor才会返回多个\r\n            start += submit.renderSubmit();\r\n            //本来做了个优化，如果是主画布，用完立即releaseRender. 但是实际没有什么效果，且由于submit需要用来对比，即使用完也不能修改，所以这个优化又去掉了\r\n        }\r\n\r\n\r\n        return ret;\r\n    }\r\n\r\n    flush(): number {\r\n        this._clipID_Gen = 0;\r\n        var ret: number = this.submitElement(0, this._submits._length);\r\n        this._path && this._path.reset();\r\n        SkinMeshBuffer.instance && SkinMeshBuffer.getInstance().reset();\r\n\r\n        //Stat.mesh2DNum += meshlist.length;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n\r\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this._mesh = MeshQuadTexture.getAMesh(this.isMain);\t//TODO 不要这样。\r\n        this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n        this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n        this.meshlist.push(this._mesh, this._pathMesh, this._triangleMesh);\r\n\r\n        this._flushCnt++;\r\n        //charbook gc\r\n        if (this._flushCnt % 60 == 0 && this.isMain) {\r\n            if (TextRender.textRenderInst) {\r\n                TextRender.textRenderInst.GC();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*******************************************start矢量绘制***************************************************/\r\n\r\n    beginPath(convex: boolean = false): void {\r\n        var tPath: Path = this._getPath();\r\n        tPath.beginPath(convex);\r\n    }\r\n\r\n    closePath(): void {\r\n        //_path.closePath = true;\r\n        this._path.closePath();\r\n    }\r\n\r\n    /**\r\n     * 添加一个path。\r\n     * @param\tpoints [x,y,x,y....]\t这个会被保存下来，所以调用者需要注意复制。\r\n     * @param\tclose\t是否闭合\r\n     * @param   convex 是否是凸多边形。convex的优先级是这个最大。fill的时候的次之。其实fill的时候不应该指定convex，因为可以多个path\r\n     * @param\tdx  需要添加的平移。这个需要在应用矩阵之前应用。\r\n     * @param\tdy\r\n     */\r\n    addPath(points: any[], close: boolean, convex: boolean, dx: number, dy: number): void {\r\n        let sz = points.length;\r\n        for (let i = 0; i < sz - 1; i += 2) {\r\n            points[i] += dx;\r\n            points[i + 1] += dy;\r\n        }\r\n        if (close && sz > 5 && (points[sz - 2] != points[0] || points[sz - 1] != points[1])) {\r\n            points.push(points[0], points[1]);\r\n        }\r\n        this._getPath().push(points, convex);\r\n    }\r\n\r\n    fill(): void {\r\n        var m: Matrix = this._curMat;\r\n        var tPath: Path = this._getPath();\r\n        var submit: Submit = this._curSubmit;\r\n        var sameKey = submit._key.submitType === SubmitBase.KEY_VG && \r\n                    submit._key.blendShader === this._nBlendType &&\r\n                    this.isSameClipInfo(submit) &&\r\n                    this._curSubmit.material==this.material;\r\n\r\n        if (!sameKey) {\r\n            this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n        }\r\n        var rgba: number = this.mixRGBandAlpha(this.fillStyle.toInt());\r\n        var curEleNum: number = 0;\r\n        var idx: any[];\r\n        //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\r\n        for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\r\n            var p: any = tPath.paths[i];\r\n            var vertNum: number = p.path.length / 2;\r\n            if (vertNum < 3 || (vertNum == 3 && !p.convex))\r\n                continue;\r\n            var cpath: any[] = p.path.concat();\r\n            // 应用矩阵转换顶点\r\n            var pi: number = 0;\r\n            var xp: number, yp: number;\r\n            var _x: number, _y: number;\r\n            if (m._bTransform) {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n\r\n                    cpath[xp] = m.a * _x + m.c * _y + m.tx;\r\n                    cpath[yp] = m.b * _x + m.d * _y + m.ty;\r\n                }\r\n            } else {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n                    cpath[xp] = _x + m.tx;\r\n                    cpath[yp] = _y + m.ty;\r\n                }\r\n            }\r\n\r\n            if (this._pathMesh.vertNum + vertNum > Context._MAXVERTNUM) {\r\n                //;\r\n                //顶点数超了，要先提交一次\r\n                this._curSubmit._numEle += curEleNum;\r\n                curEleNum = 0;\r\n                //然后用新的mesh，和新的submit。\r\n                this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n            }\r\n\r\n            var curvert: number = this._pathMesh.vertNum;\r\n            //生成 ib\r\n            if (p.convex) { //convex的ib比较容易\r\n                var faceNum: number = vertNum - 2;\r\n                idx = new Array(faceNum * 3);\r\n                var idxpos: number = 0;\r\n                for (var fi: number = 0; fi < faceNum; fi++) {\r\n                    idx[idxpos++] = curvert;\r\n                    idx[idxpos++] = fi + 1 + curvert;\r\n                    idx[idxpos++] = fi + 2 + curvert;\r\n                }\r\n            }\r\n            else {\r\n                idx = Earcut.earcut(cpath, null, 2);\t//返回索引\r\n                if (curvert > 0) {\r\n                    //修改ib\r\n                    for (var ii: number = 0; ii < idx.length; ii++) {\r\n                        idx[ii] += curvert;\r\n                    }\r\n                }\r\n            }\r\n            //填充mesh\r\n            this._pathMesh.addVertAndIBToMesh(this, cpath, rgba, idx);\r\n            curEleNum += idx.length;\r\n        }\r\n        this._curSubmit._numEle += curEleNum;\r\n    }\r\n\r\n    private addVGSubmit(mesh: Mesh2D): Submit {\r\n        //elenum设为0，后面再加\r\n        var submit: Submit = Submit.createShape(this, mesh, 0, Value2D.create(RenderSpriteData.Primitive));\r\n        //submit._key.clear();\r\n        //submit._key.blendShader = _submitKey.blendShader;\t//TODO 这个在哪里赋值的啊\r\n        submit._key.submitType = SubmitBase.KEY_VG;\r\n        this._submits[this._submits._length++] = submit;\r\n        this._copyClipInfo(submit, this._globalClipMatrix);\r\n        return submit;\r\n    }\r\n\r\n    stroke(): void {\r\n        if (this.lineWidth > 0) {\r\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var tPath: Path = this._getPath();\r\n            var submit: Submit = this._curSubmit;\r\n            var sameKey = submit._key.submitType === SubmitBase.KEY_VG && \r\n                            submit._key.blendShader === this._nBlendType &&\r\n                            this.isSameClipInfo(submit) && \r\n                            this._curSubmit.material==this.material;\r\n\r\n            if (!sameKey) {\r\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n            }\r\n            var curEleNum: number = 0;\r\n            //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\r\n            for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\r\n                var p: any = tPath.paths[i];\r\n                if (p.path.length <= 0)\r\n                    continue;\r\n                var idx: any[] = [];\r\n                var vertex: any[] = [];//x,y\r\n                //p.path.loop;\r\n                //填充vbib\r\n                var maxVertexNum: number = p.path.length * 2;\t//最大可能产生的顶点数。这个需要考虑考虑\r\n                if (maxVertexNum < 2)\r\n                    continue;\r\n                if (this._pathMesh.vertNum + maxVertexNum > Context._MAXVERTNUM) {\r\n                    //;\r\n                    //顶点数超了，要先提交一次\r\n                    this._curSubmit._numEle += curEleNum;\r\n                    curEleNum = 0;\r\n                    //然后用新的mesh，和新的submit。\r\n                    this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n                    this.meshlist.push(this._pathMesh);\r\n                    this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n                }\r\n                //这个需要放在创建新的mesh的后面，因为需要mesh.vertNum,否则如果先调用这个，再创建mesh，那么ib就不对了\r\n                BasePoly.createLine2(p.path, idx, this.lineWidth, this._pathMesh.vertNum, vertex, p.loop);\t//_pathMesh.vertNum 是要加到生成的ib上的\r\n                // 变换所有的点\r\n                var ptnum: number = vertex.length / 2;\r\n                var m: Matrix = this._curMat;\r\n                var pi: number = 0;\r\n                var xp: number, yp: number;\r\n                var _x: number, _y: number;\r\n                if (m._bTransform) {\r\n                    for (pi = 0; pi < ptnum; pi++) {\r\n                        xp = pi << 1;\r\n                        yp = xp + 1;\r\n                        _x = vertex[xp];\r\n                        _y = vertex[yp];\r\n\r\n                        vertex[xp] = m.a * _x + m.c * _y + m.tx;\r\n                        vertex[yp] = m.b * _x + m.d * _y + m.ty;\r\n                    }\r\n                } else {\r\n                    for (pi = 0; pi < ptnum; pi++) {\r\n                        xp = pi << 1;\r\n                        yp = xp + 1;\r\n                        _x = vertex[xp];\r\n                        _y = vertex[yp];\r\n                        vertex[xp] = _x + m.tx;\r\n                        vertex[yp] = _y + m.ty;\r\n                    }\r\n                }\r\n\r\n                //this.drawPoly(0, 0, p.path, fillStyle._color.numColor, 0, 0, p.convex);\r\n                //填充mesh\r\n                this._pathMesh.addVertAndIBToMesh(this, vertex, rgba, idx);\r\n                curEleNum += idx.length;\r\n            }\r\n            this._curSubmit._numEle += curEleNum;\r\n        }\r\n    }\r\n\r\n    moveTo(x: number, y: number): void {\r\n        var tPath: Path = this._getPath();\r\n        tPath.newPath();\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tb 是否应用矩阵\r\n     */\r\n    lineTo(x: number, y: number): void {\r\n        var tPath: Path = this._getPath();\r\n        if (Math.abs(x - tPath._lastOriX) < 1e-3 && Math.abs(y - tPath._lastOriY) < 1e-3)//不判断的话，下面的画线算法受不了\r\n            return;\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n    /*\r\n    public function drawCurves(x:Number, y:Number,points:Array, lineColor:*, lineWidth:Number = 1):void {\r\n        //setPathId(-1);\r\n        beginPath();\r\n        strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        var points:Array = points;\r\n        //movePath(x, y); TODO 这个被去掉了\r\n        moveTo(points[0], points[1]);\r\n        var i:int = 2, n:int = points.length;\r\n        while (i < n) {\r\n            quadraticCurveTo(points[i++], points[i++], points[i++], points[i++]);\r\n        }\r\n        stroke();\r\n    }\r\n    */\r\n\r\n    arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\r\n        /*\r\n        if (mId != -1) {\r\n            if (mHaveKey) {\r\n                return;\r\n            }\r\n        }\r\n        */\r\n        var i: number = 0;\r\n        var x: number = 0, y: number = 0;\r\n        var dx: number = this._path._lastOriX - x1;\r\n        var dy: number = this._path._lastOriY - y1;\r\n        var len1: number = Math.sqrt(dx * dx + dy * dy);\r\n        if (len1 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx: number = dx / len1;\r\n        var ndy: number = dy / len1;\r\n        var dx2: number = x2 - x1;\r\n        var dy2: number = y2 - y1;\r\n        var len22: number = dx2 * dx2 + dy2 * dy2;\r\n        var len2: number = Math.sqrt(len22);\r\n        if (len2 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx2: number = dx2 / len2;\r\n        var ndy2: number = dy2 / len2;\r\n        var odx: number = ndx + ndx2;\r\n        var ody: number = ndy + ndy2;\r\n        var olen: number = Math.sqrt(odx * odx + ody * ody);\r\n        if (olen <= 0.000001) {\r\n            return;\r\n        }\r\n\r\n        var nOdx: number = odx / olen;\r\n        var nOdy: number = ody / olen;\r\n\r\n        var alpha: number = Math.acos(nOdx * ndx + nOdy * ndy);\r\n        var halfAng: number = Math.PI / 2 - alpha;\r\n\r\n        len1 = r / Math.tan(halfAng);\r\n        var ptx1: number = len1 * ndx + x1;\r\n        var pty1: number = len1 * ndy + y1;\r\n\r\n        var orilen: number = Math.sqrt(len1 * len1 + r * r);\r\n        //圆心\r\n        var orix: number = x1 + nOdx * orilen;\r\n        var oriy: number = y1 + nOdy * orilen;\r\n\r\n        var ptx2: number = len1 * ndx2 + x1;\r\n        var pty2: number = len1 * ndy2 + y1;\r\n\r\n        var dir: number = ndx * ndy2 - ndy * ndx2;\r\n\r\n        var fChgAng: number = 0;\r\n        var sinx: number = 0.0;\r\n        var cosx: number = 0.0;\r\n        if (dir >= 0) {\r\n            fChgAng = halfAng * 2;\r\n            var fda: number = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n        else {\r\n            fChgAng = -halfAng * 2;\r\n            fda = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n\r\n        //x = _curMat.a * ptx1 + _curMat.c * pty1 /*+ _curMat.tx*/;\r\n        //y = _curMat.b * ptx1 + _curMat.d * pty1 /*+ _curMat.ty*/;\r\n        var lastx: number = this._path._lastOriX, lasty: number = this._path._lastOriY;\t//没有矩阵转换的上一个点\r\n        var _x1: number = ptx1, _y1: number = pty1;\r\n        if (Math.abs(_x1 - this._path._lastOriX) > 0.1 || Math.abs(_y1 - this._path._lastOriY) > 0.1) {\r\n            x = _x1;// _curMat.a * _x1 + _curMat.c * _y1 + _curMat.tx;\r\n            y = _y1;//_curMat.b * _x1 + _curMat.d * _y1 + _curMat.ty;\r\n            lastx = _x1;\r\n            lasty = _y1;\r\n            this._path._lastOriX = x;\r\n            this._path._lastOriY = y;\r\n            this._path.addPoint(x, y);\r\n        }\r\n        var cvx: number = ptx1 - orix;\r\n        var cvy: number = pty1 - oriy;\r\n        var tx: number = 0.0;\r\n        var ty: number = 0.0;\r\n        for (i = 0; i < Context.SEGNUM; i++) {\r\n            var cx: number = cvx * cosx + cvy * sinx;\r\n            var cy: number = -cvx * sinx + cvy * cosx;\r\n            x = cx + orix;\r\n            y = cy + oriy;\r\n\r\n            //x1 = _curMat.a * x + _curMat.c * y /*+ _curMat.tx*/;\r\n            //y1 = _curMat.b * x + _curMat.d * y /*+ _curMat.ty*/;\r\n            //x = x1;\r\n            //y = y1;\r\n            if (Math.abs(lastx - x) > 0.1 || Math.abs(lasty - y) > 0.1) {\r\n                //var _tx1:Number = x, _ty1:Number = y;\r\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\r\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\r\n                this._path._lastOriX = x;\r\n                this._path._lastOriY = y;\r\n                this._path.addPoint(x, y);\r\n                lastx = x;\r\n                lasty = y;\r\n            }\r\n            cvx = cx;\r\n            cvy = cy;\r\n        }\r\n    }\r\n\r\n    arc(cx: number, cy: number, rx: number, ry: number, startAngle: number, endAngle: number, counterclockwise: boolean = false, b: boolean = true, minNum = 10): void {\r\n        /* TODO 缓存还没想好\r\n        if (mId != -1) {\r\n            var tShape:IShape = VectorGraphManager.getInstance().shapeDic[this.mId];\r\n            if (tShape) {\r\n                if (mHaveKey && !tShape.needUpdate(_curMat))\r\n                    return;\r\n            }\r\n            cx = 0;\r\n            cy = 0;\r\n        }\r\n        */\r\n        var a: number = 0, da: number = 0, hda: number = 0, kappa: number = 0;\r\n        var dx: number = 0, dy: number = 0, x: number = 0, y: number = 0, tanx: number = 0, tany: number = 0;\r\n        var i: number, ndivs: number, nvals: number;\r\n\r\n        // Clamp angles\r\n        da = endAngle - startAngle;\r\n        if (!counterclockwise) {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = Math.PI * 2;\r\n            } else {\r\n                while (da < 0.0) {\r\n                    da += Math.PI * 2;\r\n                }\r\n            }\r\n        } else {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = -Math.PI * 2;\r\n            } else {\r\n                while (da > 0.0) {\r\n                    da -= Math.PI * 2;\r\n                }\r\n            }\r\n        }\r\n        var sx: number = this.getMatScaleX();\r\n        var sy: number = this.getMatScaleY();\r\n        var sr: number = rx * (sx > sy ? sx : sy);\r\n        var cl: number = 2 * Math.PI * sr;\r\n        ndivs = (Math.max(cl / minNum, minNum)) | 0;\r\n\r\n        hda = (da / ndivs) / 2.0;\r\n        kappa = Math.abs(4 / 3 * (1 - Math.cos(hda)) / Math.sin(hda));\r\n        if (counterclockwise)\r\n            kappa = -kappa;\r\n\r\n        nvals = 0;\r\n        var tPath: Path = this._getPath();\r\n        for (i = 0; i <= ndivs; i++) {\r\n            a = startAngle + da * (i / ndivs);\r\n            dx = Math.cos(a);\r\n            dy = Math.sin(a);\r\n            x = cx + dx * rx;\r\n            y = cy + dy * ry;\r\n            if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n                //var _tx1:Number = x, _ty1:Number = y;\r\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\r\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\r\n                tPath.addPoint(x, y);\r\n            }\r\n        }\r\n        dx = Math.cos(endAngle);\r\n        dy = Math.sin(endAngle);\r\n        x = cx + dx * rx;\r\n        y = cy + dy * ry;\r\n        if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n            //var _x2:Number = x, _y2:Number = y;\r\n            //x = _curMat.a * _x2 + _curMat.c * _y2 + _curMat.tx;\r\n            //y = _curMat.b * _x2 + _curMat.d * _y2 + _curMat.ty;\r\n            tPath.addPoint(x, y);\r\n        }\r\n    }\r\n\r\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void {\r\n        var tBezier: Bezier = Bezier.I;\r\n        var tResultArray: any[] = [];\r\n        //var _x1:Number = x, _y1:Number = y;\r\n        //x = _curMat.a * _x1 + _curMat.c * _y1 ;// + _curMat.tx;\r\n        //y = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\r\n        //_x1 = cpx, _y1 = cpy;\r\n        //cpx = _curMat.a * _x1 + _curMat.c * _y1;// + _curMat.tx;\r\n        //cpy = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\r\n        var tArray: any[] = tBezier.getBezierPoints([this._path._lastOriX, this._path._lastOriY, cpx, cpy, x, y], 30, 2);\r\n        for (var i: number = 0, n: number = tArray.length / 2; i < n; i++) {\r\n            this.lineTo(tArray[i * 2], tArray[i * 2 + 1]);\r\n        }\r\n        this.lineTo(x, y);\r\n    }\r\n\r\n\r\n    /**\r\n     * 把颜色跟当前设置的alpha混合\r\n     * @return\r\n     */\r\n    mixRGBandAlpha(color: number): number {\r\n        return this._mixRGBandAlpha(color, this._shader2D.ALPHA);\r\n    }\r\n    /**@internal */\r\n    _mixRGBandAlpha(color: number, alpha: number): number {\r\n        if (alpha >= 1) {\r\n            return color;\r\n        }\r\n        var a: number = ((color & 0xff000000) >>> 24);\r\n        //TODO 这里容易出问题，例如颜色的alpha部分虽然为0，但是他的意义就是0，不能假设是没有设置alpha。例如级联多个alpha就会生成这种结果\r\n        if (a != 0) {\r\n            a *= alpha;\r\n        } else {\r\n            a = alpha * 255;\r\n        }\r\n        return (color & 0x00ffffff) | (a << 24);\r\n    }\r\n\r\n    strokeRect(x: number, y: number, width: number, height: number, parameterLineWidth: number): void {\r\n        var tW: number = parameterLineWidth * 0.5;\r\n        //line(x - tW, y, x + width + tW, y, parameterLineWidth, _curMat);\r\n        //line(x + width, y, x + width, y + height, parameterLineWidth, _curMat);\r\n        //line(x, y, x, y + height, parameterLineWidth, _curMat);\r\n        //line(x - tW, y + height, x + width + tW, y + height, parameterLineWidth, _curMat);\r\n        /**\r\n         * p1-------------------------------p2\r\n         * |  x,y                      x+w,y|\r\n         * |     p4--------------------p3   |\r\n         * |     |                     |    |\r\n         * |     p6--------------------p7   |\r\n         * |  x,y+h                  x+w,y+h|\r\n         * p5-------------------------------p8\r\n         * \r\n         * 不用了\r\n         * 这个其实用4个fillrect拼起来更好，能与fillrect合并。虽然多了几个点。\r\n         */\r\n        //TODO 这里能不能与下面的stroke合并一下\r\n        if (this.lineWidth > 0) {\r\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var hw: number = this.lineWidth / 2;\r\n            this._fillRect(x - hw, y - hw, width + this.lineWidth, this.lineWidth, rgba);\t\t\t\t//上\r\n            this._fillRect(x - hw, y - hw + height, width + this.lineWidth, this.lineWidth, rgba);\t\t//下\r\n            this._fillRect(x - hw, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t\t\t//左\r\n            this._fillRect(x - hw + width, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t//右\r\n        }\r\n    }\r\n\r\n    clip(): void {\r\n    }\r\n\r\n    /*******************************************end矢量绘制***************************************************/\r\n    //TODO:coverage\r\n    drawParticle(x: number, y: number, pt: any): void {\r\n        pt.x = x;\r\n        pt.y = y;\r\n        this._submits[this._submits._length++] = pt;\r\n    }\r\n\r\n    private _getPath(): Path {\r\n        return this._path || (this._path = new Path());\r\n    }\r\n\r\n    /**获取canvas*/\r\n    //注意这个是对外接口\r\n    get canvas(): HTMLCanvas {\r\n        return this._canvas;\r\n    }\r\n    //=============新增==================\t\r\n    /* 下面的方式是有bug的。canvas是直接save，restore，现在是为了优化，但是有bug，所以先不重载了\r\n    public function saveTransform(matrix:Matrix):void {\r\n        this._curMat.copyTo(matrix);\r\n    }\r\n    \r\n    public function restoreTransform(matrix:Matrix):void {\r\n        matrix.copyTo(this._curMat);\r\n    }\r\n    \r\n    public function transformByMatrix(matrix:Matrix,tx:Number,ty:Number):void {\r\n        var mat:Matrix = _curMat;\r\n        matrix.setTranslate(tx, ty);\r\n        Matrix.mul(matrix, mat, mat);\r\n        matrix.setTranslate(0, 0);\r\n        mat._bTransform = true;\r\n    }\r\n    */\r\n\r\n    /* 下面的是错误的。位置没有被缩放\r\n    public function transformByMatrix(matrix:Matrix, tx:Number, ty:Number):void {\r\n        SaveTransform.save(this);\t\t\t\r\n        Matrix.mul(matrix, _curMat, _curMat);\t\r\n        _curMat.tx += tx;\r\n        _curMat.ty += ty;\r\n        _curMat._checkTransform();\r\n    }\r\n            \r\n    public function transformByMatrixNoSave(matrix:Matrix, tx:Number, ty:Number):void {\r\n        Matrix.mul(matrix, _curMat, _curMat);\t\r\n        _curMat.tx += tx;\r\n        _curMat.ty += ty;\r\n        _curMat._checkTransform();\r\n    }\r\n    */\r\n\r\n    private static tmpuv1: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    /**\r\n     * 专用函数。通过循环创建来水平填充\r\n     * @param\ttex\r\n     * @param\tbmpid\r\n     * @param\tuv\t\t希望循环的部分的uv\r\n     * @param\toriw\r\n     * @param\torih\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tw\r\n     */\r\n    private _fillTexture_h(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, w: number, color: number): void {\r\n        if (oriw <= 0)\r\n            console.error('_fillTexture_h error: oriw must>0');\r\n\r\n        var stx: number = x;\r\n        var num: number = Math.floor(w / oriw);\r\n        var left: number = w % oriw;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, stx, y, oriw, orih, this._curMat, uv, 1, false, color);\r\n            stx += oriw;\r\n        }\r\n        // 最后剩下的\r\n        if (left > 0) {\r\n            var du: number = uv[2] - uv[0];\r\n            var uvr: number = uv[0] + du * (left / oriw);\r\n            var tuv: any[] = Context.tmpuv1;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uvr; tuv[3] = uv[3];\r\n            tuv[4] = uvr; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\r\n            this._inner_drawTexture(tex, imgid, stx, y, left, orih, this._curMat, tuv, 1, false, color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 专用函数。通过循环创建来垂直填充\r\n     * @param\ttex\r\n     * @param\timgid\r\n     * @param\tuv\r\n     * @param\toriw\r\n     * @param\torih\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\th\r\n     */\r\n    private _fillTexture_v(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, h: number, color: number): void {\r\n        if (orih <= 0)\r\n            console.error('_fillTexture_v error: orih must>0');\r\n        var sty: number = y;\r\n        var num: number = Math.floor(h / orih);\r\n        var left: number = h % orih;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, orih, this._curMat, uv, 1, false, color);\r\n            sty += orih;\r\n        }\r\n        // 最后剩下的\r\n        if (left > 0) {\r\n            var dv: number = uv[7] - uv[1];\r\n            var uvb: number = uv[1] + dv * (left / orih);\r\n            var tuv: any[] = Context.tmpuv1;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3];\r\n            tuv[4] = uv[4]; tuv[5] = uvb; tuv[6] = uv[6]; tuv[7] = uvb;\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, left, this._curMat, tuv, 1, false, color);\r\n        }\r\n    }\r\n\r\n    private static tmpUV: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    private static tmpUVRect: any[] = [0, 0, 0, 0];\r\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\r\n        if (!tex._getSource())\r\n            return;\r\n        tx += gx;\r\n        ty += gy;\r\n\r\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\r\n\r\n        let ox = tex.offsetX;\r\n        let oy = tex.offsetY;\r\n\r\n        let sw = tex.sourceWidth;\r\n        let sh = tex.sourceHeight;\r\n\r\n        let ow = sw - tex.width - ox;\r\n        let oh = sh - tex.height - oy;\r\n\r\n        var top: number = sizeGrid[0];\r\n        top -= oy;\r\n        if (0 > top) {\r\n            oy += top;\r\n            top = 0;\r\n        }\r\n        ty += oy;\r\n\r\n        var left: number = sizeGrid[3];\r\n        left -= ox;\r\n        if (0 > left) {\r\n            ox += left;\r\n            left = 0;\r\n        }\r\n        tx += ox;\r\n\r\n        var right: number = sizeGrid[1];\r\n        right -= ow;\r\n        if (0 > right) {\r\n            ow += right;\r\n            right = 0;\r\n        }\r\n        var bottom: number = sizeGrid[2];\r\n        bottom -= oh;\r\n        if (0 > bottom) {\r\n            oh += bottom;\r\n            bottom = 0;\r\n        }\r\n        width -= ox + ow;\r\n        height -= oy + oh;\r\n\r\n        var repeat: boolean = sizeGrid[4];\r\n        var needClip: boolean = false;\r\n\r\n        if (width == tex.width) {\r\n            left = right = 0;\r\n        }\r\n        if (height == tex.height) {\r\n            top = bottom = 0;\r\n        }\r\n\r\n        var d_top: number = top / h;\r\n        var d_left: number = left / w;\r\n        var d_right: number = right / w;\r\n        var d_bottom: number = bottom / h;\r\n\r\n        //处理进度条不好看的问题\r\n        // if (left + right > width) {\r\n        // \tvar clipWidth: number = width;\r\n        // \tneedClip = true;\r\n        // \twidth = left + right;\r\n        // \tthis.save();\r\n        // \tthis.clipRect(0 + tx, 0 + ty, clipWidth, height);\r\n        // }\r\n\r\n        var imgid: number = (tex.bitmap as Texture2D).id;\r\n        var mat: Matrix = this._curMat;\r\n        var tuv = this._tempUV;\r\n\r\n        //解决九宫格设置left+right或top+bottom的累加值超过宽或高导致九宫格显示错乱的bug\r\n        var scale_x = 1;\r\n        var scale_y = 1;\r\n        if (left + right > width) scale_x = width / (left + right);\r\n        if (top + bottom > height) scale_y = height / (top + bottom);\r\n        left *= scale_x;\r\n        right *= scale_x;\r\n        top *= scale_y;\r\n        bottom *= scale_y;\r\n\r\n        // 整图的uv\r\n        // 一定是方的，所以uv只要左上右下就行\r\n        var uvl = uv[0];\r\n        var uvt = uv[1];\r\n        var uvr = uv[4];\r\n        var uvb = uv[5];\r\n\r\n        // 小图的uv\r\n        var uvl_ = uvl;\r\n        var uvt_ = uvt;\r\n        var uvr_ = uvr;\r\n        var uvb_ = uvb;\r\n\r\n        //绘制四个角\r\n        // 构造uv\r\n        if (left && top) {\r\n            uvr_ = uvl + d_left;\r\n            uvb_ = uvt + d_top;\r\n            tuv[0] = uvl, tuv[1] = uvt, tuv[2] = uvr_, tuv[3] = uvt,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, tx, ty, left, top, mat, tuv, 1, false, color);\r\n        }\r\n        if (right && top) {\r\n            uvl_ = uvr - d_right; uvt_ = uvt;\r\n            uvr_ = uvr; uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, 0 + ty, right, top, mat, tuv, 1, false, color);\r\n        }\r\n        if (left && bottom) {\r\n            uvl_ = uvl; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvl + d_left; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, 0 + tx, height - bottom + ty, left, bottom, mat, tuv, 1, false, color);\r\n        }\r\n        if (right && bottom) {\r\n            uvl_ = uvr - d_right; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, height - bottom + ty, right, bottom, mat, tuv, 1, false, color);\r\n        }\r\n        //绘制上下两个边\r\n        if (top) {\r\n            uvl_ = uvl + d_left; uvt_ = uvt;\r\n            uvr_ = uvr - d_right; uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, top, left + tx, ty, width - left - right, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, ty, width - left - right, top, mat, tuv, 1, false, color);\r\n            }\r\n\r\n        }\r\n        if (bottom) {\r\n            uvl_ = uvl + d_left; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr - d_right; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, bottom, left + tx, height - bottom + ty, width - left - right, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, height - bottom + ty, width - left - right, bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        //绘制左右两边\r\n        if (left) {\r\n            uvl_ = uvl; uvt_ = uvt + d_top;\r\n            uvr_ = uvl + d_left; uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, left, tex.height - top - bottom, tx, top + ty, height - top - bottom, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, tx, top + ty, left, height - top - bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        if (right) {\r\n            uvl_ = uvr - d_right; uvt_ = uvt + d_top;\r\n            uvr_ = uvr; uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, right, tex.height - top - bottom, width - right + tx, top + ty, height - top - bottom, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, width - right + tx, top + ty, right, height - top - bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        //绘制中间\r\n        uvl_ = uvl + d_left; uvt_ = uvt + d_top;\r\n        uvr_ = uvr - d_right; uvb_ = uvb - d_bottom;\r\n        tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n            tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n        if (repeat) {\r\n            var tuvr: any[] = Context.tmpUVRect;\r\n            tuvr[0] = uvl_; tuvr[1] = uvt_;\r\n            tuvr[2] = uvr_ - uvl_; tuvr[3] = uvb_ - uvt_;\r\n            // 这个如果用重复的可能比较多，所以采用filltexture的方法，注意这样会打断合并\r\n            this._fillTexture(tex, tex.width - left - right, tex.height - top - bottom, tuvr, left + tx, top + ty, width - left - right, height - top - bottom, 'repeat', 0, 0, color);\r\n        } else {\r\n            this._inner_drawTexture(tex, imgid, left + tx, top + ty, width - left - right, height - top - bottom, mat, tuv, 1, false, color);\r\n        }\r\n\r\n        if (needClip) this.restore();\r\n    }\r\n    addRenderObject3D(scene3D: ISubmit): void {\r\n        this._curSubmit = SubmitBase.RENDERBASE;//打断2D合并的renderKey\r\n        this.addRenderObject(scene3D);\r\n    }\r\n}\r\n\r\n\r\n/** @internal */\r\nclass ContextParams {\r\n    static DEFAULT: ContextParams;\r\n\r\n    lineWidth: number = 1;\r\n    textAlign: string;\r\n    textBaseline: string;\r\n\r\n    clear(): void {\r\n        this.lineWidth = 1;\r\n        this.textAlign = this.textBaseline = null;\r\n    }\r\n\r\n    make(): ContextParams {\r\n        return this === ContextParams.DEFAULT ? new ContextParams() : this;\r\n    }\r\n}\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n    //@ts-ignore\r\n    Context = NativeContext;\r\n}\r\n","import { Texture } from \"./Texture\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nimport { Context } from \"./Context\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Resource } from \"./Resource\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * <code>HTMLCanvas</code> 是 Html Canvas 的代理类，封装了 Canvas 的属性和方法。\r\n */\r\nexport class HTMLCanvas extends Resource {\r\n\r\n    private _ctx: any;\r\n    /**@internal */\r\n    _source: HTMLCanvasElement;\r\n    /**@internal */\r\n    _texture: Texture | RenderTexture2D;\r\n    /**@private */\r\n    protected _width: number;\r\n    /**@private */\r\n    protected _height: number;\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this._width = width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this._height = height;\r\n    }\r\n\r\n    /**@internal \r\n     * @override\r\n    */\r\n    _getSource() {\r\n        return this._source;\r\n    }\r\n    /**\r\n     * 根据指定的类型，创建一个 <code>HTMLCanvas</code> 实例。\r\n     */\r\n    constructor(createCanvas: boolean = false) {\r\n        super();\r\n        if (createCanvas)\t//webgl模式下不建立。除非强制指，例如绘制文字部分\r\n            this._source = Browser.createElement(\"canvas\");\r\n        else {\r\n            this._source = this as unknown as HTMLCanvasElement;\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    /**\r\n     * 清空画布内容。\r\n     */\r\n    clear(): void {\r\n        if (this._ctx) {\r\n            if (this._ctx.clear) {\r\n                this._ctx.clear();\r\n            } else {\r\n                this._ctx.clearRect(0, 0, this._width, this._height);\r\n            }\r\n        }\r\n        if (this._texture) {\r\n            this._texture.destroy();\r\n            this._texture = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁。\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        super.destroy();\r\n        this._setCPUMemory(0);\r\n        this._ctx && this._ctx.destroy && this._ctx.destroy();\r\n        this._ctx = null;\r\n    }\r\n\r\n    /**\r\n     * 释放。\r\n     */\r\n    release(): void {\r\n    }\r\n\r\n    /**\r\n     * Canvas 渲染上下文。\r\n     */\r\n    get context(): Context {\r\n        if (this._ctx) return this._ctx;\r\n        //@ts-ignore\r\n        if (this._source == this) {\t//是webgl并且不是真的画布。如果是真的画布，可能真的想要2d context\r\n            // @ts-ignore\r\n            this._ctx = new Context();\r\n        } else {\r\n            //@ts-ignore\r\n            this._ctx = this._source.getContext(LayaEnv.isConch ? 'layagl' : '2d');\r\n        }\r\n        this._ctx._canvas = this;\r\n        return this._ctx;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 设置 Canvas 渲染上下文。是webgl用来替换_ctx用的\r\n     * @param\tcontext Canvas 渲染上下文。\r\n     */\r\n    _setContext(context: Context): void {\r\n        this._ctx = context;\r\n    }\r\n\r\n    /**\r\n     * 获取 Canvas 渲染上下文。\r\n     * @param\tcontextID 上下文ID.\r\n     * @param\tother\r\n     * @return  Canvas 渲染上下文 Context 对象。\r\n     */\r\n    getContext(contextID: string, other: any = null): Context {\r\n        return this.context;\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取内存大小。\r\n     * @return 内存大小。\r\n     */\r\n    //TODO:coverage\r\n    getMemSize(): number {\r\n        return 0;//TODO:待调整\r\n    }\r\n\r\n    /**\r\n     * 设置宽高。\r\n     * @param\tw 宽度。\r\n     * @param\th 高度。\r\n     */\r\n    size(w: number, h: number): void {\r\n        if (this._width != w || this._height != h || (this._source && (this._source.width != w || this._source.height != h))) {\r\n            this._width = w;\r\n            this._height = h;\r\n            this._setCPUMemory(w * h * 4);\r\n            this._ctx && this._ctx.size && this._ctx.size(w, h);\r\n            if (this._source) {// && this._source instanceof HTMLCanvasElement){\r\n                this._source.height = h;\r\n                this._source.width = w;\r\n            }\r\n            if (this._texture) {\r\n                this._texture.destroy();\r\n                this._texture = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取texture实例\r\n     */\r\n    getTexture(): Texture | null | RenderTexture2D {\r\n        if (!this._texture) {\r\n            var bitmap: Texture2D = new Texture2D(this.source.width, this.source.height, TextureFormat.R8G8B8A8, true, false, false);\r\n            bitmap.setImageData(this.source, false, false);\r\n            this._texture = new Texture(bitmap);\r\n        }\r\n        return this._texture;\r\n    }\r\n\r\n    /**\r\n     * 把图片转换为base64信息\r\n     * @param\ttype \"image/png\"\r\n     * @param\tencoderOptions\t质量参数，取值范围为0-1\r\n     */\r\n    toBase64(type: string, encoderOptions: number): string | null {\r\n        if (this._source) {\r\n            if (LayaEnv.isConch) {\r\n                var win: any = window as any;\r\n                var width: number = this._ctx._targets.sourceWidth;\r\n                var height: number = this._ctx._targets.sourceHeight;\r\n                var data: any = this._ctx._targets.getData(0, 0, width, height);\r\n                return win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\r\n            }\r\n            else {\r\n                return (this._source as HTMLCanvasElement).toDataURL(type, encoderOptions);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * native多线程转图片\r\n     * @param type \r\n     * @param encoderOptions \r\n     * @param callBack \r\n     */\r\n    toBase64Async(type: string, encoderOptions: number, callBack: Function): void {\r\n        var width: number = this._ctx._targets.sourceWidth;\r\n        var height: number = this._ctx._targets.sourceHeight;\r\n        this._ctx._targets.getDataAsync(0, 0, width, height, function (data: Uint8Array): void {\r\n            let win = window as any;\r\n            var base64 = win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\r\n            callBack(base64);\r\n        });\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @internal\r\n * Graphic bounds数据类\r\n */\r\nexport class BoundsStyle {\r\n    /**@private */\r\n    bounds: Rectangle|null;\r\n    /**用户设的bounds*/\r\n    userBounds: Rectangle|null;\r\n    /**缓存的bounds顶点,sprite计算bounds用*/\r\n    temBM: any[]|null;\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): BoundsStyle {\r\n        if (this.bounds) this.bounds.recover();\r\n        if (this.userBounds) this.userBounds.recover();\r\n        this.bounds = null;\r\n        this.userBounds = null;\r\n        this.temBM = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"BoundsStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): BoundsStyle {\r\n        return Pool.getItemByClass(\"BoundsStyle\", BoundsStyle);\r\n    }\r\n}\r\n\r\n","import { Sprite } from \"../Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { HTMLCanvas } from \"../../resource/HTMLCanvas\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @internal\r\n * 存储cache相关\r\n */\r\nexport class CacheStyle {\r\n\r\n    static EMPTY: CacheStyle = new CacheStyle();\r\n    /**当前实际的cache状态*/\r\n    cacheAs: string;\r\n    /**是否开启canvas渲染*/\r\n    enableCanvasRender: boolean;\r\n    /**用户设的cacheAs类型*/\r\n    userSetCache: string;\r\n    /**是否需要为滤镜cache*/\r\n    cacheForFilters: boolean;\r\n    /**是否为静态缓存*/\r\n    staticCache: boolean;\r\n    /**是否需要刷新缓存*/\r\n    reCache: boolean;\r\n    /**mask对象*/\r\n    mask: Sprite;\r\n    /**作为mask时的父对象*/\r\n    maskParent: Sprite;\r\n    /**滤镜数据*/\r\n    filters: any[];\r\n    /**当前缓存区域*/\r\n    cacheRect: Rectangle;\r\n    /**当前使用的canvas*/\r\n    canvas: HTMLCanvas;\r\n    //TODO:webgl是否还需要\r\n    /**滤镜数据*/\r\n    filterCache: any;\r\n    //TODO:webgl是否还需要\r\n    /**是否有发光滤镜*/\r\n    hasGlowFilter: boolean;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * 是否需要Bitmap缓存\r\n     * @return\r\n     */\r\n    needBitmapCache(): boolean {\r\n        return this.cacheForFilters || !!this.mask;\r\n    }\r\n\r\n    /**\r\n     * 是否需要开启canvas渲染\r\n     */\r\n    needEnableCanvasRender(): boolean {\r\n        return this.userSetCache != \"none\" || this.cacheForFilters || !!this.mask;\r\n    }\r\n\r\n    /**\r\n     * 释放cache的资源\r\n     */\r\n    releaseContext(): void {\r\n        if (this.canvas && ((<any>this.canvas)).size) {\r\n            Pool.recover(\"CacheCanvas\", this.canvas);\r\n            this.canvas.size(0, 0);\r\n            // 微信在iphone8和mate20上个bug，size存在但是不起作用，可能是canvas对象不是我们的。\r\n            // 为了避免canvas不消失，再强制设置宽高为0 TODO 没有测试\r\n            try {\r\n                ((<any>this.canvas)).width = 0;\r\n                ((<any>this.canvas)).height = 0;\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n        this.canvas = null;\r\n    }\r\n\r\n    createContext(): void {\r\n        if (!this.canvas) {\r\n            this.canvas = Pool.getItem(\"CacheCanvas\") || new HTMLCanvas(false);\r\n            var tx: Context = this.canvas.context as Context;\r\n            if (!tx) {\r\n                tx = this.canvas.getContext('2d') as Context;\t//如果是webGL的话，这个会返回WebGLContext2D\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 释放滤镜资源\r\n     */\r\n    releaseFilterCache(): void {\r\n        var fc: any = this.filterCache;\r\n        if (fc) {\r\n            fc.destroy();\r\n            fc.recycle();\r\n            this.filterCache = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this === CacheStyle.EMPTY) return;\r\n        Pool.recover(\"SpriteCache\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): CacheStyle {\r\n        this.releaseContext();\r\n        this.releaseFilterCache();\r\n        this.cacheAs = \"none\";\r\n        this.enableCanvasRender = false;\r\n        this.userSetCache = \"none\";\r\n        this.cacheForFilters = false;\r\n        this.staticCache = false;\r\n        this.reCache = true;\r\n        this.mask = null;\r\n        this.maskParent = null;\r\n        this.filterCache = null;\r\n        this.filters = null;\r\n        this.hasGlowFilter = false;\r\n        if (this.cacheRect) this.cacheRect.recover();\r\n        this.cacheRect = null;\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 创建一个SpriteCache\r\n     */\r\n    static create(): CacheStyle {\r\n        return Pool.getItemByClass(\"SpriteCache\", CacheStyle);\r\n    }\r\n\r\n    private static _scaleInfo: Point = new Point();\r\n    static CANVAS_EXTEND_EDGE: number = 16;\r\n    /**\r\n    * @internal\r\n    */\r\n    _calculateCacheRect(sprite: Sprite, tCacheType: string, x: number, y: number): Point {\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        if (!_cacheStyle.cacheRect)\r\n            _cacheStyle.cacheRect = Rectangle.create();\r\n        var tRec: Rectangle;\r\n\r\n        //计算显示对象的绘图区域\r\n        if (tCacheType === \"bitmap\") {\r\n            tRec = sprite.getSelfBounds();\r\n            tRec.width = tRec.width + CacheStyle.CANVAS_EXTEND_EDGE * 2;\r\n            tRec.height = tRec.height + CacheStyle.CANVAS_EXTEND_EDGE * 2;\r\n            tRec.x = tRec.x - sprite.pivotX;\r\n            tRec.y = tRec.y - sprite.pivotY;\r\n            tRec.x = tRec.x - CacheStyle.CANVAS_EXTEND_EDGE;\r\n            tRec.y = tRec.y - CacheStyle.CANVAS_EXTEND_EDGE;\r\n            tRec.x = Math.floor(tRec.x + x) - x;\r\n            tRec.y = Math.floor(tRec.y + y) - y;\r\n            tRec.width = Math.floor(tRec.width);\r\n            tRec.height = Math.floor(tRec.height);\r\n            _cacheStyle.cacheRect.copyFrom(tRec);\r\n        } else {\r\n            _cacheStyle.cacheRect.setTo(-sprite._style.pivotX, -sprite._style.pivotY, 1, 1);\r\n        }\r\n        tRec = _cacheStyle.cacheRect;\r\n\r\n\r\n        //处理显示对象的scrollRect偏移\r\n        if (sprite._style.scrollRect) {\r\n            var scrollRect: Rectangle = sprite._style.scrollRect;\r\n            tRec.x -= scrollRect.x;\r\n            tRec.y -= scrollRect.y;\r\n        }\r\n        CacheStyle._scaleInfo.setTo(1, 1);\r\n\r\n        return CacheStyle._scaleInfo;\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Dragging } from \"../../utils/Dragging\"\r\nimport { IHitArea } from \"../../utils/IHitArea\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 元素样式\r\n */\r\nexport class SpriteStyle {\r\n\r\n    static readonly EMPTY: Readonly<SpriteStyle> = new SpriteStyle();\r\n\r\n    /**水平缩放 */\r\n    scaleX: number;\r\n    /**垂直缩放 */\r\n    scaleY: number;\r\n    /**水平倾斜角度 */\r\n    skewX: number;\r\n    /**垂直倾斜角度 */\r\n    skewY: number;\r\n    /**X轴心点 */\r\n    pivotX: number;\r\n    /**Y轴心点 */\r\n    pivotY: number;\r\n    /**旋转角度 */\r\n    rotation: number;\r\n    /**透明度 */\r\n    alpha: number;\r\n    /**滚动区域 */\r\n    scrollRect: Rectangle;\r\n    /**视口 */\r\n    viewport: Rectangle;\r\n    /**点击区域 */\r\n    hitArea: IHitArea;\r\n    /**滑动 */\r\n    dragging: Dragging;\r\n    /**混合模式 */\r\n    blendMode: string;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * 重置，方便下次复用\r\n     */\r\n    reset(): SpriteStyle {\r\n        this.scaleX = this.scaleY = 1;\r\n        this.skewX = this.skewY = 0;\r\n        this.pivotX = this.pivotY = this.rotation = 0;\r\n        this.alpha = 1;\r\n        if (this.scrollRect) this.scrollRect.recover();\r\n        this.scrollRect = null;\r\n        if (this.viewport) this.viewport.recover();\r\n        this.viewport = null;\r\n        this.hitArea = null;\r\n        this.dragging = null;\r\n        this.blendMode = null;\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this === SpriteStyle.EMPTY) return;\r\n        Pool.recover(\"SpriteStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 从对象池中创建\r\n     */\r\n    static create(): SpriteStyle {\r\n        return Pool.getItemByClass(\"SpriteStyle\", SpriteStyle);\r\n    }\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 透明命令\r\n */\r\nexport class AlphaCmd {\r\n    static ID: string = \"Alpha\";\r\n\r\n    /**\r\n     * 透明度\r\n     */\r\n    alpha: number;\r\n\r\n    /**@private */\r\n    static create(alpha: number): AlphaCmd {\r\n        var cmd: AlphaCmd = Pool.getItemByClass(\"AlphaCmd\", AlphaCmd);\r\n        cmd.alpha = alpha;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"AlphaCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.alpha(this.alpha);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return AlphaCmd.ID;\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制圆形\r\n */\r\nexport class DrawCircleCmd {\r\n    static ID: string = \"DrawCircle\";\r\n\r\n    /**\r\n     * 圆点X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 圆点Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 半径。\r\n     */\r\n    radius: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number): DrawCircleCmd {\r\n        var cmd: DrawCircleCmd = Pool.getItemByClass(\"DrawCircleCmd\", DrawCircleCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.radius = radius;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawCircleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawCircle(this.x * w + gx, this.y * h + gy, this.radius * Math.min(w, h) - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n        }\r\n        else\r\n            context._drawCircle(this.x + gx, this.y + gy, this.radius - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawCircleCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x - this.radius, this.y - this.radius, this.radius + this.radius, this.radius + this.radius, this.percent ? sp : null);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawCircleCmd\", DrawCircleCmd);\r\n","import { Bezier } from \"../../maths/Bezier\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制曲线\r\n */\r\nexport class DrawCurvesCmd {\r\n    static ID: string = \"DrawCurves\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 线段颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）线段宽度。\r\n     */\r\n    lineWidth: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawCurvesCmd {\r\n        var cmd: DrawCurvesCmd = Pool.getItemByClass(\"DrawCurvesCmd\", DrawCurvesCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawCurvesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.points)\r\n            context.drawCurves(this.x + gx, this.y + gy, this.points, this.lineColor, this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawCurvesCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Bezier.I.getBezierPoints(this.points);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawCurvesCmd\", DrawCurvesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制图片\r\n */\r\nexport class DrawImageCmd {\r\n    static ID: string = \"DrawImage\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n\r\n    /** （可选）绘图颜色 */\r\n    color: number = 0xffffffff;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, color: string): DrawImageCmd {\r\n        if (width == null) width = texture.sourceWidth;\r\n        if (height == null) height = texture.sourceHeight;\r\n\r\n        let wRate = width / texture.sourceWidth;\r\n        let hRate = height / texture.sourceHeight;\r\n        width = texture.width * wRate;\r\n        height = texture.height * hRate;\r\n\r\n        x += texture.offsetX * wRate;\r\n        y += texture.offsetY * hRate;\r\n\r\n        var cmd: DrawImageCmd = Pool.getItemByClass(\"DrawImageCmd\", DrawImageCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        Pool.recover(\"DrawImageCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            context.drawTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawImageCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制单条曲线\r\n */\r\nexport class DrawLineCmd {\r\n    static ID: string = \"DrawLine\";\r\n\r\n    /**\r\n     * X轴开始位置。\r\n     */\r\n    fromX: number;\r\n    /**\r\n     * Y轴开始位置。\r\n     */\r\n    fromY: number;\r\n    /**\r\n     * X轴结束位置。\r\n     */\r\n    toX: number;\r\n    /**\r\n     * Y轴结束位置。\r\n     */\r\n    toY: number;\r\n    /**\r\n     * 颜色。\r\n     */\r\n    lineColor: string;\r\n    /**\r\n     * （可选）线条宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number): DrawLineCmd {\r\n        var cmd: DrawLineCmd = Pool.getItemByClass(\"DrawLineCmd\", DrawLineCmd);\r\n        cmd.fromX = fromX;\r\n        cmd.fromY = fromY;\r\n        cmd.toX = toX;\r\n        cmd.toY = toY;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"DrawLineCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawLine(gx, gy, this.fromX * w + offset, this.fromY * h + offset, this.toX * w + offset, this.toY * h + offset, this.lineColor, this.lineWidth, 0);\r\n        }\r\n        else\r\n            context._drawLine(gx, gy, this.fromX + offset, this.fromY + offset, this.toX + offset, this.toY + offset, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawLineCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        _tempPoints.length = 0;\r\n        let lineWidth: number;\r\n        lineWidth = this.lineWidth * 0.5;\r\n\r\n        let fromX = this.fromX, fromY = this.fromY, toX = this.toX, toY = this.toY;\r\n        if (this.percent) {\r\n            fromX *= sp.width;\r\n            fromY *= sp.height;\r\n            toX *= sp.width;\r\n            toY *= sp.height;\r\n        }\r\n\r\n        if (fromX == toX) {\r\n            _tempPoints.push(fromX + lineWidth, fromY, toX + lineWidth, toY, fromX - lineWidth, fromY, toX - lineWidth, toY);\r\n        } else if (fromY == toY) {\r\n            _tempPoints.push(fromX, fromY + lineWidth, toX, toY + lineWidth, fromX, fromY - lineWidth, toX, toY - lineWidth);\r\n        } else {\r\n            _tempPoints.push(fromX, fromY, toX, toY);\r\n        }\r\n\r\n        return _tempPoints;\r\n    }\r\n}\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawLineCmd\", DrawLineCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制连续曲线\r\n */\r\nexport class DrawLinesCmd {\r\n    static ID: string = \"DrawLines\";\r\n\r\n    /**\r\n     * 开始绘制的X轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的Y轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 线段颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）线段宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawLinesCmd {\r\n        var cmd: DrawLinesCmd = Pool.getItemByClass(\"DrawLinesCmd\", DrawLinesCmd);\r\n        //TODO 线段需要缓存\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawLinesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\r\n        this.points && context._drawLines(this.x + offset + gx, this.y + offset + gy, this.points, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawLinesCmd.ID;\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawLinesCmd\", DrawLinesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 根据路径绘制矢量图形\r\n */\r\nexport class DrawPathCmd {\r\n    static ID: string = \"DrawPath\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\r\n     */\r\n    paths: any[] | null;\r\n    /**\r\n     * （可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\r\n     */\r\n    brush: any;\r\n    /**\r\n     * （可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\r\n     */\r\n    pen: any;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, paths: any[], brush: any, pen: any): DrawPathCmd {\r\n        var cmd: DrawPathCmd = Pool.getItemByClass(\"DrawPathCmd\", DrawPathCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.paths = paths;\r\n        cmd.brush = brush;\r\n        cmd.pen = pen;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.paths = null;\r\n        this.brush = null;\r\n        this.pen = null;\r\n        Pool.recover(\"DrawPathCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        this.paths && context._drawPath(this.x + gx, this.y + gy, this.paths, this.brush, this.pen);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPathCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let rst: any[] = _tempPoints;\r\n        rst.length = 0;\r\n        let paths = this.paths;\r\n        let len = paths.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let tCMD = paths[i];\r\n            if (tCMD.length > 1) {\r\n                rst.push(tCMD[1], tCMD[2]);\r\n                if (tCMD.length > 3) {\r\n                    rst.push(tCMD[3], tCMD[4]);\r\n                }\r\n            }\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawPathCmd\", DrawPathCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制扇形\r\n */\r\nexport class DrawPieCmd {\r\n    static ID: string = \"DrawPie\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 扇形半径。\r\n     */\r\n    radius: number = 0;\r\n\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    private _startAngle: number;\r\n    private _endAngle: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number): DrawPieCmd {\r\n        var cmd: DrawPieCmd = Pool.getItemByClass(\"DrawPieCmd\", DrawPieCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.radius = radius;\r\n        cmd._startAngle = startAngle;\r\n        cmd._endAngle = endAngle;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawPieCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        context._drawPie(this.x + offset + gx, this.y + offset + gy, this.radius - lineOffset, this._startAngle, this._endAngle, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPieCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * 开始角度。\r\n     */\r\n    get startAngle(): number {\r\n        return this._startAngle * 180 / Math.PI;\r\n    }\r\n\r\n    set startAngle(value: number) {\r\n        this._startAngle = value * Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * 结束角度。\r\n     */\r\n    get endAngle(): number {\r\n        return this._endAngle * 180 / Math.PI;\r\n    }\r\n\r\n    set endAngle(value: number) {\r\n        this._endAngle = value * Math.PI / 180;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let rst: any[] = _tempPoints;\r\n        _tempPoints.length = 0;\r\n        let k: number = Math.PI / 180;\r\n        let d1: number = this.endAngle - this.startAngle;\r\n        let x = this.x, y = this.y, radius = this.radius;\r\n        if (d1 >= 360 || d1 <= -360) {\r\n            // 如果满了一圈了\r\n            rst.push(x - radius, y - radius);\r\n            rst.push(x + radius, y - radius);\r\n            rst.push(x + radius, y + radius);\r\n            rst.push(x - radius, y + radius);\r\n            return rst;\r\n        }\r\n        // \r\n        rst.push(x, y);\t// 中心\r\n\r\n        var delta: number = d1 % 360;\r\n        if (delta < 0) delta += 360;\r\n\r\n        // 一定增加，且在360以内的end\r\n        var end1: number = this.startAngle + delta;\r\n\r\n        // 转成弧度\r\n        var st: number = this.startAngle * k;\r\n        var ed: number = end1 * k;\r\n\r\n        // 起点\r\n        rst.push(x + radius * Math.cos(st), y + radius * Math.sin(st));\r\n        // 终点\r\n        rst.push(x + radius * Math.cos(ed), y + radius * Math.sin(ed));\r\n\r\n        // 圆形的四个边界点\r\n        // 按照90度对齐，看看会经历几个90度\r\n        var s1: number = Math.ceil(this.startAngle / 90) * 90;\t//开始的。start的下一个90度\r\n        var s2: number = Math.floor(end1 / 90) * 90;\t\t//结束。end的上一个90度\r\n        for (var cs: number = s1; cs <= s2; cs += 90) {\r\n            var csr: number = cs * k;\r\n            rst.push(x + radius * Math.cos(csr), y + radius * Math.sin(csr));\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawPieCmd\", DrawPieCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制多边形\r\n */\r\nexport class DrawPolyCmd {\r\n    static ID: string = \"DrawPoly\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 多边形的点集合。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * 可选）边框宽度。\r\n     */\r\n    lineWidth: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number): DrawPolyCmd {\r\n        var cmd: DrawPolyCmd = Pool.getItemByClass(\"DrawPolyCmd\", DrawPolyCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawPolyCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let isConvexPolygon = this.points.length <= 6;\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? (this.lineWidth % 2 === 0 ? 0 : 0.5) : 0;\r\n        this.points && context._drawPoly(this.x + offset + gx, this.y + offset + gy, this.points, this.fillColor, this.lineColor, this.lineWidth, isConvexPolygon, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPolyCmd.ID;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawPolyCmd\", DrawPolyCmd);","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制矩形\r\n */\r\nexport class DrawRectCmd {\r\n    static ID: string = \"DrawRect\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 矩形宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 矩形高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRectCmd {\r\n        var cmd: DrawRectCmd = Pool.getItemByClass(\"DrawRectCmd\", DrawRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawRectCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context.drawRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else\r\n            context.drawRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawRectCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null)\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawRectCmd\", DrawRectCmd);\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from '../../utils/ColorUtils';\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * 绘制单个贴图\r\n */\r\nexport class DrawTextureCmd {\r\n    static ID: string = \"DrawTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * （可选）矩阵信息。\r\n     */\r\n    matrix: Matrix | null;\r\n    /**\r\n     * （可选）透明度。\r\n     */\r\n    alpha: number;\r\n    /**\r\n     * （可选）颜色滤镜。\r\n     */\r\n    color: number = 0xffffffff;\r\n    /**\r\n     * （可选）混合模式。\r\n     */\r\n    blendMode: string | null;\r\n\r\n    uv: number[] | null = null;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, matrix: Matrix | null, alpha: number, color: string | null, blendMode: string | null, uv?: number[]): DrawTextureCmd {\r\n        if (width == null) width = texture.sourceWidth;\r\n        if (height == null) height = texture.sourceHeight;\r\n\r\n        let wRate = width / texture.sourceWidth;\r\n        let hRate = height / texture.sourceHeight;\r\n        width = texture.width * wRate;\r\n        height = texture.height * hRate;\r\n\r\n        x += texture.offsetX * wRate;\r\n        y += texture.offsetY * hRate;\r\n\r\n        var cmd: DrawTextureCmd = Pool.getItemByClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.blendMode = blendMode;\r\n        cmd.uv = uv || null;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        this.texture && context.drawTextureWithTransform(this.texture, this.x, this.y, this.width, this.height, this.matrix, gx, gy, this.alpha, this.blendMode, this.uv, this.color);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTextureCmd.ID;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n","import { Point } from \"../../maths/Point\"\r\nimport { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * 填充贴图\r\n */\r\nexport class FillTextureCmd {\r\n    static ID: string = \"FillTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * （可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\r\n     */\r\n    type?: string;\r\n    /**\r\n     * （可选）贴图纹理偏移\r\n     */\r\n    offset?: Point;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /** （可选）绘图颜色 */\r\n    color: number = 0xffffffff;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: string): FillTextureCmd {\r\n        var cmd: FillTextureCmd = Pool.getItemByClass(\"FillTextureCmd\", FillTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.type = type;\r\n        cmd.offset = offset;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        this.offset = null;\r\n        Pool.recover(\"FillTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            if (this.percent && context.sprite) {\r\n                let w = context.sprite.width;\r\n                let h = context.sprite.height;\r\n                context.fillTexture(this.texture, this.x * w + gx, this.y * h + gy, this.width * w, this.height * h, this.type, this.offset || Point.EMPTY, this.color);\r\n            }\r\n            else\r\n                context.fillTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.type, this.offset || Point.EMPTY, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return FillTextureCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        if (this.width && this.height)\r\n            return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\r\n        else\r\n            return Rectangle._getBoundPointS(this.x, this.y, this.texture.width, this.texture.height);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"FillTextureCmd\", FillTextureCmd);\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 恢复命令，和save配套使用\r\n */\r\nexport class RestoreCmd {\r\n    static ID: string = \"Restore\";\r\n\r\n\r\n\r\n    /**@private */\r\n    static create(): RestoreCmd {\r\n        var cmd: RestoreCmd = Pool.getItemByClass(\"RestoreCmd\", RestoreCmd);\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"RestoreCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.restore();\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return RestoreCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 旋转命令\r\n */\r\nexport class RotateCmd {\r\n    static ID: string = \"Rotate\";\r\n\r\n    /**\r\n     * 旋转角度，以弧度计。\r\n     */\r\n    angle: number;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(angle: number, pivotX: number, pivotY: number): RotateCmd {\r\n        var cmd: RotateCmd = Pool.getItemByClass(\"RotateCmd\", RotateCmd);\r\n        cmd.angle = angle;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"RotateCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._rotate(this.angle, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return RotateCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n/**\r\n * 缩放命令\r\n */\r\nexport class ScaleCmd {\r\n    static ID: string = \"Scale\";\r\n\r\n    /**\r\n     * 水平方向缩放值。\r\n     */\r\n    scaleX: number;\r\n    /**\r\n     * 垂直方向缩放值。\r\n     */\r\n    scaleY: number;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(scaleX: number, scaleY: number, pivotX: number, pivotY: number): ScaleCmd {\r\n        var cmd: ScaleCmd = Pool.getItemByClass(\"ScaleCmd\", ScaleCmd);\r\n        cmd.scaleX = scaleX;\r\n        cmd.scaleY = scaleY;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"ScaleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._scale(this.scaleX, this.scaleY, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return ScaleCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 矩阵命令\r\n */\r\nexport class TransformCmd {\r\n    static ID: string = \"Transform\";\r\n\r\n    /**\r\n     * 矩阵。\r\n     */\r\n    matrix: Matrix;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(matrix: Matrix, pivotX: number, pivotY: number): TransformCmd {\r\n        var cmd: TransformCmd = Pool.getItemByClass(\"TransformCmd\", TransformCmd);\r\n        cmd.matrix = matrix;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.matrix = null;\r\n        Pool.recover(\"TransformCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._transform(this.matrix, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return TransformCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n/**\r\n * 位移命令\r\n */\r\nexport class TranslateCmd {\r\n    static ID: string = \"Translate\";\r\n\r\n    /**\r\n     * 添加到水平坐标（x）上的值。\r\n     */\r\n    tx: number;\r\n    /**\r\n     * 添加到垂直坐标（y）上的值。\r\n     */\r\n    ty: number;\r\n\r\n    /**@private */\r\n    static create(tx: number, ty: number): TranslateCmd {\r\n        var cmd: TranslateCmd = Pool.getItemByClass(\"TranslateCmd\", TranslateCmd);\r\n        cmd.tx = tx;\r\n        cmd.ty = ty;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"TranslateCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.translate(this.tx, this.ty);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return TranslateCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制三角形命令\r\n */\r\nexport class DrawTrianglesCmd {\r\n    static ID: string = \"DrawTriangles\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 顶点数组。\r\n     */\r\n    vertices: Float32Array;\r\n    /**\r\n     * UV数据。\r\n     */\r\n    uvs: Float32Array;\r\n    /**\r\n     * 顶点索引。\r\n     */\r\n    indices: Uint16Array;\r\n    /**\r\n     * 缩放矩阵。\r\n     */\r\n    matrix: Matrix | null;\r\n    /**\r\n     * alpha\r\n     */\r\n    alpha: number;\r\n    //public var color:String;\r\n    /**\r\n     * blend模式\r\n     */\r\n    blendMode: string | null;\r\n    /**\r\n     * 颜色变换\r\n     */\r\n    color: number | null;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array,\r\n        matrix: Matrix | null, alpha: number, color: string | number, blendMode: string | null): DrawTrianglesCmd {\r\n        var cmd: DrawTrianglesCmd = Pool.getItemByClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);\r\n        cmd.texture = texture;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.vertices = vertices;\r\n        cmd.uvs = uvs;\r\n        cmd.indices = indices;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        cmd.blendMode = blendMode;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture = null;\r\n        this.vertices = null;\r\n        this.uvs = null;\r\n        this.indices = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTrianglesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawTriangles(this.texture, this.x + gx, this.y + gy, this.vertices, this.uvs, this.indices, this.matrix, this.alpha, this.blendMode, this.color);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTrianglesCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let vert = this.vertices;\r\n        var vnum = vert.length;\r\n        if (vnum < 2) return [];\r\n        var minx = vert[0];\r\n        var miny = vert[1];\r\n        var maxx = minx;\r\n        var maxy = miny;\r\n        for (var i = 2; i < vnum;) {\r\n            var cx = vert[i++];\r\n            var cy = vert[i++];\r\n            if (minx > cx) minx = cx;\r\n            if (miny > cy) miny = cy;\r\n            if (maxx < cx) maxx = cx;\r\n            if (maxy < cy) maxy = cy;\r\n        }\r\n\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制带九宫格信息的图片\r\n * @internal\r\n */\r\nexport class Draw9GridTextureCmd {\r\n    static ID: string = \"Draw9GridTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n\r\n    sizeGrid: number[];\r\n\r\n    color: number = 0xffffffff;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, sizeGrid: number[], percent: boolean = false, color: string | null = null): Draw9GridTextureCmd {\r\n        let cmd: Draw9GridTextureCmd = Pool.getItemByClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.sizeGrid = sizeGrid;\r\n        cmd.percent = percent;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture._removeReference();\r\n        Pool.recover(\"Draw9GridTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            let sizeGrid = this.sizeGrid || this.texture._sizeGrid || EMPTY_SIZE_GRID;\r\n            if (this.percent && context.sprite) {\r\n                let w = context.sprite.width;\r\n                let h = context.sprite.height;\r\n                context.drawTextureWithSizeGrid(this.texture, this.x * w, this.y * h, this.width * w, this.height * h, sizeGrid, gx, gy, this.color);\r\n            }\r\n            else\r\n                context.drawTextureWithSizeGrid(this.texture, this.x, this.y, this.width, this.height, sizeGrid, gx, gy, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return Draw9GridTextureCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let minx = this.x;\r\n        let miny = this.y;\r\n        let maxx = this.width;\r\n        let maxy = this.height;\r\n        if (this.percent) {\r\n            minx *= sp.width;\r\n            miny *= sp.height;\r\n            maxx *= sp.width;\r\n            maxy *= sp.height;\r\n        }\r\n\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n}\r\n\r\nconst EMPTY_SIZE_GRID = [0, 0, 0, 0, 0];\r\nClassUtils.regClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 存储命令，和restore配套使用\r\n */\r\nexport class SaveCmd {\r\n    static ID: string = \"Save\";\r\n\r\n\r\n\r\n    /**@private */\r\n    static create(): SaveCmd {\r\n        var cmd: SaveCmd = Pool.getItemByClass(\"SaveCmd\", SaveCmd);\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"SaveCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.save();\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return SaveCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { AlphaCmd } from \"./cmd/AlphaCmd\"\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\r\nimport { RotateCmd } from \"./cmd/RotateCmd\"\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\r\nimport { TransformCmd } from \"./cmd/TransformCmd\"\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\r\nimport { GrahamScan } from \"../maths/GrahamScan\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { Graphics } from \"./Graphics\";\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\";\r\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\";\r\nimport { SaveCmd } from \"./cmd/SaveCmd\"\r\n\r\nconst _tempMatrix: Matrix = new Matrix();\r\nconst _initMatrix: Matrix = new Matrix();\r\nconst _tempMatrixArrays: any[] = [];\r\n\r\n/**\r\n * @private\r\n * Graphic bounds数据类\r\n */\r\nexport class GraphicsBounds {\r\n    /**@private */\r\n    private _temp: number[];\r\n    /**@private */\r\n    private _bounds: Rectangle;\r\n    /**@private */\r\n    private _rstBoundPoints: number[];\r\n    /**@private */\r\n    private _cacheBoundsType: boolean = false;\r\n    /**@internal */\r\n    _graphics: Graphics;\r\n    /**@internal */\r\n    _affectBySize: boolean;\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy(): void {\r\n        this._graphics = null;\r\n        this._cacheBoundsType = false;\r\n        if (this._temp) this._temp.length = 0;\r\n        if (this._rstBoundPoints) this._rstBoundPoints.length = 0;\r\n        if (this._bounds) this._bounds.recover();\r\n        this._bounds = null;\r\n        Pool.recover(\"GraphicsBounds\", this);\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): GraphicsBounds {\r\n        return Pool.getItemByClass(\"GraphicsBounds\", GraphicsBounds);\r\n    }\r\n\r\n    /**\r\n     * 重置数据\r\n     */\r\n    reset(): void {\r\n        this._temp && (this._temp.length = 0);\r\n    }\r\n\r\n    /**\r\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\r\n     */\r\n    getBounds(realSize: boolean = false): Rectangle {\r\n        if (!this._bounds || !this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType) {\r\n            this._bounds = Rectangle._getWrapRec(this.getBoundPoints(realSize), this._bounds)\r\n        }\r\n        this._cacheBoundsType = realSize;\r\n        return this._bounds;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * 获取端点列表。\r\n     */\r\n    getBoundPoints(realSize: boolean = false): any[] {\r\n        if (!this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType)\r\n            this._temp = this._getCmdPoints(realSize);\r\n        this._cacheBoundsType = realSize;\r\n        return this._rstBoundPoints = Utils.copyArray(this._rstBoundPoints, this._temp);\r\n    }\r\n\r\n    private _getCmdPoints(realSize: boolean = false): any[] {\r\n        let cmds = this._graphics.cmds;\r\n        let sp = this._graphics._sp;\r\n        this._affectBySize = false;\r\n\r\n        let rst = this._temp || (this._temp = []);\r\n        rst.length = 0;\r\n        if (cmds.length == 0) return rst;\r\n\r\n        let matrixs: any[] = _tempMatrixArrays;\r\n        matrixs.length = 0;\r\n        let tMatrix: Matrix = _initMatrix;\r\n        tMatrix.identity();\r\n        let tempMatrix: Matrix = _tempMatrix;\r\n        for (let i = 0, n = cmds.length; i < n; i++) {\r\n            let cmd = cmds[i];\r\n            if (cmd.percent)\r\n                this._affectBySize = true;\r\n            switch (cmd.cmdID) {\r\n                case AlphaCmd.ID:\r\n                case SaveCmd.ID:\r\n                    matrixs.push(tMatrix);\r\n                    tMatrix = tMatrix.clone();\r\n                    break;\r\n                case RestoreCmd.ID: //restore\r\n                    tMatrix = matrixs.pop();\r\n                    break;\r\n                case ScaleCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.scale(cmd.scaleX, cmd.scaleY);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case RotateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.rotate(cmd.angle);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TranslateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(cmd.tx, cmd.ty);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TransformCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.concat(cmd.matrix);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case DrawImageCmd.ID:\r\n                case FillTextureCmd.ID:\r\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\r\n                    break;\r\n                case DrawTextureCmd.ID:\r\n                    tMatrix.copyTo(tempMatrix);\r\n                    if (cmd.matrix)\r\n                        tempMatrix.concat(cmd.matrix);\r\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tempMatrix);\r\n                    break;\r\n                case DrawRectCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawRectCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawCircleCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawCircleCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawLineCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawLineCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawCurvesCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawCurvesCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawLinesCmd.ID:\r\n                case DrawPolyCmd.ID:\r\n                    addPointArrToRst(rst, cmd.points, tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPathCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawPathCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPieCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawPieCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawTrianglesCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawTrianglesCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case Draw9GridTextureCmd.ID:\r\n                    addPointArrToRst(rst, (<Draw9GridTextureCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n            }\r\n        }\r\n        if (rst.length > 200) {\r\n            rst = Utils.copyArray(rst, Rectangle._getWrapRec(rst)._getBoundPoints());\r\n        } else if (rst.length > 8)\r\n            rst = GrahamScan.scanPList(rst);\r\n        return rst;\r\n    }\r\n\r\n    private _switchMatrix(tMatix: Matrix, tempMatrix: Matrix): void {\r\n        tempMatrix.concat(tMatix);\r\n        tempMatrix.copyTo(tMatix);\r\n    }\r\n}\r\n\r\nfunction addPointArrToRst(rst: any[], points: any[], matrix: Matrix, dx: number = 0, dy: number = 0): void {\r\n    let len = points.length;\r\n    for (let i = 0; i < len; i += 2) {\r\n        addPointToRst(rst, points[i] + dx, points[i + 1] + dy, matrix);\r\n    }\r\n}\r\n\r\nfunction addPointToRst(rst: any[], x: number, y: number, matrix: Matrix): void {\r\n    var _tempPoint: Point = Point.TEMP;\r\n    _tempPoint.setTo(x ? x : 0, y ? y : 0);\r\n    matrix.transformPoint(_tempPoint);\r\n    rst.push(_tempPoint.x, _tempPoint.y);\r\n}","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 裁剪命令\r\n */\r\nexport class ClipRectCmd {\r\n    static ID: string = \"ClipRect\";\r\n\r\n\r\n    /**\r\n     * X 轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y 轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 高度。\r\n     */\r\n    height: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number): ClipRectCmd {\r\n        var cmd: ClipRectCmd = Pool.getItemByClass(\"ClipRectCmd\", ClipRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"ClipRectCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.clipRect(this.x + gx, this.y + gy, this.width, this.height);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return ClipRectCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 根据坐标集合绘制多个贴图\r\n */\r\nexport class DrawTexturesCmd {\r\n    static ID: string = \"DrawTextures\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * 绘制次数和坐标。\r\n     */\r\n    pos: ArrayLike<number>;\r\n\r\n    /** 附加顶点色 */\r\n    colors: number[];\r\n\r\n    /**@private */\r\n    static create(texture: Texture, pos: any[], colors: number[]): DrawTexturesCmd {\r\n        var cmd: DrawTexturesCmd = Pool.getItemByClass(\"DrawTexturesCmd\", DrawTexturesCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.pos = pos;\r\n        cmd.colors = colors || [];\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture._removeReference();\r\n        this.texture = null;\r\n        this.pos = null;\r\n        Pool.recover(\"DrawTexturesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawTextures(this.texture, this.pos, gx, gy, this.colors);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTexturesCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\";\r\nimport { FontInfo } from \"../../utils/FontInfo\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { WordText } from \"../../utils/WordText\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Const } from \"../../Const\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Config } from \"../../../Config\";\r\n\r\n/**\r\n * 绘制文字\r\n */\r\nexport class FillTextCmd {\r\n    static ID: string = \"FillText\";\r\n\r\n    /**\r\n     * 开始绘制文本的 x 坐标位置（相对于画布）。\r\n     */\r\n    x: number = 0;\r\n    /**\r\n     * 开始绘制文本的 y 坐标位置（相对于画布）。\r\n     */\r\n    y: number = 0;\r\n\r\n    private _text: string;\r\n    private _wordText: WordText;\r\n    private _font: string;\r\n    private _color: string;\r\n    private _strokeColor: string = '#000000';\r\n    private _stroke: number;\r\n    private _align: number;\r\n    private _fontObj: FontInfo;\r\n\r\n    \r\n    set text(value: string) {\r\n        this._text = value;\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    set strokeColor(value: string) {\r\n        this._strokeColor = value;\r\n    }\r\n    get strokeColor() {\r\n        return this._strokeColor;\r\n    }\r\n    set stroke(value: number) {\r\n        this._stroke = value;\r\n    }\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n    set align(value: number) {\r\n        this._align = value;\r\n    }\r\n    get align() {\r\n        return this._align;\r\n    }\r\n\r\n\r\n    static create(text: string | WordText | null, x: number, y: number, font: string, color: string | null, align: string, stroke: number, strokeColor: string | null): FillTextCmd {\r\n        var cmd: FillTextCmd = Pool.getItemByClass(\"FillTextCmd\", FillTextCmd);\r\n        cmd._text = null;\r\n        cmd._wordText = null;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.font = font;\r\n        cmd.color = color;\r\n        cmd._stroke = stroke;\r\n        cmd._strokeColor = strokeColor;\r\n\r\n        switch (align) {\r\n            case 'center':\r\n                cmd._align = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                cmd._align = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n            default:\r\n                cmd._align = Const.ENUM_TEXTALIGN_DEFAULT;\r\n        }\r\n\r\n        if (text instanceof WordText) {\r\n            cmd._wordText = text;\r\n            text.cleanCache();\r\n        }\r\n        else\r\n            cmd._text = text;\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"FillTextCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (ILaya.stage.isGlobalRepaint()) {\r\n            this._wordText && this._wordText.cleanCache();\r\n        }\r\n        if (null == this._text) this._text = '';\r\n        if (null == this._fontObj) {\r\n            this.font = null;\r\n        }\r\n        if (null == this._color) {\r\n            this._color = '#ffffff';\r\n        }\r\n\r\n        context._fast_filltext(this._wordText || this._text, this.x + gx, this.y + gy, this._fontObj, this._color, this._strokeColor, this._stroke, this._align);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return FillTextCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * 定义字号和字体，比如\"20px Arial\"。\r\n     */\r\n    get font(): string {\r\n        return this._font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._font = value;\r\n        if (!value)\r\n            value = Config.defaultFontSize + \"px \" + Config.defaultFont;\r\n        this._fontObj = FontInfo.parse(value);\r\n        this._wordText && this._wordText.cleanCache();\r\n    }\r\n\r\n    /**\r\n     * 定义文本颜色，比如\"#ff0000\"。\r\n     */\r\n    get color(): string {\r\n        return this._color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._color = value;\r\n        this._wordText && this._wordText.cleanCache();\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"FillTextCmd\", FillTextCmd);","import { ILaya } from \"./../../ILaya\";\r\n/**\r\n * @private\r\n * 对象缓存统一管理类\r\n */\r\nexport class CacheManger {\r\n    //TODO:\r\n    /**\r\n     * 单次清理检测允许执行的时间，单位ms。\r\n     */\r\n    static loopTimeLimit: number = 2;\r\n    /**\r\n     * @private\r\n     */\r\n    private static _cacheList: any[] = [];\r\n    /**\r\n     * @private\r\n     * 当前检测的索引\r\n     */\r\n    private static _index: number = 0;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注册cache管理函数\r\n     * @param disposeFunction 释放函数 fun(force:Boolean)\r\n     * @param getCacheListFunction 获取cache列表函数fun():Array\r\n     *\r\n     */\r\n    static regCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\r\n        CacheManger.unRegCacheByFunction(disposeFunction, getCacheListFunction);\r\n        var cache: any;\r\n        cache = { tryDispose: disposeFunction, getCacheList: getCacheListFunction };\r\n        CacheManger._cacheList.push(cache);\r\n    }\r\n\r\n    /**\r\n     * 移除cache管理函数\r\n     * @param disposeFunction 释放函数 fun(force:Boolean)\r\n     * @param getCacheListFunction 获取cache列表函数fun():Array\r\n     *\r\n     */\r\n    static unRegCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\r\n        var i: number, len: number;\r\n        len = CacheManger._cacheList.length;\r\n        for (i = 0; i < len; i++) {\r\n            if (CacheManger._cacheList[i].tryDispose == disposeFunction && CacheManger._cacheList[i].getCacheList == getCacheListFunction) {\r\n                CacheManger._cacheList.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 强制清理所有管理器\r\n     *\r\n     */\r\n    //TODO:coverage\r\n    static forceDispose(): void {\r\n        var i: number, len: number = CacheManger._cacheList.length;\r\n        for (i = 0; i < len; i++) {\r\n            CacheManger._cacheList[i].tryDispose(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始检测循环\r\n     * @param waitTime 检测间隔时间\r\n     *\r\n     */\r\n    static beginCheck(waitTime: number = 15000): void {\r\n        ILaya.systemTimer.loop(waitTime, null, CacheManger._checkLoop);\r\n    }\r\n\r\n    /**\r\n     * 停止检测循环\r\n     *\r\n     */\r\n    //TODO:coverage\r\n    static stopCheck(): void {\r\n        ILaya.systemTimer.clear(null, CacheManger._checkLoop);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 检测函数\r\n     */\r\n    private static _checkLoop(): void {\r\n        var cacheList: any[] = CacheManger._cacheList;\r\n        if (cacheList.length < 1) return;\r\n        var tTime: number = ILaya.Browser.now();\r\n        var count: number;\r\n        var len: number;\r\n        len = count = cacheList.length;\r\n        while (count > 0) {\r\n            CacheManger._index++;\r\n            CacheManger._index = CacheManger._index % len;\r\n            cacheList[CacheManger._index].tryDispose(false);\r\n            if (ILaya.Browser.now() - tTime > CacheManger.loopTimeLimit) break;\r\n            count--;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { CacheManger } from \"./CacheManger\"\r\n\r\n/**\r\n * @private\r\n * TODO:\r\n */\r\nexport class VectorGraphManager {\r\n    //TODO:\r\n    static instance: VectorGraphManager;\r\n\r\n    useDic: any = {};\r\n    shapeDic: any = {};\r\n    shapeLineDic: any = {};\r\n\r\n    private _id: number = 0;\r\n    private _checkKey: boolean = false;\r\n    private _freeIdArray: any[] = [];\r\n\r\n    constructor() {\r\n        CacheManger.regCacheByFunction(this.startDispose.bind(this), this.getCacheList.bind(this));\r\n    }\r\n\r\n    static getInstance(): VectorGraphManager {\r\n        return VectorGraphManager.instance = VectorGraphManager.instance || new VectorGraphManager();\r\n    }\r\n\r\n    /**\r\n     * 得到个空闲的ID\r\n     * @return\r\n     */\r\n    getId(): number {\r\n        //if (_freeIdArray.length > 0) {\r\n        //return _freeIdArray.pop();\r\n        //}\r\n        return this._id++;\r\n    }\r\n\r\n    /**\r\n     * 添加一个图形到列表中\r\n     * @param\tid\r\n     * @param\tshape\r\n     */\r\n    addShape(id: number, shape: any): void {\r\n        this.shapeDic[id] = shape;\r\n        if (!this.useDic[id]) {\r\n            this.useDic[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加一个线图形到列表中\r\n     * @param\tid\r\n     * @param\tLine\r\n     */\r\n    addLine(id: number, Line: any): void {\r\n        this.shapeLineDic[id] = Line;\r\n        if (!this.shapeLineDic[id]) {\r\n            this.shapeLineDic[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检测一个对象是否在使用中\r\n     * @param\tid\r\n     */\r\n    getShape(id: number): void {\r\n        if (this._checkKey) {\r\n            if (this.useDic[id] != null) {\r\n                this.useDic[id] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除一个图形对象\r\n     * @param\tid\r\n     */\r\n    deleteShape(id: number): void {\r\n        if (this.shapeDic[id]) {\r\n            this.shapeDic[id] = null;\r\n            delete this.shapeDic[id];\r\n        }\r\n        if (this.shapeLineDic[id]) {\r\n            this.shapeLineDic[id] = null;\r\n            delete this.shapeLineDic[id];\r\n        }\r\n        if (this.useDic[id] != null) {\r\n            delete this.useDic[id];\r\n        }\r\n        //_freeIdArray.push(id);\r\n    }\r\n\r\n    /**\r\n     * 得到缓存列表\r\n     * @return\r\n     */\r\n    getCacheList(): any[] {\r\n        var str: any;\r\n        var list: any[] = [];\r\n        for (str in this.shapeDic) {\r\n            list.push(this.shapeDic[str]);\r\n        }\r\n        for (str in this.shapeLineDic) {\r\n            list.push(this.shapeLineDic[str]);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * 开始清理状态，准备销毁\r\n     */\r\n    startDispose(key: boolean): void {\r\n        var str: any;\r\n        for (str in this.useDic) {\r\n            this.useDic[str] = false;\r\n        }\r\n        this._checkKey = true;\r\n    }\r\n\r\n    /**\r\n     * 确认销毁\r\n     */\r\n    endDispose(): void {\r\n        if (this._checkKey) {\r\n            var str: any;\r\n            for (str in this.useDic) {\r\n                if (!this.useDic[str]) {\r\n                    this.deleteShape(str);\r\n                }\r\n            }\r\n            this._checkKey = false;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\nexport class DrawEllipseCmd {\r\n    static ID: string = \"DrawEllipse\";\r\n    /**\r\n     * 圆点X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 圆点Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 横向半径。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 纵向半径。\r\n     */\r\n    height: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawEllipseCmd {\r\n        var cmd = Pool.getItemByClass(\"DrawEllipseCmd\", DrawEllipseCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawEllipseCmd\", this);\r\n    }\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawEllipse(this.x * w + gx, this.y * h + gy, this.width * w - offset, this.height * h - offset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else {\r\n            context._drawEllipse(this.x + gx, this.y + gy, this.width - offset, this.height - offset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n    }\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawEllipseCmd.ID;\r\n    }\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x - this.width, this.y - this.height, this.width * 2, this.height * 2, this.percent ? sp : null);\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawEllipseCmd\", DrawEllipseCmd);","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\nexport class DrawRoundRectCmd {\r\n    static ID: string = \"DrawRoundRect\";\r\n    /**\r\n     * 圆点X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 圆点Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 横向半径。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 纵向半径。\r\n     */\r\n    height: number;\r\n    /**\r\n     * 左上圆角\r\n     */\r\n    lt: number;\r\n    /**\r\n     * 右上圆角\r\n     */\r\n    rt: number;\r\n    /**\r\n     * 左下圆角\r\n     */\r\n    lb: number;\r\n    /**\r\n     * 右下圆角\r\n     */\r\n    rb: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRoundRectCmd {\r\n        var cmd = Pool.getItemByClass(\"DrawRoundRectCmd\", DrawRoundRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.lt = lt;\r\n        cmd.rt = rt;\r\n        cmd.lb = lb;\r\n        cmd.rb = rb;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawRoundRectCmd\", this);\r\n    }\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawRoundRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.lt, this.rt, this.lb, this.rb, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else {\r\n            context._drawRoundRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.lt, this.rt, this.lb, this.rb, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n    }\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawRoundRectCmd.ID;\r\n    }\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawRoundRectCmd\", DrawRoundRectCmd);","import { Sprite } from \"./Sprite\";\r\nimport { GraphicsBounds } from \"./GraphicsBounds\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { AlphaCmd } from \"./cmd/AlphaCmd\"\r\nimport { ClipRectCmd } from \"./cmd/ClipRectCmd\"\r\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\"\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\r\nimport { DrawTexturesCmd } from \"./cmd/DrawTexturesCmd\"\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\"\r\nimport { FillTextCmd } from \"./cmd/FillTextCmd\"\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\r\nimport { RotateCmd } from \"./cmd/RotateCmd\"\r\nimport { SaveCmd } from \"./cmd/SaveCmd\"\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\r\nimport { TransformCmd } from \"./cmd/TransformCmd\"\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\";\r\nimport type { Material } from \"../resource/Material\";\r\nimport { CommandUniformMap } from \"../RenderEngine/CommandUniformMap\";\r\nimport { ShaderDataType } from \"../RenderEngine/RenderShader/ShaderData\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { DrawEllipseCmd } from \"./cmd/DrawEllipseCmd\";\r\nimport { DrawRoundRectCmd } from \"./cmd/DrawRoundRectCmd\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>Graphics</code> 类用于创建绘图显示对象。Graphics可以同时绘制多个位图或者矢量图，还可以结合save，restore，transform，scale，rotate，translate，alpha等指令对绘图效果进行变化。\r\n * Graphics以命令流方式存储，可以通过cmds属性访问所有命令流。Graphics是比Sprite更轻量级的对象，合理使用能提高应用性能(比如把大量的节点绘图改为一个节点的Graphics命令集合，能减少大量节点创建消耗)。\r\n * @see laya.display.Sprite#graphics\r\n */\r\nexport class Graphics {\r\n\r\n    /**\r\n     * add global Uniform Data Map\r\n     * @param propertyID \r\n     * @param propertyKey \r\n     * @param uniformtype \r\n     */\r\n    static add2DGlobalUniformData(propertyID: number, propertyKey: string, uniformtype: ShaderDataType) {\r\n        let sceneUniformMap: CommandUniformMap = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2DGlobal\");\r\n        sceneUniformMap.addShaderUniform(propertyID, propertyKey, uniformtype);\r\n    }\r\n\r\n    /**\r\n     * get global shaderData\r\n     */\r\n    static get globalShaderData() {\r\n        return Value2D.globalShaderData;\r\n    }\r\n\r\n    /**@internal */\r\n    _sp: Sprite | null = null;\r\n    /**@internal */\r\n    _render: (sprite: Sprite, context: Context, x: number, y: number) => void = this._renderEmpty;\r\n    /**@private */\r\n    private _cmds: any[] = [];\r\n    /**@private */\r\n    protected _vectorgraphArray: any[] | null = null;\r\n    /**@private */\r\n    private _graphicBounds: GraphicsBounds | null = null;\r\n\r\n    private _material: Material;\r\n\r\n    constructor() {\r\n        this._createData();\r\n    }\r\n\r\n    /**@internal */\r\n    _createData(): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _clearData(): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _destroyData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>销毁此对象。</p>\r\n     */\r\n    destroy(): void {\r\n        this.clear(true);\r\n        if (this._graphicBounds) this._graphicBounds.destroy();\r\n        this._graphicBounds = null;\r\n        this._vectorgraphArray = null;\r\n        if (this._sp) {\r\n            this._sp._renderType = 0;\r\n            this._sp = null;\r\n        }\r\n        this._destroyData();\r\n    }\r\n\r\n    /**\r\n     * <p>清空绘制命令。</p>\r\n     * @param recoverCmds 是否回收绘图指令数组，设置为true，则对指令数组进行回收以节省内存开销，建议设置为true进行回收，但如果手动引用了数组，不建议回收\r\n     */\r\n    clear(recoverCmds: boolean = true): void {\r\n        //TODO:内存回收all\r\n        if (recoverCmds) {\r\n            for (let i = 0, len = this._cmds.length; i < len; i++) {\r\n                this._cmds[i].recover();\r\n            }\r\n        }\r\n\r\n        this._cmds.length = 0;\r\n        this._render = this._renderEmpty;\r\n        this._clearData();\r\n        if (this._sp) {\r\n            this._sp._renderType &= ~SpriteConst.GRAPHICS;\r\n        }\r\n        this._repaint();\r\n        if (this._vectorgraphArray) {\r\n            for (let i = 0, len = this._vectorgraphArray.length; i < len; i++) {\r\n                VectorGraphManager.getInstance().deleteShape(this._vectorgraphArray[i]);\r\n            }\r\n            this._vectorgraphArray.length = 0;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    _clearBoundsCache(onSizeChanged?: boolean): void {\r\n        if (this._graphicBounds) {\r\n            if (!onSizeChanged || this._graphicBounds._affectBySize)\r\n                this._graphicBounds.reset();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _initGraphicBounds(): void {\r\n        if (!this._graphicBounds) {\r\n            this._graphicBounds = GraphicsBounds.create();\r\n            this._graphicBounds._graphics = this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 重绘此对象。\r\n     */\r\n    _repaint(): void {\r\n        this._clearBoundsCache();\r\n        this._sp && this._sp.repaint();\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _isOnlyOne(): boolean {\r\n        return this._cmds.length === 1;\r\n    }\r\n\r\n    /**\r\n     * 命令流。存储了所有绘制命令。\r\n     */\r\n    get cmds() {\r\n        return this._cmds;\r\n    }\r\n\r\n    set cmds(value) {\r\n        if (this._sp) {\r\n            this._sp._renderType |= SpriteConst.GRAPHICS;\r\n        }\r\n\r\n        this._cmds = value;\r\n\r\n        let len = value.length;\r\n        this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\r\n        this._repaint();\r\n    }\r\n\r\n    /**\r\n     * 保存到命令流。\r\n     */\r\n    addCmd(cmd: any): any {\r\n        if (cmd == null) {\r\n            console.warn(\"null cmd\");\r\n            return;\r\n        }\r\n\r\n        if (this._sp) {\r\n            this._sp._renderType |= SpriteConst.GRAPHICS;\r\n        }\r\n        this._cmds.push(cmd);\r\n        this._render = this._cmds.length === 1 ? this._renderOne : this._renderAll;\r\n        this._repaint();\r\n        return cmd;\r\n    }\r\n\r\n    removeCmd(cmd: any) {\r\n        let i = this.cmds.indexOf(cmd);\r\n        if (i != -1) {\r\n            this._cmds.splice(i, 1);\r\n\r\n            let len = this._cmds.length;\r\n            this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\r\n            this._repaint();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\r\n     */\r\n    getBounds(realSize: boolean = false): Rectangle {\r\n        this._initGraphicBounds();\r\n        return this._graphicBounds!.getBounds(realSize);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * 获取端点列表。\r\n     */\r\n    getBoundPoints(realSize: boolean = false): any[] {\r\n        this._initGraphicBounds();\r\n        return this._graphicBounds!.getBoundPoints(realSize);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get material() {\r\n        return this._material;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set material(value: Material) {\r\n        if (this._material == value)\r\n            return;\r\n        this._material && this._material._removeReference();\r\n        this._material = value;\r\n        if (value != null)\r\n            value._addReference();\r\n    }\r\n\r\n    /**\r\n     * 绘制单独图片\r\n     * @param texture\t\t纹理。\r\n     * @param x \t\t（可选）X轴偏移量。\r\n     * @param y \t\t（可选）Y轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param color\t \t （可选）颜色\r\n     */\r\n    drawImage(texture: Texture, x: number = 0, y: number = 0, width: number = null, height: number = null, color: string = null): DrawImageCmd | null {\r\n        if (!texture) return null;\r\n        if (!texture.bitmap) return null;\r\n        return this.addCmd(DrawImageCmd.create(texture, x, y, width, height, color));\r\n    }\r\n\r\n    /**\r\n     * 绘制纹理，相比drawImage功能更强大，性能会差一些\r\n     * @param texture\t\t纹理。\r\n     * @param x \t\t（可选）X轴偏移量。\r\n     * @param y \t\t（可选）Y轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param matrix\t（可选）矩阵信息。\r\n     * @param alpha\t\t（可选）透明度。\r\n     * @param color\t\t（可选）颜色滤镜。\r\n     * @param blendMode （可选）混合模式。\r\n     */\r\n    drawTexture(texture: Texture | null, x: number = 0, y: number = 0, width: number = null, height: number = null, matrix: Matrix | null = null, alpha: number = 1, color: string | null = null, blendMode: string | null = null, uv?: number[]): DrawTextureCmd | null {\r\n        if (!texture || alpha < 0.01) return null;\r\n        if (!texture.bitmap) return null;\r\n        return this.addCmd(DrawTextureCmd.create(texture, x, y, width, height, matrix, alpha, color, blendMode, uv));\r\n    }\r\n\r\n    /**\r\n     * 批量绘制同样纹理。\r\n     * @param texture 纹理。\r\n     * @param pos 绘制次数和坐标。\r\n     * @param colors 图片颜色数组。\r\n     */\r\n    drawTextures(texture: Texture, pos: any[], colors?: number[]): DrawTexturesCmd | null {\r\n        if (!texture) return null;\r\n        return this.addCmd(DrawTexturesCmd.create(texture, pos, colors));\r\n    }\r\n\r\n    /**\r\n     * 绘制一组三角形\r\n     * @param texture\t纹理。\r\n     * @param x\t\t\tX轴偏移量。\r\n     * @param y\t\t\tY轴偏移量。\r\n     * @param vertices  顶点数组。\r\n     * @param indices\t顶点索引。\r\n     * @param uvData\tUV数据。\r\n     * @param matrix\t缩放矩阵。\r\n     * @param alpha\t\talpha\r\n     * @param color\t\t颜色变换\r\n     * @param blendMode\tblend模式\r\n     */\r\n    drawTriangles(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array, matrix: Matrix | null = null,\r\n        alpha: number = 1, color: string | number = null, blendMode: string | null = null): DrawTrianglesCmd {\r\n        return this.addCmd(DrawTrianglesCmd.create(texture, x, y, vertices, uvs, indices, matrix, alpha, color, blendMode));\r\n    }\r\n\r\n    /**\r\n     * 用 texture 填充。\r\n     * @param texture\t\t纹理。\r\n     * @param x\t\t\tX轴偏移量。\r\n     * @param y\t\t\tY轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param type\t\t（可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\r\n     * @param offset\t（可选）贴图纹理偏移\r\n     * @param color\t \t （可选）颜色\r\n     *\r\n     */\r\n    fillTexture(texture: Texture, x: number, y: number, width: number = 0, height: number = 0, type: string = \"repeat\", offset: Point | null = null, color: string = null): FillTextureCmd | null {\r\n        if (texture && texture.bitmap)\r\n            return this.addCmd(FillTextureCmd.create(texture, x, y, width, height, type, offset || Point.EMPTY, color));\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * 设置剪裁区域，超出剪裁区域的坐标不显示。\r\n     * @param x X 轴偏移量。\r\n     * @param y Y 轴偏移量。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     */\r\n    clipRect(x: number, y: number, width: number, height: number): ClipRectCmd {\r\n        return this.addCmd(ClipRectCmd.create(x, y, width, height));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制文本。\r\n     * @param text 在画布上输出的文本。\r\n     * @param x 开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y 开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font 定义字号和字体，比如\"20px Arial\"。\r\n     * @param color 定义文本颜色，比如\"#ff0000\"。\r\n     * @param textAlign 文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     */\r\n    fillText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, color, textAlign, 0, \"\"));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制“被填充且镶边的”文本。\r\n     * @param text\t\t\t在画布上输出的文本。\r\n     * @param x\t\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y\t\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font\t\t\t定义字体和字号，比如\"20px Arial\"。\r\n     * @param fillColor\t\t定义文本颜色，比如\"#ff0000\"。\r\n     * @param textAlign\t\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     * @param lineWidth\t\t镶边线条宽度。\r\n     * @param borderColor\t定义镶边文本颜色。\r\n     */\r\n    fillBorderText(text: string | WordText, x: number, y: number, font: string, fillColor: string, textAlign: string, lineWidth: number, borderColor: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, fillColor, textAlign, lineWidth, borderColor));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制文本（没有填色）。文本的默认颜色是黑色。\r\n     * @param text\t\t在画布上输出的文本。\r\n     * @param x\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font\t\t定义字体和字号，比如\"20px Arial\"。\r\n     * @param color\t\t定义文本颜色，比如\"#ff0000\"。\r\n     * @param lineWidth\t线条宽度。\r\n     * @param textAlign\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     */\r\n    strokeText(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, null, textAlign, lineWidth, color));\r\n    }\r\n\r\n    /**\r\n     * 设置透明度。\r\n     * @param value 透明度。\r\n     */\r\n    alpha(alpha: number): AlphaCmd {\r\n        return this.addCmd(AlphaCmd.create(alpha));\r\n    }\r\n\r\n    /**\r\n     * 替换绘图的当前转换矩阵。\r\n     * @param mat 矩阵。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    transform(matrix: Matrix, pivotX: number = 0, pivotY: number = 0): TransformCmd {\r\n        return this.addCmd(TransformCmd.create(matrix, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 旋转当前绘图。(推荐使用transform，性能更高)\r\n     * @param angle\t\t旋转角度，以弧度计。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    rotate(angle: number, pivotX: number = 0, pivotY: number = 0): RotateCmd {\r\n        return this.addCmd(RotateCmd.create(angle, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 缩放当前绘图至更大或更小。(推荐使用transform，性能更高)\r\n     * @param scaleX\t水平方向缩放值。\r\n     * @param scaleY\t垂直方向缩放值。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    scale(scaleX: number, scaleY: number, pivotX: number = 0, pivotY: number = 0): ScaleCmd {\r\n        return this.addCmd(ScaleCmd.create(scaleX, scaleY, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 重新映射画布上的 (0,0) 位置。\r\n     * @param x 添加到水平坐标（x）上的值。\r\n     * @param y 添加到垂直坐标（y）上的值。\r\n     */\r\n    translate(tx: number, ty: number): TranslateCmd {\r\n        return this.addCmd(TranslateCmd.create(tx, ty));\r\n    }\r\n\r\n    /**\r\n     * 保存当前环境的状态。\r\n     */\r\n    save(): SaveCmd {\r\n        return this.addCmd(SaveCmd.create());\r\n    }\r\n\r\n    /**\r\n     * 返回之前保存过的路径状态和属性。\r\n     */\r\n    restore(): RestoreCmd {\r\n        return this.addCmd(RestoreCmd.create());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 替换文本颜色。\r\n     * @param color 颜色。\r\n     */\r\n    replaceTextColor(color: string): void {\r\n        this._repaint();\r\n        let cmds = this._cmds;\r\n        for (let i = cmds.length - 1; i > -1; i--) {\r\n            let cmd = cmds[i];\r\n            var cmdID: string = cmd.cmdID;\r\n            switch (cmdID) {\r\n                case FillTextCmd.ID:\r\n                    (cmd as FillTextCmd).color = color;\r\n                    break;\r\n                case DrawImageCmd.ID: //bitmap font\r\n                    (cmd as DrawImageCmd).color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载并显示一个图片。\r\n     * @param url\t\t图片地址。\r\n     * @param x\t\t\t（可选）显示图片的x位置。\r\n     * @param y\t\t\t（可选）显示图片的y位置。\r\n     * @param width\t\t（可选）显示图片的宽度，设置为0表示使用图片默认宽度。\r\n     * @param height\t（可选）显示图片的高度，设置为0表示使用图片默认高度。\r\n     * @param complete\t（可选）加载完成回调。\r\n     */\r\n    loadImage(url: string, x: number = 0, y: number = 0, width: number = null, height: number = null, complete: Function | null = null): void {\r\n        let tex: Texture = ILaya.loader.getRes(url);\r\n        if (tex) {\r\n            this.drawImage(tex, x, y, width, height);\r\n            complete && complete.call(this._sp);\r\n        }\r\n        else {\r\n            ILaya.loader.load(url).then((tex: Texture) => {\r\n                this.drawImage(tex, x, y, width, height);\r\n                complete && complete.call(this._sp);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderEmpty(sprite: Sprite, context: Context, x: number, y: number): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderAll(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        context.sprite = sprite;\r\n        context.material = this._material;\r\n        var cmds = this._cmds!;\r\n        for (let i = 0, n = cmds.length; i < n; i++) {\r\n            cmds[i].run(context, x, y);\r\n        }\r\n        context.material = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderOne(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        context.sprite = sprite;\r\n        context.material = this._material;\r\n        this._cmds[0].run(context, x, y);\r\n        context.material = null;\r\n    }\r\n\r\n    /**\r\n     * 绘制一条线。\r\n     * @param fromX\t\tX轴开始位置。\r\n     * @param fromY\t\tY轴开始位置。\r\n     * @param toX\t\tX轴结束位置。\r\n     * @param toY\t\tY轴结束位置。\r\n     * @param lineColor\t颜色。\r\n     * @param lineWidth\t（可选）线条宽度。\r\n     */\r\n    drawLine(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number = 1): DrawLineCmd {\r\n        return this.addCmd(DrawLineCmd.create(fromX, fromY, toX, toY, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制一系列线段。\r\n     * @param x\t\t\t开始绘制的X轴位置。\r\n     * @param y\t\t\t开始绘制的Y轴位置。\r\n     * @param points\t线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\r\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）线段宽度。\r\n     */\r\n    drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawLinesCmd | null {\r\n        if (!points || points.length < 4) return null;\r\n        return this.addCmd(DrawLinesCmd.create(x, y, points, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制一系列曲线。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param points\t线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\r\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）线段宽度。\r\n     */\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawCurvesCmd {\r\n        return this.addCmd(DrawCurvesCmd.create(x, y, points, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制矩形。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param width\t\t矩形宽度。\r\n     * @param height\t矩形高度。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     * @param percent 位置和大小是否是百分比值。\r\n     */\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean): DrawRectCmd {\r\n        return this.addCmd(DrawRectCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * 绘制圆角矩形\r\n     * @param x             开始绘制的 X 轴位置。\r\n     * @param y             开始绘制的 Y 轴位置。\r\n     * @param width         圆角矩形宽度。\r\n     * @param height        圆角矩形高度。\r\n     * @param lt            左上圆角\r\n     * @param rt            右上圆角\r\n     * @param lb            左下圆角\r\n     * @param rb            右下圆角\r\n     * @param fillColor     填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor     （可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth     （可选）边框宽度。\r\n     * @param percent       （可选）位置和大小是否是百分比值。\r\n     * @returns \r\n     */\r\n    drawRoundRect(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean) {\r\n        return this.addCmd(DrawRoundRectCmd.create(x, y, width, height, lt, rt, lb, rb, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * 绘制圆形。\r\n     * @param x\t\t\t圆点X 轴位置。\r\n     * @param y\t\t\t圆点Y 轴位置。\r\n     * @param radius\t半径。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     */\r\n    drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawCircleCmd {\r\n        return this.addCmd(DrawCircleCmd.create(x, y, radius, fillColor, lineColor, lineWidth));\r\n    }\r\n    /**\r\n     * 绘制椭圆形\r\n     * @param x         圆点X 轴位置。\r\n     * @param y         圆点Y 轴位置。\r\n     * @param width     横向半径。\r\n     * @param height    纵向半径。\r\n     * @param fillColor 填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor （可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth （可选）边框宽度。\r\n     * @param percent   （可选）位置和大小是否是百分比值。\r\n     */\r\n    drawEllipse(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawEllipseCmd {\r\n        return this.addCmd(DrawEllipseCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * 绘制扇形。\r\n     * @param x\t\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t\t开始绘制的 Y 轴位置。\r\n     * @param radius\t\t扇形半径。\r\n     * @param startAngle\t开始角度。\r\n     * @param endAngle\t\t结束角度。\r\n     * @param fillColor\t\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t\t（可选）边框宽度。\r\n     */\r\n    drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPieCmd {\r\n        return this.addCmd(DrawPieCmd.create(x, y, radius, Utils.toRadian(startAngle), Utils.toRadian(endAngle), fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制多边形。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param points\t多边形的点集合。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     */\r\n    drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPolyCmd {\r\n        return this.addCmd(DrawPolyCmd.create(x, y, points, fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制路径。\r\n     * @param x\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t开始绘制的 Y 轴位置。\r\n     * @param paths\t路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\r\n     * @param brush\t（可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\r\n     * @param pen\t（可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\r\n     */\r\n    drawPath(x: number, y: number, paths: any[], brush: any = null, pen: any = null): DrawPathCmd {\r\n        return this.addCmd(DrawPathCmd.create(x, y, paths, brush, pen));\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 绘制带九宫格的图片\r\n     * @param\ttexture\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\tsizeGrid\r\n     * @param\tcolor\r\n     */\r\n    draw9Grid(texture: Texture, x: number = 0, y: number = 0, width: number = 0, height: number = 0, sizeGrid: any[], color?: string): void {\r\n        this.addCmd(Draw9GridTextureCmd.create(texture, x, y, width, height, sizeGrid, false, color));\r\n    }\r\n}\r\n","import { NodeFlags } from \"../Const\"\r\nimport { Component } from \"../components/Component\"\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Stat } from \"../utils/Stat\"\r\nimport { Timer } from \"../utils/Timer\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ComponentDriver } from \"../components/ComponentDriver\";\r\n\r\nconst ARRAY_EMPTY: any[] = [];\r\n\r\n/**\r\n * 添加到父对象后调度。\r\n * @eventType Event.ADDED\r\n */\r\n/*[Event(name = \"added\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 被父对象移除后调度。\r\n * @eventType Event.REMOVED\r\n */\r\n/*[Event(name = \"removed\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 加入节点树时调度。\r\n * @eventType Event.DISPLAY\r\n */\r\n/*[Event(name = \"display\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 从节点树移除时调度。\r\n * @eventType Event.UNDISPLAY\r\n */\r\n/*[Event(name = \"undisplay\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n *  <code>Node</code> 类是可放在显示列表中的所有对象的基类。该显示列表管理 Laya 运行时中显示的所有对象。使用 Node 类排列显示列表中的显示对象。Node 对象可以有子显示对象。\r\n */\r\nexport class Node extends EventDispatcher {\r\n    static EVENT_SET_ACTIVESCENE: string = \"ActiveScene\";\r\n    static EVENT_SET_IN_ACTIVESCENE: string = \"InActiveScene\";\r\n    /**@private */\r\n    private _bits: number = 0;\r\n    /**@private */\r\n    private _hideFlags: number = 0;\r\n\r\n    /**@internal 子对象集合，请不要直接修改此对象。*/\r\n    _children: Node[] = ARRAY_EMPTY;\r\n    /**@internal 父节点对象*/\r\n    _parent: Node = null;\r\n    /**@internal */\r\n    _destroyed: boolean = false;\r\n    /**@internal */\r\n    _conchData: any;\r\n    /**@internal */\r\n    _componentDriver: ComponentDriver;\r\n    /**@internal */\r\n    _is3D: boolean;\r\n    _url: string;\r\n    _extra: INodeExtra;\r\n\r\n    /**节点名称。*/\r\n    name: string = \"\";\r\n\r\n    /** 节点标签 */\r\n    tag: string;\r\n\r\n    /**\r\n     * 如果节点从资源中创建，这里记录是他的url\r\n     */\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /**\r\n     * 设置资源的URL\r\n     */\r\n    set url(path: string) {\r\n        this._url = path;\r\n    }\r\n\r\n    get hideFlags(): number {\r\n        return this._hideFlags;\r\n    }\r\n\r\n    set hideFlags(value: number) {\r\n        this._hideFlags = value;\r\n    }\r\n\r\n    /** 是否3D节点，即Scene3D和Sprite3D及其衍生类 */\r\n    get is3D(): boolean {\r\n        return this._is3D;\r\n    }\r\n\r\n    /** 是否已经销毁。对象销毁后不能再使用。*/\r\n    get destroyed(): boolean {\r\n        return this._destroyed;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._initialize();\r\n    }\r\n\r\n    //@internal\r\n    _initialize(): void {\r\n        this._extra = {};\r\n    }\r\n\r\n    _setBit(type: number, value: boolean): void {\r\n        if (type === NodeFlags.DISPLAY) {\r\n            var preValue: boolean = this._getBit(type);\r\n            if (preValue != value) this._updateDisplayedInstage();\r\n        }\r\n        if (value) this._bits |= type;\r\n        else this._bits &= ~type;\r\n    }\r\n\r\n    _getBit(type: number): boolean {\r\n        return (this._bits & type) != 0;\r\n    }\r\n\r\n    /**@internal */\r\n    _setUpNoticeChain(): void {\r\n        if (this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n    }\r\n\r\n    /**@internal */\r\n    _setBitUp(type: number): void {\r\n        var ele: Node = this;\r\n        ele._setBit(type, true);\r\n        ele = ele._parent;\r\n        while (ele) {\r\n            if (ele._getBit(type)) return;\r\n            ele._setBit(type, true);\r\n            ele = ele._parent;\r\n        }\r\n    }\r\n\r\n    protected onStartListeningToType(type: string) {\r\n        if (type === Event.DISPLAY || type === Event.UNDISPLAY) {\r\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n        }\r\n    }\r\n\r\n    bubbleEvent(type: string, data?: any) {\r\n        let arr: Array<Node> = _bubbleChainPool.length > 0 ? _bubbleChainPool.pop() : [];\r\n        arr.length = 0;\r\n\r\n        let obj: Node = this;\r\n        while (obj) {\r\n            if (obj.activeInHierarchy)\r\n                arr.push(obj);\r\n            obj = obj.parent;\r\n        }\r\n\r\n        if (data instanceof Event) {\r\n            data._stopped = false;\r\n            for (let obj of arr) {\r\n                data.setTo(type, obj, this);\r\n                obj.event(type, data);\r\n                if (data._stopped)\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            for (let obj of arr)\r\n                obj.event(type, data);\r\n        }\r\n\r\n        _bubbleChainPool.push(arr);\r\n    }\r\n\r\n    hasHideFlag(flag: number): boolean {\r\n        return (this._hideFlags & flag) != 0;\r\n    }\r\n\r\n    /**\r\n     * <p>销毁此对象。destroy对象默认会把自己从父节点移除，并且清理自身引用关系，等待js自动垃圾回收机制回收。destroy后不能再使用。</p>\r\n     * <p>destroy时会移除自身的事情监听，自身的timer监听，移除子对象及从父节点移除自己。</p>\r\n     * @param destroyChild\t（可选）是否同时销毁子节点，若值为true,则销毁子节点，否则不销毁子节点。\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._destroyed = true;\r\n        this.destroyAllComponent();\r\n        this._parent && this._parent.removeChild(this);\r\n\r\n        //销毁子节点\r\n        if (this._children) {\r\n            if (destroyChild) this.destroyChildren();\r\n            else this.removeChildren();\r\n        }\r\n        this.onDestroy();\r\n\r\n        this._children = null;\r\n\r\n        //移除所有事件监听\r\n        this.offAll();\r\n    }\r\n\r\n    /**\r\n     * 销毁时执行\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onDestroy(): void {\r\n        //trace(\"onDestroy node\", this.name);\r\n    }\r\n\r\n    /**\r\n     * 销毁所有子对象，不销毁自己本身。\r\n     */\r\n    destroyChildren(): void {\r\n        //销毁子节点\r\n        if (this._children) {\r\n            //为了保持销毁顺序，所以需要正序销毁\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[0] && this._children[0].destroy(true);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加子节点。\r\n     * @param\tnode 节点对象\r\n     * @return\t返回添加的节点\r\n     */\r\n    addChild<T extends Node>(node: T): T {\r\n        if (!node || this._destroyed || node as any === this) return node;\r\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\r\n        if (node._parent === this) {\r\n            var index: number = this.getChildIndex(node);\r\n            if (index !== this._children.length - 1) {\r\n                this._children.splice(index, 1);\r\n                this._children.push(node);\r\n                this._childChanged();\r\n            }\r\n        } else {\r\n            node._parent && node._parent.removeChild(node);\r\n            this._children === ARRAY_EMPTY && (this._children = []);\r\n            this._children.push(node);\r\n            node._setParent(this);\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 批量增加子节点\r\n     * @param\t...args 无数子节点。\r\n     */\r\n    addChildren(...args: any[]): void {\r\n        var i: number = 0, n: number = args.length;\r\n        while (i < n) {\r\n            this.addChild(args[i++]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加子节点到指定的索引位置。\r\n     * @param\tnode 节点对象。\r\n     * @param\tindex 索引位置。\r\n     * @return\t返回添加的节点。\r\n     */\r\n    addChildAt(node: Node, index: number): Node {\r\n        if (!node || this._destroyed || node === this) return node;\r\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\r\n        if (index >= 0 && index <= this._children.length) {\r\n            if (node._parent === this) {\r\n                var oldIndex: number = this.getChildIndex(node);\r\n                this._children.splice(oldIndex, 1);\r\n                this._children.splice(index, 0, node);\r\n                this._childChanged();\r\n            } else {\r\n                node._parent && node._parent.removeChild(node);\r\n                this._children === ARRAY_EMPTY && (this._children = []);\r\n                this._children.splice(index, 0, node);\r\n                node._setParent(this);\r\n            }\r\n            return node;\r\n        } else {\r\n            throw new Error(\"appendChildAt:The index is out of bounds\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据子节点对象，获取子节点的索引位置。\r\n     * @param\tnode 子节点。\r\n     * @return\t子节点所在的索引位置。\r\n     */\r\n    getChildIndex(node: Node): number {\r\n        return this._children.indexOf(node);\r\n    }\r\n\r\n    /**\r\n     * 根据子节点的名字，获取子节点对象。\r\n     * @param\tname 子节点的名字。\r\n     * @return\t节点对象。\r\n     */\r\n    getChildByName(name: string): Node {\r\n        for (let child of this._children) {\r\n            if (child && child.name === name)\r\n                return child;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点的索引位置，获取子节点对象。\r\n     * @param\tindex 索引位置\r\n     * @return\t子节点\r\n     */\r\n    getChildAt(index: number): Node {\r\n        return this._children[index] || null;\r\n    }\r\n\r\n    /**\r\n     * 设置子节点的索引位置。\r\n     * @param\tnode 子节点。\r\n     * @param\tindex 新的索引。\r\n     * @return\t返回子节点本身。\r\n     */\r\n    setChildIndex(node: Node, index: number): Node {\r\n        var childs: any[] = this._children;\r\n        if (index < 0 || index >= childs.length) {\r\n            throw new Error(\"setChildIndex:The index is out of bounds.\");\r\n        }\r\n\r\n        var oldIndex: number = this.getChildIndex(node);\r\n        if (oldIndex < 0) throw new Error(\"setChildIndex:node is must child of this object.\");\r\n        childs.splice(oldIndex, 1);\r\n        childs.splice(index, 0, node);\r\n        this._childChanged();\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 子节点发生改变。\r\n     * @private\r\n     * @param\tchild 子节点。\r\n     */\r\n    protected _childChanged(child: Node = null): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 删除子节点。\r\n     * @param\tnode 子节点\r\n     * @return\t被删除的节点\r\n     */\r\n    removeChild(node: Node): Node {\r\n        if (!this._children) return node;\r\n        var index: number = this._children.indexOf(node);\r\n        return this.removeChildAt(index);\r\n    }\r\n\r\n    /**\r\n     * 从父容器删除自己，如已经被删除不会抛出异常。\r\n     * @return 当前节点（ Node ）对象。\r\n     */\r\n    removeSelf(): Node {\r\n        this._parent && this._parent.removeChild(this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点名字删除对应的子节点对象，如果找不到不会抛出异常。\r\n     * @param\tname 对象名字。\r\n     * @return 查找到的节点（ Node ）对象。\r\n     */\r\n    removeChildByName(name: string): Node {\r\n        var node: Node = this.getChildByName(name);\r\n        node && this.removeChild(node);\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点索引位置，删除对应的子节点对象。\r\n     * @param\tindex 节点索引位置。\r\n     * @return\t被删除的节点。\r\n     */\r\n    removeChildAt(index: number): Node {\r\n        var node: Node = this.getChildAt(index);\r\n        if (node) {\r\n            this._children.splice(index, 1);\r\n            node._setParent(null);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 删除指定索引区间的所有子对象。\r\n     * @param\tbeginIndex 开始索引。\r\n     * @param\tendIndex 结束索引。\r\n     * @return 当前节点对象。\r\n     */\r\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\r\n        if (this._children && this._children.length > 0) {\r\n            var childs: any[] = this._children;\r\n            if (beginIndex === 0 && endIndex >= childs.length - 1) {\r\n                var arr: any[] = childs;\r\n                this._children = ARRAY_EMPTY;\r\n            } else {\r\n                arr = childs.splice(beginIndex, endIndex - beginIndex + 1);\r\n            }\r\n            for (var i: number = 0, n: number = arr.length; i < n; i++) {\r\n                arr[i]._setParent(null);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 替换子节点。\r\n     * 将传入的新节点对象替换到已有子节点索引位置处。\r\n     * @param\tnewNode 新节点。\r\n     * @param\toldNode 老节点。\r\n     * @return\t返回新节点。\r\n     */\r\n    replaceChild(newNode: Node, oldNode: Node): Node {\r\n        var index: number = this._children.indexOf(oldNode);\r\n        if (index > -1) {\r\n            this._children.splice(index, 1, newNode);\r\n            oldNode._setParent(null);\r\n            newNode._setParent(this);\r\n            return newNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 子对象数量。\r\n     */\r\n    get numChildren(): number {\r\n        return this._children ? this._children.length : 0;\r\n    }\r\n\r\n    /**父节点。*/\r\n    get parent(): Node {\r\n        return this._parent;\r\n    }\r\n\r\n    /**检查本节点是否是某个节点的上层节点\r\n     * @param node\r\n     * @return\r\n     */\r\n    isAncestorOf(node: Node): boolean {\r\n        let p = node.parent;\r\n        while (p) {\r\n            if (p == this)\r\n                return true;\r\n\r\n            p = p.parent;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**@private */\r\n    protected _setParent(value: Node): void {\r\n        if (this._parent !== value) {\r\n            if (value) {\r\n                this._parent = value;\r\n                //如果父对象可见，则设置子对象可见\r\n                this._onAdded();\r\n                this.event(Event.ADDED);\r\n                if (this._getBit(NodeFlags.DISPLAY)) {\r\n                    this._setUpNoticeChain();\r\n                    value.displayedInStage && this._displayChild(this, true);\r\n                }\r\n                value._childChanged(this);\r\n            } else {\r\n                //设置子对象不可见\r\n                this._onRemoved();\r\n                this.event(Event.REMOVED);\r\n                let p = this._parent;\r\n                if (this._getBit(NodeFlags.DISPLAY)) this._displayChild(this, false);\r\n                this._parent = value;\r\n                p._childChanged(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**表示是否在显示列表中显示。*/\r\n    get displayedInStage(): boolean {\r\n        if (this._getBit(NodeFlags.DISPLAY)) return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n        this._setBitUp(NodeFlags.DISPLAY);\r\n        return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n    }\r\n\r\n    /**@private */\r\n    private _updateDisplayedInstage(): void {\r\n        var ele: Node;\r\n        ele = this;\r\n        var stage: Node = ILaya.stage;\r\n        var displayedInStage: boolean = false;\r\n        while (ele) {\r\n            if (ele._getBit(NodeFlags.DISPLAY)) {\r\n                displayedInStage = ele._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n                break;\r\n            }\r\n            if (ele === stage || ele._getBit(NodeFlags.DISPLAYED_INSTAGE)) {\r\n                displayedInStage = true;\r\n                break;\r\n            }\r\n            ele = ele._parent;\r\n        }\r\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, displayedInStage);\r\n    }\r\n\r\n    /**@internal */\r\n    _setDisplay(value: boolean): void {\r\n        if (this._getBit(NodeFlags.DISPLAYED_INSTAGE) !== value) {\r\n            this._setBit(NodeFlags.DISPLAYED_INSTAGE, value);\r\n            if (value) this.event(Event.DISPLAY);\r\n            else this.event(Event.UNDISPLAY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置指定节点对象是否可见(是否在渲染列表中)。\r\n     * @private\r\n     * @param\tnode 节点。\r\n     * @param\tdisplay 是否可见。\r\n     */\r\n    private _displayChild(node: Node, display: boolean): void {\r\n        var childs: any[] = node._children;\r\n        if (childs) {\r\n            for (var i: number = 0, n: number = childs.length; i < n; i++) {\r\n                var child: Node = childs[i];\r\n                if (!child) continue;\r\n                if (!child._getBit(NodeFlags.DISPLAY)) continue;\r\n                if (child._children.length > 0) {\r\n                    this._displayChild(child, display);\r\n                } else {\r\n                    child._setDisplay(display);\r\n                }\r\n            }\r\n        }\r\n        node._setDisplay(display);\r\n    }\r\n\r\n    /**\r\n     * 当前容器是否包含指定的 <code>Node</code> 节点对象 。\r\n     * @param\tnode  指定的 <code>Node</code> 节点对象 。\r\n     * @return\t一个布尔值表示是否包含指定的 <code>Node</code> 节点对象 。\r\n     */\r\n    contains(node: Node): boolean {\r\n        if (node === this) return true;\r\n        while (node) {\r\n            if (node._parent === this) return true;\r\n            node = node._parent;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行某函数。功能同Laya.timer.timerLoop()。\r\n     * @param\tdelay\t\t间隔时间(单位毫秒)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\r\n     */\r\n    timerLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        this.timer.loop(delay, caller, method, args, coverBefore, jumpFrame);\r\n    }\r\n\r\n    /**\r\n     * 定时执行某函数一次。功能同Laya.timer.timerOnce()。\r\n     * @param\tdelay\t\t延迟时间(单位毫秒)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     */\r\n    timerOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行某函数(基于帧率)。功能同Laya.timer.frameLoop()。\r\n     * @param\tdelay\t\t间隔几帧(单位为帧)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次某函数(基于帧率)。功能同Laya.timer.frameOnce()。\r\n     * @param\tdelay\t\t延迟几帧(单位为帧)。\r\n     * @param\tcaller\t\t执行域(this)\r\n     * @param\tmethod\t\t结束时的回调方法\r\n     * @param\targs\t\t（可选）回调参数\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 清理定时器。功能同Laya.timer.clearTimer()。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 结束时的回调方法。\r\n     */\r\n    clearTimer(caller: any, method: Function): void {\r\n        this.timer.clear(caller, method);\r\n    }\r\n\r\n    /**\r\n     * <p>延迟运行指定的函数。</p>\r\n     * <p>在控件被显示在屏幕之前调用，一般用于延迟计算数据。</p>\r\n     * @param method 要执行的函数的名称。例如，functionName。\r\n     * @param args 传递给 <code>method</code> 函数的可选参数列表。\r\n     *\r\n     * @see #runCallLater()\r\n     */\r\n    callLater(method: Function, args: any[] = null): void {\r\n        this.timer.callLater(this, method, args);\r\n    }\r\n\r\n    /**\r\n     * <p>如果有需要延迟调用的函数（通过 <code>callLater</code> 函数设置），则立即执行延迟调用函数。</p>\r\n     * @param method 要执行的函数名称。例如，functionName。\r\n     * @see #callLater()\r\n     */\r\n    runCallLater(method: Function): void {\r\n        this.timer.runCallLater(this, method);\r\n    }\r\n\r\n    //============================组件化支持==============================\r\n    /** @private */\r\n    protected _components: Component[];\r\n    /**@private */\r\n    private _activeChangeScripts: Component[];\r\n\r\n\r\n    _scene: Node;\r\n\r\n    /**\r\n     * 获得所属场景。\r\n     * @return\t场景。\r\n     */\r\n    get scene(): any {\r\n        return this._scene;\r\n    }\r\n\r\n    /**\r\n     * 获取自身是否激活。\r\n     *   @return\t自身是否激活。\r\n     */\r\n    get active(): boolean {\r\n        return !this._getBit(NodeFlags.NOT_READY) && !this._getBit(NodeFlags.NOT_ACTIVE);\r\n    }\r\n\r\n    /**\r\n     * 设置是否激活。\r\n     * @param\tvalue 是否激活。\r\n     */\r\n    set active(value: boolean) {\r\n        value = !!value;\r\n        if (!this._getBit(NodeFlags.NOT_ACTIVE) !== value) {\r\n            if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n                if (value)\r\n                    throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\r\n                else\r\n                    throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\r\n            } else {\r\n                this._setBit(NodeFlags.NOT_ACTIVE, !value);\r\n                if (this._parent) {\r\n                    if (this._parent.activeInHierarchy) {\r\n                        this._processActive(value, true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取在场景中是否激活。\r\n     *   @return\t在场景中是否激活。\r\n     */\r\n    get activeInHierarchy(): boolean {\r\n        return this._getBit(NodeFlags.ACTIVE_INHIERARCHY);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onActive(): void {\r\n        Stat.spriteCount++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onInActive(): void {\r\n        Stat.spriteCount--;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onActiveInScene(): void {\r\n        this.event(Node.EVENT_SET_ACTIVESCENE, this._scene);\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onInActiveInScene(): void {\r\n        this.event(Node.EVENT_SET_IN_ACTIVESCENE, this._scene);\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n    * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\r\n    * 此方法为虚方法，使用时重写覆盖即可\r\n    */\r\n    onAwake(): void {\r\n        //this.name  && trace(\"onAwake node \", this.name);\r\n    }\r\n\r\n    /**\r\n     * 组件被启用后执行，比如节点被添加到舞台后\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onEnable(): void {\r\n        //this.name  && trace(\"onEnable node \", this.name);\r\n    }\r\n\r\n    /**\r\n     * 组件被禁用时执行，比如从节点从舞台移除后\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onDisable(): void {\r\n        //trace(\"onDisable node\", this.name);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parse(data: any, spriteMap: any): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setBelongScene(scene: Node): void {\r\n        if (!this._scene || this.scene != scene) {\r\n            this._scene = scene;\r\n            this._onActiveInScene();\r\n            for (let i = 0, n = this._children.length; i < n; i++)\r\n                this._children[i]._setBelongScene(scene);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setUnBelongScene(): void {\r\n        if (this._scene !== this) {//移除节点本身是scene不继续派发\r\n            this._onInActiveInScene();\r\n            this._scene = null;\r\n            for (let i = 0, n = this._children.length; i < n; i++)\r\n                this._children[i]._setUnBelongScene();\r\n        }\r\n    }\r\n\r\n    _processActive(active: boolean, fromSetter?: boolean) {\r\n        (this._activeChangeScripts) || (this._activeChangeScripts = []);\r\n        let arr = this._activeChangeScripts;\r\n\r\n        if (active)\r\n            this._activeHierarchy(arr, fromSetter);\r\n        else\r\n            this._inActiveHierarchy(arr, fromSetter);\r\n\r\n        for (let i = 0, n = arr.length; i < n; i++) {\r\n            let comp = arr[i];\r\n            comp.owner && comp._setActive(active);\r\n        }\r\n\r\n        arr.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _activeHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp._isScript())\r\n                    (comp._enabled) && (activeChangeScripts.push(comp));\r\n                else\r\n                    comp._setActive(true);\r\n            }\r\n        }\r\n\r\n        this._onActive();\r\n        for (let i = 0, n = this._children.length; i < n; i++) {\r\n            let child = this._children[i];\r\n            (!child._getBit(NodeFlags.NOT_ACTIVE) && !child._getBit(NodeFlags.NOT_READY)) && (child._activeHierarchy(activeChangeScripts, fromSetter));\r\n        }\r\n        if (!this._getBit(NodeFlags.AWAKED)) {\r\n            this._setBit(NodeFlags.AWAKED, true);\r\n            this.onAwake();\r\n        }\r\n        this.onEnable();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _inActiveHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\r\n        this._onInActive();\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp._isScript())\r\n                    comp._enabled && (activeChangeScripts.push(comp));\r\n                else\r\n                    comp._setActive(false);\r\n            }\r\n        }\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, false);\r\n\r\n        for (let i = 0, n = this._children.length; i < n; i++) {\r\n            let child = this._children[i];\r\n            (child && !child._getBit(NodeFlags.NOT_ACTIVE)) && (child._inActiveHierarchy(activeChangeScripts, fromSetter));\r\n        }\r\n        this.onDisable();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onAdded(): void {\r\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n            throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\r\n        } else {\r\n            let parentScene = this._parent.scene;\r\n            parentScene && this._setBelongScene(parentScene);\r\n            (this._parent.activeInHierarchy && this.active) && this._processActive(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onRemoved(): void {\r\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n            throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\r\n        } else {\r\n            (this._parent.activeInHierarchy && this.active) && this._processActive(false);\r\n            this._parent.scene && this._setUnBelongScene();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addComponentInstance(comp: Component): void {\r\n        if (!this._components)\r\n            this._components = [];\r\n        this._components.push(comp);\r\n\r\n        comp._setOwner(this);\r\n        if (this.activeInHierarchy)\r\n            comp._setActive(true);\r\n        this._componentsChanged?.(comp, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _destroyComponent(comp: Component) {\r\n        if (!this._components)\r\n            return;\r\n\r\n        let i = this._components.indexOf(comp);\r\n        if (i != -1) {\r\n            this._components.splice(i, 1);\r\n            comp._destroy();\r\n            this._componentsChanged?.(comp, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private destroyAllComponent(): void {\r\n        if (!this._components)\r\n            return;\r\n\r\n        for (let i = 0, n = this._components.length; i < n; i++) {\r\n            let item = this._components[i];\r\n            item && !item.destroyed && item._destroy();\r\n        }\r\n        this._components.length = 0;\r\n        this._componentsChanged?.(null, 2);\r\n    }\r\n\r\n    /**\r\n     * 组件列表发生改变。\r\n     * @private\r\n     */\r\n    protected _componentsChanged?(comp: Component, action: 0 | 1 | 2): void;\r\n\r\n    /**\r\n     * @internal 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    _cloneTo(destObject: any, srcRoot: Node, dstRoot: Node): void {\r\n        var destNode: Node = (<Node>destObject);\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                var destComponent = destNode.addComponent((this._components[i] as any).constructor);\r\n                this._components[i]._cloneTo(destComponent);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加组件实例。\r\n     * @param\tcomponent 组建实例。\r\n     * @return\t组件。\r\n     */\r\n    addComponentInstance(component: Component): Component {\r\n        if (component.owner)\r\n            throw \"Node:the component has belong to other node.\";\r\n        if (component._singleton && this.getComponent(((<any>component)).constructor))\r\n            console.warn(\"Node:the component is singleton, can't add the second one.\", component);\r\n        else\r\n            this._addComponentInstance(component);\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * 添加组件。\r\n     * @param\tcomponentType 组件类型。\r\n     * @return\t组件。\r\n     */\r\n    addComponent<T extends Component>(componentType: new () => T): T {\r\n        let comp: T = Pool.createByClass(componentType);\r\n        if (!comp) {\r\n            throw \"missing \" + componentType.toString();\r\n        }\r\n\r\n        if (comp._singleton && this.getComponent(componentType))\r\n            console.warn(\"Node:the component is singleton, can't add the second one.\", comp);\r\n        else\r\n            this._addComponentInstance(comp);\r\n        return comp;\r\n    }\r\n\r\n    /**\r\n     * 获得组件实例，如果没有则返回为null\r\n     * @param\tcomponentType 组建类型\r\n     * @return\t返回组件\r\n     */\r\n    getComponent<T extends Component>(componentType: new () => T): T {\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp instanceof componentType)\r\n                    return comp;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 返回所有组件实例。\r\n     * @return 返回组件实例数组。\r\n     */\r\n    get components(): ReadonlyArray<Component> {\r\n        return this._components || ARRAY_EMPTY;\r\n    }\r\n\r\n    /**\r\n     * 获得组件实例，如果没有则返回为null\r\n     * @param\tcomponentType 组件类型\r\n     * @return\t返回组件数组\r\n     */\r\n    getComponents(componentType: typeof Component): Component[] {\r\n        var arr: any[];\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp instanceof componentType) {\r\n                    arr = arr || [];\r\n                    arr.push(comp);\r\n                }\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 获取timer\r\n     */\r\n    get timer(): Timer {\r\n        return this._scene ? this._scene.timer : ILaya.timer;\r\n    }\r\n\r\n    /**\r\n     * 反序列化后会调用\r\n     */\r\n    onAfterDeserialize() { }\r\n}\r\n\r\nconst _bubbleChainPool: Array<Array<Node>> = [];\r\n\r\nexport interface INodeExtra { }\r\n","\r\nconst HALF_PI = Math.PI * 0.5;\r\nconst PI2 = Math.PI * 2;\r\n\r\n/**\r\n* <code>Ease</code> 类定义了缓动函数，以便实现 <code>Tween</code> 动画的缓动效果。\r\n*/\r\nexport class Ease {\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearNone(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearIn(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearInOut(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearOut(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceIn(t: number, b: number, c: number, d: number): number {\r\n        return c - Ease.bounceOut(d - t, 0, c, d) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceInOut(t: number, b: number, c: number, d: number): number {\r\n        if (t < d * 0.5) return Ease.bounceIn(t * 2, 0, c, d) * .5 + b;\r\n        else return Ease.bounceOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d) < (1 / 2.75)) return c * (7.5625 * t * t) + b;\r\n        else if (t < (2 / 2.75)) return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n        else if (t < (2.5 / 2.75)) return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n        else return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始时往后运动，然后反向朝目标移动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backIn(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时是向后跟踪，再倒转方向并朝目标移动，稍微过冲目标，然后再次倒转方向，回来朝目标移动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backInOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n        return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时是朝目标移动，稍微过冲，再倒转方向回来朝着目标。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticIn(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticInOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d * 0.5) == 2) return b + c;\r\n        if (!p) p = d * (.3 * 1.5);\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\r\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p) * .5 + c + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * PI2 / p) + c + b);\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineInOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * 0.5 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineIn(t: number, b: number, c: number, d: number): number {\r\n        return -c * Math.cos(t / d * HALF_PI) + c + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineOut(t: number, b: number, c: number, d: number): number {\r\n        return c * Math.sin(t / d * HALF_PI) + b;\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t + b;\r\n        return -c * 0.5 * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t + b;\r\n        return -c * 0.5 * ((--t) * (t - 2) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoIn(t: number, b: number, c: number, d: number): number {\r\n        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b - c * 0.001;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoInOut(t: number, b: number, c: number, d: number): number {\r\n        if (t == 0) return b;\r\n        if (t == d) return b + c;\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * Math.pow(2, 10 * (t - 1)) + b;\r\n        return c * 0.5 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoOut(t: number, b: number, c: number, d: number): number {\r\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circIn(t: number, b: number, c: number, d: number): number {\r\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return -c * 0.5 * (Math.sqrt(1 - t * t) - 1) + b;\r\n        return c * 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circOut(t: number, b: number, c: number, d: number): number {\r\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * <p><code>Handler</code> 是事件处理器类。</p>\r\n * <p>推荐使用 Handler.create() 方法从对象池创建，减少对象创建消耗。创建的 Handler 对象不再使用后，可以使用 Handler.recover() 将其回收到对象池，回收后不要再使用此对象，否则会导致不可预料的错误。</p>\r\n * <p><b>注意：</b>由于鼠标事件也用本对象池，不正确的回收及调用，可能会影响鼠标事件的执行。</p>\r\n */\r\nexport class Handler {\r\n\r\n    /**@private handler对象池*/\r\n    protected static _pool: Handler[] = [];\r\n    /**@private */\r\n    private static _gid: number = 1;\r\n\r\n    /** 执行域(this)。*/\r\n    caller: Object | null;\r\n    /** 处理方法。*/\r\n    method: Function | null;\r\n    /** 参数。*/\r\n    args: any[] | null;\r\n    /** 表示是否只执行一次。如果为true，回调后执行recover()进行回收，回收后会被再利用，默认为false 。*/\r\n    once = false;\r\n\r\n    /**@private */\r\n    protected _id = 0;\r\n\r\n    /**\r\n     * 根据指定的属性值，创建一个 <code>Handler</code> 类的实例。\r\n     * @param\tcaller 执行域。\r\n     * @param\tmethod 处理函数。\r\n     * @param\targs 函数参数。\r\n     * @param\tonce 是否只执行一次。\r\n     */\r\n    constructor(caller: Object | null = null, method: Function | null = null, args: any[] | null = null, once: boolean = false) {\r\n        this.setTo(caller, method, args, once);\r\n    }\r\n\r\n    /**\r\n     * 设置此对象的指定属性值。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 回调方法。\r\n     * @param\targs 携带的参数。\r\n     * @param\tonce 是否只执行一次，如果为true，执行后执行recover()进行回收。\r\n     * @return  返回 handler 本身。\r\n     */\r\n    setTo(caller: any, method: Function | null, args: any[] | null, once = false): Handler {\r\n        this._id = Handler._gid++;\r\n        this.caller = caller;\r\n        this.method = method;\r\n        this.args = args;\r\n        this.once = once;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 执行处理器。\r\n     */\r\n    run(): any {\r\n        if (this.method == null) return null;\r\n        var id: number = this._id;\r\n        var result: any = this.method.apply(this.caller, this.args);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 执行处理器，并携带额外数据。\r\n     * @param\tdata 附加的回调数据，可以是单数据或者Array(作为多参)。\r\n     */\r\n    runWith(data: any): any {\r\n        if (this.method == null) return null;\r\n        var id: number = this._id;\r\n        if (data == null)\r\n            var result: any = this.method.apply(this.caller, this.args);\r\n        else if (!this.args && !data.unshift) result = this.method.call(this.caller, data);\r\n        else if (this.args) result = this.method.apply(this.caller, this.args.concat(data));\r\n        else result = this.method.apply(this.caller, data);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 清理对象引用。\r\n     */\r\n    clear(): Handler {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 清理并回收到 Handler 对象池内。\r\n     */\r\n    recover(): void {\r\n        if (this._id > 0) {\r\n            this._id = 0;\r\n            Handler._pool.push(this.clear());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从对象池内创建一个Handler，默认会执行一次并立即回收，如果不需要自动回收，设置once参数为false。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 回调方法。\r\n     * @param\targs 携带的参数。\r\n     * @param\tonce 是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。\r\n     * @return  返回创建的handler实例。\r\n     */\r\n    static create(caller: any, method: Function | null, args: any[] | null = null, once: boolean = true): Handler {\r\n        if (Handler._pool.length)\r\n            return (Handler._pool.pop() as Handler).setTo(caller, method, args, once);\r\n        return new Handler(caller, method, args, once);\r\n    }\r\n}\r\n\r\n","import { Handler } from \"./Handler\";\r\nimport { Pool } from \"./Pool\";\r\nimport { Browser } from \"./Browser\";\r\nimport { Utils } from \"./Utils\";\r\nimport { ILaya } from \"./../../ILaya\";\r\n\r\n/**\r\n * <code>Tween</code>  是一个缓动类。使用此类能够实现对目标对象属性的渐变。\r\n */\r\nexport class Tween {\r\n    /**@private */\r\n    private static tweenMap: any[] = [];\r\n    /**@private */\r\n    private _complete: Handler;\r\n    /**@private */\r\n    private _target: any;\r\n    /**@private */\r\n    private _ease: Function;\r\n    /**@private */\r\n    private _props: any[];\r\n    /**@private */\r\n    private _duration: number;\r\n    /**@private */\r\n    private _delay: number;\r\n    /**@private */\r\n    private _startTimer: number;\r\n    /**@private */\r\n    private _usedTimer: number;\r\n    /**@private */\r\n    private _usedPool: boolean;\r\n    /**@private */\r\n    private _delayParam: any[];\r\n    /**@private 唯一标识，TimeLintLite用到*/\r\n    gid: number = 0;\r\n    /**更新回调，缓动数值发生变化时，回调变化的值*/\r\n    update: Handler;\r\n    /**重播次数，如果repeat=0，则表示无限循环播放*/\r\n    repeat: number = 1;\r\n    /**当前播放次数*/\r\n    private _count: number = 0;\r\n\r\n    /**\r\n     * 缓动对象的props属性到目标值。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    static to(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\r\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, true, autoRecover, true);\r\n    }\r\n\r\n    /**\r\n     * 从props属性，缓动到当前状态。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    static from(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\r\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, false, autoRecover, true);\r\n    }\r\n\r\n    /**\r\n     * 缓动对象的props属性到目标值。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    to(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false): Tween {\r\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, true, false, true);\r\n    }\r\n\r\n    /**\r\n     * 从props属性，缓动到当前状态。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    from(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false): Tween {\r\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, false, false, true);\r\n    }\r\n\r\n    /** @internal */\r\n    _create(target: any, props: any, duration: number, ease: Function|null, complete: Handler|null, delay: number, coverBefore: boolean, isTo: boolean, usePool: boolean, runNow: boolean): Tween {\r\n        if (!target) throw new Error(\"Tween:target is null\");\r\n        this._target = target;\r\n        this._duration = duration;\r\n        this._ease = ease || props.ease || Tween.easeNone;\r\n        this._complete = complete || props.complete;\r\n        this._delay = delay;\r\n        this._props = [];\r\n        this._usedTimer = 0;\r\n        this._startTimer = Browser.now();\r\n        this._usedPool = usePool;\r\n        this._delayParam = null;\r\n        this.update = props.update;\r\n\r\n        //判断是否覆盖\t\t\t\r\n        var gid: number = (target.$_GID || (target.$_GID = Utils.getGID()));\r\n        if (!Tween.tweenMap[gid]) {\r\n            Tween.tweenMap[gid] = [this];\r\n        } else {\r\n            if (coverBefore) Tween.clearTween(target);\r\n            Tween.tweenMap[gid].push(this);\r\n        }\r\n\r\n        if (runNow) {\r\n            if (delay <= 0) this.firstStart(target, props, isTo);\r\n            else {\r\n                this._delayParam = [target, props, isTo];\r\n                ILaya.timer.once(delay, this, this.firstStart, this._delayParam);\r\n            }\r\n        } else {\r\n            this._initProps(target, props, isTo);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private firstStart(target: any, props: any, isTo: boolean): void {\r\n        this._delayParam = null;\r\n        if (target.destroyed) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        this._initProps(target, props, isTo);\r\n        this._beginLoop();\r\n    }\r\n\r\n    private _initProps(target: any, props: any, isTo: boolean): void {\r\n        //初始化属性\r\n        for (var p in props) {\r\n            if (typeof (target[p]) == 'number') {\r\n                var start: number = isTo ? target[p] : props[p];\r\n                var end: number = isTo ? props[p] : target[p];\r\n                this._props.push([p, start, end - start]);\r\n                if (!isTo) target[p] = start;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _beginLoop(): void {\r\n        ILaya.timer.frameLoop(1, this, this._doEase);\r\n    }\r\n\r\n    /**执行缓动**/\r\n    private _doEase(): void {\r\n        this._updateEase(Browser.now());\r\n    }\r\n\r\n    /**@internal */\r\n    _updateEase(time: number): void {\r\n        var target: any = this._target;\r\n        if (!target) return;\r\n\r\n        //如果对象被销毁，则立即停止缓动\r\n        if (target.destroyed) return Tween.clearTween(target);\r\n\r\n        var usedTimer: number = this._usedTimer = time - this._startTimer - this._delay;\r\n        if (usedTimer < 0) return;\r\n        if (usedTimer >= this._duration) return this.complete();\r\n\r\n        var ratio: number = usedTimer > 0 ? this._ease(usedTimer, 0, 1, this._duration) : 0;\r\n        var props: any[] = this._props;\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            target[prop[0]] = prop[1] + (ratio * prop[2]);\r\n        }\r\n        if (this.update) this.update.run();\r\n    }\r\n\r\n    /**设置当前执行比例**/\r\n    set progress(v: number) {\r\n        var uTime: number = v * this._duration;\r\n        this._startTimer = Browser.now() - this._delay - uTime;\r\n    }\r\n\r\n    /**\r\n     * 立即结束缓动并到终点。\r\n     */\r\n    complete(): void {\r\n        if (!this._target) return;\r\n\r\n        //立即执行初始化\r\n        ILaya.timer.runTimer(this, this.firstStart);\r\n\r\n        //缓存当前属性\r\n        var target: any = this._target;\r\n        var props: any = this._props;\r\n        var handler: Handler = this._complete;\r\n        //设置终点属性\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            target[prop[0]] = prop[1] + prop[2];\r\n        }\r\n        if (this.update) this.update.run();\r\n\r\n        this._count++;\r\n        if (this.repeat != 0 && this._count >= this.repeat) {\r\n            //清理\r\n            this.clear();\r\n            //回调\r\n            handler && handler.run();\r\n        } else {\r\n            this.restart();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停缓动，可以通过resume或restart重新开始。\r\n     */\r\n    pause(): void {\r\n        ILaya.timer.clear(this, this._beginLoop);\r\n        ILaya.timer.clear(this, this._doEase);\r\n        ILaya.timer.clear(this, this.firstStart);\r\n        var time: number = Browser.now();\r\n        var dTime: number;\r\n        dTime = time - this._startTimer - this._delay;\r\n        if (dTime < 0) {\r\n            this._usedTimer = dTime;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置开始时间。\r\n     * @param\tstartTime 开始时间。\r\n     */\r\n    setStartTime(startTime: number): void {\r\n        this._startTimer = startTime;\r\n    }\r\n\r\n    /**\r\n     * 清理指定目标对象上的所有缓动。\r\n     * @param\ttarget 目标对象。\r\n     */\r\n    static clearAll(target: any): void {\r\n        if (!target || !target.$_GID) return;\r\n        var tweens: any[] = Tween.tweenMap[target.$_GID];\r\n        if (tweens) {\r\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\r\n                tweens[i]._clear();\r\n            }\r\n            tweens.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理某个缓动。\r\n     * @param\ttween 缓动对象。\r\n     */\r\n    static clear(tween: Tween): void {\r\n        tween.clear();\r\n    }\r\n\r\n    /**@private 同clearAll，废弃掉，尽量别用。*/\r\n    static clearTween(target: any): void {\r\n        Tween.clearAll(target);\r\n    }\r\n\r\n    /**\r\n     * 停止并清理当前缓动。\r\n     */\r\n    clear(): void {\r\n        if (this._target) {\r\n            this._remove();\r\n            this._clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clear(): void {\r\n        this.pause();\r\n        ILaya.timer.clear(this, this.firstStart);\r\n        this._complete = null;\r\n        this._target = null;\r\n        this._ease = null;\r\n        this._props = null;\r\n        this._delayParam = null;\r\n    this.repeat = 1;\r\n\r\n        if (this._usedPool) {\r\n            this.update = null;\r\n            Pool.recover(\"tween\", this);\r\n        }\r\n    }\r\n\r\n    /** 回收到对象池。*/\r\n    recover(): void {\r\n        this._usedPool = true;\r\n        this._clear();\r\n    }\r\n\r\n    private _remove(): void {\r\n        var tweens: any[] = Tween.tweenMap[this._target.$_GID];\r\n        if (tweens) {\r\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\r\n                if (tweens[i] === this) {\r\n                    tweens.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重新开始暂停的缓动。\r\n     */\r\n    restart(): void {\r\n        this.pause();\r\n        this._usedTimer = 0;\r\n        this._startTimer = Browser.now();\r\n        if (this._delayParam) {\r\n            ILaya.timer.once(this._delay, this, this.firstStart, this._delayParam);\r\n            return;\r\n        }\r\n        var props: any[] = this._props;\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            this._target[prop[0]] = prop[1];\r\n        }\r\n        ILaya.timer.once(this._delay, this, this._beginLoop);\r\n    }\r\n\r\n    /**\r\n     * 恢复暂停的缓动。\r\n     */\r\n    resume(): void {\r\n        if (this._usedTimer >= this._duration) return;\r\n        this._startTimer = Browser.now() - this._usedTimer - this._delay;\r\n        if (this._delayParam) {\r\n            if (this._usedTimer < 0) {\r\n                ILaya.timer.once(-this._usedTimer, this, this.firstStart, this._delayParam);\r\n            } else {\r\n                this.firstStart.apply(this, <any>this._delayParam);\r\n            }\r\n        } else {\r\n            this._beginLoop();\r\n        }\r\n    }\r\n\r\n    private static easeNone(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n}\r\n\r\n","import { Sprite } from \"../display/Sprite\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { Ease } from \"./Ease\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Tween } from \"./Tween\";\r\n\r\n/**\r\n * @private\r\n * <code>Dragging</code> 类是触摸滑动控件。\r\n */\r\nexport class Dragging {\r\n    /** 被拖动的对象。*/\r\n    target: Sprite;\r\n    /** 缓动衰减系数。*/\r\n    ratio: number = 0.92;\r\n    /** 单帧最大偏移量。*/\r\n    maxOffset: number = 60;\r\n    /** 滑动范围。*/\r\n    area: Rectangle;\r\n    /** 表示拖动是否有惯性。*/\r\n    hasInertia: boolean;\r\n    /** 橡皮筋最大值。*/\r\n    elasticDistance: number;\r\n    /** 橡皮筋回弹时间，单位为毫秒。*/\r\n    elasticBackTime: number;\r\n    /** 事件携带数据。*/\r\n    data: any;\r\n\r\n    private _dragging: boolean = false;\r\n    private _clickOnly: boolean = true;\r\n    private _elasticRateX: number;\r\n    private _elasticRateY: number;\r\n    private _lastX: number;\r\n    private _lastY: number;\r\n    private _offsetX: number;\r\n    private _offsetY: number;\r\n    private _offsets: any[];\r\n    private _tween: Tween;\r\n    private _parent: Sprite;\r\n\r\n    /**\r\n     * 开始拖拽。\r\n     * @param\ttarget 待拖拽的 <code>Sprite</code> 对象。\r\n     * @param\tarea 滑动范围。\r\n     * @param\thasInertia 拖动是否有惯性。\r\n     * @param\telasticDistance 橡皮筋最大值。\r\n     * @param\telasticBackTime 橡皮筋回弹时间，单位为毫秒。\r\n     * @param\tdata 事件携带数据。\r\n     * @param\tratio 惯性阻尼系数\r\n     */\r\n    start(target: Sprite, area: Rectangle, hasInertia: boolean, elasticDistance: number, elasticBackTime: number, data: any, ratio: number = 0.92): void {\r\n        this.clearTimer();\r\n\r\n        this.target = target;\r\n        this.area = area;\r\n        this.hasInertia = hasInertia;\r\n        this.elasticDistance = area ? elasticDistance : 0;\r\n        this.elasticBackTime = elasticBackTime;\r\n        this.data = data;\r\n        this.ratio = ratio;\r\n\r\n        this._parent = (target.parent as Sprite);\r\n\r\n        this._clickOnly = true;\r\n        this._dragging = true;\r\n        this._elasticRateX = this._elasticRateY = 1;\r\n        this._lastX = this._parent.mouseX;\r\n        this._lastY = this._parent.mouseY;\r\n\r\n        ILaya.stage.on(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.on(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n        //Laya.stage.on(Event.MOUSE_MOVE, this, onStageMouseMove);\r\n        ILaya.systemTimer.frameLoop(1, this, this.loop);\r\n    }\r\n\r\n    /**\r\n     * 清除计时器。\r\n     */\r\n    private clearTimer(): void {\r\n        ILaya.systemTimer.clear(this, this.loop);\r\n        ILaya.systemTimer.clear(this, this.tweenMove);\r\n        if (this._tween) {\r\n            this._tween.recover();\r\n            this._tween = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止拖拽。\r\n     */\r\n    stop(): void {\r\n        if (this._dragging) {\r\n            ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n            ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n            this._dragging = false;\r\n            this.target && this.area && this.backToArea();\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拖拽的循环处理函数。\r\n     */\r\n    private loop(): void {\r\n        var point: Point = this._parent.getMousePoint();\r\n        var mouseX: number = point.x;\r\n        var mouseY: number = point.y;\r\n        var offsetX: number = mouseX - this._lastX;\r\n        var offsetY: number = mouseY - this._lastY;\r\n\r\n        if (this._clickOnly) {\r\n            if (Math.abs(offsetX * ILaya.stage._canvasTransform.getScaleX()) > 1 || Math.abs(offsetY * ILaya.stage._canvasTransform.getScaleY()) > 1) {\r\n                this._clickOnly = false;\r\n                this._offsets || (this._offsets = []);\r\n                this._offsets.length = 0;\r\n                this.target.event(Event.DRAG_START, this.data);\r\n                //TODO:\r\n                //target._set$P(\"$_MOUSEDOWN\", false);\r\n            } else return;\r\n        } else {\r\n            this._offsets.push(offsetX, offsetY);\r\n        }\r\n        if (offsetX === 0 && offsetY === 0) return;\r\n\r\n        this._lastX = mouseX;\r\n        this._lastY = mouseY;\r\n        this.target.x += offsetX * this._elasticRateX;\r\n        this.target.y += offsetY * this._elasticRateY;\r\n\r\n        this.area && this.checkArea();\r\n\r\n        this.target.event(Event.DRAG_MOVE, this.data);\r\n    }\r\n\r\n    /**\r\n     * 拖拽区域检测。\r\n     */\r\n    private checkArea(): void {\r\n        if (this.elasticDistance <= 0) {\r\n            this.backToArea();\r\n        } else {\r\n            if (this.target._x < this.area.x) {\r\n                var offsetX: number = this.area.x - this.target._x;\r\n            } else if (this.target._x > this.area.x + this.area.width) {\r\n                offsetX = this.target._x - this.area.x - this.area.width;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            this._elasticRateX = Math.max(0, 1 - (offsetX / this.elasticDistance));\r\n\r\n            if (this.target._y < this.area.y) {\r\n                var offsetY: number = this.area.y - this.target.y;\r\n            } else if (this.target._y > this.area.y + this.area.height) {\r\n                offsetY = this.target._y - this.area.y - this.area.height;\r\n            } else {\r\n                offsetY = 0;\r\n            }\r\n            this._elasticRateY = Math.max(0, 1 - (offsetY / this.elasticDistance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动至设定的拖拽区域。\r\n     */\r\n    private backToArea(): void {\r\n        this.target.x = Math.min(Math.max(this.target._x, this.area.x), this.area.x + this.area.width);\r\n        this.target.y = Math.min(Math.max(this.target._y, this.area.y), this.area.y + this.area.height);\r\n    }\r\n\r\n    /**\r\n     * 舞台的抬起事件侦听函数。\r\n     * @param\te Event 对象。\r\n     */\r\n    private onStageMouseUp(e: Event): void {\r\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n        //Laya.stage.off(Event.MOUSE_MOVE, this, onStageMouseMove);\r\n        ILaya.systemTimer.clear(this, this.loop);\r\n\r\n        if (this._clickOnly || !this.target) return;\r\n        //target.mouseEnabled = true;\r\n\r\n        if (this.hasInertia) {\r\n            //计算平均值\r\n            if (this._offsets.length < 1) {\r\n                this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY);\r\n            }\r\n\r\n            this._offsetX = this._offsetY = 0;\r\n            var len: number = this._offsets.length;\r\n            var n: number = Math.min(len, 6);\r\n            var m: number = this._offsets.length - n;\r\n            for (var i: number = len - 1; i > m; i--) {\r\n                this._offsetY += this._offsets[i--];\r\n                this._offsetX += this._offsets[i];\r\n            }\r\n\r\n            this._offsetX = this._offsetX / n * 2;\r\n            this._offsetY = this._offsetY / n * 2;\r\n\r\n            if (Math.abs(this._offsetX) > this.maxOffset) this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset;\r\n            if (Math.abs(this._offsetY) > this.maxOffset) this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset;\r\n            ILaya.systemTimer.frameLoop(1, this, this.tweenMove);\r\n        } else if (this.elasticDistance > 0) {\r\n            this.checkElastic();\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 橡皮筋效果检测。\r\n     */\r\n    private checkElastic(): void {\r\n        var tx: number = NaN;\r\n        var ty: number = NaN;\r\n        if (this.target.x < this.area.x) tx = this.area.x;\r\n        else if (this.target._x > this.area.x + this.area.width) tx = this.area.x + this.area.width;\r\n\r\n        if (this.target.y < this.area.y) ty = this.area.y;\r\n        else if (this.target._y > this.area.y + this.area.height) ty = this.area.y + this.area.height;\r\n\r\n        if (!isNaN(tx) || !isNaN(ty)) {\r\n            var obj: any = {};\r\n            if (!isNaN(tx)) obj.x = tx;\r\n            if (!isNaN(ty)) obj.y = ty;\r\n            this._tween = Tween.to(this.target, obj, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.clear), 0, false, false);\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动。\r\n     */\r\n    private tweenMove(): void {\r\n        this._offsetX *= this.ratio * this._elasticRateX;\r\n        this._offsetY *= this.ratio * this._elasticRateY;\r\n\r\n        this.target.x += this._offsetX;\r\n        this.target.y += this._offsetY;\r\n\r\n        this.area && this.checkArea();\r\n\r\n        this.target.event(Event.DRAG_MOVE, this.data);\r\n\r\n        if ((Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1) || this._elasticRateX < 0.5 || this._elasticRateY < 0.5) {\r\n            ILaya.systemTimer.clear(this, this.tweenMove);\r\n            if (this.elasticDistance > 0) this.checkElastic();\r\n            else this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 结束拖拽。\r\n     */\r\n    private clear(): void {\r\n        if (this.target) {\r\n            this.clearTimer();\r\n            var sp = this.target;\r\n            this.target = null;\r\n            this._parent = null;\r\n            sp.event(Event.DRAG_END, this.data);\r\n        }\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Utils } from \"./Utils\";\r\n\r\nexport class SpriteUtils {\r\n    /**\r\n     * @private\r\n     * 根据传入的显示对象 <code>Sprite</code> 和此显示对象上的 两个点，返回此对象上的两个点在舞台坐标系上组成的最小的矩形区域对象。\r\n     * @param\tsprite 显示对象 <code>Sprite</code>。\r\n     * @param\tx0\t点一的 X 轴坐标点。\r\n     * @param\ty0\t点一的 Y 轴坐标点。\r\n     * @param\tx1\t点二的 X 轴坐标点。\r\n     * @param\ty1\t点二的 Y 轴坐标点。\r\n     * @return 两个点在舞台坐标系组成的矩形对象 <code>Rectangle</code>。\r\n     */\r\n    static getGlobalRecByPoints(sprite: Sprite, x0: number, y0: number, x1: number, y1: number): Rectangle {\r\n        var newLTPoint: Point;\r\n        newLTPoint = Point.create().setTo(x0, y0);\r\n        newLTPoint = sprite.localToGlobal(newLTPoint);\r\n        var newRBPoint: Point;\r\n        newRBPoint = Point.create().setTo(x1, y1);\r\n        newRBPoint = sprite.localToGlobal(newRBPoint);\r\n        var rst: Rectangle = Rectangle._getWrapRec([newLTPoint.x, newLTPoint.y, newRBPoint.x, newRBPoint.y]);\r\n        newLTPoint.recover();\r\n        newRBPoint.recover();\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 计算传入的显示对象 <code>Sprite</code> 的全局坐标系的坐标和缩放值，返回 <code>Rectangle</code> 对象存放计算出的坐标X值、Y值、ScaleX值、ScaleY值。\r\n     * @param\tsprite <code>Sprite</code> 对象。\r\n     * @return  矩形对象 <code>Rectangle</code>\r\n     */\r\n    static getGlobalPosAndScale(sprite: Sprite): Rectangle {\r\n        return SpriteUtils.getGlobalRecByPoints(sprite, 0, 0, 1, 1);\r\n    }\r\n\r\n    /**\r\n    * 获取指定区域内相对于窗口左上角的transform。\r\n    * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\r\n    * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\r\n    * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\r\n    * @return\r\n    */\r\n    static getTransformRelativeToWindow(coordinateSpace: Sprite, x: number, y: number): any {\r\n        var stage = ILaya.stage;\r\n\r\n        // coordinateSpace的全局缩放、坐标\r\n        var globalTransform: Rectangle = SpriteUtils.getGlobalPosAndScale(coordinateSpace);\r\n        // canvas的transform矩阵\r\n        var canvasMatrix: Matrix = stage._canvasTransform.clone();\r\n        // 在矩阵变化前前记录的canvas的坐标\r\n        var canvasLeft: number = canvasMatrix.tx;\r\n        var canvasTop: number = canvasMatrix.ty;\r\n\r\n        // 把矩阵转回0度，得到正确的画布缩放比\r\n        canvasMatrix.rotate(-Math.PI / 180 * stage.canvasDegree);\r\n        // 组合画布缩放和舞台适配缩放\r\n        canvasMatrix.scale(stage.clientScaleX, stage.clientScaleY);\r\n        // 画布是否处于正常角度的垂直角度，-90或90度\r\n        var perpendicular: boolean = (stage.canvasDegree % 180 != 0);\r\n        var tx: number, ty: number;\r\n\r\n        if (perpendicular) {\r\n            // 在舞台上的坐标\r\n            tx = y + globalTransform.y;\r\n            ty = x + globalTransform.x;\r\n\r\n            // 在画布上的坐标\r\n            tx *= canvasMatrix.d;\r\n            ty *= canvasMatrix.a;\r\n\r\n            // 设置了screenMode = horizontal\r\n            if (stage.canvasDegree == 90) {\r\n                // 在浏览器窗口上的坐标\r\n                // 此时画布的left是视觉上的right，画布的left是视觉上的top\r\n                tx = canvasLeft - tx;\r\n                ty += canvasTop;\r\n            }\r\n            // screenMode = vertical并且设备在横屏状态，画布旋转-90度\r\n            else {\r\n                // 在浏览器窗口上的坐标\r\n                // 此时画布的left是视觉上的left，画布的top是视觉上的bottom\r\n                tx += canvasLeft;\r\n                ty = canvasTop - ty;\r\n            }\r\n        }\r\n        // 没有canvas旋转\r\n        else {\r\n            // 在舞台上的坐标\r\n            tx = x + globalTransform.x;\r\n            ty = y + globalTransform.y;\r\n\r\n            // 在画布上的坐标\r\n            tx *= canvasMatrix.a;\r\n            ty *= canvasMatrix.d;\r\n\r\n            // 在浏览器窗口上的坐标\r\n            tx += canvasLeft;\r\n            ty += canvasTop;\r\n        }\r\n\r\n        // Safari兼容\r\n        ty += stage['_safariOffsetY'];\r\n\r\n        // 组合画布缩放和舞台适配缩放以及显示对象缩放，得到DOM原因的缩放因子\r\n        var domScaleX: number, domScaleY: number;\r\n        if (perpendicular) {\r\n            domScaleX = canvasMatrix.d * globalTransform.height;\r\n            domScaleY = canvasMatrix.a * globalTransform.width;\r\n        } else {\r\n            domScaleX = canvasMatrix.a * globalTransform.width;\r\n            domScaleY = canvasMatrix.d * globalTransform.height;\r\n        }\r\n\r\n        return { x: tx, y: ty, scaleX: domScaleX, scaleY: domScaleY };\r\n    }\r\n\r\n    /**\r\n     * 使DOM元素使用舞台内的某块区域内。\r\n     * @param\tdom\t\t\t\tDOM元素引用\r\n     * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\r\n     * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\r\n     * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\r\n     * @param\twidth\t\t\t宽度\r\n     * @param\theight\t\t\t高度\r\n     */\r\n    static fitDOMElementInArea(dom: any, coordinateSpace: Sprite, x: number, y: number, width: number, height: number): void {\r\n        if (!dom._fitLayaAirInitialized) {\r\n            dom._fitLayaAirInitialized = true;\r\n            dom.style.transformOrigin = dom.style.webKittransformOrigin = \"left top\";\r\n            dom.style.position = \"absolute\"\r\n        }\r\n\r\n        var transform: any = SpriteUtils.getTransformRelativeToWindow(coordinateSpace, x, y);\r\n\r\n        // 设置dom样式\r\n        dom.style.transform = dom.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n        dom.style.width = width + 'px';\r\n        dom.style.height = height + 'px';\r\n        dom.style.left = transform.x + 'px';\r\n        dom.style.top = transform.y + 'px';\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 对传入的数组列表，根据子项的属性 Z 值进行重新排序。返回是否已重新排序的 Boolean 值。\r\n     * @param\tarray 子对象数组。\r\n     * @return\tBoolean 值，表示是否已重新排序。\r\n     */\r\n    static updateOrder(array: any[]): boolean {\r\n        if (!array || array.length < 2) return false;\r\n        var i: number = 1, j: number, len: number = array.length, key: number, c: Sprite;\r\n        while (i < len) {\r\n            j = i;\r\n            c = array[j];\r\n            key = array[j]._zOrder;\r\n            while (--j > -1) {\r\n                if (array[j]._zOrder > key) array[j + 1] = array[j];\r\n                else break;\r\n            }\r\n            array[j + 1] = c;\r\n            i++;\r\n        }\r\n        return true;\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Filter } from \"../filters/Filter\";\r\nimport { GrahamScan } from \"../maths/GrahamScan\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { RenderSprite } from \"../renders/RenderSprite\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { BoundsStyle } from \"./css/BoundsStyle\";\r\nimport { CacheStyle } from \"./css/CacheStyle\";\r\nimport { SpriteStyle } from \"./css/SpriteStyle\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Node } from \"./Node\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\n// import { Stage } from \"./Stage\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Dragging } from \"../utils/Dragging\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Scene } from \"./Scene\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { IHitArea } from \"../utils/IHitArea\";\r\nimport type { Material } from \"../resource/Material\";\r\n\r\n/**在显示对象上按下后调度。\r\n * @eventType Event.MOUSE_DOWN\r\n * */\r\n/*[Event(name = \"mousedown\", type = \"laya.events.Event\")]*/\r\n/**在显示对象抬起后调度。\r\n * @eventType Event.MOUSE_UP\r\n * */\r\n/*[Event(name = \"mouseup\", type = \"laya.events.Event\")]*/\r\n/**鼠标在对象身上进行移动后调度\r\n * @eventType Event.MOUSE_MOVE\r\n * */\r\n/*[Event(name = \"mousemove\", type = \"laya.events.Event\")]*/\r\n/**鼠标经过对象后调度。\r\n * @eventType Event.MOUSE_OVER\r\n * */\r\n/*[Event(name = \"mouseover\", type = \"laya.events.Event\")]*/\r\n/**鼠标离开对象后调度。\r\n * @eventType Event.MOUSE_OUT\r\n * */\r\n/*[Event(name = \"mouseout\", type = \"laya.events.Event\")]*/\r\n/**鼠标点击对象后调度。\r\n * @eventType Event.CLICK\r\n * */\r\n/*[Event(name = \"click\", type = \"laya.events.Event\")]*/\r\n/**开始拖动后调度。\r\n * @eventType Event.DRAG_START\r\n * */\r\n/*[Event(name = \"dragstart\", type = \"laya.events.Event\")]*/\r\n/**拖动中调度。\r\n * @eventType Event.DRAG_MOVE\r\n * */\r\n/*[Event(name = \"dragmove\", type = \"laya.events.Event\")]*/\r\n/**拖动结束后调度。\r\n * @eventType Event.DRAG_END\r\n * */\r\n/*[Event(name = \"dragend\", type = \"laya.events.Event\")]*/\r\nexport class Sprite extends Node {\r\n    /**@internal */\r\n    _x: number = 0;\r\n    /**@internal */\r\n    _y: number = 0;\r\n    /**@internal */\r\n    _width: number = 0;\r\n    /**@internal */\r\n    _height: number = 0;\r\n    /***@internal X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\r\n    _anchorX: number = 0;\r\n    /***@internal Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\r\n    _anchorY: number = 0;\r\n    /**@internal */\r\n    _visible: boolean = true;\r\n    /**@internal 鼠标状态，0:auto,1:mouseEnabled=false,2:mouseEnabled=true。*/\r\n    _mouseState: number = 0;\r\n    /**@internal z排序，数值越大越靠前。*/\r\n    _zOrder: number = 0;\r\n    /**@internal */\r\n    _renderType: number = 0;\r\n    /**@internal */\r\n    _transform: Matrix | null = null;\r\n    /**@internal */\r\n    protected _tfChanged: boolean = false;\r\n    /**@internal */\r\n    protected _repaint: number = SpriteConst.REPAINT_NONE;\r\n    /**@internal */\r\n    private _texture: Texture | null = null;\r\n    /**@internal */\r\n    private _sizeFlag: number = 0;\r\n\r\n    //以下变量为系统调用，请不要直接使用\r\n    /**@internal */\r\n    _style: SpriteStyle = SpriteStyle.EMPTY;\r\n    /**@internal */\r\n    _cacheStyle: CacheStyle = CacheStyle.EMPTY;\r\n    /**@internal */\r\n    _boundStyle: BoundsStyle | null = null;\r\n    /**@internal */\r\n    _graphics: Graphics | null = null;\r\n\r\n    _ownGraphics: boolean = false;\r\n\r\n    /**\r\n     * <p>鼠标事件与此对象的碰撞检测是否可穿透。碰撞检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\r\n     * <p>穿透表示鼠标事件发生的位置处于本对象绘图区域内时，才算命中，而与对象宽高和值为Rectangle对象的hitArea属性无关。如果sprite.hitArea值是HitArea对象，表示显式声明了此对象的鼠标事件响应区域，而忽略对象的宽高、mouseThrough属性。</p>\r\n     * <p>影响对象鼠标事件响应区域的属性为：width、height、hitArea，优先级顺序为：hitArea(type:HitArea)>hitArea(type:Rectangle)>width/height。</p>\r\n     * @default false\t不可穿透，此对象的鼠标响应区域由width、height、hitArea属性决定。</p>\r\n     */\r\n    mouseThrough: boolean = false;\r\n    /**\r\n     * <p>指定是否自动计算宽高数据。默认值为 false 。</p>\r\n     * <p>Sprite宽高默认为0，并且不会随着绘制内容的变化而变化，如果想根据绘制内容获取宽高，可以设置本属性为true，或者通过getBounds方法获取。设置为true，对性能有一定影响。</p>\r\n     */\r\n    autoSize: boolean = false;\r\n    /**\r\n     * <p>指定鼠标事件检测是优先检测自身，还是优先检测其子对象。鼠标事件检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\r\n     * <p>如果为false，优先检测子对象，当有子对象被命中时，中断检测，获得命中目标。如果未命中任何子对象，最后再检测此对象；如果为true，则优先检测本对象，如果本对象没有被命中，直接中断检测，表示没有命中目标；如果本对象被命中，则进一步递归检测其子对象，以确认最终的命中目标。</p>\r\n     * <p>合理使用本属性，能减少鼠标事件检测的节点，提高性能。可以设置为true的情况：开发者并不关心此节点的子节点的鼠标事件检测结果，也就是以此节点作为其子节点的鼠标事件检测依据。</p>\r\n     * <p>Stage对象和UI的View组件默认为true。</p>\r\n     * @default false\t优先检测此对象的子对象，当递归检测完所有子对象后，仍然没有找到目标对象，最后再检测此对象。\r\n     */\r\n    hitTestPrior: boolean = false;\r\n\r\n    /** 如果节点需要加载相关的皮肤，但放在不同域，这里可以设置 **/\r\n    _skinBaseUrl: string;\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._style && this._style.recover();\r\n        this._cacheStyle && this._cacheStyle.recover();\r\n        this._boundStyle && this._boundStyle.recover();\r\n        this._transform && this._transform.recover();\r\n        this._style = null;\r\n        this._cacheStyle = null;\r\n        this._boundStyle = null;\r\n        this._transform = null;\r\n        this._texture && this._texture._removeReference();\r\n        this._texture = null;\r\n        this._graphics && this._ownGraphics && this._graphics.destroy();\r\n        this._graphics = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get scene(): Scene {\r\n        return <Scene>this._scene;\r\n    }\r\n\r\n    /**根据zOrder进行重新排序。*/\r\n    updateZOrder(): void {\r\n        SpriteUtils.updateOrder(this._children) && this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getBoundsStyle(): BoundsStyle {\r\n        if (!this._boundStyle) this._boundStyle = BoundsStyle.create();\r\n        return this._boundStyle;\r\n    }\r\n\r\n    /**@internal */\r\n    _setCustomRender(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 设置是否开启自定义渲染，只有开启自定义渲染，才能使用customRender函数渲染。\r\n     */\r\n    set customRenderEnable(b: boolean) {\r\n        if (b) {\r\n            this._renderType |= SpriteConst.CUSTOM;\r\n            this._setCustomRender();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 指定显示对象是否缓存为静态图像，cacheAs时，子对象发生变化，会自动重新缓存，同时也可以手动调用reCache方法更新缓存。\r\n     * 建议把不经常变化的“复杂内容”缓存为静态图像，能极大提高渲染性能。cacheAs有\"none\"，\"normal\"和\"bitmap\"三个值可选。\r\n     * 默认为\"none\"，不做任何缓存。\r\n     * 当值为\"normal\"时，canvas模式下进行画布缓存，webgl模式下进行命令缓存。\r\n     * 当值为\"bitmap\"时，canvas模式下进行依然是画布缓存，webgl模式下使用renderTarget缓存。\r\n     * webgl下renderTarget缓存模式缺点：会额外创建renderTarget对象，增加内存开销，缓存面积有最大2048限制，不断重绘时会增加CPU开销。优点：大幅减少drawcall，渲染性能最高。\r\n     * webgl下命令缓存模式缺点：只会减少节点遍历及命令组织，不会减少drawcall数，性能中等。优点：没有额外内存开销，无需renderTarget支持。\r\n     */\r\n    get cacheAs(): string {\r\n        return this._cacheStyle.userSetCache;\r\n    }\r\n\r\n    /**@internal */\r\n    _setCacheAs(value: string): void {\r\n        //_dataf32[SpriteConst.POSCACHE] = value == \"bitmap\"?2:(value == \"normal\"?1:0);\r\n    }\r\n\r\n    set cacheAs(value: string) {\r\n        if (value === this._cacheStyle.userSetCache) return;\r\n        if ('bitmap' == value && !(this._cacheStyle.canvas instanceof HTMLCanvas)) {\r\n            this._cacheStyle.canvas = null;\r\n        }\r\n\r\n        this._getCacheStyle().userSetCache = value;\r\n\r\n        if (this.mask && value === 'normal') return;\r\n        this._setCacheAs(value);\r\n        this._checkCanvasEnable();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * 更新_cnavas相关的状态\r\n     */\r\n    private _checkCanvasEnable(): void {\r\n        var tEnable: boolean = this._cacheStyle.needEnableCanvasRender();\r\n        this._getCacheStyle().enableCanvasRender = tEnable;\r\n        if (tEnable) {\r\n            if (this._cacheStyle.needBitmapCache()) {\r\n                this._cacheStyle.cacheAs = \"bitmap\";\r\n            } else {\r\n                this._cacheStyle.cacheAs = this._cacheStyle.userSetCache;\r\n            }\r\n            this._cacheStyle.reCache = true;\r\n            this._renderType |= SpriteConst.CANVAS;\r\n        } else {\r\n            this._cacheStyle.cacheAs = \"none\";\r\n            this._cacheStyle.releaseContext();\r\n            this._renderType &= ~SpriteConst.CANVAS;\r\n        }\r\n        this._setCacheAs(this._cacheStyle.cacheAs);\r\n    }\r\n\r\n    /**设置cacheAs为非空时此值才有效，staticCache=true时，子对象变化时不会自动更新缓存，只能通过调用reCache方法手动刷新。*/\r\n    get staticCache(): boolean {\r\n        return this._cacheStyle.staticCache;\r\n    }\r\n\r\n    set staticCache(value: boolean) {\r\n        this._getCacheStyle().staticCache = value;\r\n        if (!value) this.reCache();\r\n    }\r\n\r\n    /**在设置cacheAs的情况下，调用此方法会重新刷新缓存。*/\r\n    reCache(): void {\r\n        this._cacheStyle.reCache = true;\r\n        this._repaint |= SpriteConst.REPAINT_CACHE;\r\n    }\r\n\r\n    getRepaint(): number {\r\n        return this._repaint;\r\n    }\r\n\r\n    /**@internal */\r\n    _setX(value: number): void {\r\n        this._x = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setY(value: number): void {\r\n        this._y = value;\r\n    }\r\n\r\n    /**表示显示对象相对于父容器的水平方向坐标值。*/\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        if (this._destroyed) return;\r\n        if (this._x !== value) {\r\n            this._setX(value);\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            //_setTranformChange();\r\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n            var p: Sprite = this._cacheStyle.maskParent;\r\n            if (p) {\r\n                p.repaint(SpriteConst.REPAINT_CACHE);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**表示显示对象相对于父容器的垂直方向坐标值。*/\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        if (this._destroyed) return;\r\n        if (this._y !== value) {\r\n            this._setY(value);\r\n\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            //_setTranformChange();\r\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n            var p: Sprite = this._cacheStyle.maskParent;\r\n            if (p) {\r\n                p.repaint(SpriteConst.REPAINT_CACHE);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的宽度，单位为像素，默认为0。</p>\r\n     * <p>此宽度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\r\n     * <p>可以通过getbounds获取显示对象图像的实际宽度。</p>\r\n     */\r\n    get width(): number {\r\n        return this.get_width();\r\n    }\r\n\r\n    set width(value: number) {\r\n        this.set_width(value);\r\n    }\r\n\r\n    set_width(value: number): void {\r\n        let flag = this._sizeFlag;\r\n        if (value == null) {\r\n            value = 0;\r\n            this._sizeFlag &= ~1;\r\n        }\r\n        else if (value == 0)\r\n            this._sizeFlag |= 1;\r\n        else\r\n            this._sizeFlag &= ~1;\r\n        if (this._width !== value || flag != this._sizeFlag) {\r\n            this._width = value;\r\n            this._setWidth(value);\r\n            this._setPivotX(this._anchorX * value);\r\n            if (this._graphics) this._graphics._clearBoundsCache(true);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n\r\n    get_width(): number {\r\n        if (!this.autoSize) return (this._width == 0 && (this._sizeFlag & 1) == 0 && this.texture) ? this.texture.width : this._width;\r\n        if (this.texture) return this.texture.width;\r\n        if (!this._graphics && this._children.length === 0) return 0;\r\n        return this.getSelfBounds().width;\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的高度，单位为像素，默认为0。</p>\r\n     * <p>此高度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\r\n     * <p>可以通过getbounds获取显示对象图像的实际高度。</p>\r\n     */\r\n    get height(): number {\r\n        return this.get_height();\r\n    }\r\n\r\n    set height(value: number) {\r\n        this.set_height(value);\r\n    }\r\n\r\n    // for ts\r\n    set_height(value: number): void {\r\n        let flag = this._sizeFlag;\r\n        if (value == null) {\r\n            value = 0;\r\n            this._sizeFlag &= ~2;\r\n        }\r\n        else if (value == 0)\r\n            this._sizeFlag |= 2;\r\n        else\r\n            this._sizeFlag &= ~2;\r\n        if (this._height !== value || flag != this._sizeFlag) {\r\n            this._height = value;\r\n            this._setHeight(value);\r\n            this._setPivotY(this._anchorY * value);\r\n            if (this._graphics) this._graphics._clearBoundsCache(true);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_height(): number {\r\n        if (!this.autoSize) return (this._height == 0 && (this._sizeFlag & 2) == 0 && this.texture) ? this.texture.height : this._height;\r\n        if (this.texture) return this.texture.height;\r\n        if (!this._graphics && this._children.length === 0) return 0;\r\n        return this.getSelfBounds().height;\r\n    }\r\n\r\n    get _isWidthSet() {\r\n        return this._width != 0 || (this._sizeFlag & 1) != 0;\r\n    }\r\n\r\n    get _isHeightSet() {\r\n        return this._height != 0 || (this._sizeFlag & 2) != 0;\r\n    }\r\n\r\n    /**@internal */\r\n    _setWidth(value: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _setHeight(value: number): void {\r\n    }\r\n\r\n    protected _shouldRefreshLayout() {\r\n    }\r\n\r\n    /**\r\n     * <p>对象的显示宽度（以像素为单位）。</p>\r\n     */\r\n    get displayWidth(): number {\r\n        return this.width * this.scaleX;\r\n    }\r\n\r\n    /**\r\n     * <p>对象的显示高度（以像素为单位）。</p>\r\n     */\r\n    get displayHeight(): number {\r\n        return this.height * this.scaleY;\r\n    }\r\n\r\n    /**\r\n     * 设置对象bounds大小，如果有设置，则不再通过getBounds计算，合理使用能提高性能。\r\n     * @param\tbound bounds矩形区域\r\n     */\r\n    setSelfBounds(bound: Rectangle): void {\r\n        this._getBoundsStyle().userBounds = bound;\r\n    }\r\n\r\n    /**\r\n     * <p>获取本对象在父容器坐标系的矩形显示区域。</p>\r\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\r\n     * @return 矩形区域。\r\n     */\r\n    getBounds(): Rectangle {\r\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._boundPointsToParent());\r\n    }\r\n\r\n    /**\r\n     * 获取本对象在自己坐标系的矩形显示区域。\r\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\r\n     * @return 矩形区域。\r\n     */\r\n    getSelfBounds(): Rectangle {\r\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds;\r\n        if (!this._graphics && this._children.length === 0 && !this._texture)\r\n            return Rectangle.TEMP.setTo(0, 0, this.width, this.height); // 如果没有graphics则取对象指定的大小。原来是0000\r\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._getBoundPointsM(false));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取本对象在父容器坐标系的显示区域多边形顶点列表。\r\n     * 当显示对象链中有旋转时，返回多边形顶点列表，无旋转时返回矩形的四个顶点。\r\n     * @param ifRotate\t（可选）之前的对象链中是否有旋转。\r\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\r\n     */\r\n    _boundPointsToParent(ifRotate: boolean = false): any[] {\r\n        let pX: number = 0, pY: number = 0;\r\n        if (this._style) {\r\n            pX = this.pivotX;\r\n            pY = this.pivotY;\r\n            ifRotate = ifRotate || (this._style.rotation !== 0);\r\n            if (this._style.scrollRect) {\r\n                pX += this._style.scrollRect.x;\r\n                pY += this._style.scrollRect.y;\r\n            }\r\n        }\r\n        let pList: any[] = this._getBoundPointsM(ifRotate);\r\n        if (!pList || pList.length < 1) return pList;\r\n\r\n        if (pList.length != 8) {\r\n            pList = ifRotate ? GrahamScan.scanPList(pList) : Rectangle._getWrapRec(pList, Rectangle.TEMP)._getBoundPoints();\r\n        }\r\n\r\n        if (!this.transform) {\r\n            Utils.transPointList(pList, this._x - pX, this._y - pY);\r\n            return pList;\r\n        }\r\n        let tPoint = Point.TEMP;\r\n        let len = pList.length;\r\n        for (let i = 0; i < len; i += 2) {\r\n            tPoint.x = pList[i];\r\n            tPoint.y = pList[i + 1];\r\n            this.toParentPoint(tPoint);\r\n            pList[i] = tPoint.x;\r\n            pList[i + 1] = tPoint.y;\r\n        }\r\n        return pList;\r\n    }\r\n\r\n    /**\r\n     * 返回此实例中的绘图对象（ <code>Graphics</code> ）的显示区域，不包括子对象。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 一个 Rectangle 对象，表示获取到的显示区域。\r\n     */\r\n    getGraphicBounds(realSize: boolean = false): Rectangle {\r\n        if (!this._graphics) return Rectangle.TEMP.setTo(0, 0, 0, 0);\r\n        return this._graphics.getBounds(realSize);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取自己坐标系的显示区域多边形顶点列表\r\n     * @param ifRotate\t（可选）当前的显示对象链是否由旋转\r\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\r\n     */\r\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\r\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds._getBoundPoints();\r\n        if (!this._boundStyle) this._getBoundsStyle();\r\n        let rst = this._boundStyle.temBM;\r\n        if (!rst) rst = this._boundStyle.temBM = [];\r\n        if (this._style.scrollRect) {\r\n            rst.length = 0;\r\n            var rec: Rectangle = Rectangle.TEMP;\r\n            rec.copyFrom(this._style.scrollRect);\r\n            rst.push(...rec._getBoundPoints());\r\n            return rst;\r\n        }\r\n        let pList: any[];\r\n        if (this._graphics) {\r\n            pList = this._graphics.getBoundPoints();\r\n        } else {\r\n            rst.length = 0;\r\n            pList = rst;\r\n        }\r\n        if (this._texture) {\r\n            rec = Rectangle.TEMP;\r\n            rec.setTo(0, 0, this.width || this._texture.width, this.height || this._texture.height);\r\n            pList.push(...rec._getBoundPoints());\r\n        }\r\n        //处理子对象区域\r\n        let chidren = this._children;\r\n        for (let i = 0, n = chidren.length; i < n; i++) {\r\n            let child = <Sprite>chidren[i]; //_visible===true隐含了是Sprite\r\n            if (child._visible === true && child._cacheStyle.maskParent != this) {\r\n                let cList = child._boundPointsToParent(ifRotate);\r\n                if (cList) {\r\n                    if (pList)\r\n                        pList.push(...cList);\r\n                    else\r\n                        pList = cList;\r\n                }\r\n            }\r\n        }\r\n        return pList;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取cache数据。\r\n     * @return  cache数据 CacheStyle 。\r\n     */\r\n    _getCacheStyle(): CacheStyle {\r\n        this._cacheStyle === CacheStyle.EMPTY && (this._cacheStyle = CacheStyle.create());\r\n        return this._cacheStyle;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取样式。\r\n     * @return  样式 Style 。\r\n     */\r\n    getStyle(): SpriteStyle {\r\n        this._style === SpriteStyle.EMPTY && (this._style = SpriteStyle.create());\r\n        return this._style;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置样式。\r\n     * @param\tvalue 样式。\r\n     */\r\n    setStyle(value: SpriteStyle): void {\r\n        this._style = value;\r\n    }\r\n\r\n    /**X轴缩放值，默认值为1。设置为负数，可以实现水平反转效果，比如scaleX=-1。*/\r\n    get scaleX(): number {\r\n        return this._style.scaleX;\r\n    }\r\n\r\n    set scaleX(value: number) {\r\n        this.set_scaleX(value);\r\n    }\r\n\r\n    /**Y轴缩放值，默认值为1。设置为负数，可以实现垂直反转效果，比如scaleX=-1。*/\r\n    get scaleY(): number {\r\n        return this._style.scaleY;\r\n    }\r\n\r\n    set scaleY(value: number) {\r\n        this.set_scaleY(value);\r\n    }\r\n\r\n    set_scaleX(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleX !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setScaleX(value);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_scaleX(): number {\r\n        return this._style.scaleX;\r\n    }\r\n\r\n    set_scaleY(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleY !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setScaleY(value);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_scaleY(): number {\r\n        return this._style.scaleY;\r\n    }\r\n\r\n\r\n    /**@internal */\r\n    _setScaleX(value: number): void {\r\n        this._style.scaleX = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setScaleY(value: number): void {\r\n        this._style.scaleY = value;\r\n    }\r\n\r\n    /**旋转角度，默认值为0。以角度为单位。*/\r\n    get rotation(): number {\r\n        return this._style.rotation;\r\n    }\r\n\r\n    set rotation(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.rotation !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setRotation(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setRotation(value: number): void {\r\n        this.getStyle().rotation = value;\r\n    }\r\n\r\n    /**水平倾斜角度，默认值为0。以角度为单位。*/\r\n    get skewX(): number {\r\n        return this._style.skewX;\r\n    }\r\n\r\n    set skewX(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.skewX !== value) {\r\n            this._setSkewX(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setSkewX(value: number): void {\r\n        this._style.skewX = value;\r\n    }\r\n\r\n    /**垂直倾斜角度，默认值为0。以角度为单位。*/\r\n    get skewY(): number {\r\n        return this._style.skewY;\r\n    }\r\n\r\n    set skewY(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.skewY !== value) {\r\n            this._setSkewY(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setSkewY(value: number): void {\r\n        this._style.skewY = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _createTransform(): Matrix {\r\n        return Matrix.create();\r\n    }\r\n\r\n    /**@private */\r\n    protected _adjustTransform(): Matrix {\r\n        this._tfChanged = false;\r\n        var style: SpriteStyle = this._style;\r\n        var sx: number = style.scaleX, sy: number = style.scaleY;\r\n        var sskx: number = style.skewX;\r\n        var ssky: number = style.skewY;\r\n        var rot: number = style.rotation;\r\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\r\n        if (rot || sx !== 1 || sy !== 1 || sskx !== 0 || ssky !== 0) {\r\n            m._bTransform = true;\r\n            var skx: number = (rot - sskx) * 0.0174532922222222;//laya.CONST.PI180;\r\n            var sky: number = (rot + ssky) * 0.0174532922222222;\r\n            var cx: number = Math.cos(sky);\r\n            var ssx: number = Math.sin(sky);\r\n            var cy: number = Math.sin(skx);\r\n            var ssy: number = Math.cos(skx);\r\n            m.a = sx * cx;\r\n            m.b = sx * ssx;\r\n            m.c = -sy * cy;\r\n            m.d = sy * ssy;\r\n            m.tx = m.ty = 0;\r\n        } else {\r\n            m.identity();\r\n            this._renderType &= ~SpriteConst.TRANSFORM;\r\n        }\r\n        return m;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTransform(value: Matrix): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>对象的矩阵信息。通过设置矩阵可以实现节点旋转，缩放，位移效果。</p>\r\n     * <p>矩阵更多信息请参考 <code>Matrix</code></p>\r\n     */\r\n    get transform(): Matrix {\r\n        return this._tfChanged ? this._adjustTransform() : this._transform;\r\n    }\r\n\r\n    set transform(value: Matrix) {\r\n        this.set_transform(value);\r\n    }\r\n\r\n    get_transform(): Matrix {\r\n        return this._tfChanged ? this._adjustTransform() : this._transform;\r\n    }\r\n\r\n    set_transform(value: Matrix): void {\r\n        this._tfChanged = false;\r\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\r\n        value.copyTo(m);\r\n        this._setTransform(m);\r\n        //设置transform时重置x,y\r\n        if (value) {\r\n            this._x = m.tx;\r\n            this._y = m.ty;\r\n            m.tx = m.ty = 0;\r\n        }\r\n        if (value) this._renderType |= SpriteConst.TRANSFORM;\r\n        else {\r\n            this._renderType &= ~SpriteConst.TRANSFORM;\r\n        }\r\n        this.parentRepaint();\r\n    }\r\n\r\n    /**@internal */\r\n    _setPivotX(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        style.pivotX = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _getPivotX(): number {\r\n        return this._style.pivotX;\r\n    }\r\n\r\n    /**@internal */\r\n    _setPivotY(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        style.pivotY = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _getPivotY(): number {\r\n        return this._style.pivotY;\r\n    }\r\n\r\n    /**X轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\r\n    get pivotX(): number {\r\n        return this._getPivotX();\r\n    }\r\n\r\n    set pivotX(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.pivotX != value) {\r\n            this._setPivotX(value);\r\n            let t = this.width;\r\n            if (t != 0) this._anchorX = value / t;\r\n            this._shouldRefreshLayout();\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    /**Y轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\r\n    get pivotY(): number {\r\n        return this._getPivotY();\r\n    }\r\n\r\n    set pivotY(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.pivotY != value) {\r\n            this._setPivotY(value);\r\n            let t = this.height;\r\n            if (t != 0) this._anchorY = value / t;\r\n            this._shouldRefreshLayout();\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    /**X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\r\n    get anchorX(): number {\r\n        return this.get_anchorX();\r\n    }\r\n\r\n    get_anchorX(): number {\r\n        return this._anchorX;\r\n    }\r\n\r\n    set anchorX(value: number) {\r\n        this.set_anchorX(value);\r\n    }\r\n\r\n    set_anchorX(value: number) {\r\n        if (isNaN(value))\r\n            value = null;\r\n        if (this._anchorX != value) {\r\n            this._anchorX = value;\r\n            if (value != null) {\r\n                this._setPivotX(value * this.width);\r\n                this._shouldRefreshLayout();\r\n                this.repaint();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\r\n    get anchorY(): number {\r\n        return this.get_anchorY();\r\n    }\r\n\r\n    get_anchorY(): number {\r\n        return this._anchorY;\r\n    }\r\n\r\n    set anchorY(value: number) {\r\n        this.set_anchorY(value);\r\n    }\r\n\r\n    set_anchorY(value: number) {\r\n        if (isNaN(value))\r\n            value = null;\r\n        if (this._anchorY != value) {\r\n            this._anchorY = value;\r\n            if (value != null) {\r\n                this._setPivotY(value * this.height);\r\n                this._shouldRefreshLayout();\r\n                this.repaint();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setAlpha(value: number): void {\r\n        if (this._style.alpha !== value) {\r\n            var style: SpriteStyle = this.getStyle();\r\n            style.alpha = value;\r\n            if (value !== 1) this._renderType |= SpriteConst.ALPHA;\r\n            else this._renderType &= ~SpriteConst.ALPHA;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _getAlpha(): number {\r\n        return this._style.alpha;\r\n    }\r\n\r\n    /**透明度，值为0-1，默认值为1，表示不透明。更改alpha值会影响drawcall。*/\r\n    get alpha(): number {\r\n        return this._getAlpha();\r\n    }\r\n\r\n    set alpha(value: number) {\r\n        value = value < 0 ? 0 : (value > 1 ? 1 : value);\r\n        this._setAlpha(value);\r\n    }\r\n\r\n    /**表示是否可见，默认为true。如果设置不可见，节点将不被渲染。*/\r\n    get visible(): boolean {\r\n        return this.get_visible();\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        this.set_visible(value);\r\n    }\r\n\r\n    get_visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    set_visible(value: boolean): void {\r\n        if (this._visible !== value) {\r\n            this._visible = value;\r\n            this.parentRepaint(SpriteConst.REPAINT_ALL);\r\n        }\r\n    }\r\n\r\n    /**指定要使用的混合模式。目前只支持\"lighter\"。*/\r\n    get blendMode(): string {\r\n        return this._style.blendMode;\r\n    }\r\n\r\n    set blendMode(value: string) {\r\n        if (this.getStyle().blendMode != value) {\r\n            this.getStyle().blendMode = value;\r\n            if (value && value != \"source-over\")\r\n                this._renderType |= SpriteConst.BLEND;\r\n            else\r\n                this._renderType &= ~SpriteConst.BLEND;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    /**绘图对象。封装了绘制位图和矢量图的接口，Sprite所有的绘图操作都通过Graphics来实现的。*/\r\n    get graphics(): Graphics {\r\n        if (!this._graphics) {\r\n            this.graphics = new Graphics();\r\n            this._ownGraphics = true;\r\n        }\r\n        return this._graphics;\r\n    }\r\n\r\n    set graphics(value: Graphics) {\r\n        this.setGraphics(value, false);\r\n    }\r\n\r\n    setGraphics(value: Graphics, transferOwnership: boolean) {\r\n        if (this._graphics) {\r\n            this._graphics._sp = null;\r\n            if (this._ownGraphics)\r\n                this._graphics.destroy();\r\n        }\r\n        this._ownGraphics = transferOwnership;\r\n        this._graphics = value;\r\n        if (value) {\r\n            this._renderType |= SpriteConst.GRAPHICS;\r\n            value._sp = this;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.GRAPHICS;\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    get material() {\r\n        return this._graphics?.material;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set material(value: Material) {\r\n        if (this._graphics == null && value == null)\r\n            return;\r\n\r\n        this.graphics.material = value;\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的滚动矩形范围，具有裁剪效果(如果只想限制子对象渲染区域，请使用viewport)</p>\r\n     * <p> srollRect和viewport的区别：<br/>\r\n     * 1.srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\r\n     * 2.设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\r\n     */\r\n    get scrollRect(): Rectangle {\r\n        return this._style.scrollRect;\r\n    }\r\n\r\n    set scrollRect(value: Rectangle) {\r\n        if (this.getStyle().scrollRect == null && value == null)\r\n            return;\r\n\r\n        this.getStyle().scrollRect = value;\r\n        //viewport = value;\r\n        if (value) {\r\n            this._renderType |= SpriteConst.CLIP;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.CLIP;\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * <p>设置坐标位置。相当于分别设置x和y属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pos(...).scale(...);</p>\r\n     * @param\tx\t\t\tX轴坐标。\r\n     * @param\ty\t\t\tY轴坐标。\r\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.x=value进行赋值，极速模式直接调用内部函数处理，如果未重写x,y属性，建议设置为急速模式性能更高。\r\n     * @return\t返回对象本身。\r\n     */\r\n    pos(x: number, y: number, speedMode: boolean = false): Sprite {\r\n        if (this._x !== x || this._y !== y) {\r\n            if (this._destroyed) return this;\r\n            if (speedMode) {\r\n                this._setX(x);\r\n                this._setY(y);\r\n                this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n                var p: Sprite = this._cacheStyle.maskParent;\r\n                if (p) {\r\n                    p.repaint(SpriteConst.REPAINT_CACHE);\r\n                }\r\n\r\n                if (this.cacheGlobal) {\r\n                    let flag: number = Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Position_Y;\r\n                    this._setGlobalCacheFlag(flag, true);\r\n                    this._syncGlobalFlag(flag, true);\r\n                }\r\n\r\n            } else {\r\n                this.x = x;\r\n                this.y = y;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置轴心点。相当于分别设置pivotX和pivotY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pivot(...).pos(50, 100);</p>\r\n     * @param\tx X轴心点。\r\n     * @param\ty Y轴心点。\r\n     * @return\t返回对象本身。\r\n     */\r\n    pivot(x: number, y: number): Sprite {\r\n        this.pivotX = x;\r\n        this.pivotY = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置宽高。相当于分别设置width和height属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.size(...).pos(50, 100);</p>\r\n     * @param\twidth 宽度值。\r\n     * @param\thegiht 高度值。\r\n     * @return\t返回对象本身。\r\n     */\r\n    size(width: number, height: number): Sprite {\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置缩放。相当于分别设置scaleX和scaleY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.scale(...).pos(50, 100);</p>\r\n     * @param\tscaleX\t\tX轴缩放比例。\r\n     * @param\tscaleY\t\tY轴缩放比例。\r\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.scaleX=value进行赋值，极速模式直接调用内部函数处理，如果未重写scaleX,scaleY属性，建议设置为急速模式性能更高。\r\n     * @return\t返回对象本身。\r\n     */\r\n    scale(scaleX: number, scaleY: number, speedMode?: boolean): Sprite {\r\n        if (this._destroyed) return this;\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleX != scaleX || style.scaleY != scaleY) {\r\n            if (speedMode) {\r\n                this._setScaleX(scaleX);\r\n                this._setScaleY(scaleY);\r\n                this._setTranformChange();\r\n                this._shouldRefreshLayout();\r\n            } else {\r\n                this.scaleX = scaleX;\r\n                this.scaleY = scaleY;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置倾斜角度。相当于分别设置skewX和skewY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.skew(...).pos(50, 100);</p>\r\n     * @param\tskewX 水平倾斜角度。\r\n     * @param\tskewY 垂直倾斜角度。\r\n     * @return\t返回对象本身\r\n     */\r\n    skew(skewX: number, skewY: number): Sprite {\r\n        this.skewX = skewX;\r\n        this.skewY = skewY;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 更新、呈现显示对象。由系统调用。\r\n     * @param\tcontext 渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    render(ctx: Context, x: number, y: number): void {\r\n        RenderSprite.renders[this._renderType]._fun(this, ctx, x + this._x, y + this._y);\r\n        this._repaint = 0;\r\n    }\r\n\r\n    /**\r\n     * <p>绘制 当前<code>Sprite</code> 到 <code>Canvas</code> 上，并返回一个HtmlCanvas。</p>\r\n     * <p>绘制的结果可以当作图片源，再次绘制到其他Sprite里面，示例：</p>\r\n     *\r\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\r\n     * var sp:Sprite = new Sprite();//创建精灵\r\n     * sp.graphics.drawTexture(htmlCanvas.getTexture());//把截图绘制到精灵上\r\n     * Laya.stage.addChild(sp);//把精灵显示到舞台\r\n     *\r\n     * <p>也可以获取原始图片数据，分享到网上，从而实现截图效果，示例：</p>\r\n     *\r\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\r\n     * htmlCanvas.toBase64(\"image/png\",0.9);//打印图片base64信息，可以发给服务器或者保存为图片\r\n     *\r\n     * @param\tcanvasWidth 画布宽度。\r\n     * @param\tcanvasHeight 画布高度。\r\n     * @param\tx 绘制的 X 轴偏移量。\r\n     * @param\ty 绘制的 Y 轴偏移量。\r\n     * @return  HTMLCanvas 对象。\r\n     */\r\n    drawToCanvas(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\r\n        //console.log('drawToCanvas is deprecated, please use drawToTexture');\r\n        return Sprite.drawToCanvas(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY);\r\n    }\r\n\r\n    /**\r\n     * 绘制到一个Texture对象\r\n     * @param canvasWidth \r\n     * @param canvasHeight \r\n     * @param offsetX \r\n     * @param offsetY \r\n     */\r\n    drawToTexture(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\r\n        let res = Sprite.drawToTexture(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY, rt);\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 把当前对象渲染到指定的贴图上。贴图由外部指定，避免每次都创建。\r\n     * @param offx \r\n     * @param offy \r\n     * @param tex 输出渲染结果\r\n     */\r\n    drawToTexture3D(offx: number, offy: number, tex: Texture2D) {\r\n        throw 'not implement'\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 绘制到画布。\r\n     */\r\n    static drawToCanvas(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\r\n        offsetX -= sprite.x;\r\n        offsetY -= sprite.y;\r\n        offsetX |= 0;\r\n        offsetY |= 0;\r\n        canvasWidth |= 0;\r\n        canvasHeight |= 0;\r\n        var ctx: Context = new Context();\r\n        ctx.size(canvasWidth, canvasHeight);\r\n        ctx.asBitmap = true;\r\n        ctx._targets.start();\r\n        ctx._targets.clear(0, 0, 0, 0);\r\n        RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n        ctx.flush();\r\n        ctx._targets.end();\r\n        ctx._targets.restore();\r\n        var dt: Uint8Array = ctx._targets.getData(0, 0, canvasWidth, canvasHeight) as Uint8Array;\r\n        ctx.destroy();\r\n        var imgdata: any = new ImageData(canvasWidth, canvasHeight);;\t//创建空的imagedata。因为下面要翻转，所以不直接设置内容\r\n        //翻转getData的结果。\r\n        var lineLen: number = canvasWidth * 4;\r\n        var temp: Uint8Array = new Uint8Array(lineLen);\r\n        var dst: Uint8Array = imgdata.data;\r\n        var y: number = canvasHeight - 1;\r\n        var off: number = y * lineLen;\r\n        var srcoff: number = 0;\r\n        for (; y >= 0; y--) {\r\n            dst.set(dt.subarray(srcoff, srcoff + lineLen), off);\r\n            off -= lineLen;\r\n            srcoff += lineLen;\r\n        }\r\n        //imgdata.data.set(dt);\r\n        //画到2d画布上\r\n        var canv: HTMLCanvas = new HTMLCanvas(true);\r\n        canv.size(canvasWidth, canvasHeight);\r\n        var ctx2d: CanvasRenderingContext2D = <CanvasRenderingContext2D>(canv.getContext('2d') as any);\r\n        ctx2d.putImageData(imgdata, 0, 0);;\r\n        return canv;\r\n    }\r\n\r\n    static drawtocanvCtx: Context;\r\n    /**\r\n     * @private \r\n     * \r\n     */\r\n    static drawToTexture(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\r\n        if (!Sprite.drawtocanvCtx) {\r\n            Sprite.drawtocanvCtx = new Context();\r\n        }\r\n        offsetX -= sprite.x;\r\n        offsetY -= sprite.y;\r\n        offsetX |= 0;\r\n        offsetY |= 0;\r\n        canvasWidth |= 0;\r\n        canvasHeight |= 0;\r\n        var ctx = rt ? Sprite.drawtocanvCtx : new Context();\r\n        ctx.clear();\r\n        ctx.size(canvasWidth, canvasHeight);\r\n        if (rt) {\r\n            ctx._targets = rt;\r\n        } else {\r\n            ctx.asBitmap = true;\r\n        }\r\n        let texRT;\r\n        if (ctx._targets) {\r\n            ctx._targets.start();\r\n            let color = RenderTexture2D._clearColor;\r\n            ctx._targets.clear(color.r, color.g, color.b, color.a);\r\n            ctx._drawingToTexture = true;\r\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n            ctx._drawingToTexture = false;\r\n            ctx.flush();\r\n            ctx._targets.end();\r\n            ctx._targets.restore();\r\n            if (!rt)\r\n                texRT = ctx._targets;\r\n            ctx._targets = null;//IDE闪\r\n        }\r\n        if (!rt) {\r\n            var rtex: Texture = new Texture(((<Texture2D>(ctx._targets as any))) ? ((<Texture2D>(ctx._targets as any))) : texRT, Texture.INV_UV);\r\n            ctx.destroy(true);// 保留 _targets\r\n            return rtex;\r\n        }\r\n        sprite._repaint = 0;\r\n        return rt;\r\n    }\r\n\r\n    /**\r\n     * <p>自定义更新、呈现显示对象。一般用来扩展渲染模式，请合理使用，可能会导致在加速器上无法渲染。</p>\r\n     * <p><b>注意</b>不要在此函数内增加或删除树节点，否则会对树节点遍历造成影响。</p>\r\n     * @param\tcontext  渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    customRender(context: Context, x: number, y: number): void {\r\n        //_renderType |= SpriteConst.CUSTOM;\r\n        this._repaint = SpriteConst.REPAINT_ALL;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 应用滤镜。\r\n     */\r\n    _applyFilters(): void {\r\n        // canvas 模式不支持\r\n    }\r\n\r\n    /**滤镜集合。可以设置多个滤镜组合。*/\r\n    get filters(): any[] {\r\n        return this._cacheStyle.filters;\r\n    }\r\n\r\n    set filters(value: any[]) {\r\n        value && value.length === 0 && (value = null);\r\n        this._getCacheStyle().filters = value ? value.slice() : null;\r\n        if (value)\r\n            this._renderType |= SpriteConst.FILTERS;\r\n        else\r\n            this._renderType &= ~SpriteConst.FILTERS;\r\n\r\n        if (value && value.length > 0) {\r\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n            if (!(value.length == 1 && (value[0] instanceof ColorFilter))) {\r\n                this._getCacheStyle().cacheForFilters = true;\r\n                this._checkCanvasEnable();\r\n            }\r\n        } else {\r\n            if (this._cacheStyle.cacheForFilters) {\r\n                this._cacheStyle.cacheForFilters = false;\r\n                this._checkCanvasEnable();\r\n            }\r\n        }\r\n        this._getCacheStyle().hasGlowFilter = this._isHaveGlowFilter();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 查看当前原件中是否包含发光滤镜。\r\n     * @return 一个 Boolean 值，表示当前原件中是否包含发光滤镜。\r\n     */\r\n    _isHaveGlowFilter(): boolean {\r\n        var i: number, len: number;\r\n        if (this.filters) {\r\n            for (i = 0; i < this.filters.length; i++) {\r\n                if (this.filters[i].type == Filter.GLOW) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        for (i = 0, len = this._children.length; i < len; i++) {\r\n            if ((<Sprite>this._children[i])._isHaveGlowFilter()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 把本地坐标转换为相对stage的全局坐标。\r\n     * @param point\t\t\t\t本地坐标点。\r\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\r\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\r\n     * @return 转换后的坐标的点。\r\n     */\r\n    localToGlobal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\r\n        //if (!_displayedInStage || !point) return point;\r\n        if (createNewPoint === true) {\r\n            point = new Point(point.x, point.y);\r\n        }\r\n        var ele: Sprite = this;\r\n        globalNode = globalNode || ILaya.stage;\r\n        while (ele && !ele._destroyed) {\r\n            if (ele == globalNode) break;\r\n            point = ele.toParentPoint(point);\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 把stage的全局坐标转换为本地坐标。\r\n     * @param point\t\t\t\t全局坐标点。\r\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\r\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\r\n     * @return 转换后的坐标的点。\r\n     */\r\n    globalToLocal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\r\n        //if (!_displayedInStage || !point) return point;\r\n        if (createNewPoint) {\r\n            point = new Point(point.x, point.y);\r\n        }\r\n        var ele: Sprite = this;\r\n        var list: any[] = [];\r\n        globalNode = globalNode || ILaya.stage;\r\n        while (ele && !ele._destroyed) {\r\n            if (ele == globalNode) break;\r\n            list.push(ele);\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n        var i: number = list.length - 1;\r\n        while (i >= 0) {\r\n            ele = list[i];\r\n            point = ele.fromParentPoint(point);\r\n            i--;\r\n        }\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 将本地坐标系坐标转转换到父容器坐标系。\r\n     * @param point 本地坐标点。\r\n     * @return  转换后的点。\r\n     */\r\n    toParentPoint(point: Point): Point {\r\n        if (!point) return point;\r\n        point.x -= this.pivotX;\r\n        point.y -= this.pivotY;\r\n        if (this.transform) {\r\n            this._transform.transformPoint(point);\r\n        }\r\n        point.x += this._x;\r\n        point.y += this._y;\r\n        var scroll: Rectangle = this._style.scrollRect;\r\n        if (scroll) {\r\n            point.x -= scroll.x;\r\n            point.y -= scroll.y;\r\n        }\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 将父容器坐标系坐标转换到本地坐标系。\r\n     * @param point 父容器坐标点。\r\n     * @return  转换后的点。\r\n     */\r\n    fromParentPoint(point: Point): Point {\r\n        if (!point) return point;\r\n        point.x -= this._x;\r\n        point.y -= this._y;\r\n        var scroll: Rectangle = this._style.scrollRect;\r\n        if (scroll) {\r\n            point.x += scroll.x;\r\n            point.y += scroll.y;\r\n        }\r\n        if (this.transform) {\r\n            //_transform.setTranslate(0,0);\r\n            this._transform.invertTransformPoint(point);\r\n        }\r\n        point.x += this.pivotX;\r\n        point.y += this.pivotY;\r\n        return point;\r\n    }\r\n\r\n    protected onStartListeningToType(type: string) {\r\n        super.onStartListeningToType(type);\r\n\r\n        //如果是鼠标事件，则设置自己和父对象为可接受鼠标交互事件\r\n        if (this._mouseState !== 1 && Event.isMouseEvent(type)) {\r\n            this.mouseEnabled = true;\r\n            this._setBit(NodeFlags.HAS_MOUSE, true);\r\n            if (this._parent) {\r\n                this._onDisplay();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    protected _onDisplay(v?: boolean): void {\r\n        if (this._mouseState !== 1) {\r\n            var ele: Sprite = this;\r\n            ele = (<Sprite>ele.parent);\r\n            while (ele && ele._mouseState !== 1) {\r\n                if (ele._getBit(NodeFlags.HAS_MOUSE)) break;\r\n                ele.mouseEnabled = true;\r\n                ele._setBit(NodeFlags.HAS_MOUSE, true);\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private \r\n     * @override\r\n    */\r\n    protected _setParent(value: Node): void {\r\n        super._setParent(value);\r\n        if (value && this._getBit(NodeFlags.HAS_MOUSE)) {\r\n            this._onDisplay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>加载并显示一个图片。相当于加载图片后，设置texture属性</p>\r\n     * <p>注意：2.0改动：多次调用，只会显示一个图片（1.0会显示多个图片）,x,y,width,height参数取消。</p>\r\n     * @param url\t\t图片地址。\r\n     * @param complete\t（可选）加载完成回调。\r\n     * @return\t返回精灵对象本身。\r\n     */\r\n    loadImage(url: string, complete: Handler = null): Sprite {\r\n        if (!url) {\r\n            this.texture = null;\r\n            this.repaint(SpriteConst.REPAINT_ALL);\r\n            complete && complete.run();\r\n        } else {\r\n            let tex = ILaya.loader.getRes(url);\r\n            if (tex) {\r\n                this.texture = tex;\r\n                this.repaint(SpriteConst.REPAINT_ALL);\r\n                complete && complete.run();\r\n            }\r\n            else {\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n                ILaya.loader.load(url).then((tex: Texture) => {\r\n                    this.texture = tex;\r\n                    this.repaint(SpriteConst.REPAINT_ALL);\r\n                    complete && complete.run();\r\n                });\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 根据图片地址创建一个新的 <code>Sprite</code> 对象用于加载并显示此图片。\r\n     * @param\turl 图片地址。\r\n     * @return\t返回新的 <code>Sprite</code> 对象。\r\n     */\r\n    static fromImage(url: string): Sprite {\r\n        return new Sprite().loadImage(url);\r\n    }\r\n\r\n    /**cacheAs后，设置自己和父对象缓存失效。*/\r\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        if (!(this._repaint & type)) {\r\n            this._repaint |= type;\r\n            this.parentRepaint(type);\r\n        }\r\n        if (this._cacheStyle && this._cacheStyle.maskParent) {\r\n            this._cacheStyle.maskParent.repaint(type);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * 获取是否重新缓存。\r\n     * @return 如果重新缓存值为 true，否则值为 false。\r\n     */\r\n    _needRepaint(): boolean {\r\n        return (this._repaint & SpriteConst.REPAINT_CACHE) && this._cacheStyle.enableCanvasRender && this._cacheStyle.reCache;\r\n    }\r\n\r\n    /**@private\t\r\n     * @override\r\n    */\r\n    protected _childChanged(child: Node = null): void {\r\n        super._childChanged(child);\r\n\r\n        if (this._children.length) this._renderType |= SpriteConst.CHILDS;\r\n        else this._renderType &= ~SpriteConst.CHILDS;\r\n        if (child && this._getBit(NodeFlags.HAS_ZORDER)) ILaya.systemTimer.callLater(this, this.updateZOrder);\r\n        this.repaint(SpriteConst.REPAINT_ALL);\r\n    }\r\n\r\n    /**cacheAs时，设置所有父对象缓存失效。 */\r\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        var p: Sprite = (<Sprite>this._parent);\r\n        if (p && !(p._repaint & type)) {\r\n            p._repaint |= type;\r\n            p.parentRepaint(type);\r\n        }\r\n    }\r\n\r\n    /**对舞台 <code>stage</code> 的引用。*/\r\n    get stage() {\r\n        return ILaya.stage;\r\n    }\r\n\r\n    /**\r\n     * <p>可以设置一个Rectangle区域作为点击区域，或者设置一个<code>HitArea</code>实例作为点击区域，HitArea内可以设置可点击和不可点击区域。</p>\r\n     * <p>如果不设置hitArea，则根据宽高形成的区域进行碰撞。</p>\r\n     */\r\n    get hitArea(): IHitArea {\r\n        return this._style.hitArea;\r\n    }\r\n\r\n    set hitArea(value: IHitArea) {\r\n        this.getStyle().hitArea = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setMask(value: Sprite): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>遮罩，可以设置一个对象(支持位图和矢量图)，根据对象形状进行遮罩显示。</p>\r\n     * <p>【注意】遮罩对象坐标系是相对遮罩对象本身的，和Flash机制不同</p>\r\n     */\r\n    get mask(): Sprite {\r\n        return this._cacheStyle.mask;\r\n    }\r\n\r\n    set mask(value: Sprite) {\r\n        if (value && this.mask == value && value._cacheStyle.maskParent == this)\r\n            return;\r\n\r\n        if (this.mask)\r\n            this.mask._getCacheStyle().maskParent = null;\r\n\r\n        this._getCacheStyle().mask = value;\r\n        this._setMask(value);\r\n        this._checkCanvasEnable();\r\n\r\n        if (value) {\r\n            value._getCacheStyle().maskParent = this;\r\n            this._renderType |= SpriteConst.MASK;\r\n        }\r\n        else\r\n            this._renderType &= ~SpriteConst.MASK;\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * 是否接受鼠标事件。\r\n     * 默认为false，如果监听鼠标事件，则会自动设置本对象及父节点的属性 mouseEnable 的值都为 true（如果父节点手动设置为false，则不会更改）。\r\n     * */\r\n    get mouseEnabled(): boolean {\r\n        return this._mouseState > 1;\r\n    }\r\n\r\n    set mouseEnabled(value: boolean) {\r\n        this._mouseState = value ? 2 : 1;\r\n    }\r\n\r\n    /**\r\n     * 开始拖动此对象。\r\n     * @param area\t\t\t\t（可选）拖动区域，此区域为当前对象注册点活动区域（不包括对象宽高），可选。\r\n     * @param hasInertia\t\t（可选）鼠标松开后，是否还惯性滑动，默认为false，可选。\r\n     * @param elasticDistance\t（可选）橡皮筋效果的距离值，0为无橡皮筋效果，默认为0，可选。\r\n     * @param elasticBackTime\t（可选）橡皮筋回弹时间，单位为毫秒，默认为300毫秒，可选。\r\n     * @param data\t\t\t\t（可选）拖动事件携带的数据，可选。\r\n     * @param ratio\t\t\t\t（可选）惯性阻尼系数，影响惯性力度和时长。\r\n     */\r\n    startDrag(area: Rectangle = null, hasInertia: boolean = false, elasticDistance: number = 0, elasticBackTime: number = 300, data: any = null, ratio: number = 0.92): void {\r\n        this._style.dragging || (this.getStyle().dragging = new Dragging());\r\n        this._style.dragging.start(this, area, hasInertia, elasticDistance, elasticBackTime, data, ratio);\r\n    }\r\n\r\n    /**停止拖动此对象。*/\r\n    stopDrag(): void {\r\n        this._style.dragging && this._style.dragging.stop();\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * @override\r\n    */\r\n    _setDisplay(value: boolean): void {\r\n        if (!value) {\r\n            if (this._cacheStyle) {\r\n                this._cacheStyle.releaseContext();\r\n                this._cacheStyle.releaseFilterCache();\r\n                if (this._cacheStyle.hasGlowFilter) {\r\n                    this._cacheStyle.hasGlowFilter = false;\r\n                }\r\n            }\r\n        }\r\n        super._setDisplay(value);\r\n    }\r\n\r\n    /**\r\n     * 检测某个点是否在此对象内。\r\n     * @param\tx 全局x坐标。\r\n     * @param\ty 全局y坐标。\r\n     * @return  表示是否在对象内。\r\n     */\r\n    hitTestPoint(x: number, y: number): boolean {\r\n        var point: Point = this.globalToLocal(Point.TEMP.setTo(x, y));\r\n        x = point.x;\r\n        y = point.y;\r\n        var rect: IHitArea = this._style.hitArea ? this._style.hitArea : (this._isWidthSet && this._isHeightSet) ? Rectangle.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds();\r\n        return rect.contains(x, y);\r\n    }\r\n\r\n    /**获得相对于本对象上的鼠标坐标信息。*/\r\n    getMousePoint(): Point {\r\n        return this.globalToLocal(Point.TEMP.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY));\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 返回鼠标在此对象坐标系上的 X 轴坐标信息。\r\n     */\r\n    get mouseX(): number {\r\n        return this.getMousePoint().x;\r\n    }\r\n\r\n    /**\r\n     * 返回鼠标在此对象坐标系上的 Y 轴坐标信息。\r\n     */\r\n    get mouseY(): number {\r\n        return this.getMousePoint().y;\r\n    }\r\n\r\n    /**z排序，更改此值，则会按照值的大小对同一容器的所有对象重新排序。值越大，越靠上。默认为0，则根据添加顺序排序。*/\r\n    get zOrder(): number {\r\n        return this._zOrder;\r\n    }\r\n\r\n    set zOrder(value: number) {\r\n        if (this._zOrder != value) {\r\n            this._zOrder = value;\r\n            if (this._parent) {\r\n                value && this._parent._setBit(NodeFlags.HAS_ZORDER, true);\r\n                ILaya.systemTimer.callLater(this._parent, this.updateZOrder);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置一个Texture实例，并显示此图片（如果之前有其他绘制，则会被清除掉）。\r\n     * 等同于graphics.clear();graphics.drawImage()，但性能更高\r\n     * 还可以赋值一个图片地址，则会自动加载图片，然后显示\r\n     */\r\n    get texture(): Texture {\r\n        return this._texture;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTexture(value: Texture | string): void {\r\n\r\n    }\r\n\r\n    set texture(value: Texture) {\r\n        if (typeof (value) == 'string') {\r\n            this.loadImage((<string>((<any>value))));\r\n        } else if (this._texture != value) {\r\n            this._texture && this._texture._removeReference();\r\n            this._texture = value;\r\n            value && value._addReference();\r\n            this._setTexture(value);\r\n            this._setWidth(this.width);\r\n            this._setHeight(this.height);\r\n            if (value) this._renderType |= SpriteConst.TEXTURE;\r\n            else this._renderType &= ~SpriteConst.TEXTURE;\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * <p>视口大小，视口外的子对象，将不被渲染(如果想实现裁剪效果，请使用srollRect)，合理使用能提高渲染性能。比如由一个个小图片拼成的地图块，viewport外面的小图片将不渲染</p>\r\n     * <p>srollRect和viewport的区别：<br/>\r\n     * 1. srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\r\n     * 2. 设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\r\n     * @default null\r\n     */\r\n    get viewport(): Rectangle {\r\n        return this._style.viewport;\r\n    }\r\n\r\n    set viewport(value: Rectangle) {\r\n        if (typeof (value) == 'string') {\r\n            let recArr = (<any>value).split(\",\");\r\n            if (recArr.length > 3) {\r\n                value = new Rectangle(parseFloat(recArr[0]), parseFloat(recArr[1]), parseFloat(recArr[2]), parseFloat(recArr[3]));\r\n            }\r\n        }\r\n        this.getStyle().viewport = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTranformChange(): void {\r\n        this._tfChanged = true;\r\n        this._renderType |= SpriteConst.TRANSFORM;\r\n        this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n    }\r\n\r\n    set drawCallOptimize(value: boolean) {\r\n        this._setBit(NodeFlags.DRAWCALL_OPTIMIZE, value);\r\n    }\r\n\r\n    get drawCallOptimize(): boolean {\r\n        return this._getBit(NodeFlags.DRAWCALL_OPTIMIZE);\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n\r\n        if (LayaEnv.isPlaying) {\r\n            if ((<any>this)._gcmds) {\r\n                this.graphics.cmds = (<any>this)._gcmds;\r\n                delete (<any>this)._gcmds;\r\n            }\r\n\r\n            if ((<any>this)._filters) {\r\n                this.filters = (<any>this)._filters;\r\n                delete (<any>this)._filters;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //miner 为了不破坏之前的local性能架构，采用标致开启的方式来增加GlobalMode的更新系统，优化需要高频调用Global数据的\r\n    //因为此块功能比较集中，顾单独写在下方\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Position_X: number = 0x01;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Position_Y: number = 0x02;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Rotation: number = 0x04;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Scale_X: number = 0x08;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Scale_Y: number = 0x10;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Matrix: number = 0x20;\r\n    /**@internal */\r\n    private _globalDeltaFlages: number = 0;\r\n    /**@internal */\r\n    private _cacheGlobal: boolean = false;\r\n    /**@internal */\r\n    private _globalPosx: number = 0.0;\r\n    /**@internal */\r\n    private _globalPosy: number = 0.0;\r\n    /**@internal */\r\n    private _globalRotate: number = 0.0;\r\n    /**@internal */\r\n    private _globalScalex: number = 1.0;\r\n    /**@internal */\r\n    private _globalScaley: number = 1.0;\r\n    /**@internal */\r\n    private _globalMatrix: Matrix;\r\n\r\n    get cacheGlobal(): boolean {\r\n        return this._cacheGlobal;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 设置cacheGlobal模式\r\n     * 此模式会获得更高的getGlobal属性性能\r\n     * 如果此节点为cacheGlobaltrue，那所有父节点直到根节点都会强制改为true\r\n     * 如果此节点改为false，将强制所有子节点的cacheGlobal改为false\r\n     */\r\n    set cacheGlobal(value: boolean) {\r\n        if (this._cacheGlobal == value)\r\n            return;\r\n        this._cacheGlobal = value;\r\n        if (value) {\r\n            //缓存全局变量\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            //更新父节点\r\n            if (this._parent == ILaya.stage || !this._parent) {\r\n                return;\r\n            } else {\r\n                (this._parent as Sprite).cacheGlobal = value;\r\n            }\r\n        } else {\r\n            //更新子节点\r\n            this._children.forEach(element => {\r\n                (element as Sprite).cacheGlobal = value;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n       * @internal\r\n       */\r\n    getGlobalMatrix() {\r\n        if (this._globalMatrix == null) this._globalMatrix = Matrix.create()\r\n        if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix)) {\r\n            this._globalMatrix.identity();\r\n            this._globalMatrix.translate(-this.pivotX, -this.pivotY);\r\n            this._globalMatrix.rotate(Utils.toRadian(this.globalRotation));\r\n            this._globalMatrix.scale(this.globalScaleX, this.globalScaleY);\r\n            this._globalMatrix.translate(this.globalPosX, this.globalPosY);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, false);\r\n        }\r\n        return this._globalMatrix;\r\n    }\r\n\r\n    CustomMaterial() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set globalPosX(value: number) {\r\n        this.setGlobalPos(value, this._globalPosy);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set globalPosY(value: number) {\r\n        this.setGlobalPos(this._globalPosx, value);\r\n    }\r\n\r\n    /**\r\n     * 设置图元锚点世界位置\r\n     * @internal\r\n     */\r\n    setGlobalPos(globalx: number, globaly: number) {\r\n        if (!this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix) && globalx == this.globalPosX && globaly == this.globalPosY) {\r\n            return;\r\n        }\r\n        if (!this._cacheGlobal) {\r\n            Point.TEMP.setTo(globalx, globaly);\r\n            let point = this.globalToLocal(Point.TEMP, false, null);\r\n            point = this.toParentPoint(point);\r\n            this.x = point.x;\r\n            this.y = point.y;\r\n        } else {\r\n\r\n            let point = (<Sprite>this.parent).getGlobalMatrix().invertTransformPoint(Point.TEMP.setTo(globalx, globaly));\r\n            this._setX(point.x);\r\n            this._setY(point.y);\r\n            this._globalPosx = globalx;\r\n            this._globalPosy = globaly;\r\n            let flag = Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Position_Y;\r\n            this._setGlobalCacheFlag(flag, false);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            this._syncGlobalFlag(flag | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获得图元锚点世界位置\r\n     * @internal\r\n     */\r\n    get globalPosX(): number {\r\n        if (!this._cacheGlobal) {\r\n            let point = this.localToGlobal(Point.TEMP.setTo(0, 0), false, null);\r\n            return point.x;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix | Sprite.Sprite_GlobalDeltaFlage_Position_X)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X, false);\r\n                let mat = (<Sprite>this.parent).getGlobalMatrix();\r\n                let point = this.toParentPoint(Point.TEMP.setTo(this.pivotX, this.pivotY));\r\n                point = mat.transformPoint(point);\r\n                this._globalPosx = point.x;\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalPosx;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获得图元锚点世界位置\r\n     * @internal\r\n     */\r\n    get globalPosY(): number {\r\n        if (!this._cacheGlobal) {\r\n            let point = this.localToGlobal(Point.TEMP.setTo(0, 0), false, null);\r\n            return point.y;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix | Sprite.Sprite_GlobalDeltaFlage_Position_Y)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y, false);\r\n                let mat = (<Sprite>this.parent).getGlobalMatrix();\r\n                let point = this.toParentPoint(Point.TEMP.setTo(this.pivotX, this.pivotY));\r\n                point = mat.transformPoint(point);\r\n                this._globalPosy = point.y;\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalPosy;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获得相对于stage的全局旋转值（会叠加父亲节点的旋转值）。\r\n     */\r\n    get globalRotation(): number {\r\n        if (!this._cacheGlobal) {\r\n            //循环算法\r\n            var angle: number = 0;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                angle += ele.rotation;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return angle;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, false);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalRotate = this.rotation;\r\n                else {\r\n                    this._globalRotate = this.rotation + (this.parent as Sprite).globalRotation;\r\n                }\r\n            }\r\n            return this._globalRotate;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    set globalRotation(value: number) {\r\n        if (!this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix) && value == this.globalRotation) {\r\n            return;\r\n        }\r\n        //set local\r\n        if (this._parent == ILaya.stage || !this._parent) {\r\n            this._setRotation(value);\r\n            this._setTranformChange();\r\n        } else {\r\n            this._setRotation(value - (this.parent as Sprite).globalRotation);\r\n            this._setTranformChange();\r\n        }\r\n        if (this._cacheGlobal) {\r\n            this._globalRotate = value;\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, false);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得相对于stage的全局X轴缩放值（会叠加父亲节点的缩放值）。\r\n     */\r\n    get globalScaleX(): number {\r\n        if (!this._cacheGlobal) {\r\n            var scale: number = 1;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                scale *= ele.scaleX;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return scale;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X, false);\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalScalex = this.scaleX;\r\n                else {\r\n                    this._globalScalex = this.scaleX * (this.parent as Sprite).globalScaleX;\r\n                }\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalScalex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得相对于stage的全局Y轴缩放值（会叠加父亲节点的缩放值）。\r\n     */\r\n    get globalScaleY(): number {\r\n        if (!this._cacheGlobal) {\r\n            var scale: number = 1;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                scale *= ele.scaleY;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return scale;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y, false);\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalScaley = this.scaleY;\r\n                else {\r\n                    this._globalScaley = this.scaleY * (this.parent as Sprite).globalScaleY;\r\n                }\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalScaley;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getGlobalCacheFlag(type: number): boolean {\r\n        return (this._globalDeltaFlages & type) != 0;\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    private _setGlobalCacheFlag(type: number, value: boolean): void {\r\n        if (value)\r\n            this._globalDeltaFlages |= type;\r\n        else\r\n            this._globalDeltaFlages &= ~type;\r\n        if (value) {\r\n            this.event(\"GlobaChange\", type)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal \r\n    */\r\n    get globalDeltaFlages(): number {\r\n        return this._globalDeltaFlages;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param flag \r\n     * @param value \r\n     */\r\n    _syncGlobalFlag(flag: number, value: boolean) {\r\n        if (this.cacheGlobal) {\r\n            this._children.forEach(element => {\r\n                (element as Sprite)._setGlobalCacheFlag(flag, value);\r\n                (element as Sprite)._syncGlobalFlag(flag, value);\r\n            });\r\n        }\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { Config } from \"./../../Config\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p>动画基类，提供了基础的动画播放控制方法和帧标签事件相关功能。</p>\r\n * <p>可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。</p>\r\n */\r\nexport class AnimationBase extends Sprite {\r\n    /**动画播放顺序类型：正序播放。 */\r\n    static WRAP_POSITIVE: number = 0;\r\n    /**动画播放顺序类型：逆序播放。 */\r\n    static WRAP_REVERSE: number = 1;\r\n    /**动画播放顺序类型：pingpong播放(当按指定顺序播放完结尾后，如果继续播放，则会改变播放顺序)。 */\r\n    static WRAP_PINGPONG: number = 2;\r\n\r\n    /**是否循环播放，调用play(...)方法时，会将此值设置为指定的参数值。*/\r\n    loop: boolean;\r\n    /**播放顺序类型：AnimationBase.WRAP_POSITIVE为正序播放(默认值)，AnimationBase.WRAP_REVERSE为倒序播放，AnimationBase.WRAP_PINGPONG为pingpong播放(当按指定顺序播放完结尾后，如果继续播发，则会改变播放顺序)。*/\r\n    wrapMode: number = 0;\r\n    /**@private 播放间隔(单位：毫秒)。*/\r\n    protected _interval: number = Config.animationInterval;\r\n    /**@private */\r\n    protected _index: number;\r\n    /**@private */\r\n    protected _count: number;\r\n    /**@private */\r\n    protected _isPlaying: boolean;\r\n    /**@private */\r\n    protected _labels: any;\r\n    /**是否是逆序播放*/\r\n    protected _isReverse: boolean = false;\r\n    /**@private */\r\n    protected _frameRateChanged: boolean = false;\r\n    /**@private */\r\n    protected _actionName: string;\r\n    /**@private */\r\n    private _controlNode: Sprite;\r\n\r\n    /**\r\n     * 可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._setBitUp(NodeFlags.DISPLAY);\r\n    }\r\n\r\n    /**\r\n     * <p>开始播放动画。play(...)方法被设计为在创建实例后的任何时候都可以被调用，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否正在播放中，如果是，则进行播放。</p>\r\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\r\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\r\n     * @param\tloop\t（可选）是否循环播放。\r\n     * @param\tname\t（可选）动画名称。\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        this._isPlaying = true;\r\n        this._actionName = name;\r\n        this.index = (typeof (start) == 'string') ? this._getFrameByLabel(<string>start) : start;\r\n        this.loop = loop;\r\n        this._isReverse = this.wrapMode === AnimationBase.WRAP_REVERSE;\r\n        if (this.index == 0 && this._isReverse) {\r\n            this.index = this.count - 1;\r\n        }\r\n        if (this.interval > 0) this.timerLoop(this.interval, this, this._frameLoop, null, true, true);\r\n    }\r\n\r\n    /**\r\n     * <p>动画播放的帧间隔时间(单位：毫秒)。默认值依赖于Config.animationInterval=50，通过Config.animationInterval可以修改默认帧间隔时间。</p>\r\n     * <p>要想为某动画设置独立的帧间隔时间，可以使用set interval，注意：如果动画正在播放，设置后会重置帧循环定时器的起始时间为当前时间，也就是说，如果频繁设置interval，会导致动画帧更新的时间间隔会比预想的要慢，甚至不更新。</p>\r\n     */\r\n    get interval(): number {\r\n        return this._interval;\r\n    }\r\n\r\n    set interval(value: number) {\r\n        if (this._interval != value) {\r\n            this._frameRateChanged = true;\r\n            this._interval = value;\r\n            if (this._isPlaying && value > 0) {\r\n                this.timerLoop(value, this, this._frameLoop, null, true, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _getFrameByLabel(label: string): number {\r\n        for (var i: number = 0; i < this._count; i++) {\r\n            var item: any = this._labels[i];\r\n            if (item && ((<any[]>item)).indexOf(label) > -1) return i;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**@private */\r\n    protected _frameLoop(): void {\r\n        if (!this._controlNode || this._controlNode._destroyed) {\r\n            this.clearTimer(this, this._frameLoop);\r\n            return;\r\n        }\r\n        if (this._isReverse) {\r\n            this._index--;\r\n            if (this._index < 0) {\r\n                if (this.loop) {\r\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\r\n                        this._index = this._count > 0 ? 1 : 0;\r\n                        this._isReverse = false;\r\n                    } else {\r\n                        this._index = this._count - 1;\r\n                    }\r\n                    this.event(Event.COMPLETE);\r\n                } else {\r\n                    this._index = 0;\r\n                    this.stop();\r\n                    this.event(Event.COMPLETE);\r\n                    return;\r\n                }\r\n            }\r\n        } else {\r\n            this._index++;\r\n            if (this._index >= this._count) {\r\n                if (this.loop) {\r\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\r\n                        this._index = this._count - 2 >= 0 ? this._count - 2 : 0;\r\n                        this._isReverse = true;\r\n                    } else {\r\n                        this._index = 0;\r\n                    }\r\n                    this.event(Event.COMPLETE);\r\n                } else {\r\n                    this._index--;\r\n                    this.stop();\r\n                    this.event(Event.COMPLETE);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.index = this._index;\r\n    }\r\n\r\n    /**@internal */\r\n    _setControlNode(node: Sprite): void {\r\n        if (this._controlNode) {\r\n            this._controlNode.off(Event.DISPLAY, this, this._resumePlay);\r\n            this._controlNode.off(Event.UNDISPLAY, this, this._resumePlay);\r\n        }\r\n        this._controlNode = node;\r\n        if (node && node != this) {\r\n            node.on(Event.DISPLAY, this, this._resumePlay);\r\n            node.on(Event.UNDISPLAY, this, this._resumePlay);\r\n        }\r\n    }\r\n\r\n    /**@internal \r\n     * @override\r\n    */\r\n    _setDisplay(value: boolean): void {\r\n        super._setDisplay(value);\r\n        this._resumePlay();\r\n    }\r\n\r\n    /**@private */\r\n    protected _resumePlay(): void {\r\n        if (this._isPlaying) {\r\n            if (this._controlNode.displayedInStage) this.play(this._index, this.loop, this._actionName);\r\n            else this.clearTimer(this, this._frameLoop);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放。\r\n     */\r\n    stop(): void {\r\n        this._isPlaying = false;\r\n        this.clearTimer(this, this._frameLoop);\r\n    }\r\n\r\n    /**\r\n     * 是否正在播放中。\r\n     */\r\n    get isPlaying(): boolean {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * 增加一个帧标签到指定索引的帧上。当动画播放到此索引的帧时会派发Event.LABEL事件，派发事件是在完成当前帧画面更新之后。\r\n     * @param\tlabel\t帧标签名称\r\n     * @param\tindex\t帧索引\r\n     */\r\n    addLabel(label: string, index: number): void {\r\n        if (!this._labels) this._labels = {};\r\n        if (!this._labels[index]) this._labels[index] = [];\r\n        this._labels[index].push(label);\r\n    }\r\n\r\n    /**\r\n     * 删除指定的帧标签。\r\n     * @param\tlabel 帧标签名称。注意：如果为空，则删除所有帧标签！\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (!label) this._labels = null;\r\n        else if (this._labels) {\r\n            for (var name in this._labels) {\r\n                this._removeLabelFromList(this._labels[name], label);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _removeLabelFromList(list: any[], label: string): void {\r\n        if (!list) return;\r\n        for (var i: number = list.length - 1; i >= 0; i--) {\r\n            if (list[i] == label) {\r\n                list.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将动画切换到指定帧并停在那里。\r\n     * @param\tposition 帧索引或帧标签\r\n     */\r\n    gotoAndStop(position: any): void {\r\n        this.index = (typeof (position) == 'string') ? this._getFrameByLabel(<string>position) : position;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * 动画当前帧的索引。\r\n     */\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._index = value;\r\n        this._displayToIndex(value);\r\n        if (this._labels && this._labels[value]) {\r\n            var tArr: any[] = this._labels[value];\r\n            for (var i: number = 0, len: number = tArr.length; i < len; i++) {\r\n                this.event(Event.LABEL, tArr[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 显示到某帧\r\n     * @param value 帧索引\r\n     */\r\n    protected _displayToIndex(value: number): void {\r\n    }\r\n\r\n    /**\r\n     * 当前动画中帧的总数。\r\n     */\r\n    get count(): number {\r\n        return this._count;\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\r\n     * @return 返回对象本身\r\n     */\r\n    clear(): AnimationBase {\r\n        this.stop();\r\n        this._labels = null;\r\n        return this;\r\n    }\r\n}","import { Handler } from \"../utils/Handler\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { URL } from \"./URL\";\r\n\r\n/**\r\n * 自动图集管理类\r\n * @private\r\n */\r\nexport class AtlasInfoManager {\r\n\r\n    static _fileLoadDic: Record<string, { url: string, baseUrl?: string }> = {};\r\n\r\n    static enable(infoFile: string, callback: Handler | null = null): void {\r\n        ILaya.loader.fetch(infoFile, \"json\").then(data => {\r\n            if (!data)\r\n                return;\r\n\r\n            AtlasInfoManager.addAtlases(data);\r\n            callback && callback.run();\r\n        });\r\n    }\r\n\r\n    static addAtlases(data: Record<string, [string, string[]]>) {\r\n        let dic = AtlasInfoManager._fileLoadDic;\r\n        for (let key in data) {\r\n            let arr = data[key];\r\n            let prefix = URL.formatURL(arr[0]);\r\n            let frames = arr[1];\r\n            let len = frames.length;\r\n            let entry = { url: key };\r\n            for (let i = 0; i < len; i++) {\r\n                dic[prefix + frames[i]] = entry;\r\n            }\r\n        }\r\n    }\r\n\r\n    static addAtlas(atlasUrl: string, prefix: string, frames: Array<string>) {\r\n        prefix = URL.formatURL(prefix);\r\n        let dic = AtlasInfoManager._fileLoadDic;\r\n        let entry = { url: atlasUrl };\r\n        for (let i of frames) {\r\n            dic[prefix + i] = entry;\r\n        }\r\n    }\r\n\r\n    static getFileLoadPath(file: string): { url: string, baseUrl?: string } {\r\n        return AtlasInfoManager._fileLoadDic[file];\r\n    }\r\n}\r\n\r\n\r\n","import { EventDispatcher } from \"../events/EventDispatcher\"\r\n\r\n/**\r\n * Worker Image加载器\r\n */\r\nexport class WorkerLoader {\r\n\r\n    /**worker.js的路径 */\r\n    static workerPath: string = \"libs/laya.workerloader.js\";\r\n\r\n    private static _worker: Worker;\r\n    private static _dispatcher: EventDispatcher;\r\n    private static _enable: boolean = false;\r\n\r\n    /**\r\n     * 是否支持worker\r\n     * @return 是否支持worker\r\n     */\r\n    static workerSupported(): boolean {\r\n        return Worker ? true : false;\r\n    }\r\n\r\n    /**\r\n     * 是否启用。\r\n     */\r\n    static set enable(value: boolean) {\r\n        if (WorkerLoader._enable != value) {\r\n            if (value) {\r\n                if (!Worker)\r\n                    return;\r\n\r\n                if (!WorkerLoader._worker) {\r\n                    WorkerLoader._worker = new Worker(WorkerLoader.workerPath);\r\n                    WorkerLoader._worker.onmessage = WorkerLoader.workerMessage;\r\n                    WorkerLoader._dispatcher = new EventDispatcher();\r\n                }\r\n            }\r\n            WorkerLoader._enable = value;\r\n        }\r\n    }\r\n\r\n    static get enable(): boolean {\r\n        return WorkerLoader._enable;\r\n    }\r\n\r\n    static load(url: string, options: any): Promise<any> {\r\n        return new Promise(resolve => {\r\n            WorkerLoader._worker.postMessage({ url, options });\r\n            WorkerLoader._dispatcher.once(url, resolve);\r\n        });\r\n    }\r\n\r\n    private static workerMessage(evt: any): void {\r\n        let data = evt.data;\r\n        if (data) {\r\n            switch (data.type) {\r\n                case \"Image\":\r\n                    WorkerLoader._dispatcher.event(data.url, data.imageBitmap);\r\n                    break;\r\n                case \"Disable\":\r\n                    WorkerLoader.enable = false;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Resource } from \"./Resource\";\r\nimport { Texture } from \"./Texture\";\r\n/**\r\n * 大图合集资源\r\n */\r\nexport class AtlasResource extends Resource {\r\n    readonly dir: string;\r\n    readonly textures: Array<Texture>;\r\n    readonly frames: Array<Texture>;\r\n\r\n    /**\r\n     * 实例化体格大图合集资源\r\n     * @param dir \r\n     * @param textures \r\n     * @param frames \r\n     */\r\n    constructor(dir: string, textures: Array<Texture>, frames: Array<Texture>) {\r\n        super();\r\n\r\n        this.dir = dir;\r\n        this.textures = textures;\r\n        this.frames = frames;\r\n        this.lock = true;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _disposeResource(): void {\r\n        for (let tex of this.textures) {\r\n            if (tex)\r\n                tex.destroy();\r\n        }\r\n\r\n        for (let tex of this.frames)\r\n            tex.destroy();\r\n\r\n        this.frames.length = 0;\r\n        this.textures.length = 0;\r\n    }\r\n}","export type ProgressCallback = (progress: number) => void;\r\n\r\nexport interface IBatchProgress {\r\n    readonly itemCount: number;\r\n    createCallback(weight?: number): ProgressCallback;\r\n    update(index: number, progress: number): void;\r\n}\r\n\r\nexport class BatchProgress implements IBatchProgress {\r\n    private _callback: ProgressCallback;\r\n    private _items: Array<number>;\r\n    private _weights: Array<number>;\r\n    private _progress: number;\r\n\r\n    constructor(callback: ProgressCallback) {\r\n        this._callback = callback;\r\n        this._items = [];\r\n        this._weights = [];\r\n        this._progress = 0;\r\n    }\r\n\r\n    get itemCount() {\r\n        return this._items.length;\r\n    }\r\n\r\n    reset() {\r\n        this._items.length = 0;\r\n        this._weights.length = 0;\r\n        this._progress = 0;\r\n    }\r\n\r\n    createCallback(weight?: number): ProgressCallback {\r\n        let index = this._items.length;\r\n        this._items.push(0);\r\n        if (weight == null)\r\n            this._weights.push(null);\r\n        else\r\n            this._weights.push(Math.max(0, Math.min(weight, 1)));\r\n\r\n        return (progress: number) => this.update(index, progress);\r\n    }\r\n\r\n    update(index: number, value: number) {\r\n        if (index != -1) {\r\n            this._items[index] = Math.max(0, Math.min(value, 1));\r\n\r\n            let np = 0;\r\n            let col = this._items;\r\n            let ws = this._weights;\r\n            let perc = 1 / col.length;\r\n            for (let i = 0; i < col.length; i++) {\r\n                let p = col[i];\r\n                let w = ws[i];\r\n                if (p != null)\r\n                    np += p * (w != null ? w : perc);\r\n            }\r\n            value = np;\r\n            if (value > 1) value = 1;\r\n        }\r\n\r\n        if (value > this._progress) {\r\n            this._progress = value;\r\n            this._callback(value);\r\n        }\r\n    }\r\n}","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n* 图片二进制处理类\r\n* @ author:xs\r\n* @ data: 2021-11-03 10:54\r\n*/\r\nexport class ImgUtils {\r\n\r\n    /**存储数据池*/\r\n    static data: any = {};\r\n    /**是否保存使用的数据*/\r\n    static isSavaData: boolean = false;\r\n\r\n    /**\r\n     * 比较版本内容\r\n     * @param curVersion 当前版本\r\n     * @param needVersion 要求的版本\r\n     * @returns \r\n     */\r\n    private static compareVersion(curVersion: string, needVersion: string) {\r\n        let curVersionArr = curVersion.split('.');\r\n        let needVersionArr = needVersion.split('.');\r\n        const len = Math.max(curVersionArr.length, needVersionArr.length);\r\n        while (curVersionArr.length < len) {\r\n            curVersionArr.push('0');\r\n        }\r\n        while (needVersionArr.length < len) {\r\n            needVersionArr.push('0');\r\n        }\r\n        for (let i = 0; i < len; i++) {\r\n            const num1 = parseInt(curVersionArr[i]);\r\n            const num2 = parseInt(needVersionArr[i]);\r\n            if (num1 > num2) {\r\n                return true;\r\n            } else if (num1 < num2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否支持数据预处理\r\n     */\r\n    static get isSupport(): boolean {\r\n        if (Browser._isMiniGame) {\r\n            var version: string = Browser.window.wx.getSystemInfoSync().SDKVersion;\r\n            return ImgUtils.compareVersion(version, '2.14.0');\r\n        }\r\n        else if (Browser.onLayaRuntime) {\r\n            return true;\r\n        } else if (Browser.window.Blob)\r\n            return Browser.window.Blob ? true : false;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过二进制获取URL对象\r\n     * @param url \r\n     * @param arrayBuffer \r\n     * @returns \r\n     */\r\n    static arrayBufferToURL(url: string, arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return url;\r\n        if (ImgUtils.data[url])\r\n            return ImgUtils.data[url];\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        if (ImgUtils.isSavaData)\r\n            ImgUtils.data[url] = newurl;\r\n        return newurl;\r\n    }\r\n\r\n    static _arrayBufferToURL(arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return null;\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        return newurl;\r\n    }\r\n\r\n    /**\r\n     * 销毁指定URL的二进制内存数据\r\n     * @param url \r\n     */\r\n    static destroy(url: string) {\r\n        if (!ImgUtils.isSupport) return;\r\n        var newurl: string = ImgUtils.data[url];\r\n        if (newurl) {\r\n            if (Browser._isMiniGame || Browser.onLayaRuntime)\r\n                Browser.window.wx.revokeBufferURL(newurl);\r\n            else if (Browser.window.Blob)\r\n                Browser.window.URL.revokeObjectURL(newurl);\r\n            delete ImgUtils.data[url];\r\n        }\r\n    }\r\n}","export class XMLUtils {\r\n    public static decodeString(aSource: string): string {\r\n        let len = aSource.length;\r\n        let sb: string = \"\";\r\n        let pos1 = 0, pos2 = 0;\r\n\r\n        while (true) {\r\n            pos2 = aSource.indexOf('&', pos1);\r\n            if (pos2 == -1) {\r\n                sb += aSource.substring(pos1);\r\n                break;\r\n            }\r\n            sb += aSource.substring(pos1, pos2);\r\n\r\n            pos1 = pos2 + 1;\r\n            pos2 = pos1;\r\n            let end = Math.min(len, pos2 + 10);\r\n            for (; pos2 < end; pos2++) {\r\n                if (aSource[pos2] == ';')\r\n                    break;\r\n            }\r\n            if (pos2 < end && pos2 > pos1) {\r\n                let entity: string = aSource.substring(pos1, pos2);\r\n                let u = 0;\r\n                if (entity[0] == '#') {\r\n                    if (entity.length > 1) {\r\n                        if (entity[1] == 'x')\r\n                            u = parseInt(entity.substring(2), 16);\r\n                        else\r\n                            u = parseInt(entity.substring(1));\r\n                        sb += String.fromCharCode(u);\r\n                        pos1 = pos2 + 1;\r\n                    }\r\n                    else\r\n                        sb += '&';\r\n                }\r\n                else {\r\n                    switch (entity) {\r\n                        case \"amp\":\r\n                            u = 38;\r\n                            break;\r\n\r\n                        case \"apos\":\r\n                            u = 39;\r\n                            break;\r\n\r\n                        case \"gt\":\r\n                            u = 62;\r\n                            break;\r\n\r\n                        case \"lt\":\r\n                            u = 60;\r\n                            break;\r\n\r\n                        case \"nbsp\":\r\n                            u = 32;\r\n                            break;\r\n\r\n                        case \"quot\":\r\n                            u = 34;\r\n                            break;\r\n                    }\r\n                    if (u > 0) {\r\n                        sb += String.fromCharCode(u);\r\n                        pos1 = pos2 + 1;\r\n                    }\r\n                    else\r\n                        sb += '&';\r\n                }\r\n            }\r\n            else {\r\n                sb += '&';\r\n            }\r\n        }\r\n\r\n        return sb;\r\n    }\r\n\r\n    public static encodeString(str: string): string {\r\n        return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\").replace(/'/g, \"&apos;\").replace(/\"/g, \"&quot;\");\r\n    }\r\n\r\n    public static getString(attrs: any, attrName: string, defValue?: string): string {\r\n        if (attrs == null)\r\n            return defValue == null ? null : defValue;\r\n\r\n        let ret = attrs[attrName];\r\n        if (ret != null)\r\n            return \"\" + ret;\r\n        else\r\n            return defValue == null ? null : defValue;\r\n    }\r\n\r\n    public static getInt(attrs: any, attrName: string, defValue?: number): number {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value != null && value.length > 0) {\r\n            if (value[value.length - 1] == '%') {\r\n                let ret = parseInt(value.substring(0, value.length - 1));\r\n                if (!isNaN(ret))\r\n                    return Math.ceil(ret / 100.0 * defValue);\r\n            }\r\n            else {\r\n                let ret = parseInt(value);\r\n                if (!isNaN(ret))\r\n                    return ret;\r\n            }\r\n        }\r\n\r\n        return defValue == null ? 0 : defValue;\r\n    }\r\n\r\n    public static getFloat(attrs: any, attrName: string, defValue?: number): number {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value == null || value.length == 0)\r\n            return defValue == null ? 0 : defValue;\r\n\r\n        let ret = parseFloat(value);\r\n        if (isNaN(ret))\r\n            return defValue == null ? 0 : defValue;\r\n        else\r\n            return ret;\r\n    }\r\n\r\n    public static getBool(attrs: any, attrName: string, defValue?: boolean): boolean {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value == null || value.length == 0)\r\n            return defValue == null ? false : defValue;\r\n\r\n        if (value == \"true\" || value == \"1\")\r\n            return true;\r\n        else if (value == \"false\" || value == \"0\")\r\n            return false;\r\n        else\r\n            return defValue == null ? false : defValue;\r\n    }\r\n}","import { XMLUtils } from \"./XMLUtils\";\r\n\r\nexport enum XMLTagType {\r\n    Start,\r\n    End,\r\n    Void,\r\n    CDATA,\r\n    Comment,\r\n    Instruction\r\n};\r\n\r\nconst CDATA_START = \"<![CDATA[\";\r\nconst CDATA_END = \"]]>\";\r\nconst COMMENT_START = \"<!--\";\r\nconst COMMENT_END = \"-->\";\r\n\r\nexport class XMLIterator {\r\n    public static tagName: string;\r\n    public static tagType: XMLTagType;\r\n    public static lastTagName: string;\r\n\r\n    static source: string;\r\n    static sourceLen: number;\r\n    static parsePos: number;\r\n    static tagPos: number;\r\n    static tagLength: number;\r\n    static lastTagEnd: number;\r\n    static attrParsed: boolean;\r\n    static lowerCaseName: boolean;\r\n\r\n    private static _attrs: any = {};\r\n\r\n    public static begin(source: string, lowerCaseName?: boolean) {\r\n        XMLIterator.source = source;\r\n        XMLIterator.lowerCaseName = lowerCaseName;\r\n        this.sourceLen = source.length;\r\n        this.parsePos = 0;\r\n        this.lastTagEnd = 0;\r\n        this.tagPos = 0;\r\n        this.tagLength = 0;\r\n        this.tagName = null;\r\n    }\r\n\r\n    public static nextTag(): boolean {\r\n        let pos: number;\r\n        let c: string;\r\n        let buffer = \"\";\r\n\r\n        this.tagType = XMLTagType.Start;\r\n        this.lastTagEnd = this.parsePos;\r\n        this.attrParsed = false;\r\n        this.lastTagName = this.tagName;\r\n\r\n        while ((pos = this.source.indexOf('<', this.parsePos)) != -1) {\r\n            this.parsePos = pos;\r\n            pos++;\r\n\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            c = this.source[pos];\r\n            if (c == '!') {\r\n                if (this.sourceLen > pos + 7 && this.source.substring(pos - 1, pos + 8) == CDATA_START) {\r\n                    pos = this.source.indexOf(CDATA_END, pos);\r\n                    this.tagType = XMLTagType.CDATA;\r\n                    this.tagName = \"\";\r\n                    this.tagPos = this.parsePos;\r\n                    if (pos == -1)\r\n                        this.tagLength = this.sourceLen - this.parsePos;\r\n                    else\r\n                        this.tagLength = pos + 3 - this.parsePos;\r\n                    this.parsePos += this.tagLength;\r\n                    return true;\r\n                }\r\n                else if (this.sourceLen > pos + 2 && this.source.substring(pos - 1, pos + 3) == COMMENT_START) {\r\n                    pos = this.source.indexOf(COMMENT_END, pos);\r\n                    this.tagType = XMLTagType.Comment;\r\n                    this.tagName = \"\";\r\n                    this.tagPos = this.parsePos;\r\n                    if (pos == -1)\r\n                        this.tagLength = this.sourceLen - this.parsePos;\r\n                    else\r\n                        this.tagLength = pos + 3 - this.parsePos;\r\n                    this.parsePos += this.tagLength;\r\n                    return true;\r\n                }\r\n                else {\r\n                    pos++;\r\n                    this.tagType = XMLTagType.Instruction;\r\n                }\r\n            }\r\n            else if (c == '/') {\r\n                pos++;\r\n                this.tagType = XMLTagType.End;\r\n            }\r\n            else if (c == '?') {\r\n                pos++;\r\n                this.tagType = XMLTagType.Instruction;\r\n            }\r\n\r\n            for (; pos < this.sourceLen; pos++) {\r\n                c = this.source[pos];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\r\n                    break;\r\n            }\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            buffer += this.source.substring(this.parsePos + 1, pos);\r\n            if (buffer.length > 0 && buffer[0] == '/')\r\n                buffer = buffer.substring(1);\r\n\r\n            let singleQuoted: boolean = false, doubleQuoted: boolean = false;\r\n            let possibleEnd: number = -1;\r\n            for (; pos < this.sourceLen; pos++) {\r\n                c = this.source[pos];\r\n                if (c == '\"') {\r\n                    if (!singleQuoted)\r\n                        doubleQuoted = !doubleQuoted;\r\n                }\r\n                else if (c == '\\'') {\r\n                    if (!doubleQuoted)\r\n                        singleQuoted = !singleQuoted;\r\n                }\r\n\r\n                if (c == '>') {\r\n                    if (!(singleQuoted || doubleQuoted)) {\r\n                        possibleEnd = -1;\r\n                        break;\r\n                    }\r\n\r\n                    possibleEnd = pos;\r\n                }\r\n                else if (c == '<')\r\n                    break;\r\n            }\r\n            if (possibleEnd != -1)\r\n                pos = possibleEnd;\r\n\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            if (this.source[pos - 1] == '/')\r\n                this.tagType = XMLTagType.Void;\r\n\r\n            this.tagName = buffer;\r\n            if (this.lowerCaseName)\r\n                this.tagName = this.tagName.toLowerCase();\r\n            this.tagPos = this.parsePos;\r\n            this.tagLength = pos + 1 - this.parsePos;\r\n            this.parsePos += this.tagLength;\r\n\r\n            return true;\r\n        }\r\n\r\n        this.tagPos = this.sourceLen;\r\n        this.tagLength = 0;\r\n        this.tagName = null;\r\n        return false;\r\n    }\r\n\r\n    public static getTagSource(): string {\r\n        return this.source.substring(this.tagPos, this.tagPos + this.tagLength);\r\n    }\r\n\r\n    public static getRawText(trim?: boolean) {\r\n        if (this.lastTagEnd == this.tagPos)\r\n            return \"\";\r\n        else if (trim) {\r\n            let i = this.lastTagEnd;\r\n            for (; i < this.tagPos; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\r\n                    break;\r\n            }\r\n\r\n            if (i == this.tagPos)\r\n                return \"\";\r\n            else\r\n                return this.source.substring(i, this.tagPos).trim();\r\n        }\r\n        else\r\n            return this.source.substring(this.lastTagEnd, this.tagPos);\r\n    }\r\n\r\n    public static getText(trim?: boolean): string {\r\n        if (this.lastTagEnd == this.tagPos)\r\n            return \"\";\r\n        else if (trim) {\r\n            let i = this.lastTagEnd;\r\n            for (; i < this.tagPos; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\r\n                    break;\r\n            }\r\n\r\n            if (i == this.tagPos)\r\n                return \"\";\r\n            else\r\n                return XMLUtils.decodeString(this.source.substring(i, this.tagPos)).trimEnd();\r\n        }\r\n        else\r\n            return XMLUtils.decodeString(this.source.substring(this.lastTagEnd, this.tagPos));\r\n    }\r\n\r\n    public static get attributes() {\r\n        if (!this.attrParsed) {\r\n            for (let key in this._attrs) {\r\n                delete this._attrs[key];\r\n            }\r\n            this.parseAttributes(this._attrs);\r\n            this.attrParsed = true;\r\n        }\r\n\r\n        return this._attrs;\r\n    }\r\n\r\n    public static getAttribute(attrName: string): string {\r\n        return this.attributes[attrName];\r\n    }\r\n\r\n    static parseAttributes(attrs: any) {\r\n        let attrName: string;\r\n        let valueStart: number = 0;\r\n        let valueEnd: number = 0;\r\n        let waitValue: boolean = false;\r\n        let quoted: number = 0;\r\n        let buffer: string = \"\";\r\n        let i = this.tagPos;\r\n        let attrEnd = this.tagPos + this.tagLength;\r\n\r\n        if (i < attrEnd && this.source[i] == '<') {\r\n            for (; i < attrEnd; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\r\n                    break;\r\n            }\r\n        }\r\n\r\n        for (; i < attrEnd; i++) {\r\n            let c: string = this.source[i];\r\n            if (c == '=') {\r\n                valueStart = -1;\r\n                valueEnd = -1;\r\n                quoted = 0;\r\n                for (let j = i + 1; j < attrEnd; j++) {\r\n                    let c2 = this.source[j];\r\n                    if (' \\t\\n\\r\\v'.indexOf(c2) != -1) {\r\n                        if (valueStart != -1 && quoted == 0) {\r\n                            valueEnd = j - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (c2 == '>') {\r\n                        if (quoted == 0) {\r\n                            valueEnd = j - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (c2 == '\"') {\r\n                        if (valueStart != -1) {\r\n                            if (quoted != 1) {\r\n                                valueEnd = j - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            quoted = 2;\r\n                            valueStart = j + 1;\r\n                        }\r\n                    }\r\n                    else if (c2 == '\\'') {\r\n                        if (valueStart != -1) {\r\n                            if (quoted != 2) {\r\n                                valueEnd = j - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            quoted = 1;\r\n                            valueStart = j + 1;\r\n                        }\r\n                    }\r\n                    else if (valueStart == -1) {\r\n                        valueStart = j;\r\n                    }\r\n                }\r\n\r\n                if (valueStart != -1 && valueEnd != -1) {\r\n                    attrName = buffer;\r\n                    if (this.lowerCaseName)\r\n                        attrName = attrName.toLowerCase();\r\n                    buffer = \"\";\r\n                    attrs[attrName] = XMLUtils.decodeString(this.source.substring(valueStart, valueEnd + 1));\r\n                    i = valueEnd + 1;\r\n                }\r\n                else\r\n                    break;\r\n            }\r\n            else if (' \\t\\n\\r\\v'.indexOf(c) == -1) {\r\n                if (waitValue || c == '/' || c == '>') {\r\n                    if (buffer.length > 0) {\r\n                        attrName = buffer;\r\n                        if (this.lowerCaseName)\r\n                            attrName = attrName.toLowerCase();\r\n                        attrs[attrName] = \"\";\r\n                        buffer = \"\";\r\n                    }\r\n\r\n                    waitValue = false;\r\n                }\r\n\r\n                if (c != '/' && c != '>')\r\n                    buffer += c;\r\n            }\r\n            else {\r\n                if (buffer.length > 0)\r\n                    waitValue = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nif (!String.prototype.trimEnd) {\r\n    String.prototype.trimEnd = function (this: string) {\r\n        return this.replace(/\\s+$/g, \"\");\r\n    }\r\n}","import { XMLIterator, XMLTagType } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\n\r\nexport class XML {\r\n    public name: string;\r\n    public text: string;\r\n\r\n    private _attrs: Record<string, string>;\r\n    private _children: Array<XML>;\r\n\r\n    public constructor(XmlString?: string) {\r\n        if (XmlString)\r\n            this.parse(XmlString);\r\n    }\r\n\r\n    public get attributes(): Record<string, string> {\r\n        if (!this._attrs)\r\n            this._attrs = {};\r\n        return this._attrs;\r\n    }\r\n\r\n    public getAttrString(attrName: string, defValue?: string) {\r\n        return XMLUtils.getString(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrInt(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrFloat(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\r\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public setAttribute(attrName: string, attrValue: string) {\r\n        if (!this._attrs)\r\n            this._attrs = {};\r\n\r\n        this._attrs[attrName] = attrValue;\r\n    }\r\n\r\n    public getNode(selector: string): XML {\r\n        if (!this._children)\r\n            return null;\r\n        else\r\n            return this._children.find(value => {\r\n                return value.name == selector;\r\n            });\r\n    }\r\n\r\n    public elements(selector?: string): Array<XML> {\r\n        if (!this._children)\r\n            this._children = new Array<XML>();\r\n        if (selector)\r\n            return this._children.filter(value => {\r\n                return value.name == selector;\r\n            });\r\n        else\r\n            return this._children;\r\n    }\r\n\r\n    public parse(aSource: string) {\r\n        this.reset();\r\n\r\n        let lastOpenNode: XML;\r\n        let nodeStack: Array<XML> = new Array<XML>();\r\n\r\n        XMLIterator.begin(aSource);\r\n        while (XMLIterator.nextTag()) {\r\n            if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                let childNode: XML;\r\n                if (lastOpenNode)\r\n                    childNode = new XML();\r\n                else {\r\n                    if (this.name != null) {\r\n                        this.reset();\r\n                        throw new Error(\"Invalid xml format - no root node.\");\r\n                    }\r\n                    childNode = this;\r\n                }\r\n\r\n                childNode.name = XMLIterator.tagName;\r\n                childNode._attrs = Object.assign({}, XMLIterator.attributes);\r\n\r\n                if (lastOpenNode) {\r\n                    if (XMLIterator.tagType != XMLTagType.Void)\r\n                        nodeStack.push(lastOpenNode);\r\n                    if (lastOpenNode._children == null)\r\n                        lastOpenNode._children = new Array<XML>();\r\n                    lastOpenNode._children.push(childNode);\r\n                }\r\n                if (XMLIterator.tagType != XMLTagType.Void)\r\n                    lastOpenNode = childNode;\r\n            }\r\n            else if (XMLIterator.tagType == XMLTagType.End) {\r\n                if (lastOpenNode == null || lastOpenNode.name != XMLIterator.tagName) {\r\n                    this.reset();\r\n                    throw new Error(\"Invalid xml format - <\" + XMLIterator.tagName + \"> dismatched.\");\r\n                }\r\n\r\n                if (lastOpenNode._children == null || lastOpenNode._children.length == 0) {\r\n                    lastOpenNode.text = XMLIterator.getText();\r\n                }\r\n\r\n                if (nodeStack.length > 0)\r\n                    lastOpenNode = nodeStack.pop();\r\n                else\r\n                    lastOpenNode = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this._attrs = null;\r\n        if (this._children != null)\r\n            this._children.length == 0;\r\n        this.text = null;\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**\r\n * 请求进度改变时调度。\r\n * @eventType Event.PROGRESS\r\n * */\r\n/*[Event(name = \"progress\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 请求结束后调度。\r\n * @eventType Event.COMPLETE\r\n * */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 请求出错时调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>HttpRequest</code> 通过封装 HTML <code>XMLHttpRequest</code> 对象提供了对 HTTP 协议的完全的访问，包括做出 POST 和 HEAD 请求以及普通的 GET 请求的能力。 <code>HttpRequest</code> 只提供以异步的形式返回 Web 服务器的响应，并且能够以文本或者二进制的形式返回内容。</p>\r\n * <p><b>注意：</b>建议每次请求都使用新的 <code>HttpRequest</code> 对象，因为每次调用该对象的send方法时，都会清空之前设置的数据，并重置 HTTP 请求的状态，这会导致之前还未返回响应的请求被重置，从而得不到之前请求的响应结果。</p>\r\n */\r\nexport class HttpRequest extends EventDispatcher {\r\n    /**@private */\r\n    protected _http = new XMLHttpRequest();\r\n    /**@private */\r\n    private static _urlEncode: Function = encodeURI;\r\n    /**@private */\r\n    protected _responseType: string;\r\n    /**@private */\r\n    protected _data: any;\r\n    /**@private */\r\n    protected _url: string;\r\n\r\n    /**\r\n     * 发送 HTTP 请求。\r\n     * @param\turl\t\t\t\t请求的地址。大多数浏览器实施了一个同源安全策略，并且要求这个 URL 与包含脚本的文本具有相同的主机名和端口。\r\n     * @param\tdata\t\t\t(default = null)发送的数据。\r\n     * @param\tmethod\t\t\t(default = \"get\")用于请求的 HTTP 方法。值包括 \"get\"、\"post\"、\"head\"。\r\n     * @param\tresponseType\t(default = \"text\")Web 服务器的响应类型，可设置为 \"text\"、\"json\"、\"xml\"、\"arraybuffer\"。\r\n     * @param\theaders\t\t\t(default = null) HTTP 请求的头部信息。参数形如key-value数组：key是头部的名称，不应该包括空白、冒号或换行；value是头部的值，不应该包括换行。比如[\"Content-Type\", \"application/json\"]。\r\n     */\r\n    send(url: string, data: any = null,\r\n        method: \"get\" | \"post\" | \"head\" = \"get\",\r\n        responseType: \"text\" | \"json\" | \"xml\" | \"arraybuffer\" = \"text\",\r\n        headers?: string[]): void {\r\n        this._responseType = responseType;\r\n        this._data = null;\r\n\r\n        if (Browser.onVVMiniGame || Browser.onQGMiniGame || Browser.onQQMiniGame || Browser.onAlipayMiniGame || Browser.onBLMiniGame || Browser.onHWMiniGame || Browser.onTTMiniGame || Browser.onTBMiniGame) {\r\n            url = HttpRequest._urlEncode(url);\r\n        }\r\n        this._url = url;\r\n\r\n        let http = this._http;\r\n        http.open(method, url, true);\r\n\r\n        if (data) {\r\n            if (typeof (data) == 'string') {\r\n                http.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n            }\r\n            else {\r\n                http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                if (!(data instanceof ArrayBuffer))\r\n                    data = JSON.stringify(data);\r\n            }\r\n        }\r\n        else if (Browser.onBLMiniGame && Browser.onAndroid)\r\n            data = {};\r\n\r\n        if (headers) {\r\n            for (let i = 0; i < headers.length; i++) {\r\n                http.setRequestHeader(headers[i++], headers[i]);\r\n            }\r\n        }\r\n\r\n        let restype: XMLHttpRequestResponseType = responseType !== \"arraybuffer\" ? \"text\" : \"arraybuffer\";\r\n        http.responseType = restype;\r\n        if ((http as any).dataType) {//for Ali\r\n            (http as any).dataType = restype;\r\n        }\r\n        http.onerror = (e: any) => {\r\n            this._onError(e);\r\n        }\r\n        http.onabort = (e: any) => {\r\n            this._onAbort(e);\r\n        }\r\n        http.onprogress = (e: any) => {\r\n            this._onProgress(e);\r\n        }\r\n        http.onload = (e: any) => {\r\n            this._onLoad(e);\r\n        }\r\n\r\n        http.send(data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求进度的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onProgress(e: any): void {\r\n        if (e && e.lengthComputable) this.event(Event.PROGRESS, e.loaded / e.total);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求中断的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onAbort(e: any): void {\r\n        this.error(\"Request was aborted by user\");\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求出错侦的听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onError(e: any): void {\r\n        this.error(\"Request failed Status:\" + this._http.status + \" text:\" + this._http.statusText);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求消息返回的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onLoad(e: any): void {\r\n        var http: any = this._http;\r\n        var status: number = http.status !== undefined ? http.status : 200;\r\n\r\n        if (status === 200 || status === 204 || status === 0) {\r\n            this.complete();\r\n        } else {\r\n            this.error(\"[\" + http.status + \"]\" + http.statusText + \":\" + http.responseURL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求错误的处理函数。\r\n     * @param\tmessage 错误信息。\r\n     */\r\n    protected error(message: string): void {\r\n        this.clear();\r\n        //console.warn(this.url, message);\r\n        this.event(Event.ERROR, message);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求成功完成的处理函数。\r\n     */\r\n    protected complete(): void {\r\n        this.clear();\r\n        var flag: boolean = true;\r\n        try {\r\n            if (this._responseType === \"json\") {\r\n                this._data = JSON.parse(this._http.responseText);\r\n            } else if (this._responseType === \"xml\") {\r\n                this._data = new XML(this._http.responseText);\r\n            } else {\r\n                this._data = this._http.response || this._http.responseText;\r\n            }\r\n        } catch (e: any) {\r\n            flag = false;\r\n            this.error(e.message);\r\n        }\r\n        flag && this.event(Event.COMPLETE, this._data instanceof Array ? [this._data] : this._data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清除当前请求。\r\n     */\r\n    protected clear(): void {\r\n        var http: any = this._http;\r\n        http.onerror = http.onabort = http.onprogress = http.onload = null;\r\n    }\r\n\r\n    /** 请求的地址。*/\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /** 返回的数据。*/\r\n    get data(): any {\r\n        return this._data;\r\n    }\r\n\r\n    /**\r\n     * 本对象所封装的原生 XMLHttpRequest 引用。\r\n     */\r\n    get http(): any {\r\n        return this._http;\r\n    }\r\n\r\n    reset() {\r\n        this.offAll();\r\n        this._data = null;\r\n    }\r\n}\r\n\r\n","import { Event } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { ImgUtils } from \"../utils/ImgUtils\";\r\nimport { HttpRequest } from \"./HttpRequest\";\r\nimport { WorkerLoader } from \"./WorkerLoader\";\r\n\r\nexport class Downloader {\r\n    common(owner: any, url: string, originalUrl: string, contentType: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let http = this.getRequestInst();\r\n        http.on(Event.COMPLETE, () => {\r\n            let data = http.data;\r\n            this.returnRequestInst(http);\r\n\r\n            onComplete(data);\r\n        });\r\n        http.on(Event.ERROR, null, (error: string) => {\r\n            this.returnRequestInst(http);\r\n\r\n            onComplete(null, error);\r\n        });\r\n        if (onProgress)\r\n            http.on(Event.PROGRESS, onProgress);\r\n        http.send(url, null, \"get\", <any>contentType);\r\n        owner.$ref = http; //保持引用避免gc掉\r\n    }\r\n\r\n    image(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let image: HTMLImageElement = new Browser.window.Image();\r\n        image.crossOrigin = \"\";\r\n        image.onload = () => {\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            onComplete(image);\r\n        };\r\n        image.onerror = () => {\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            onComplete(null, \"\");\r\n        };\r\n        image.src = url;\r\n        owner.$ref = image; //保持引用避免gc掉\r\n    }\r\n\r\n    imageWithBlob(owner: any, blob: ArrayBuffer, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let url = ImgUtils.arrayBufferToURL(originalUrl, blob);\r\n        this.image(owner, url, originalUrl, onProgress, onComplete);\r\n    }\r\n\r\n    imageWithWorker(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        WorkerLoader.enable = true;\r\n        if (WorkerLoader.enable) {\r\n            WorkerLoader.load(url, owner.workerLoaderOptions).then(ret => {\r\n                if (ret)\r\n                    onComplete(ret);\r\n                else\r\n                    onComplete(null, \"workerloader failed!\");\r\n            });\r\n        }\r\n        else\r\n            this.image(owner, url, originalUrl, onProgress, onComplete);\r\n    }\r\n\r\n    audio(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void) {\r\n        let audio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n        audio.crossOrigin = \"\";\r\n        audio.oncanplaythrough = () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onerror = null;\r\n            onComplete(audio);\r\n        };\r\n        audio.onerror = () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onerror = null;\r\n            onComplete(null, \"\");\r\n        };\r\n        audio.src = url;\r\n        owner.$ref = audio; //保持引用避免gc掉\r\n    }\r\n\r\n    httpRequestPool: Array<HttpRequest> = [];\r\n    protected getRequestInst() {\r\n        if (this.httpRequestPool.length == 0\r\n            || Browser.onVVMiniGame || Browser.onHWMiniGame /*临时修复vivo复用xmlhttprequest的bug*/) {\r\n            return new HttpRequest();\r\n        } else {\r\n            return this.httpRequestPool.pop();\r\n        }\r\n    }\r\n\r\n    protected returnRequestInst(inst: HttpRequest) {\r\n        inst.reset();\r\n        if (this.httpRequestPool.length < 10)\r\n            this.httpRequestPool.push(inst);\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Event } from \"../events/Event\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Delegate } from \"../utils/Delegate\";\r\nimport { AtlasInfoManager } from \"./AtlasInfoManager\";\r\nimport { WorkerLoader } from \"./WorkerLoader\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\nimport { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\r\nimport { IBatchProgress, ProgressCallback, BatchProgress } from \"./BatchProgress\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Downloader } from \"./Downloader\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { XML } from \"../html/XML\";\r\n\r\nexport interface ILoadTask {\r\n    readonly type: string;\r\n    readonly url: string;\r\n    readonly uuid: string;\r\n    readonly ext: string;\r\n    readonly loader: Loader;\r\n    readonly obsoluteInst: Resource;\r\n    readonly options: Readonly<ILoadOptions>;\r\n    readonly progress: IBatchProgress;\r\n}\r\n\r\nexport interface IResourceLoader {\r\n    load(task: ILoadTask): Promise<any>;\r\n}\r\n\r\nexport interface ILoadOptions {\r\n    type?: string;\r\n    priority?: number;\r\n    group?: string;\r\n    cache?: boolean;\r\n    ignoreCache?: boolean;\r\n    noRetry?: boolean;\r\n    silent?: boolean;\r\n    useWorkerLoader?: boolean;\r\n    constructParams?: TextureConstructParams;\r\n    propertyParams?: TexturePropertyParams;\r\n    blob?: ArrayBuffer;\r\n    initiator?: ILoadTask;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface ILoadURL extends ILoadOptions {\r\n    url: string;\r\n}\r\n\r\ninterface ContentTypeMap {\r\n    \"text\": string,\r\n    \"json\": any,\r\n    \"xml\": XML,\r\n    \"arraybuffer\": ArrayBuffer,\r\n    \"image\": HTMLImageElement | ImageBitmap,\r\n    \"sound\": HTMLAudioElement\r\n}\r\n\r\nvar typeIdCounter = 0;\r\ntype TypeMapEntry = { typeId: number, loaderType: new () => IResourceLoader };\r\n\r\ninterface URLInfo {\r\n    ext: string,\r\n    typeId: number,\r\n    main: boolean,\r\n    loaderType: new () => IResourceLoader,\r\n}\r\nconst NullURLInfo: Readonly<URLInfo> = { ext: null, typeId: null, main: false, loaderType: null };\r\n\r\n/**\r\n * <code>Loader</code> 类可用来加载文本、JSON、XML、二进制、图像等资源。\r\n */\r\nexport class Loader extends EventDispatcher {\r\n    /**文本类型，加载完成后返回包含string的TextResource对象。*/\r\n    static TEXT = \"text\";\r\n    /**JSON 类型，加载完成后返回包含json数据的TextResource对象。*/\r\n    static JSON = \"json\";\r\n    /**XML 类型，加载完成后返回包含domXML的TextResource对象。*/\r\n    static XML = \"xml\";\r\n    /**二进制类型，加载完成后返回包含arraybuffer的TextResource对象。*/\r\n    static BUFFER = \"arraybuffer\";\r\n    /**纹理类型，加载完成后返回Texture。*/\r\n    static IMAGE = \"image\";\r\n    /**声音类型，加载完成后返回Sound。*/\r\n    static SOUND = \"sound\";\r\n    /**视频类型，加载完成后返回VideoTexture。*/\r\n    static VIDEO = \"video\";\r\n    /**图集类型，加载完成后返回图集json信息(并创建图集内小图Texture)。*/\r\n    static ATLAS = \"atlas\";\r\n    /**位图字体类型，加载完成后返回BitmapFont，加载后，会根据文件名自动注册为位图字体。*/\r\n    static FONT = \"font\";\r\n    /** TTF字体类型，加载完成后返回一个对象。*/\r\n    static TTF = \"ttf\";\r\n    /**Hierarchy资源。*/\r\n    static HIERARCHY = \"HIERARCHY\";\r\n    /**Mesh资源。*/\r\n    static MESH = \"MESH\";\r\n    /**Material资源。*/\r\n    static MATERIAL = \"MATERIAL\";\r\n    /**Texture2D资源。*/\r\n    static TEXTURE2D = \"TEXTURE2D\"; //这里是为了兼容，实际应该是BaseTexture\r\n    /**TextureCube资源。*/\r\n    static TEXTURECUBE = \"TEXTURE2D\"; //兼容处理，现在TEXTURE2D类型可以载入Texture或者TextureCube\r\n    static TEXTURE2DARRAY = \"TEXTURE2D\";\r\n    /**AnimationClip资源。*/\r\n    static ANIMATIONCLIP = \"ANIMATIONCLIP\";\r\n    /**Terrain资源。*/\r\n    static TERRAINHEIGHTDATA = \"TERRAINHEIGHTDATA\";\r\n    /**Terrain资源。*/\r\n    static TERRAINRES = \"TERRAIN\";\r\n    /** Spine 资源 */\r\n    static SPINE = \"SPINE\";\r\n\r\n    /** 加载出错后的重试次数，默认重试一次*/\r\n    retryNum: number = 1;\r\n    /** 延迟时间多久再进行错误重试，默认立即重试*/\r\n    retryDelay: number = 0;\r\n    /** 最大下载线程，默认为5个*/\r\n    maxLoader: number = 5;\r\n\r\n    static readonly extMap: { [ext: string]: Array<TypeMapEntry> } = {};\r\n    static readonly typeMap: { [type: string]: TypeMapEntry } = {};\r\n\r\n    static downloader = new Downloader();\r\n\r\n    /**\r\n     * 注册一种资源装载器。\r\n     * @param exts 扩展名\r\n     * @param cls\r\n     * @param type 类型标识。如果这种资源需要支持识别没有扩展名的情况，或者一个扩展名对应了多种资源类型的情况，那么指定type参数是个最优实践。\r\n     */\r\n    static registerLoader(exts: string[], cls: new () => IResourceLoader, type?: string) {\r\n        let typeEntry: TypeMapEntry;\r\n        if (type) {\r\n            typeEntry = <TypeMapEntry>Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                Loader.typeMap[type] = typeEntry = { typeId: typeIdCounter++, loaderType: cls };\r\n            else if (typeEntry.loaderType != cls)\r\n                typeEntry = { typeId: typeEntry.typeId, loaderType: cls };\r\n        }\r\n        else\r\n            typeEntry = { typeId: typeIdCounter++, loaderType: cls };\r\n\r\n        for (let ext of exts) {\r\n            let entry = Loader.extMap[ext];\r\n            if (entry && type) { //这个扩展名已经被注册为其他资源类型\r\n                let i = entry.findIndex(e => e.typeId == typeEntry.typeId);\r\n                if (i == -1) //注册为次类型\r\n                    entry.push(typeEntry);\r\n                else //覆盖旧的设置\r\n                    entry[i].loaderType = cls;\r\n            }\r\n            else {\r\n                Loader.extMap[ext] = [typeEntry];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**资源分组对应表。*/\r\n    static groupMap: { [name: string]: Set<string> } = {};\r\n    /**已加载的资源池。*/\r\n    static loadedMap: { [url: string]: Array<any> } = {};\r\n    /** 预加载的数据文件。如果一个url在这里有记录，则请求时直接使用这里的数据，放弃网络加载。*/\r\n    static preLoadedMap: { [url: string]: any } = {};\r\n\r\n    /**@private */\r\n    private _loadings: Map<string, LoadTask>;\r\n    /**@private */\r\n    private _queue: Array<DownloadItem>;\r\n    /**@private */\r\n    private _downloadings: Set<DownloadItem>;\r\n\r\n    /**\r\n     * <p>创建一个新的 <code>Loader</code> 实例。</p>\r\n     * <p><b>注意：</b>请使用Laya.loader加载资源，这是一个单例，不要手动实例化此类，否则会导致不可预料的问题。</p>\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._loadings = new Map();\r\n        this._queue = [];\r\n        this._downloadings = new Set();\r\n    }\r\n\r\n    /**\r\n     * 是否有任何的加载任务在进行\r\n     */\r\n    public get loading(): boolean {\r\n        return this._loadings.size > 0;\r\n    }\r\n\r\n    /**\r\n     * <p>加载资源。</p>\r\n     * @param url 要加载的资源地址或资源地址数组。\r\n     * @param type 资源类型。比如：Loader.IMAGE。\r\n     * @param onProgress 进度回调函数。\r\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], type?: string, onProgress?: ProgressCallback): Promise<any>;\r\n    /**\r\n     * <p>加载资源。</p>\r\n     * @param url 要加载的资源地址或资源地址数组。\r\n     * @param options 加载选项。\r\n     * @param onProgress 进度回调函数。\r\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], options?: Readonly<ILoadOptions>, onProgress?: ProgressCallback): Promise<any>;\r\n    /**\r\n     * <p>这是兼容2.0引擎的加载接口</p>\r\n     * <p>加载资源。</p>\r\n     * @param url\t\t要加载的单个资源地址或资源信息数组。比如：简单数组：[\"a.png\",\"b.png\"]；复杂数组[{url:\"a.png\",type:Loader.IMAGE,size:100,priority:1},{url:\"b.json\",type:Loader.JSON,size:50,priority:1}]。\r\n     * @param complete\t加载结束回调。根据url类型不同分为2种情况：1. url为String类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     * @param progress\t加载进度回调。回调参数值为当前资源的加载进度信息(0-1)。\r\n     * @param type\t\t资源类型。比如：Loader.IMAGE。\r\n     * @param priority\t(default = 0)加载的优先级，数字越大优先级越高，优先级高的优先加载。\r\n     * @param cache\t\t是否缓存。\r\n     * @param group\t\t分组，方便对资源进行管理。\r\n     * @param ignoreCache\t是否忽略缓存。\r\n     * @param useWorkerLoader(default = false)是否使用worker加载（只针对IMAGE类型和ATLAS类型，并且浏览器支持的情况下生效）\r\n     * @return Promise对象\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], complete?: Handler, progress?: Handler, type?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any>;\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], arg1?: string | Readonly<ILoadOptions> | Handler, arg2?: ProgressCallback | Handler, arg3?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any> {\r\n        let complete: Handler;\r\n        let type: string;\r\n        let options: ILoadOptions = dummyOptions;\r\n        if (arg1 instanceof Handler) {\r\n            complete = arg1;\r\n            type = arg3;\r\n        }\r\n        else if (typeof (arg1) === \"string\")\r\n            type = arg1;\r\n        else if (arg1 != null) {\r\n            type = arg1.type;\r\n            options = arg1;\r\n        }\r\n\r\n        if (priority != null || cache != null || ignoreCache != null || group != null || useWorkerLoader != null) {\r\n            if (options === dummyOptions)\r\n                options = { priority, cache, ignoreCache, group, useWorkerLoader };\r\n            else\r\n                options = Object.assign(options, { priority, cache, ignoreCache, group, useWorkerLoader });\r\n        }\r\n        if (options.cache === false)\r\n            options.ignoreCache = true;\r\n\r\n        let onProgress: ProgressCallback;\r\n        if (arg2 instanceof Handler)\r\n            onProgress = (value: number) => arg2.runWith(value);\r\n        else\r\n            onProgress = arg2;\r\n\r\n        let promise: Promise<any>;\r\n        if (Array.isArray(url)) {\r\n            let pd: BatchProgress;\r\n            if (onProgress)\r\n                pd = new BatchProgress(onProgress);\r\n\r\n            let promises: Array<Promise<any>> = [];\r\n            for (let i = 0; i < url.length; i++) {\r\n                let url2 = url[i];\r\n                if (!url2)\r\n                    continue;\r\n\r\n                if (typeof (url2) === \"string\") {\r\n                    promises.push(this._load1(url2, type, options, pd?.createCallback()));\r\n                }\r\n                else {\r\n                    promises.push(this._load1(url2.url, url2.type || type,\r\n                        options !== dummyOptions ? Object.assign({}, options, url2) : url2, pd?.createCallback()));\r\n                }\r\n            }\r\n\r\n            promise = Promise.all(promises);\r\n        }\r\n        else if (typeof (url) === \"string\")\r\n            promise = this._load1(url, type, options, onProgress);\r\n        else\r\n            promise = this._load1(url.url, url.type || type,\r\n                options !== dummyOptions ? Object.assign({}, options, url) : url, onProgress);\r\n\r\n        if (complete)\r\n            return promise.then(result => {\r\n                complete.runWith(result);\r\n                return result;\r\n            });\r\n        else\r\n            return promise;\r\n    }\r\n\r\n    private _load1(url: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\r\n        if (LayaEnv.isPreview) {\r\n            if (url.startsWith(\"res://\")) {\r\n                let uuid = url.substring(6);\r\n                return AssetDb.inst.UUID_to_URL_async(uuid).then(url2 => {\r\n                    if (url2)\r\n                        return this._load2(url2, uuid, type, options, onProgress);\r\n                    else {\r\n                        !options.silent && Loader.warnFailed(url);\r\n                        return Promise.resolve(null);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return AssetDb.inst.URL_to_UUID_async(url).then(uuid => {\r\n                    return this._load2(url, uuid, type, options, onProgress);\r\n                });\r\n            }\r\n        }\r\n        else\r\n            return this._load2(url, null, type, options, onProgress);\r\n    }\r\n\r\n    private _load2(url: string, uuid: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\r\n        let { ext, typeId, main, loaderType } = Loader.getURLInfo(url, type);\r\n        if (!loaderType) {\r\n            !options.silent && Loader.warnFailed(url);\r\n            return Promise.resolve(null);\r\n        }\r\n        let formattedUrl = URL.formatURL(url);\r\n\r\n        if (options.group) {\r\n            let set = Loader.groupMap[options.group];\r\n            if (!set)\r\n                set = Loader.groupMap[options.group] = new Set();\r\n            set.add(formattedUrl);\r\n        }\r\n\r\n        let obsoluteRes: Resource;\r\n        if (!options.ignoreCache) {\r\n            let cacheRes = Loader._getRes(formattedUrl, type);\r\n            if (cacheRes !== undefined) {\r\n                if (cacheRes == null)\r\n                    return Promise.resolve(null);\r\n                else {\r\n                    if (!(cacheRes instanceof Resource))\r\n                        return Promise.resolve(cacheRes);\r\n\r\n                    if (cacheRes.obsolute)\r\n                        obsoluteRes = cacheRes;\r\n\r\n                    if (!obsoluteRes && (!cacheRes.uuid || !uuid || uuid == cacheRes.uuid))\r\n                        return Promise.resolve(cacheRes);\r\n                }\r\n            }\r\n        }\r\n\r\n        let loadingKey = formattedUrl;\r\n        if (!main)\r\n            loadingKey += \"@\" + typeId;\r\n        let task = this._loadings.get(loadingKey);\r\n        if (task) {\r\n            //fix recursive dependency\r\n            if (options.initiator === task) {\r\n                return Promise.resolve();\r\n            }\r\n            if (onProgress)\r\n                task.onProgress.add(onProgress);\r\n            return new Promise((resolve) => task.onComplete.add(resolve));\r\n        }\r\n\r\n        //判断是否在自动图集里\r\n        let atlasInfo = AtlasInfoManager.getFileLoadPath(formattedUrl);\r\n        if (atlasInfo) {\r\n            return this.load(atlasInfo.url, { type: Loader.ATLAS, baseUrl: atlasInfo.baseUrl }).then(() => {\r\n                return Loader.getRes(url, type);\r\n            });\r\n        }\r\n\r\n        if (loadTaskPool.length > 0)\r\n            task = loadTaskPool.pop();\r\n        else\r\n            task = new LoadTask();\r\n        task.type = type;\r\n        task.url = url;\r\n        task.uuid = uuid;\r\n        task.ext = ext;\r\n        options = Object.assign(task.options, options);\r\n        delete options.type;\r\n        if (options.priority == null)\r\n            options.priority = 0;\r\n        if (options.useWorkerLoader == null)\r\n            options.useWorkerLoader = WorkerLoader.enable;\r\n        if (onProgress)\r\n            task.onProgress.add(onProgress);\r\n        task.loader = this;\r\n        task.obsoluteInst = obsoluteRes;\r\n\r\n        let assetLoader = new loaderType();\r\n        this._loadings.set(loadingKey, task);\r\n\r\n        let promise: Promise<any>;\r\n        try {\r\n            promise = assetLoader.load(task);\r\n        }\r\n        catch (err: any) {\r\n            !options.silent && Loader.warnFailed(url, err);\r\n\r\n            promise = Promise.resolve(null);\r\n        }\r\n\r\n        return promise.then(content => {\r\n            if (content instanceof Resource) {\r\n                content._setCreateURL(url, uuid);\r\n            }\r\n\r\n            if (task.options.cache !== false)\r\n                Loader._cacheRes(formattedUrl, content, typeId, main);\r\n\r\n            task.progress.update(-1, 1);\r\n\r\n            //console.log(\"Loaded \" + url);\r\n            task.onComplete.invoke(content);\r\n            return content;\r\n        }).catch(error => {\r\n            !options.silent && Loader.warnFailed(url, error);\r\n\r\n            if (task.options.cache !== false)\r\n                Loader._cacheRes(formattedUrl, null, typeId, main);\r\n\r\n            task.onComplete.invoke(null);\r\n            return null;\r\n        }).then((result: any) => {\r\n            this._loadings.delete(loadingKey);\r\n            task.reset();\r\n            loadTaskPool.push(task);\r\n            if (this._loadings.size == 0)\r\n                this.event(Event.COMPLETE);\r\n            return result;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 从指定URL下载。这是较为底层的下载资源的方法，它和load方法不同，不对返回的数据进行解析，也不会缓存下载的内容。\r\n     * 成功则返回下载的数据，失败返回null。\r\n     */\r\n    fetch<K extends keyof ContentTypeMap>(url: string, contentType: K, onProgress?: ProgressCallback, options?: Readonly<ILoadOptions>): Promise<ContentTypeMap[K]> {\r\n        options = options || dummyOptions;\r\n        let task: DownloadItem = {\r\n            originalUrl: url,\r\n            url: url,\r\n            contentType: contentType,\r\n            priority: options.priority ?? 1,\r\n            retryCnt: 0,\r\n            onProgress: onProgress,\r\n            onComplete: null,\r\n        };\r\n        if (options.useWorkerLoader) {\r\n            task.useWorkerLoader = true;\r\n            task.workerLoaderOptions = options.workerLoaderOptions;\r\n        }\r\n        if (options.blob)\r\n            task.blob = options.blob;\r\n        if (options.noRetry)\r\n            task.retryCnt = -1;\r\n        if (options.silent)\r\n            task.silent = true;\r\n\r\n        return AssetDb.inst.resolveURL(url).then(url => {\r\n            return new Promise((resolve) => {\r\n                task.url = URL.formatURL(url);\r\n                task.onComplete = resolve;\r\n                this.queueToDownload(task);\r\n            });\r\n        });\r\n    }\r\n\r\n    private queueToDownload(item: DownloadItem) {\r\n        if (this._downloadings.size < this.maxLoader) {\r\n            this.download(item);\r\n            return;\r\n        }\r\n\r\n        let priority = item.priority;\r\n        if (priority == 0)\r\n            this._queue.push(item);\r\n        else {\r\n            let i = this._queue.findIndex(e => e.priority < priority);\r\n            if (i != -1)\r\n                this._queue.splice(i, 0, item);\r\n            else\r\n                this._queue.push(item);\r\n        }\r\n    }\r\n\r\n    private download(item: DownloadItem) {\r\n        this._downloadings.add(item);\r\n        let url = URL.postFormatURL(item.url);\r\n\r\n        if (item.contentType == \"image\") {\r\n            let preloadedContent = Loader.preLoadedMap[item.url];\r\n            if (preloadedContent) {\r\n                if (!(preloadedContent instanceof ArrayBuffer)) {\r\n                    this.completeItem(item, preloadedContent);\r\n                    return;\r\n                }\r\n\r\n                //cache as arraybuffer\r\n                item.blob = preloadedContent;\r\n            }\r\n\r\n            if (item.blob) {\r\n                Loader.downloader.imageWithBlob(item, item.blob, item.originalUrl, item.onProgress, (data: any, error: string) => {\r\n                    if (!data)\r\n                        item.retryCnt = -1; //失败无需重试\r\n                    this.completeItem(item, data, error);\r\n                });\r\n            }\r\n            else if (item.useWorkerLoader) {\r\n                Loader.downloader.imageWithWorker(item, url, item.originalUrl, item.onProgress, (data: any, error: string) => {\r\n                    if (!data)\r\n                        item.useWorkerLoader = false; //重试不用worker\r\n                    this.completeItem(item, data, error);\r\n                });\r\n            }\r\n            else {\r\n                Loader.downloader.image(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\r\n                    this.completeItem(item, data, error));\r\n            }\r\n        }\r\n        else if (item.contentType == \"sound\") {\r\n            Loader.downloader.audio(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\r\n                this.completeItem(item, data, error));\r\n        }\r\n        else {\r\n            let preloadedContent = Loader.preLoadedMap[item.url];\r\n            if (preloadedContent) {\r\n                this.completeItem(item, preloadedContent);\r\n                return;\r\n            }\r\n\r\n            Loader.downloader.common(item, url, item.originalUrl, item.contentType, item.onProgress, (data: any, error: string) =>\r\n                this.completeItem(item, data, error));\r\n        }\r\n    }\r\n\r\n    private completeItem(item: DownloadItem, content: any, error?: string) {\r\n        this._downloadings.delete(item);\r\n        if (content) {\r\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\r\n                this.download(this._queue.shift());\r\n\r\n            if (item.onProgress)\r\n                item.onProgress(1);\r\n\r\n            item.onComplete(content);\r\n        }\r\n        else if (item.retryCnt != -1 && item.retryCnt < this.retryNum) {\r\n            item.retryCnt++;\r\n            if (!item.silent)\r\n                console.debug(`Retry to load ${item.url} (${item.retryCnt})`);\r\n            ILaya.systemTimer.once(this.retryDelay, this, this.queueToDownload, [item], false);\r\n        }\r\n        else {\r\n            !item.silent && Loader.warnFailed(item.url);\r\n            if (item.onProgress)\r\n                item.onProgress(1);\r\n\r\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\r\n                this.download(this._queue.shift());\r\n\r\n            item.onComplete(null);\r\n        }\r\n    }\r\n\r\n    private static getURLInfo(url: string, type?: string): URLInfo {\r\n        //先根据扩展名获得注册信息A\r\n        let ext = url.startsWith(\"data:\") ? \"png\" : Utils.getFileExtension(url);\r\n        let extEntry: Array<TypeMapEntry>;\r\n        if (ext.length > 0)\r\n            extEntry = Loader.extMap[ext];\r\n\r\n        let typeId: number;\r\n        let main: boolean;\r\n        let loaderType: new () => IResourceLoader;\r\n\r\n        if (type) { //指定了类型\r\n            let typeEntry = Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                return NullURLInfo;\r\n\r\n            typeId = typeEntry.typeId;\r\n\r\n            let i: number = 0;\r\n            if (extEntry) {\r\n                if (extEntry[0].typeId === typeId //优化，大部分情况均为如此\r\n                    || (i = extEntry.findIndex(e => e.typeId === typeId)) != -1) {\r\n                    main = i == 0;\r\n                    loaderType = extEntry[i].loaderType;\r\n                }\r\n                else {\r\n                    //未与扩展名匹配的情况，例如a.lh试图以Loader.JSON类型加载，这种组合没有注册，但仍然允许加载为副资源\r\n                    main = false;\r\n                    loaderType = typeEntry.loaderType;\r\n                }\r\n            }\r\n            else { //扩展名没有注册的情况\r\n                main = type != Loader.TEXTURE2D;\r\n                loaderType = typeEntry.loaderType;\r\n            }\r\n        }\r\n        else {\r\n            if (!extEntry)\r\n                return NullURLInfo;\r\n\r\n            //没有自定类型，则认为是主资源\r\n            main = true;\r\n            typeId = extEntry[0].typeId;\r\n            loaderType = extEntry[0].loaderType;\r\n        }\r\n\r\n        return { ext, main, typeId, loaderType };\r\n    }\r\n\r\n    private static warnFailed(url: string, err?: any) {\r\n        this.warn(`Failed to load '${url}'`, err);\r\n    }\r\n\r\n    public static warn(msg: string, err?: any) {\r\n        if (err)\r\n            console.warn(msg, err);\r\n        else\r\n            console.warn(msg);\r\n    }\r\n\r\n    /**\r\n     * 获取指定资源地址的资源。\r\n     * @param url 资源地址。\r\n     * @return 返回资源。\r\n     */\r\n    static getRes(url: string, type?: string): any {\r\n        url = URL.formatURL(url);\r\n        let ret = Loader._getRes(url, type);\r\n        return ret || null;\r\n    }\r\n\r\n    private static _getRes(url: string, type?: string): any {\r\n        let resArr = Loader.loadedMap[url];\r\n        if (!resArr)\r\n            return undefined;\r\n\r\n        let ret: any;\r\n        if (type) {\r\n            let typeEntry = <TypeMapEntry>Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                return undefined;\r\n\r\n            if (resArr.length == 2) { //优化，大部分情况都是只有主资源，也就是两个元素\r\n                if (resArr[0] == typeEntry.typeId)\r\n                    ret = resArr[1];\r\n            }\r\n            else {\r\n                let i = resArr.indexOf(typeEntry.typeId);\r\n                if (i != -1)\r\n                    ret = resArr[i + 1];\r\n            }\r\n        }\r\n        else\r\n            ret = resArr[1]; //主资源\r\n\r\n        if ((ret instanceof Resource) && ret.destroyed)\r\n            return undefined;\r\n        else\r\n            return ret;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getTexture2D(url: string): Texture2D {\r\n        return Loader.getRes(url, Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getBaseTexture<T extends BaseTexture>(url: string): T {\r\n        return Loader.getRes(url, Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**\r\n     * 获取指定资源地址的图集地址列表。\r\n     * @param url 图集地址。\r\n     * @return 返回地址集合。\r\n     */\r\n    static getAtlas(url: string): AtlasResource {\r\n        return Loader.getRes(url, Loader.ATLAS);\r\n    }\r\n\r\n    getRes(url: string, type?: string): any {\r\n        return Loader.getRes(url, type);\r\n    }\r\n\r\n    static createNodes<T extends Node>(url: string): T {\r\n        return <T>(<Prefab>Loader.getRes(url))?.create();\r\n    }\r\n\r\n    /**\r\n     * 缓存资源。\r\n     * @param url 资源地址。\r\n     * @param data 要缓存的内容。\r\n     */\r\n    static cacheRes(url: string, data: any, type?: string): void {\r\n        url = URL.formatURL(url);\r\n        let urlInfo = Loader.getURLInfo(url, type);\r\n        if (urlInfo.typeId != null)\r\n            Loader._cacheRes(url, data, urlInfo.typeId, urlInfo.main);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _cacheRes(url: string, data: any, typeId: number, main: boolean) {\r\n        let entry: Array<any> = Loader.loadedMap[url];\r\n        if (main) {\r\n            if (entry) {\r\n                entry[0] = typeId;\r\n                entry[1] = data;\r\n            }\r\n            else\r\n                entry = Loader.loadedMap[url] = [typeId, data];\r\n        }\r\n        else {\r\n            if (entry) {\r\n                let i = entry.findIndex(e => e === typeId);\r\n                if (i != -1)\r\n                    entry[i + 1] = data;\r\n                else\r\n                    entry.push(typeId, data);\r\n            }\r\n            else\r\n                entry = Loader.loadedMap[url] = [null, undefined, typeId, data];\r\n        }\r\n    }\r\n\r\n    cacheRes(url: string, data: any, type?: string): void {\r\n        Loader.cacheRes(url, data, type);\r\n    }\r\n\r\n    /**\r\n     * 清理指定资源地址缓存。\r\n     * @param url 资源地址。\r\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\r\n     */\r\n    static clearRes(url: string, checkObj?: any): void {\r\n        url = URL.formatURL(url);\r\n        Loader._clearRes(url, checkObj);\r\n    }\r\n\r\n    /**\r\n     * 清理指定资源地址缓存。\r\n     * @param url 资源地址。\r\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\r\n     */\r\n    clearRes(url: string, checkObj?: any): void {\r\n        url = URL.formatURL(url);\r\n        Loader._clearRes(url, checkObj);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _clearRes(url: string, checkObj?: any) {\r\n        let entry = Loader.loadedMap[url];\r\n        if (!entry)\r\n            return;\r\n\r\n        if (checkObj) {\r\n            if (entry[1] == checkObj) {\r\n                if (entry.length == 2)\r\n                    delete Loader.loadedMap[url];\r\n                else\r\n                    entry[1] = undefined;\r\n            }\r\n            else {\r\n                let i = entry.indexOf(checkObj);\r\n                if (i == -1)\r\n                    return;\r\n\r\n                if (entry.length == 4 && entry[0] == null)\r\n                    delete Loader.loadedMap[url];\r\n                else\r\n                    entry.splice(i - 1, 2);\r\n            }\r\n\r\n            if ((checkObj instanceof Resource) && !checkObj.destroyed) {\r\n                checkObj.destroy();\r\n            }\r\n        }\r\n        else {\r\n            delete Loader.loadedMap[url];\r\n\r\n            if (entry.length > 2) {\r\n                for (let i = 1; i < entry.length; i += 2) {\r\n                    let obj = entry[i];\r\n                    if ((obj instanceof Resource) && !obj.destroyed) {\r\n                        obj.destroy();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let obj = entry[1];\r\n                if ((obj instanceof Resource) && !obj.destroyed) {\r\n                    obj.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁Texture使用的图片资源，保留texture壳，如果下次渲染的时候，发现texture使用的图片资源不存在，则会自动恢复\r\n     * 相比clearRes，clearTextureRes只是清理texture里面使用的图片资源，并不销毁texture，再次使用到的时候会自动恢复图片资源\r\n     * 而clearRes会彻底销毁texture，导致不能再使用；clearTextureRes能确保立即销毁图片资源，并且不用担心销毁错误\r\n     * @param url 图集地址或者texture地址，比如 \"res/atlas/comp.atlas\"或\"hall/bg.jpg\"\r\n     */\r\n    clearTextureRes(url: string): void {\r\n        url = URL.formatURL(url);\r\n        let entry = Loader.loadedMap[url];\r\n        if (!entry)\r\n            return;\r\n        let res = entry[1];\r\n        if (res instanceof Texture) {\r\n            res.disposeBitmap();\r\n        }\r\n        else if (res instanceof AtlasResource) {\r\n            for (let tex of res.textures)\r\n                tex.disposeBitmap();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置资源分组。\r\n     * @param url 资源地址。\r\n     * @param group 分组名。\r\n     */\r\n    static setGroup(url: string, group: string): void {\r\n        url = URL.formatURL(url);\r\n        let set = Loader.groupMap[group];\r\n        if (!set)\r\n            set = Loader.groupMap[group] = new Set();\r\n        set.add(url);\r\n    }\r\n\r\n    /**\r\n     * 根据分组清理资源。\r\n     * @param group 分组名\r\n     */\r\n    static clearResByGroup(group: string): void {\r\n        let set = Loader.groupMap[group];\r\n        if (set) {\r\n            for (let k of set)\r\n                Loader._clearRes(k);\r\n        }\r\n    }\r\n\r\n    /** 清理当前未完成的加载，所有未加载的内容全部停止加载。*/\r\n    clearUnLoaded(): void {\r\n        if (this._queue.length == 0)\r\n            return;\r\n\r\n        let arr = this._queue.concat();\r\n        this._queue.length = 0;\r\n        for (let item of arr)\r\n            item.onComplete(null);\r\n    }\r\n\r\n    /**\r\n     * 根据地址集合清理掉未加载的内容\r\n     * @param urls 资源地址集合\r\n     */\r\n    cancelLoadByUrls(urls: any[]): void {\r\n        if (!urls) return;\r\n        for (var i: number = 0, n: number = urls.length; i < n; i++) {\r\n            this.cancelLoadByUrl(urls[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据地址清理掉未加载的内容\r\n     * @param url 资源地址\r\n     */\r\n    cancelLoadByUrl(url: string): void {\r\n        url = URL.formatURL(url);\r\n        let i = this._queue.findIndex(item => item.url == url);\r\n        if (i != -1) {\r\n            let item = this._queue[i];\r\n            this._queue.splice(i, 1);\r\n            item.onComplete(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 载入一个分包\r\n     * @path 小游戏的分包路径\r\n     * @onProgress 加载进度回调\r\n     */\r\n    loadPackage(path: string, onProgress?: ProgressCallback): Promise<void>;\r\n    /**\r\n     * 载入一个分包。\r\n     * @path 分包路径\r\n     * @remoteUrl 如果分包是一个远程包，那需要提供远程资源服务器的地址，例如\"http://cdn.com/\"\r\n     * @onProgress 加载进度回调\r\n     */\r\n    loadPackage(path: string, remoteUrl?: string, onProgress?: ProgressCallback): Promise<void>;\r\n    loadPackage(path: string, arg2?: string | ProgressCallback, arg3?: ProgressCallback): Promise<void> {\r\n        let progress: ProgressCallback;\r\n        let remoteUrl: string;\r\n\r\n        if (typeof (arg2) === \"string\") {\r\n            remoteUrl = arg2;\r\n            progress = arg3;\r\n        } else {\r\n            progress = arg2;\r\n        }\r\n\r\n        if (remoteUrl) {\r\n            if (!remoteUrl.endsWith(\"/\"))\r\n                remoteUrl += \"/\";\r\n            let tmpPath: string = path + \"/\";\r\n            URL.basePaths[tmpPath] = remoteUrl;\r\n            return this._loadSubFileConfig(path, progress);\r\n        } else {\r\n            if (LayaEnv.isPreview)\r\n                return Promise.resolve();\r\n            let plat: any = null;\r\n            if (ILaya.Browser.onMiniGame) {\r\n                // wechat\r\n                plat = ILaya.Browser.window.wx;\r\n            } else if (ILaya.Browser.onTTMiniGame) {\r\n                // bytedance\r\n                plat = ILaya.Browser.window.tt;\r\n            } else if (ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onQGMiniGame) {\r\n                // mi/vivo/oppo\r\n                plat = ILaya.Browser.window.qg;\r\n            } else if (ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onTBMiniGame) {\r\n                // alipay\r\n                plat = ILaya.Browser.window.my;\r\n            } else {\r\n                return this._loadSubFileConfig(path, progress);\r\n            }\r\n\r\n            return this._loadMiniPackage(plat, path, progress).then(() =>\r\n                this._loadSubFileConfig(path, progress)\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    private _loadMiniPackage(mini: any, packName: string, progress?: ProgressCallback): Promise<any> {\r\n        if (!(packName.length > 0)) return Promise.resolve();\r\n        return new Promise((resolve: (value: any) => void, reject: (reason?: any) => void) => {\r\n            let loadTask: any = mini.loadSubpackage({\r\n                name: packName,\r\n                success: (res: any) => {\r\n                    resolve(res);\r\n                },\r\n                fail: (res: any) => {\r\n                    resolve(res);\r\n                }\r\n            });\r\n\r\n            loadTask.onProgressUpdate && loadTask.onProgressUpdate((res: any) => {\r\n                progress && progress(res);\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    private _loadSubFileConfig(path: string, onProgress: ProgressCallback): Promise<any> {\r\n        if (path.length > 0)\r\n            path += \"/\";\r\n\r\n        return this.fetch(path + \"fileconfig.json\", \"json\", onProgress).then(fileConfig => {\r\n            let files: Array<string> = [];\r\n            let col = fileConfig.files;\r\n            for (let k in col) {\r\n                if (k.length > 0) {\r\n                    for (let file of col[k])\r\n                        files.push(k + \"/\" + file);\r\n                }\r\n                else {\r\n                    for (let file of col[k])\r\n                        files.push(file);\r\n                }\r\n            }\r\n\r\n            if (fileConfig.hash) {\r\n                let i = 0;\r\n                let version = URL.version;\r\n                for (let k of fileConfig.hash) {\r\n                    if (k != null)\r\n                        version[files[i]] = k;\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            let configs: Array<any> = fileConfig.config;\r\n            let len = configs.length;\r\n            let i = 0, j = 0, m = 0, k = 0, n = 0;\r\n            let indice: Array<number>;\r\n            let c: any;\r\n            let metaMap = AssetDb.inst.metaMap;\r\n            while (true) {\r\n                if (indice == null) {\r\n                    if (i >= len)\r\n                        break;\r\n                    c = configs[i];\r\n                    indice = c.i;\r\n                    if (Array.isArray(indice))\r\n                        n = indice.length;\r\n                    else {\r\n                        m = indice;\r\n                        n = 0;\r\n                        k = 1;\r\n                    }\r\n                    j = 0;\r\n                }\r\n                if (k == 0) {\r\n                    if (j >= n) {\r\n                        i++;\r\n                        indice = null;\r\n                        continue;\r\n                    }\r\n                    k = indice[j++];\r\n                    if (k > 0) {\r\n                        m = k;\r\n                        k = 0;\r\n                    }\r\n                    else\r\n                        k = -k;\r\n                }\r\n                else\r\n                    k--;\r\n\r\n                let file = files[m + k];\r\n                switch (c.t) {\r\n                    case 0: //图片\r\n                        metaMap[file] = c;\r\n                        break;\r\n                    case 1: //自动图集\r\n                        AtlasInfoManager.addAtlas(file, c.prefix, c.frames);\r\n                        break;\r\n                    case 2: //Shader\r\n                        AssetDb.inst.shaderNameMap[c.shaderName] = file;\r\n                        break;\r\n                    case 3: //render texture\r\n                        Loader.preLoadedMap[URL.formatURL(file)] = c;\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass LoadTask implements ILoadTask {\r\n    type: string;\r\n    url: string;\r\n    uuid: string;\r\n    ext: string;\r\n    options: ILoadOptions;\r\n    loader: Loader;\r\n    progress: BatchProgress;\r\n    obsoluteInst: Resource;\r\n\r\n    onProgress: Delegate;\r\n    onComplete: Delegate;\r\n\r\n    constructor() {\r\n        this.options = {};\r\n        this.onProgress = new Delegate();\r\n        this.onComplete = new Delegate();\r\n        this.progress = new BatchProgress((progress: number) => this.onProgress.invoke(progress));\r\n    }\r\n\r\n    public reset() {\r\n        for (let k in this.options)\r\n            delete this.options[k];\r\n        this.onProgress.clear();\r\n        this.onComplete.clear();\r\n        this.progress.reset();\r\n        this.obsoluteInst = null;\r\n    }\r\n}\r\n\r\nconst loadTaskPool: Array<LoadTask> = [];\r\nconst dummyOptions: ILoadOptions = {};\r\n\r\ninterface DownloadItem {\r\n    url: string;\r\n    originalUrl: string;\r\n    contentType: string;\r\n    priority: number;\r\n    useWorkerLoader?: boolean;\r\n    workerLoaderOptions?: Record<string, any>;\r\n    blob?: ArrayBuffer;\r\n    retryCnt?: number;\r\n    silent?: boolean;\r\n    onComplete: (content: any) => void;\r\n    onProgress: ProgressCallback;\r\n}","/**\r\n\t * @private\r\n\t * <code>MathUtil</code> 是一个数据处理工具类。\r\n\t */\r\nexport class MathUtil {\r\n\r\n    static subtractVector3(l: Float32Array, r: Float32Array, o: Float32Array): void {\r\n        o[0] = l[0] - r[0];\r\n        o[1] = l[1] - r[1];\r\n        o[2] = l[2] - r[2];\r\n    }\r\n\r\n    static lerp(left: number, right: number, amount: number): number {\r\n        return left * (1 - amount) + right * amount;\r\n    }\r\n\r\n    static scaleVector3(f: Float32Array, b: number, e: Float32Array): void {\r\n        e[0] = f[0] * b;\r\n        e[1] = f[1] * b;\r\n        e[2] = f[2] * b;\r\n    }\r\n\r\n    static lerpVector3(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\r\n        var ax: number = l[0], ay: number = l[1], az: number = l[2];\r\n        o[0] = ax + t * (r[0] - ax);\r\n        o[1] = ay + t * (r[1] - ay);\r\n        o[2] = az + t * (r[2] - az);\r\n    }\r\n\r\n    static lerpVector4(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\r\n        var ax: number = l[0], ay: number = l[1], az: number = l[2], aw: number = l[3];\r\n        o[0] = ax + t * (r[0] - ax);\r\n        o[1] = ay + t * (r[1] - ay);\r\n        o[2] = az + t * (r[2] - az);\r\n        o[3] = aw + t * (r[3] - aw);\r\n    }\r\n\r\n    static slerpQuaternionArray(a: Float32Array, Offset1: number, b: Float32Array, Offset2: number, t: number, out: Float32Array, Offset3: number): Float32Array {\r\n\r\n        var ax: number = a[Offset1 + 0], ay: number = a[Offset1 + 1], az: number = a[Offset1 + 2], aw: number = a[Offset1 + 3], bx: number = b[Offset2 + 0], by: number = b[Offset2 + 1], bz: number = b[Offset2 + 2], bw: number = b[Offset2 + 3];\r\n\r\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\r\n\r\n        // calc cosine \r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary) \r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients \r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp) \r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close  \r\n            //  ... so we can do a linear interpolation \r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values \r\n        out[Offset3 + 0] = scale0 * ax + scale1 * bx;\r\n        out[Offset3 + 1] = scale0 * ay + scale1 * by;\r\n        out[Offset3 + 2] = scale0 * az + scale1 * bz;\r\n        out[Offset3 + 3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取指定的两个点组成的线段的角度值。\r\n     * @param\tx0 点一的 X 轴坐标值。\r\n     * @param\ty0 点一的 Y 轴坐标值。\r\n     * @param\tx1 点二的 X 轴坐标值。\r\n     * @param\ty1 点二的 Y 轴坐标值。\r\n     * @return 角度值。\r\n     */\r\n    static getRotation(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.atan2(y1 - y0, x1 - x0) / Math.PI * 180;\r\n    }\r\n\r\n    /**\r\n     * 一个用来确定数组元素排序顺序的比较函数。\r\n     * @param\ta 待比较数字。\r\n     * @param\tb 待比较数字。\r\n     * @return 如果a等于b 则值为0；如果b>a则值为1；如果b<则值为-1。\r\n     */\r\n    static sortBigFirst(a: number, b: number): number {\r\n        if (a == b) return 0;\r\n        return b > a ? 1 : -1;\r\n    }\r\n\r\n    /**\r\n     * 一个用来确定数组元素排序顺序的比较函数。\r\n     * @param\ta 待比较数字。\r\n     * @param\tb 待比较数字。\r\n     * @return 如果a等于b 则值为0；如果b>a则值为-1；如果b<则值为1。\r\n     */\r\n    static sortSmallFirst(a: number, b: number): number {\r\n        if (a == b) return 0;\r\n        return b > a ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * 将指定的元素转为数字进行比较。\r\n     * @param\ta 待比较元素。\r\n     * @param\tb 待比较元素。\r\n     * @return b、a转化成数字的差值 (b-a)。\r\n     */\r\n    static sortNumBigFirst(a: any, b: any): number {\r\n        return parseFloat(b) - parseFloat(a);\r\n    }\r\n\r\n    /**\r\n     * 将指定的元素转为数字进行比较。\r\n     * @param\ta 待比较元素。\r\n     * @param\tb 待比较元素。\r\n     * @return a、b转化成数字的差值 (a-b)。\r\n     */\r\n    static sortNumSmallFirst(a: any, b: any): number {\r\n        return parseFloat(a) - parseFloat(b);\r\n    }\r\n\r\n    /**\r\n     * 返回根据对象指定的属性进行排序的比较函数。\r\n     * @param\tkey 排序要依据的元素属性名。\r\n     * @param\tbigFirst 如果值为true，则按照由大到小的顺序进行排序，否则按照由小到大的顺序进行排序。\r\n     * @param\tforceNum 如果值为true，则将排序的元素转为数字进行比较。\r\n     * @return 排序函数。\r\n     */\r\n    static sortByKey(key: string, bigFirst: boolean = false, forceNum: boolean = true): (a: any, b: any) => number {\r\n        var _sortFun: Function;\r\n        if (bigFirst) {\r\n            _sortFun = forceNum ? MathUtil.sortNumBigFirst : MathUtil.sortBigFirst;\r\n        } else {\r\n            _sortFun = forceNum ? MathUtil.sortNumSmallFirst : MathUtil.sortSmallFirst;\r\n        }\r\n        return function (a: any, b: any): number {\r\n            return _sortFun(a[key], b[key]);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { AnimationBase } from \"./AnimationBase\";\r\nimport { MathUtil } from \"../maths/MathUtil\"\r\nimport { Ease } from \"../utils/Ease\"\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 节点关键帧动画播放类。解析播放IDE内制作的节点动画。\r\n */\r\nexport class FrameAnimation extends AnimationBase {\r\n\r\n    /**@private */\r\n    private static _sortIndexFun(objpre: any, objnext: any) {\r\n        return objpre.index - objnext.index\r\n    }\r\n\r\n    /**@internal id对象表*/\r\n    _targetDic: any;\r\n    /**@internal 动画数据*/\r\n    _animationData: any;\r\n    /**@private */\r\n    protected _usedFrames: any[];\r\n\r\n    constructor() {\r\n        super();\r\n        if (FrameAnimation._sortIndexFun === undefined) {\r\n            FrameAnimation._sortIndexFun = MathUtil.sortByKey(\"index\", false, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 初始化动画数据\r\n     * @param targetDic 节点ID索引\r\n     * @param animationData 动画数据\r\n     */\r\n    _setUp(targetDic: any, animationData: any): void {\r\n        this._targetDic = targetDic;\r\n        this._animationData = animationData;\r\n        this.interval = 1000 / animationData.frameRate;\r\n        if (animationData.parsed) {\r\n            this._count = animationData.count;\r\n            this._labels = animationData.labels;\r\n            this._usedFrames = animationData.animationNewFrames;\r\n        } else {\r\n            this._usedFrames = [];\r\n            this._calculateDatas();\r\n\r\n            animationData.parsed = true;\r\n            animationData.labels = this._labels;\r\n            animationData.count = this._count;\r\n            animationData.animationNewFrames = this._usedFrames;\r\n        }\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    clear(): AnimationBase {\r\n        super.clear();\r\n        this._targetDic = null;\r\n        this._animationData = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected _displayToIndex(value: number): void {\r\n        if (!this._animationData) return;\r\n        if (value < 0) value = 0;\r\n        if (value > this._count) value = this._count;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._displayNodeToFrame(nodes[i], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 将节点设置到某一帧的状态\r\n     * @param node 节点ID\r\n     * @param frame\r\n     * @param targetDic 节点表\r\n     */\r\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\r\n        if (!targetDic) targetDic = this._targetDic;\r\n        var target: any = targetDic[node.target];\r\n        if (!target) {\r\n            //trace(\"loseTarget:\",node.target);\r\n            return;\r\n        }\r\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\r\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\r\n        for (i = 0; i < len; i++) {\r\n            key = keys[i];\r\n            propFrames = frames[key];\r\n            if (propFrames.length > frame) {\r\n                value = propFrames[frame];\r\n            } else {\r\n                value = propFrames[propFrames.length - 1];\r\n            }\r\n            target[key] = value;\r\n        }\r\n        var funkeys: any[] = node.funkeys;\r\n        len = funkeys.length;\r\n        var funFrames: any;\r\n        if (len == 0) return;\r\n        for (i = 0; i < len; i++) {\r\n            key = funkeys[i];\r\n            funFrames = frames[key];\r\n            if (funFrames[frame] !== undefined) {\r\n                target[key] && target[key].apply(target, funFrames[frame]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算帧数据\r\n     */\r\n    private _calculateDatas(): void {\r\n        if (!this._animationData) return;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length, tNode: any;\r\n        this._count = 0;\r\n        for (i = 0; i < len; i++) {\r\n            tNode = nodes[i];\r\n            this._calculateKeyFrames(tNode);\r\n        }\r\n        this._count += 1;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算某个节点的帧数据\r\n     */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\r\n        if (!node.frames) node.frames = {};\r\n        if (!node.keys) node.keys = [];\r\n        else node.keys.length = 0;\r\n\r\n        if (!node.funkeys) node.funkeys = [];\r\n        else node.funkeys.length = 0;\r\n\r\n        if (!node.initValues) node.initValues = {};\r\n        for (key in keyFrames) {\r\n            var isFun: boolean = key.indexOf(\"()\") != -1;\r\n            tKeyFrames = keyFrames[key];\r\n            if (isFun) key = key.substr(0, key.length - 2);\r\n            if (!node.frames[key]) {\r\n                node.frames[key] = [];\r\n            }\r\n            if (!isFun) {\r\n                if (this._targetDic && this._targetDic[target]) {\r\n                    node.initValues[key] = this._targetDic[target][key];\r\n                }\r\n\r\n                tKeyFrames.sort(FrameAnimation._sortIndexFun);\r\n                node.keys.push(key);\r\n                this._calculateNodePropFrames(tKeyFrames, node.frames[key], key, target);\r\n            }\r\n            else {\r\n                node.funkeys.push(key);\r\n                var map: any[] = node.frames[key];\r\n                for (var i: number = 0; i < tKeyFrames.length; i++) {\r\n                    var temp: any = tKeyFrames[i];\r\n                    map[temp.index] = temp.value;\r\n                    if (temp.index > this._count) this._count = temp.index;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置节点，使节点恢复到动画之前的状态，方便其他动画控制\r\n     */\r\n    resetNodes(): void {\r\n        if (!this._targetDic) return;\r\n        if (!this._animationData) return;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        var tNode: any;\r\n        var initValues: any;\r\n        for (i = 0; i < len; i++) {\r\n            tNode = nodes[i];\r\n            initValues = tNode.initValues;\r\n            if (!initValues) continue;\r\n            var target: any = this._targetDic[tNode.target];\r\n            if (!target) continue;\r\n            var key: string;\r\n            for (key in initValues) {\r\n                target[key] = initValues[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算节点某个属性的帧数据\r\n     */\r\n    private _calculateNodePropFrames(keyframes: any[], frames: any[], key: string, target: number): void {\r\n        var i: number, len: number = keyframes.length - 1;\r\n        frames.length = keyframes[len].index + 1;\r\n        for (i = 0; i < len; i++) {\r\n            this._dealKeyFrame(keyframes[i]);\r\n            this._calculateFrameValues(keyframes[i], keyframes[i + 1], frames);\r\n        }\r\n        if (len == 0) {\r\n            frames[0] = keyframes[0].value;\r\n            if (this._usedFrames) this._usedFrames[keyframes[0].index] = true;\r\n        }\r\n        this._dealKeyFrame(keyframes[i]);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _dealKeyFrame(keyFrame: any): void {\r\n        if (keyFrame.label && keyFrame.label != \"\") this.addLabel(keyFrame.label, keyFrame.index);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算两个关键帧直接的帧数据\r\n     */\r\n    private _calculateFrameValues(startFrame: any, endFrame: any, result: any[]): void {\r\n        var i: number, easeFun: Function;\r\n        var start: number = startFrame.index, end: number = endFrame.index;\r\n        var startValue: number = startFrame.value;\r\n        var dValue: number = endFrame.value - startFrame.value;\r\n        var dLen: number = end - start;\r\n        var frames: any[] = this._usedFrames;\r\n        if (end > this._count) this._count = end;\r\n        if (startFrame.tween) {\r\n            easeFun = (Ease as any)[startFrame.tweenMethod];\r\n            if (easeFun == null) easeFun = Ease.linearNone;\r\n            for (i = start; i < end; i++) {\r\n                result[i] = easeFun(i - start, startValue, dValue, dLen);\r\n                if (frames) frames[i] = true;\r\n            }\r\n        } else {\r\n            for (i = start; i < end; i++) {\r\n                result[i] = startValue;\r\n            }\r\n        }\r\n        if (frames) {\r\n            frames[startFrame.index] = true;\r\n            frames[endFrame.index] = true;\r\n        }\r\n        result[endFrame.index] = endFrame.value;\r\n    }\r\n}\r\n","import { FrameAnimation } from \"./FrameAnimation\"\r\nimport { Graphics } from \"./Graphics\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\n\r\n/**\r\n * Graphics动画解析器\r\n * @private\r\n */\r\nexport class GraphicAnimation extends FrameAnimation {\r\n    /**@private */\r\n    animationList: any[];\r\n    /**@private */\r\n    animationDic: any;\r\n    /**@private */\r\n    protected _nodeList: any[];\r\n    /**@private */\r\n    protected _nodeDefaultProps: any;\r\n    /**@private */\r\n    protected _gList: any[];\r\n    /**@private */\r\n    protected _nodeIDAniDic: any = {};\r\n\r\n    /**@private */\r\n    protected static _drawTextureCmd: any[] = [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", -1], [\"height\", -1], [\"pivotX\", 0], [\"pivotY\", 0], [\"scaleX\", 1], [\"scaleY\", 1], [\"rotation\", 0], [\"alpha\", 1], [\"skewX\", 0], [\"skewY\", 0], [\"anchorX\", 0], [\"anchorY\", 0]];\r\n    /**@private */\r\n    protected static _temParam: any[] = [];\r\n    /**@private */\r\n    private static _I: GraphicAnimation;\r\n    /**@private */\r\n    private static _rootMatrix: Matrix;\r\n    /**@private */\r\n    private _rootNode: any;\r\n    /**@private */\r\n    protected _nodeGDic: any;\r\n\r\n    /**@private */\r\n    private _parseNodeList(uiView: any): void {\r\n        if (!this._nodeList) this._nodeList = [];\r\n        this._nodeDefaultProps[uiView.compId] = uiView.props;\r\n        if (uiView.compId) this._nodeList.push(uiView.compId);\r\n        var childs: any[] = uiView.child;\r\n        if (childs) {\r\n            var i: number, len: number = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._parseNodeList(childs[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _calGraphicData(aniData: any): void {\r\n        this._setUp(null, aniData);\r\n        this._createGraphicData();\r\n        if (this._nodeIDAniDic) {\r\n            var key: string;\r\n            for (key in this._nodeIDAniDic) {\r\n                this._nodeIDAniDic[key] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _createGraphicData(): void {\r\n        var gList: any[] = [];\r\n        var i: number, len: number = this.count;\r\n        var animationDataNew: any[] = this._usedFrames;\r\n        if (!animationDataNew) animationDataNew = [];\r\n        var preGraphic: Graphics;\r\n        for (i = 0; i < len; i++) {\r\n            if (animationDataNew[i] || !preGraphic) {\r\n                preGraphic = this._createFrameGraphic(i);\r\n            }\r\n            gList.push(preGraphic);\r\n        }\r\n        this._gList = gList;\r\n    }\r\n\r\n    /**@private */\r\n    protected _createFrameGraphic(frame: number): any {\r\n        var g: Graphics = new Graphics();\r\n        if (!GraphicAnimation._rootMatrix) GraphicAnimation._rootMatrix = new Matrix();\r\n        this._updateNodeGraphic(this._rootNode, frame, GraphicAnimation._rootMatrix, g);\r\n        //_updateNodeGraphic2(_rootNode, frame, g);\r\n        return g;\r\n    }\r\n\r\n    protected _updateNodeGraphic(node: any, frame: number, parentTransfrom: Matrix, g: Graphics, alpha: number = 1): void {\r\n        var tNodeG: GraphicNode;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!tNodeG.resultTransform)\r\n            tNodeG.resultTransform = new Matrix();\r\n        var tResultTransform: Matrix;\r\n        tResultTransform = tNodeG.resultTransform;\r\n        Matrix.mul(tNodeG.transform, parentTransfrom, tResultTransform);\r\n        var tTex: Texture;\r\n        var tGraphicAlpha: number = tNodeG.alpha * alpha;\r\n        if (tGraphicAlpha < 0.01) return;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                if (tResultTransform._checkTransform()) {\r\n                    g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tResultTransform, tGraphicAlpha);\r\n                    tNodeG.resultTransform = null;\r\n                } else {\r\n                    g.drawTexture(tTex, tResultTransform.tx, tResultTransform.ty, tNodeG.width, tNodeG.height, null, tGraphicAlpha);\r\n                }\r\n            }\r\n        }\r\n        var childs: any[] = node.child;\r\n        if (!childs) return;\r\n        var i: number, len: number;\r\n        len = childs.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._updateNodeGraphic(childs[i], frame, tResultTransform, g, tGraphicAlpha);\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     * @param tNodeG \r\n     * @param g \r\n     */\r\n    protected _updateNoChilds(tNodeG: GraphicNode, g: Graphics): void {\r\n        if (!tNodeG.skin) return;\r\n        var tTex: Texture = this._getTextureByUrl(tNodeG.skin);\r\n        if (!tTex) return;\r\n        var tTransform: Matrix = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate: boolean;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        if (!onlyTranslate) {\r\n            g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tTransform.clone(), tNodeG.alpha);\r\n        } else {\r\n            g.drawTexture(tTex, tTransform.tx, tTransform.ty, tNodeG.width, tNodeG.height, null, tNodeG.alpha);\r\n        }\r\n    }\r\n\r\n    protected _updateNodeGraphic2(node: any, frame: number, g: Graphics): void {\r\n        var tNodeG: GraphicNode;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!node.child) {\r\n            this._updateNoChilds(tNodeG, g);\r\n            return;\r\n        }\r\n        var tTransform: Matrix = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate: boolean;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        var hasTrans: boolean;\r\n        hasTrans = onlyTranslate && (tTransform.tx != 0 || tTransform.ty != 0);\r\n        var ifSave: boolean;\r\n        ifSave = (tTransform._bTransform) || tNodeG.alpha != 1;\r\n        if (ifSave) g.save();\r\n        if (tNodeG.alpha != 1) g.alpha(tNodeG.alpha);\r\n        if (!onlyTranslate) g.transform(tTransform.clone());\r\n        else if (hasTrans) g.translate(tTransform.tx, tTransform.ty);\r\n\r\n        var childs: any[] = node.child;\r\n        var tTex: Texture;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                g.drawImage(tTex, 0, 0, tNodeG.width, tNodeG.height);\r\n            }\r\n        }\r\n\r\n        if (childs) {\r\n            var i: number, len: number;\r\n            len = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._updateNodeGraphic2(childs[i], frame, g);\r\n            }\r\n        }\r\n\r\n        if (ifSave) {\r\n            g.restore();\r\n        } else {\r\n            if (!onlyTranslate) {\r\n                g.transform(tTransform.clone().invert());\r\n            } else if (hasTrans) {\r\n                g.translate(-tTransform.tx, -tTransform.ty);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        super._calculateKeyFrames(node);\r\n        this._nodeIDAniDic[node.target] = node;\r\n    }\r\n\r\n    /**@private */\r\n    protected getNodeDataByID(nodeID: number): any {\r\n        return this._nodeIDAniDic[nodeID];\r\n    }\r\n\r\n    /**@private */\r\n    protected _getParams(obj: any, params: any[], frame: number, obj2: any): any[] {\r\n        var rst: any[] = GraphicAnimation._temParam;\r\n        rst.length = params.length;\r\n        var i: number, len: number = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], frame, params[i][1], obj2);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**@private */\r\n    private _getObjVar(obj: any, key: string, frame: number, noValue: any, obj2: any): any {\r\n        if (key in obj) {\r\n            var vArr: any[] = obj[key];\r\n            if (frame >= vArr.length) frame = vArr.length - 1;\r\n            return obj[key][frame];\r\n        }\r\n        if (key in obj2) {\r\n            return obj2[key];\r\n        }\r\n        return noValue;\r\n    }\r\n    /**\r\n     * @internal\r\n     * @param nodeID \r\n     * @param frame \r\n     * @param rst \r\n     */\r\n    protected _getNodeGraphicData(nodeID: number, frame: number, rst: GraphicNode): GraphicNode {\r\n        if (!rst)\r\n            rst = new GraphicNode();\r\n        if (!rst.transform) {\r\n            rst.transform = new Matrix();\r\n        } else {\r\n            rst.transform.identity();\r\n        }\r\n\r\n        var node: any = this.getNodeDataByID(nodeID);\r\n        if (!node) return rst;\r\n        var frameData: any = node.frames;\r\n        var params: any[] = this._getParams(frameData, GraphicAnimation._drawTextureCmd, frame, this._nodeDefaultProps[nodeID]);\r\n        var url: string = params[0];\r\n        var width: number, height: number;\r\n        var px: number = params[5], py: number = params[6];\r\n        var aX: number = params[13], aY: number = params[14];\r\n        var sx: number = params[7], sy: number = params[8];\r\n        var rotate: number = params[9];\r\n        var skewX: number = params[11], skewY: number = params[12]\r\n        width = params[3];\r\n        height = params[4];\r\n        if (width == 0 || height == 0) url = null;\r\n        if (width == -1) width = 0;\r\n        if (height == -1) height = 0;\r\n        var tex: Texture;\r\n        rst.skin = url;\r\n        rst.width = width;\r\n        rst.height = height;\r\n        if (url) {\r\n            tex = this._getTextureByUrl(url);\r\n            if (tex) {\r\n                if (!width)\r\n                    width = tex.sourceWidth;\r\n                if (!height)\r\n                    height = tex.sourceHeight;\r\n            } else {\r\n                console.warn(\"lost skin:\", url, \",you may load pics first\");\r\n            }\r\n        }\r\n\r\n        rst.alpha = params[10];\r\n\r\n        var m: Matrix = rst.transform;\r\n        if (aX != 0) {\r\n            px = aX * width;\r\n        }\r\n        if (aY != 0) {\r\n            py = aY * height;\r\n        }\r\n        if (px != 0 || py != 0) {\r\n            m.translate(-px, -py);\r\n        }\r\n        var tm: Matrix = null;\r\n        if (rotate || sx !== 1 || sy !== 1 || skewX || skewY) {\r\n            tm = GraphicAnimation._tempMt;\r\n            tm.identity();\r\n            tm._bTransform = true;\r\n            var skx: number = (rotate - skewX) * 0.0174532922222222; //laya.CONST.PI180;\r\n            var sky: number = (rotate + skewY) * 0.0174532922222222;\r\n            var cx: number = Math.cos(sky);\r\n            var ssx: number = Math.sin(sky);\r\n            var cy: number = Math.sin(skx);\r\n            var ssy: number = Math.cos(skx);\r\n            tm.a = sx * cx;\r\n            tm.b = sx * ssx;\r\n            tm.c = -sy * cy;\r\n            tm.d = sy * ssy;\r\n            tm.tx = tm.ty = 0;\r\n        }\r\n        if (tm) {\r\n            m = Matrix.mul(m, tm, m);\r\n        }\r\n\r\n        m.translate(params[1], params[2]);\r\n\r\n        return rst;\r\n    }\r\n    private static _tempMt: Matrix = new Matrix();\r\n\r\n    /**@private */\r\n    protected _getTextureByUrl(url: string): any {\r\n        return Loader.getRes(url);\r\n    }\r\n\r\n    /**@private */\r\n    setAniData(uiView: any, aniName: string = null): void {\r\n        if (uiView.animations) {\r\n            this._nodeDefaultProps = {};\r\n            this._nodeGDic = {};\r\n            if (this._nodeList) this._nodeList.length = 0;\r\n            this._rootNode = uiView;\r\n            this._parseNodeList(uiView);\r\n            var aniDic: any = {};\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                this._labels = null;\r\n                if (aniName && aniName != tAniO.name) {\r\n                    continue;\r\n                }\r\n                if (!tAniO)\r\n                    continue;\r\n                try {\r\n                    this._calGraphicData(tAniO);\r\n                } catch (e) {\r\n                    console.warn(\"parse animation fail:\" + tAniO.name + \",empty animation created\");\r\n                    this._gList = [];\r\n                }\r\n                var frameO: any = {};\r\n                frameO.interval = 1000 / tAniO[\"frameRate\"];\r\n                frameO.frames = this._gList;\r\n                frameO.labels = this._labels;\r\n                frameO.name = tAniO.name;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n        GraphicAnimation._temParam.length = 0;\r\n\r\n    }\r\n\r\n    parseByData(aniData: any): any {\r\n        var rootNode: any, aniO: any;\r\n        rootNode = aniData.nodeRoot;\r\n        aniO = aniData.aniO;\r\n        delete aniData.nodeRoot;\r\n        delete aniData.aniO;\r\n        this._nodeDefaultProps = {};\r\n        this._nodeGDic = {};\r\n        if (this._nodeList) this._nodeList.length = 0;\r\n        this._rootNode = rootNode;\r\n        this._parseNodeList(rootNode);\r\n        this._labels = null;\r\n        try {\r\n            this._calGraphicData(aniO);\r\n        } catch (e) {\r\n            console.warn(\"parse animation fail:\" + aniO.name + \",empty animation created\");\r\n            this._gList = [];\r\n        }\r\n        var frameO: any = aniData;\r\n        frameO.interval = 1000 / aniO[\"frameRate\"];\r\n        frameO.frames = this._gList;\r\n        frameO.labels = this._labels;\r\n        frameO.name = aniO.name;\r\n        return frameO;\r\n    }\r\n\r\n    /**@private */\r\n    setUpAniData(uiView: any): void {\r\n        if (uiView.animations) {\r\n            var aniDic: any = {};\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                if (!tAniO) continue;\r\n                var frameO: any = {};\r\n                frameO.name = tAniO.name;\r\n                frameO.aniO = tAniO;\r\n                frameO.nodeRoot = uiView;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _clear(): void {\r\n        this.animationList = null;\r\n        this.animationDic = null;\r\n        this._gList = null;\r\n        this._nodeGDic = null;\r\n    }\r\n\r\n    static parseAnimationByData(animationObject: any): any {\r\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\r\n        var rst: any;\r\n        rst = GraphicAnimation._I.parseByData(animationObject);\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n\r\n    static parseAnimationData(aniData: any): any {\r\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\r\n        GraphicAnimation._I.setUpAniData(aniData);\r\n        var rst: any;\r\n        rst = {};\r\n        rst.animationList = GraphicAnimation._I.animationList;\r\n        rst.animationDic = GraphicAnimation._I.animationDic;\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n}\r\n\r\n\r\n/**@internal */\r\nclass GraphicNode {\r\n    skin: string;\r\n    transform: Matrix;\r\n    resultTransform: Matrix;\r\n    width: number;\r\n    height: number;\r\n    alpha: number = 1;\r\n}\r\n","import { AnimationBase } from \"./AnimationBase\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Loader } from \"../net/Loader\"\r\nimport { GraphicAnimation } from \"./GraphicAnimation\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Animation</code> 是Graphics动画类。实现了基于Graphics的动画创建、播放、控制接口。</p>\r\n * <p>本类使用了动画模版缓存池，它以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\r\n * <p>使用set source、loadImages(...)、loadAtlas(...)、loadAnimation(...)方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\r\n * @example <caption>以下示例代码，创建了一个 <code>Text</code> 实例。</caption>\r\n * package\r\n * {\r\n * \timport laya.display.Animation;\r\n * \timport laya.net.Loader;\r\n * \timport laya.utils.Handler;\r\n * \tpublic class Animation_Example\r\n * \t{\r\n * \t\tpublic function Animation_Example()\r\n * \t\t{\r\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * \t\t\tinit();//初始化\r\n * \t\t}\r\n * \t\tprivate function init():void\r\n * \t\t{\r\n * \t\t\tvar animation:Animation = new Animation();//创建一个 Animation 类的实例对象 animation 。\r\n * \t\t\tanimation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n * \t\t\tanimation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n * \t\t\tanimation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n * \t\t\tanimation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n * \t\t\tanimation.play();//播放动画。\r\n * \t\t\tLaya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n * \t\t}\r\n * \t}\r\n * }\r\n *\r\n * @example\r\n * Animation_Example();\r\n * function Animation_Example(){\r\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *     init();//初始化\r\n * }\r\n * function init()\r\n * {\r\n *     var animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\r\n *     animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n *     animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *     animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *     animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n *     animation.play();//播放动画。\r\n *     Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n * }\r\n *\r\n * @example\r\n * import Animation = laya.display.Animation;\r\n * class Animation_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.init();\r\n *     }\r\n *     private init(): void {\r\n *         var animation:Animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\r\n *         animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n *         animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *         animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *         animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n *         animation.play();//播放动画。\r\n *         Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n *     }\r\n * }\r\n * new Animation_Example();\r\n */\r\nexport class Animation extends AnimationBase {\r\n    /**\r\n     * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\r\n     * <p>使用loadImages(...)、loadAtlas(...)、loadAnimation(...)、set source方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\r\n     */\r\n    static framesMap: any = {};\r\n    /**@private */\r\n    protected _frames: any[];\r\n\r\n    private _source: string;\r\n\r\n    private _autoPlay = false;\r\n\r\n\r\n    /**\r\n     * 创建一个新的 <code>Animation</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._setControlNode(this);\r\n    }\r\n\r\n    /** @inheritDoc\r\n     *  @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this.stop();\r\n        super.destroy(destroyChild);\r\n        this._frames = null;\r\n        this._labels = null;\r\n    }\r\n\r\n    /**\r\n     * <p>开始播放动画。会在动画模版缓存池中查找key值为name的动画模版，存在则用此动画模版初始化当前序列帧， 如果不存在，则使用当前序列帧。</p>\r\n     * <p>play(...)方法被设计为在创建实例后的任何时候都可以被调用，调用后就处于播放状态，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否处于播放状态，如果是，则开始播放。</p>\r\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\r\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\r\n     * @param\tloop\t（可选）是否循环播放。\r\n     * @param\tname\t（可选）动画模板在动画模版缓存池中的key，也可认为是动画名称。如果name为空，则播放当前动画序列帧；如果不为空，则在动画模版缓存池中寻找key值为name的动画模版，如果存在则用此动画模版初始化当前序列帧并播放，如果不存在，则仍然播放当前动画序列帧；如果没有当前动画的帧数据，则不播放，但该实例仍然处于播放状态。\r\n     * @override\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        if (name) this._setFramesFromCache(name, true);\r\n        super.play(start, loop, name);\r\n    }\r\n\r\n    /**@private */\r\n    protected _setFramesFromCache(name: string, showWarn: boolean = false): boolean {\r\n        if (this._url) name = this._url + \"#\" + name;\r\n        if (name && Animation.framesMap[name]) {\r\n            var tAniO: any = Animation.framesMap[name];\r\n            if (tAniO instanceof Array) {\r\n                this._frames = Animation.framesMap[name];\r\n                this._count = this._frames.length;\r\n            } else {\r\n                if (tAniO.nodeRoot) {\r\n                    //如果动画数据未解析过,则先进行解析\r\n                    Animation.framesMap[name] = GraphicAnimation.parseAnimationByData(tAniO);\r\n                    tAniO = Animation.framesMap[name];\r\n                }\r\n                this._frames = tAniO.frames;\r\n                this._count = this._frames.length;\r\n                //如果读取的是动画配置信息，帧率按照动画设置的帧率播放\r\n                if (!this._frameRateChanged) this._interval = tAniO.interval;\r\n                this._labels = this._copyLabels(tAniO.labels);\r\n            }\r\n            return true;\r\n        } else {\r\n            if (showWarn) console.log(\"ani not found:\", name);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**@private */\r\n    private _copyLabels(labels: any): any {\r\n        if (!labels) return null;\r\n        var rst: any;\r\n        rst = {};\r\n        var key: string;\r\n        for (key in labels) {\r\n            rst[key] = Utils.copyArray([], labels[key]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**@private \r\n    *  @override\r\n    */\r\n    protected _frameLoop(): void {\r\n        if (this._visible && this._style.alpha > 0.01 && this._frames) {\r\n            super._frameLoop();\r\n        }\r\n    }\r\n\r\n    /**@private \r\n     * @override\r\n    */\r\n    protected _displayToIndex(value: number): void {\r\n        if (this._frames) this.graphics = this._frames[value];\r\n    }\r\n\r\n    /**\r\n     * 当前动画的帧图像数组。本类中，每个帧图像是一个Graphics对象，而动画播放就是定时切换Graphics对象的过程。\r\n     */\r\n    get frames(): any[] {\r\n        return this._frames;\r\n    }\r\n\r\n    set frames(value: any[]) {\r\n        this._frames = value;\r\n        if (value) {\r\n            this._count = value.length;\r\n            //if (_isPlaying) play(_index, loop, _actionName);\r\n            if (this._actionName) this._setFramesFromCache(this._actionName, true);\r\n            this.index = this._index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>动画数据源。</p>\r\n     * <p>类型如下：<br/>\r\n     * 1. LayaAir IDE动画文件路径：使用此类型需要预加载所需的图集资源，否则会创建失败，如果不想预加载或者需要创建完毕的回调，请使用loadAnimation(...)方法；<br/>\r\n     * 2. 图集路径：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存或者创建完毕的回调，请使用loadAtlas(...)方法；<br/>\r\n     * 3. 图片路径集合：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存，请使用loadImages(...)方法。</p>\r\n     * @param value\t数据源。比如：图集：\"xx/a1.atlas\"；图片集合：\"a1.png,a2.png,a3.png\"；LayaAir IDE动画\"xx/a1.ani\"。\r\n     */\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        this._source = value;\r\n\r\n        if (!value)\r\n            this.clear();\r\n        else if (value.indexOf(\".ani\") > -1)\r\n            this.loadAnimation(value);\r\n        else if (value.startsWith(\"res://\") || value.indexOf(\".json\") > -1 || value.indexOf(\"als\") > -1 || value.indexOf(\"atlas\") > -1)\r\n            this.loadAtlas(value);\r\n        else\r\n            this.loadImages(value.split(\",\"));\r\n    }\r\n\r\n    /**\r\n     * 是否自动播放，默认为false。如果设置为true，则动画被创建并添加到舞台后自动播放。\r\n     */\r\n    set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n        if (value)\r\n            this.play();\r\n        else\r\n            this.stop();\r\n    }\r\n\r\n    get autoPlay() {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\r\n     * @override\r\n     */\r\n    clear(): AnimationBase {\r\n        super.clear();\r\n        this.stop();\r\n        this.graphics = null;\r\n        this._frames = null;\r\n        this._labels = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图片集合并创建动画模版。注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadImages(...).loadImages(...).play(...);。</p>\r\n     * @param\turls\t\t图片路径集合。需要创建动画模版时，会以此为数据源。参数形如：[url1,url2,url3,...]。\r\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\r\n     * @return \t返回Animation对象本身。\r\n     */\r\n    loadImages(urls: any[], cacheName: string = \"\"): Animation {\r\n        this._url = \"\";\r\n        if (!this._setFramesFromCache(cacheName)) {\r\n            this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(urls, cacheName);\r\n        }\r\n        if (!this._isPlaying && this._autoPlay)\r\n            this.play();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图集并创建动画模版。</p>\r\n     * <p>注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAtlas(...).loadAtlas(...).play(...);。</p>\r\n     * @param\turl\t\t\t图集路径。需要创建动画模版时，会以此为数据源。\r\n     * @param\tloaded\t\t（可选）使用指定图集初始化动画完毕的回调。\r\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\r\n     * @return \t返回动画本身。\r\n     */\r\n    loadAtlas(url: string, loaded: Handler = null, cacheName: string = \"\"): Animation {\r\n        this._url = \"\";\r\n        if (!this._setFramesFromCache(cacheName)) {\r\n            let onLoaded = (loadUrl: string) => {\r\n                if (url === loadUrl) {\r\n                    this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(url, cacheName);\r\n                    if (!this._isPlaying && this._autoPlay)\r\n                        this.play();\r\n                    if (loaded) loaded.run();\r\n                }\r\n            }\r\n            if (Loader.getAtlas(url)) onLoaded(url);\r\n            else ILaya.loader.load(url, Handler.create(null, onLoaded, [url]), null, Loader.ATLAS);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>加载并解析由LayaAir IDE制作的动画文件，此文件中可能包含多个动画。默认帧率为在IDE中设计的帧率，如果调用过set interval，则使用此帧间隔对应的帧率。加载后创建动画模版，并缓存到动画模版缓存池，key \"url#动画名称\" 对应相应动画名称的动画模板，key \"url#\" 对应动画模版集合的默认动画模版。</p>\r\n     * <p>注意：如果调用本方法前，还没有预加载动画使用的图集，请将atlas参数指定为对应的图集路径，否则会导致动画创建失败。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAnimation(...).loadAnimation(...).play(...);。</p>\r\n     * @param\turl \t动画文件路径。可由LayaAir IDE创建并发布。\r\n     * @param\tloaded\t（可选）使用指定动画资源初始化动画完毕的回调。\r\n     * @param\tatlas\t（可选）动画用到的图集地址（可选）。\r\n     * @return \t返回动画本身。\r\n     * @deprecated\r\n     */\r\n    loadAnimation(url: string, loaded: Handler = null, atlas: string = null): Animation {\r\n        this._url = url;\r\n        var _this: Animation = this;\r\n        if (!this._actionName) this._actionName = \"\";\r\n        if (!_this._setFramesFromCache(this._actionName)) {\r\n            if (!atlas || Loader.getAtlas(atlas)) {\r\n                this._loadAnimationData(url, loaded, atlas);\r\n            } else {\r\n                ILaya.loader.load(atlas, Handler.create(this, this._loadAnimationData, [url, loaded, atlas]), null, Loader.ATLAS)\r\n            }\r\n        } else {\r\n            _this._setFramesFromCache(this._actionName, true);\r\n            this.index = 0;\r\n            if (loaded) loaded.run();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**@private */\r\n    private _loadAnimationData(url: string, loaded: Handler = null, atlas: string = null): void {\r\n        if (atlas && !Loader.getAtlas(atlas)) {\r\n            console.warn(\"atlas load fail:\" + atlas);\r\n            return;\r\n        }\r\n\r\n        ILaya.loader.fetch(url, \"json\").then(data => {\r\n            if (this._url !== url)\r\n                return;\r\n\r\n            if (!data) {\r\n                // 如果getRes失败了，有可能是相同的文件已经被删掉了，因为下面在用完后会立即删除\r\n                // 这时候可以取frameMap中去找，如果找到了，走正常流程。--王伟\r\n                if (Animation.framesMap[url + \"#\"]) {\r\n                    this._setFramesFromCache(this._actionName, true);\r\n                    this.index = 0;\r\n                    this._resumePlay();\r\n                    if (loaded) loaded.run();\r\n                }\r\n                return;\r\n            }\r\n\r\n            let tAniO: any;\r\n            if (!Animation.framesMap[url + \"#\"]) {\r\n                //此次解析仅返回动画数据，并不真正解析动画graphic数据\r\n                let aniData: any = GraphicAnimation.parseAnimationData(data);\r\n                if (!aniData) return;\r\n                //缓存动画数据\r\n                let aniList: any[] = aniData.animationList;\r\n                let len: number = aniList.length;\r\n                let defaultO: any;\r\n                for (let i = 0; i < len; i++) {\r\n                    tAniO = aniList[i];\r\n                    Animation.framesMap[url + \"#\" + tAniO.name] = tAniO;\r\n                    if (!defaultO) defaultO = tAniO;\r\n                }\r\n                if (defaultO) {\r\n                    Animation.framesMap[url + \"#\"] = defaultO;\r\n                    this._setFramesFromCache(this._actionName, true);\r\n                    this.index = 0;\r\n                }\r\n                this._resumePlay();\r\n            } else {\r\n                this._setFramesFromCache(this._actionName, true);\r\n                this.index = 0;\r\n                this._resumePlay();\r\n            }\r\n            if (loaded) loaded.run();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * <p>创建动画模板，多个动画可共享同一份动画模板，而不必每次都创建一份新的，从而节省创建Graphics集合的开销。</p>\r\n     * @param\turl\t\t\t图集路径或者图片路径数组。如果是图集路径，需要相应图集已经被预加载，如果没有预加载，会导致创建失败。\r\n     * @param\tname\t\t动画模板在动画模版缓存池中的key。如果不为空，则以此为key缓存动画模板，否则不缓存。\r\n     * @return\t动画模板。\r\n     */\r\n    static createFrames(url: string | string[], name: string): any[] {\r\n        var arr: any[];\r\n        if (typeof (url) == 'string') {\r\n            var atlas: AtlasResource = Loader.getAtlas(<string>url);\r\n            if (atlas && atlas.frames.length) {\r\n                let frames = atlas.frames;\r\n                arr = [];\r\n                for (var i: number = 0, n: number = frames.length; i < n; i++) {\r\n                    var g: Graphics = new Graphics();\r\n                    g.drawImage(frames[i], 0, 0);\r\n                    arr.push(g);\r\n                }\r\n            }\r\n        } else if (url instanceof Array) {\r\n            arr = [];\r\n            for (i = 0, n = url.length; i < n; i++) {\r\n                g = new Graphics();\r\n                g.loadImage(url[i], 0, 0);\r\n                arr.push(g);\r\n            }\r\n        }\r\n        if (name) Animation.framesMap[name] = arr;\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * <p>从动画模版缓存池中清除指定key值的动画数据。</p>\r\n     * <p>开发者在调用创建动画模版函数时，可以手动指定此值。而如果是由LayaAir IDE创建的动画集，解析后的key格式为：\"url#\"：表示动画集的默认动画模版，如果以此值为参数，会清除整个动画集数据；\"url#aniName\"：表示相应名称的动画模版。</p>\r\n     * @param key 动画模板在动画模版缓存池中的key。\r\n     */\r\n    static clearCache(key: string): void {\r\n        var cache: any = Animation.framesMap;\r\n        var val: string;\r\n        var key2: string = key + \"#\";\r\n        for (val in cache) {\r\n            if (val === key || val.indexOf(key2) === 0) {\r\n                delete Animation.framesMap[val];\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    onAfterDeserialize(): void {\r\n        super.onAfterDeserialize();\r\n\r\n        if ((<any>this).images) {\r\n            if (!this._source)\r\n                this.loadImages((<any>this).images);\r\n            delete (<any>this).images;\r\n        }\r\n    }\r\n}\r\n\r\n","import { Texture } from \"../resource/Texture\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**\r\n * <code>BitmapFont</code> 是位图字体类，用于定义位图字体信息。\r\n * 字体制作及使用方法，请参考文章\r\n * @see http://ldc2.layabox.com/doc/?nav=ch-js-1-2-5\r\n */\r\nexport class BitmapFont extends Resource {\r\n    texture: Texture;\r\n    dict: Record<string, BMGlyph> = {};\r\n\r\n    padding: any[];\r\n\r\n    /**当前位图字体字号，使用时，如果字号和设置不同，并且autoScaleSize=true，则按照设置字号比率进行缩放显示。*/\r\n    fontSize: number = 12;\r\n    /**表示是否根据实际使用的字体大小缩放位图字体大小。*/\r\n    autoScaleSize: boolean = false;\r\n    tint: boolean = true;\r\n    maxWidth: number = 0;\r\n    lineHeight: number = 12;\r\n    letterSpacing = 0;\r\n\r\n    /**\r\n     * 通过指定位图字体文件路径，加载位图字体文件，加载完成后会自动解析。\r\n     * @param\tpath\t\t位图字体文件的路径。\r\n     * @param\tcomplete\t加载并解析完成的回调。\r\n     */\r\n    static loadFont(path: string, complete: Handler): void {\r\n        ILaya.loader.load(path, Loader.FONT).then(font => {\r\n            complete && complete.runWith(font);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super(false);\r\n    }\r\n\r\n    /**\r\n     * 解析字体文件。\r\n     * @param\txml\t\t\t字体文件XML。\r\n     * @param\ttexture\t\t字体的纹理。\r\n     */\r\n    parseFont(xml: XML, texture: Texture): void {\r\n        if (xml == null || texture == null) return;\r\n        this.texture = texture;\r\n        texture._addReference();\r\n\r\n        let scale: number = 1;\r\n        let info = xml.getNode(\"info\");\r\n        this.fontSize = info.getAttrInt(\"size\", 12);\r\n        this.autoScaleSize = info.getAttrBool(\"autoScaleSize\");\r\n        this.lineHeight = info.getAttrInt(\"lineHeight\", this.fontSize);\r\n        if (this.lineHeight == 0)\r\n            this.lineHeight = this.fontSize;\r\n\r\n        let padding: string = info.getAttrString(\"padding\", \"\");\r\n        let paddingArray: any[] = padding.split(\",\");\r\n        this.padding = [parseInt(paddingArray[0]), parseInt(paddingArray[1]), parseInt(paddingArray[2]), parseInt(paddingArray[3])];\r\n\r\n        let chars = xml.getNode(\"chars\")?.elements(\"char\") || [];\r\n        let maxWidth = 0;\r\n        let dict = this.dict;\r\n        for (let i = 0, n = chars.length; i < n; i++) {\r\n            let ct = chars[i];\r\n            let id = ct.getAttrInt(\"id\");\r\n\r\n            let xOffset = ct.getAttrInt(\"xoffset\") / scale;\r\n            let yOffset = ct.getAttrInt(\"yoffset\") / scale;\r\n            let advance = ct.getAttrInt(\"xadvance\") / scale;\r\n\r\n            let x = ct.getAttrInt(\"x\");\r\n            let y = ct.getAttrInt(\"y\");\r\n            let width = ct.getAttrInt(\"width\");\r\n            let height = ct.getAttrInt(\"height\");\r\n\r\n            let tex = Texture.create(texture, x, y, width, height, xOffset, yOffset);\r\n\r\n            if (advance == 0)\r\n                advance = width;\r\n            advance += this.letterSpacing;\r\n            maxWidth = Math.max(maxWidth, advance);\r\n\r\n            dict[id] = { x: 0, y: 0, width, height, advance, texture: tex };\r\n        }\r\n\r\n        if (maxWidth > 0)\r\n            this.maxWidth = maxWidth;\r\n        else\r\n            this.maxWidth = this.fontSize;\r\n\r\n        if (!dict[32]) //space\r\n            dict[32] = { x: 0, y: 0, advance: Math.floor(this.fontSize * 0.5) + this.letterSpacing };\r\n    }\r\n\r\n    /**\r\n     * 销毁位图字体，调用Text.unregisterBitmapFont 时，默认会销毁。\r\n     */\r\n    protected _disposeResource(): void {\r\n        if (this.texture) {\r\n            for (let k in this.dict) {\r\n                this.dict[k].texture?.destroy();\r\n            }\r\n            this.texture._removeReference();\r\n            this.dict = null;\r\n            this.texture = null;\r\n            this.padding = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取指定文本内容的宽度。\r\n     * @param\ttext 文本内容。\r\n     * @return  宽度。\r\n     */\r\n    getTextWidth(text: string, fontSize?: number): number {\r\n        let w = 0;\r\n        for (let i = 0, n = text.length; i < n; i++) {\r\n            let g = this.dict[text.charCodeAt(i)];\r\n            if (g) {\r\n                let scale = this.autoScaleSize ? (fontSize / this.fontSize) : 1;\r\n                w += Math.round(g.advance * scale);\r\n            }\r\n        }\r\n        return w;\r\n    }\r\n\r\n    /**\r\n     * 获取最大字符宽度。\r\n     */\r\n    getMaxWidth(fontSize?: number): number {\r\n        if (fontSize != null && this.autoScaleSize)\r\n            return Math.round(this.maxWidth * (fontSize / this.fontSize));\r\n        else\r\n            return this.maxWidth;\r\n    }\r\n\r\n    /**\r\n     * 获取最大字符高度。\r\n     */\r\n    getMaxHeight(fontSize?: number): number {\r\n        if (fontSize != null && this.autoScaleSize)\r\n            return Math.round(this.lineHeight * (fontSize / this.fontSize));\r\n        else\r\n            return this.lineHeight;\r\n    }\r\n}\r\n\r\nexport interface BMGlyph {\r\n    x?: number;\r\n    y?: number;\r\n    width?: number;\r\n    height?: number;\r\n    advance?: number;\r\n    texture?: Texture;\r\n}","import { FrameAnimation } from \"./FrameAnimation\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\"\r\nimport { Ease } from \"../utils/Ease\"\r\n\r\n/**\r\n * <p> 动效模板。用于为指定目标对象添加动画效果。每个动效有唯一的目标对象，而同一个对象可以添加多个动效。 当一个动效开始播放时，其他动效会自动停止播放。</p>\r\n * <p> 可以通过LayaAir IDE创建。 </p>\r\n */\r\nexport class EffectAnimation extends FrameAnimation {\r\n    /**\r\n     * @private\r\n     * 动效开始事件。\r\n     */\r\n    private static EFFECT_BEGIN: string = \"effectbegin\";\r\n\r\n    /**@internal */\r\n    private _target: any;\r\n    /**@internal */\r\n    private _playEvent: string;\r\n    /**@internal */\r\n    private _initData: any = {};\r\n    /**@internal */\r\n    private _aniKeys: any[];\r\n    /**@internal */\r\n    private _effectClass: new () => any;\r\n\r\n    /**\r\n     * 本实例的目标对象。通过本实例控制目标对象的属性变化。\r\n     * @param v 指定的目标对象。\r\n     */\r\n    set target(v: any) {\r\n        if (this._target) this._target.off(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\r\n        this._target = v;\r\n        if (this._target) this._target.on(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\r\n        this._addEvent();\r\n    }\r\n\r\n    get target(): any {\r\n        return this._target;\r\n    }\r\n\r\n    /**@private */\r\n    private _onOtherBegin(effect: any): void {\r\n        if (effect === this) return;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * 设置开始播放的事件。本实例会侦听目标对象的指定事件，触发后播放相应动画效果。\r\n     * @param event\r\n     */\r\n    set playEvent(event: string) {\r\n        this._playEvent = event;\r\n        if (!event) return;\r\n        this._addEvent();\r\n    }\r\n\r\n    /**@internal */\r\n    private _addEvent(): void {\r\n        if (!this._target || !this._playEvent) return;\r\n        this._setControlNode(this._target);\r\n        this._target.on(this._playEvent, this, this._onPlayAction);\r\n    }\r\n\r\n    /**@internal */\r\n    private _onPlayAction(): void {\r\n        this.play(0, false);\r\n    }\r\n    /**\r\n     * @param start \r\n     * @param loop \r\n     * @param name \r\n     * @override\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        if (!this._target)\r\n            return;\r\n        this._target.event(EffectAnimation.EFFECT_BEGIN, [this]);\r\n        this._recordInitData();\r\n        super.play(start, loop, name);\r\n    }\r\n\r\n    /**@private */\r\n    private _recordInitData(): void {\r\n        if (!this._aniKeys) return;\r\n        var i: number, len: number;\r\n        len = this._aniKeys.length;\r\n        var key: string;\r\n        for (i = 0; i < len; i++) {\r\n            key = this._aniKeys[i];\r\n            this._initData[key] = this._target[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置提供数据的类。\r\n     * @param classStr 类路径\r\n     */\r\n    set effectClass(classStr: string) {\r\n        this._effectClass = ClassUtils.getClass(classStr);\r\n        if (this._effectClass) {\r\n            var uiData: any = (this._effectClass as any)[\"uiView\"];\r\n            if (uiData) {\r\n                var aniData: any[] = uiData[\"animations\"];\r\n                if (aniData && aniData[0]) {\r\n                    var data: any = aniData[0];\r\n                    this._setUp({}, data);\r\n                    if (data.nodes && data.nodes[0]) {\r\n                        this._aniKeys = data.nodes[0].keys;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置动画数据。\r\n     * @param uiData\r\n     */\r\n    set effectData(uiData: any) {\r\n        if (uiData) {\r\n            var aniData: any[] = uiData[\"animations\"];\r\n            if (aniData && aniData[0]) {\r\n                var data: any = aniData[0];\r\n                this._setUp({}, data);\r\n                if (data.nodes && data.nodes[0]) {\r\n                    this._aniKeys = data.nodes[0].keys;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n    */\r\n    protected _displayToIndex(value: number): void {\r\n        if (!this._animationData) return;\r\n        if (value < 0) value = 0;\r\n        if (value > this._count) value = this._count;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        len = len > 1 ? 1 : len;\r\n        for (i = 0; i < len; i++) {\r\n            this._displayNodeToFrame(nodes[i], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n    */\r\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\r\n        if (!this._target) return;\r\n        var target: any = this._target;\r\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\r\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\r\n        var secondFrames: any = node.secondFrames;\r\n        var tSecondFrame: number;\r\n        var easeFun: Function;\r\n        var tKeyFrames: any[];\r\n        var startFrame: any;\r\n        var endFrame: any;\r\n        for (i = 0; i < len; i++) {\r\n            key = keys[i];\r\n            propFrames = frames[key];\r\n            tSecondFrame = secondFrames[key];\r\n            if (tSecondFrame == -1) {\r\n                value = this._initData[key];\r\n            } else {\r\n                if (frame < tSecondFrame) {\r\n                    tKeyFrames = node.keyframes[key];\r\n                    startFrame = tKeyFrames[0];\r\n                    if (startFrame.tween) {\r\n                        easeFun = (Ease as any)[startFrame.tweenMethod];\r\n                        if (easeFun == null) easeFun = Ease.linearNone;\r\n                        endFrame = tKeyFrames[1];\r\n                        value = easeFun(frame, this._initData[key], endFrame.value - this._initData[key], endFrame.index);\r\n                    } else {\r\n                        value = this._initData[key];\r\n                    }\r\n\r\n                } else {\r\n                    if (propFrames.length > frame) value = propFrames[frame];\r\n                    else value = propFrames[propFrames.length - 1];\r\n                }\r\n            }\r\n            target[key] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n    */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        super._calculateKeyFrames(node);\r\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\r\n\r\n        var secondFrames: any = {};\r\n        node.secondFrames = secondFrames;\r\n        for (key in keyFrames) {\r\n            tKeyFrames = keyFrames[key];\r\n            if (tKeyFrames.length <= 1) secondFrames[key] = -1;\r\n            else secondFrames[key] = tKeyFrames[1].index;\r\n        }\r\n    }\r\n}","/**\r\n * 文本的样式类\r\n */\r\nexport class TextStyle {\r\n    /**字体*/\r\n    font: string;\r\n    /**字号*/\r\n    fontSize: number;\r\n    /**文字颜色*/\r\n    color: string;\r\n    /**是否为粗体*/\r\n    bold: boolean;\r\n    /**\r\n     * 表示使用此文本格式的文本是否为斜体。\r\n     * @default false\r\n     */\r\n    italic: boolean;\r\n\r\n    /**是否显示下划线*/\r\n    underline: boolean;\r\n    /**下划线颜色*/\r\n    underlineColor: string;\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本段落的水平对齐方式。</p>\r\n     * @default  \"left\"\r\n     */\r\n    align: string;\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本段落的垂直对齐方式。</p>\r\n     * @default  \"top\"\r\n     */\r\n    valign: string;\r\n\r\n    /**\r\n     * 图文混排时图片和文字的对齐方式。可选值是top,middle,bottom\r\n     */\r\n    alignItems: string;\r\n\r\n    /**\r\n     * <p>垂直行间距（以像素为单位）</p>\r\n     */\r\n    leading: number;\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * 默认值0，表示不描边。\r\n     * @default 0\r\n     */\r\n    stroke: number;\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * @default \"#000000\";\r\n     */\r\n    strokeColor: string;\r\n\r\n    strikethrough: boolean;\r\n\r\n    constructor() {\r\n        this.font = \"\";\r\n        this.fontSize = 12;\r\n        this.color = \"#000000\";\r\n        this.bold = false;\r\n        this.italic = false;\r\n        this.underline = false;\r\n        this.underlineColor = null;\r\n        this.align = \"left\";\r\n        this.valign = \"top\";\r\n        this.alignItems = \"middle\";\r\n        this.leading = 2;\r\n        this.stroke = 0;\r\n        this.strokeColor = \"#000000\";\r\n    }\r\n}\r\n\r\n","import { XMLIterator } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\nimport { TextStyle } from \"../display/css/TextStyle\";\r\nimport { Pool } from \"../utils/Pool\";\r\n\r\nexport enum HtmlElementType {\r\n    Text,\r\n    Link,\r\n    Image,\r\n    Input,\r\n    Select,\r\n    Object,\r\n\r\n    //internal\r\n    LinkEnd,\r\n}\r\n\r\nexport class HtmlElement {\r\n    public type: HtmlElementType;\r\n    public name: string;\r\n    public text: string;\r\n    public style: TextStyle;\r\n\r\n    public obj: IHtmlObject;\r\n    public space: number;\r\n\r\n    public _attrs: Record<string, any>;\r\n\r\n    public constructor() {\r\n        this.style = new TextStyle();\r\n    }\r\n\r\n    public getAttr(attrName: string): any {\r\n        if (this._attrs == null)\r\n            return null;\r\n\r\n        return this._attrs[attrName];\r\n    }\r\n\r\n    public setAttr(attrName: string, attrValue: any) {\r\n        if (this._attrs == null)\r\n            this._attrs = {};\r\n\r\n        this._attrs[attrName] = attrValue;\r\n    }\r\n\r\n    public getAttrString(attrName: string, defValue?: string) {\r\n        return XMLUtils.getString(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrInt(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrFloat(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\r\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public fetchAttributes() {\r\n        this._attrs = Object.assign({}, XMLIterator.attributes);\r\n    }\r\n\r\n    public reset() {\r\n        this.name = null;\r\n        this.text = null;\r\n        if (this.obj) {\r\n            this.obj.release();\r\n            Pool.recoverByClass(this.obj);\r\n            this.obj = null;\r\n        }\r\n        this._attrs = null;\r\n    }\r\n\r\n    static pool: Array<HtmlElement> = [];\r\n    static getFromPool(type: HtmlElementType): HtmlElement {\r\n        let ele: HtmlElement;\r\n        if (this.pool.length > 0)\r\n            ele = this.pool.pop();\r\n        else\r\n            ele = new HtmlElement();\r\n        ele.type = type;\r\n        if (ele.type != HtmlElementType.Text && !ele._attrs)\r\n            ele._attrs = {};\r\n        return ele;\r\n    }\r\n\r\n    static returnToPool(ele: HtmlElement | Array<HtmlElement>) {\r\n        if (Array.isArray(ele)) {\r\n            for (let e of ele)\r\n                e.reset();\r\n            this.pool.push(...ele);\r\n            ele.length = 0;\r\n        }\r\n        else {\r\n            ele.reset();\r\n            this.pool.push(ele);\r\n        }\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { HtmlElement } from \"./HtmlElement\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\n\r\nexport class HtmlImage implements IHtmlObject {\r\n    public readonly obj: Sprite;\r\n\r\n    private _owner: Text;\r\n    private _element: HtmlElement;\r\n\r\n    public constructor() {\r\n        this.obj = new Sprite();\r\n    }\r\n\r\n    public get element(): HtmlElement {\r\n        return this._element;\r\n    }\r\n\r\n    public get width(): number {\r\n        return this.obj.width;\r\n    }\r\n\r\n    public get height(): number {\r\n        return this.obj.height;\r\n    }\r\n\r\n    public create(owner: Text, element: HtmlElement): void {\r\n        this._owner = owner;\r\n        this._element = element;\r\n        this._owner.objContainer.addChild(this.obj);\r\n\r\n        let src = this._element.getAttrString(\"src\");\r\n        if (src)\r\n            this.loadTexture(src);\r\n    }\r\n\r\n    protected loadTexture(src: string) {\r\n        let width = this._element.getAttrInt(\"width\", -1);\r\n        let height = this._element.getAttrInt(\"height\", -1);\r\n        if (width != -1)\r\n            this.obj.width = width;\r\n        if (height != -1)\r\n            this.obj.height = height;\r\n\r\n        let tex = Loader.getRes(src);\r\n        if (tex) {\r\n            this.obj.texture = tex;\r\n            if (width == -1)\r\n                this.obj.width = tex.sourceWidth;\r\n            if (height == -1)\r\n                this.obj.height = tex.sourceHeight;\r\n        }\r\n        else {\r\n            ILaya.loader.load(src, { silent: true }).then(tex => {\r\n                if (this.obj.destroyed) return;\r\n                let w = this.obj.width;\r\n                let h = this.obj.height;\r\n                this.obj.texture = tex;\r\n                if (width == -1)\r\n                    this.obj.width = tex ? tex.sourceWidth : 0;\r\n                if (height == -1)\r\n                    this.obj.height = tex ? tex.sourceHeight : 0;\r\n                if (this._owner && (w != this.obj.width || h != this.obj.height))\r\n                    this._owner.refreshLayout();\r\n            });\r\n        }\r\n    }\r\n\r\n    public pos(x: number, y: number): void {\r\n        this.obj.pos(x, y);\r\n    }\r\n\r\n    public release(): void {\r\n        this.obj.removeSelf();\r\n        this.obj.offAll();\r\n        this.obj.texture = null;\r\n        this._owner = null;\r\n        this._element = null;\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.obj.destroy();\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { IHitArea } from \"../utils/IHitArea\";\r\nimport { HtmlElement } from \"./HtmlElement\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\n\r\nexport class HtmlLink implements IHtmlObject, IHitArea {\r\n    private _owner: Text;\r\n    private _element: HtmlElement;\r\n    private _shape: Sprite;\r\n    private _rects: Array<Rectangle>;\r\n    private _rectCnt: number;\r\n\r\n    public constructor() {\r\n        this._shape = new Sprite();\r\n        this._shape.hitArea = this;\r\n        this._shape.on(Event.CLICK, () => {\r\n            this._owner.bubbleEvent(Event.LINK, this._element.getAttrString(\"href\"));\r\n        });\r\n\r\n        this._rects = [];\r\n        this._rectCnt = 0;\r\n    }\r\n\r\n    public get element(): HtmlElement {\r\n        return this._element;\r\n    }\r\n\r\n    public get width(): number {\r\n        return 0;\r\n    }\r\n\r\n    public get height(): number {\r\n        return 0;\r\n    }\r\n\r\n    public create(owner: Text, element: HtmlElement): void {\r\n        this._owner = owner;\r\n        this._element = element;\r\n        this._owner.objContainer.addChild(this._shape);\r\n    }\r\n\r\n    public resetArea() {\r\n        this._rectCnt = 0;\r\n    }\r\n\r\n    public addRect(x: number, y: number, width: number, height: number) {\r\n        let rect = this._rects[this._rectCnt];\r\n        if (!rect)\r\n            rect = this._rects[this._rectCnt] = new Rectangle();\r\n        this._rectCnt++;\r\n        rect.setTo(x, y, width, height);\r\n    }\r\n\r\n    public contains(x: number, y: number): boolean {\r\n        for (let i = 0; i < this._rectCnt; i++) {\r\n            if (this._rects[i].contains(x, y))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public pos(x: number, y: number): void {\r\n    }\r\n\r\n    public release(): void {\r\n        this._shape.removeSelf();\r\n        this._owner = null;\r\n        this._element = null;\r\n    }\r\n\r\n    public destroy(): void {\r\n        this._shape.destroy();\r\n    }\r\n}","import { ClassUtils } from \"../utils/ClassUtils\";\r\n\r\nexport class HtmlParseOptions {\r\n    public linkUnderline: boolean;\r\n    public linkColor: string;\r\n    public ignoreWhiteSpace: boolean;\r\n\r\n    public static defaultLinkUnderline: boolean = true;\r\n    public static defaultLinkColor: string = null;\r\n\r\n    public constructor() {\r\n        this.linkUnderline = HtmlParseOptions.defaultLinkUnderline;\r\n        this.linkColor = HtmlParseOptions.defaultLinkColor;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"HtmlParseOptions\", HtmlParseOptions);","import { TextStyle } from \"../display/css/TextStyle\";\r\nimport { HtmlElement, HtmlElementType } from \"./HtmlElement\";\r\nimport { HtmlImage } from \"./HtmlImage\";\r\nimport { HtmlLink } from \"./HtmlLink\";\r\nimport { HtmlParseOptions } from \"./HtmlParseOptions\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\nimport { XMLIterator, XMLTagType } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\n\r\nconst s_list1 = new Array<string>();\r\nconst s_list2 = new Array<string>();\r\n\r\nexport class HtmlParser {\r\n    static defaultParser: HtmlParser = new HtmlParser();\r\n\r\n    static classMap: Record<number, new () => IHtmlObject> = {\r\n        [HtmlElementType.Image]: HtmlImage,\r\n        [HtmlElementType.Link]: HtmlLink\r\n    };\r\n\r\n    protected _styleStack: Array<TextStyle>;\r\n    protected _styleStackTop: number;\r\n    protected _style: TextStyle;\r\n    protected _elements: Array<HtmlElement>;\r\n    protected _options: HtmlParseOptions;\r\n\r\n    public constructor() {\r\n        this._styleStack = new Array<TextStyle>();\r\n        this._style = new TextStyle();\r\n        this._options = new HtmlParseOptions();\r\n    }\r\n\r\n    public parse(aSource: string, style: TextStyle, out: Array<HtmlElement>, options?: HtmlParseOptions): void {\r\n        if (options == null)\r\n            options = this._options;\r\n\r\n        this._elements = out;\r\n        this._styleStackTop = 0;\r\n        Object.assign(this._style, style);\r\n        (<any>this._style).colorChanged = false;\r\n        let skipText: number = 0;\r\n        let ignoreWhiteSpace: boolean = options.ignoreWhiteSpace;\r\n        let skipNextCR: boolean = false;\r\n        let text: string\r\n\r\n        XMLIterator.begin(aSource, true);\r\n        while (XMLIterator.nextTag()) {\r\n            if (skipText == 0) {\r\n                text = XMLIterator.getText(ignoreWhiteSpace);\r\n                if (text.length > 0) {\r\n                    if (skipNextCR && text[0] == '\\n')\r\n                        text = text.substring(1);\r\n                    this.appendText(text);\r\n                }\r\n            }\r\n\r\n            skipNextCR = false;\r\n            switch (XMLIterator.tagName) {\r\n                case \"b\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.bold = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"i\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.italic = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"u\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.underline = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"strike\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.strikethrough = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                // case \"sub\":\r\n                //     {\r\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\r\n                //             this.pushTextFormat();\r\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Subscript;\r\n                //         }\r\n                //         else\r\n                //             this.popTextFormat();\r\n                //     }\r\n                //     break;\r\n\r\n                // case \"sup\":\r\n                //     {\r\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\r\n                //             this.pushTextFormat();\r\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Superscript;\r\n                //         }\r\n                //         else\r\n                //             this.popTextFormat();\r\n                //     }\r\n                //     break;\r\n\r\n                case \"font\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n\r\n                        this._style.fontSize = XMLUtils.getInt(XMLIterator.attributes, \"size\", this._style.fontSize);\r\n                        let color: string = XMLIterator.getAttribute(\"color\");\r\n                        if (color != null) {\r\n                            this._style.color = color;\r\n                            (<any>this._style).colorChanged = true;\r\n                        }\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End)\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"br\":\r\n                    this.appendText(\"\\n\");\r\n                    break;\r\n\r\n                case \"img\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                        let element: HtmlElement = HtmlElement.getFromPool(HtmlElementType.Image);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        element.style.align = this._style.align;\r\n                        element.style.underline = this._style.underline;\r\n                        element.style.underlineColor = this._style.underlineColor;\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"a\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n\r\n                        this._style.underline = this._style.underline || options.linkUnderline;\r\n                        if (!(<any>this._style).colorChanged && options.linkColor != null)\r\n                            this._style.color = options.linkColor;\r\n\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.Link);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        element.style.align = this._style.align;\r\n                        this._elements.push(element);\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End) {\r\n                        this.popStyle();\r\n\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.LinkEnd);\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"input\":\r\n                    {\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.Input);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        Object.assign(element.style, this._style);\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"select\":\r\n                    {\r\n                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                            let element = HtmlElement.getFromPool(HtmlElementType.Select);\r\n                            element.fetchAttributes();\r\n                            if (XMLIterator.tagType == XMLTagType.Start) {\r\n                                s_list1.length = 0;\r\n                                s_list2.length = 0;\r\n                                while (XMLIterator.nextTag()) {\r\n                                    if (XMLIterator.tagName == \"select\")\r\n                                        break;\r\n\r\n                                    if (XMLIterator.tagName == \"option\") {\r\n                                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void)\r\n                                            s_list2.push(XMLUtils.getString(XMLIterator.attributes, \"value\", \"\"));\r\n                                        else\r\n                                            s_list1.push(XMLIterator.getText());\r\n                                    }\r\n                                }\r\n                                element.setAttr(\"items\", s_list1.slice());\r\n                                element.setAttr(\"values\", s_list2.slice());\r\n                            }\r\n                            element.name = element.getAttrString(\"name\");\r\n                            Object.assign(element.style, this._style);\r\n                            this._elements.push(element);\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case \"p\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.align = XMLIterator.getAttribute(\"align\");\r\n                        if (!this.isNewLine())\r\n                            this.appendText(\"\\n\");\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End) {\r\n                        this.appendText(\"\\n\");\r\n                        skipNextCR = true;\r\n\r\n                        this.popStyle();\r\n                    }\r\n                    break;\r\n\r\n                case \"ui\":\r\n                case \"div\":\r\n                case \"li\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        if (!this.isNewLine())\r\n                            this.appendText(\"\\n\");\r\n                    }\r\n                    else {\r\n                        this.appendText(\"\\n\");\r\n                        skipNextCR = true;\r\n                    }\r\n                    break;\r\n\r\n                case \"html\":\r\n                case \"body\":\r\n                    //full html\r\n                    ignoreWhiteSpace = true;\r\n                    break;\r\n\r\n                case \"head\":\r\n                case \"style\":\r\n                case \"script\":\r\n                case \"form\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start)\r\n                        skipText++;\r\n                    else if (XMLIterator.tagType == XMLTagType.End)\r\n                        skipText--;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (skipText == 0) {\r\n            text = XMLIterator.getText(ignoreWhiteSpace);\r\n            if (text.length > 0) {\r\n                if (skipNextCR && text[0] == '\\n')\r\n                    text = text.substring(1);\r\n                this.appendText(text);\r\n            }\r\n        }\r\n\r\n        this._elements = null;\r\n    }\r\n\r\n    protected pushStyle() {\r\n        let tf: TextStyle;\r\n        if (this._styleStack.length <= this._styleStackTop) {\r\n            tf = new TextStyle();\r\n            this._styleStack.push(tf);\r\n        }\r\n        else\r\n            tf = this._styleStack[this._styleStackTop];\r\n        Object.assign(tf, this._style);\r\n        this._styleStackTop++;\r\n    }\r\n\r\n    protected popStyle() {\r\n        if (this._styleStackTop > 0) {\r\n            let tf = this._styleStack[this._styleStackTop - 1];\r\n            Object.assign(this._style, tf);\r\n            this._styleStackTop--;\r\n        }\r\n    }\r\n\r\n    protected isNewLine(): boolean {\r\n        if (this._elements.length > 0) {\r\n            let element: HtmlElement = this._elements[this._elements.length - 1];\r\n            if (element && element.type == HtmlElementType.Text)\r\n                return element.text.endsWith(\"\\n\");\r\n            else\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected appendText(text: string) {\r\n        let element: HtmlElement;\r\n        if (this._elements.length > 0) {\r\n            element = this._elements[this._elements.length - 1];\r\n            if (element.type == HtmlElementType.Text && equalStyle(element.style, this._style)) {\r\n                element.text += text;\r\n                return;\r\n            }\r\n        }\r\n\r\n        element = HtmlElement.getFromPool(HtmlElementType.Text);\r\n        element.text = text;\r\n        Object.assign(element.style, this._style);\r\n        this._elements.push(element);\r\n    }\r\n}\r\n\r\nfunction equalStyle(s1: TextStyle, s2: TextStyle) {\r\n    for (let k in s1) {\r\n        if (!k.startsWith(\"_\") && (<any>s1)[k] != (<any>s2)[k])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n","export interface ITagHandler {\r\n    (tagName: string, end: boolean, attr: string): string;\r\n}\r\n\r\nexport class UBBParser {\r\n    static defaultParser: UBBParser = new UBBParser();\r\n\r\n    private _text: string;\r\n    private _readPos: number = 0;\r\n\r\n    protected _handlers: Record<string, ITagHandler>;\r\n\r\n    public defaultImgWidth: number = 0;\r\n    public defaultImgHeight: number = 0;\r\n    public lastColor: string;\r\n    public lastSize: string;\r\n\r\n    constructor() {\r\n        this._handlers = {};\r\n        this._handlers[\"url\"] = this.onTag_URL;\r\n        this._handlers[\"img\"] = this.onTag_IMG;\r\n        this._handlers[\"b\"] = this.onTag_B;\r\n        this._handlers[\"i\"] = this.onTag_I;\r\n        this._handlers[\"u\"] = this.onTag_U;\r\n        this._handlers[\"sup\"] = this.onTag_Simple;\r\n        this._handlers[\"sub\"] = this.onTag_Simple;\r\n        this._handlers[\"color\"] = this.onTag_COLOR;\r\n        this._handlers[\"font\"] = this.onTag_FONT;\r\n        this._handlers[\"size\"] = this.onTag_SIZE;\r\n    }\r\n\r\n    protected onTag_URL(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            if (attr != null)\r\n                return \"<a href=\\\"\" + attr + \"\\\">\";\r\n            else {\r\n                var href: string = this.getTagText();\r\n                return \"<a href=\\\"\" + href + \"\\\">\";\r\n            }\r\n        }\r\n        else\r\n            return \"</a>\";\r\n    }\r\n\r\n    protected onTag_IMG(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            var src: string = this.getTagText(true);\r\n            if (!src)\r\n                return null;\r\n\r\n            if (this.defaultImgWidth)\r\n                return \"<img src=\\\"\" + src + \"\\\" width=\\\"\" + this.defaultImgWidth + \"\\\" height=\\\"\" + this.defaultImgHeight + \"\\\"/>\";\r\n            else\r\n                return \"<img src=\\\"\" + src + \"\\\"/>\";\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n\r\n    protected onTag_B(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</b>\") : (\"<b>\");\r\n    }\r\n\r\n    protected onTag_I(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</i>\") : (\"<i>\");\r\n    }\r\n\r\n    protected onTag_U(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</u>\") : (\"<u>\");\r\n    }\r\n\r\n    protected onTag_Simple(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</\" + tagName + \">\") : (\"<\" + tagName + \">\");\r\n    }\r\n\r\n    protected onTag_COLOR(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            this.lastColor = attr;\r\n            return \"<font color=\\\"\" + attr + \"\\\">\";\r\n        }\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected onTag_FONT(tagName: string, end: boolean, attr: string): string {\r\n        if (!end)\r\n            return \"<font face=\\\"\" + attr + \"\\\">\";\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected onTag_SIZE(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            this.lastSize = attr;\r\n            return \"<font size=\\\"\" + attr + \"\\\">\";\r\n        }\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected getTagText(remove?: boolean): string {\r\n        var pos1: number = this._readPos;\r\n        var pos2: number;\r\n        var result: string = \"\";\r\n        while ((pos2 = this._text.indexOf(\"[\", pos1)) != -1) {\r\n            if (this._text.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += this._text.substring(pos1, pos2 - 1);\r\n                result += \"[\";\r\n                pos1 = pos2 + 1;\r\n            }\r\n            else {\r\n                result += this._text.substring(pos1, pos2);\r\n                break;\r\n            }\r\n        }\r\n        if (pos2 == -1)\r\n            return null;\r\n\r\n        if (remove)\r\n            this._readPos = pos2;\r\n\r\n        return result;\r\n    }\r\n\r\n    public parse(text: string, remove?: boolean): string {\r\n        this._text = text;\r\n        this.lastColor = null;\r\n        this.lastSize = null;\r\n\r\n        var pos1: number = 0, pos2: number, pos3: number;\r\n        var end: boolean;\r\n        var tag: string, attr: string;\r\n        var repl: string;\r\n        var func: Function;\r\n        var result: string = \"\";\r\n        while ((pos2 = text.indexOf(\"[\", pos1)) != -1) {\r\n            if (pos2 > 0 && text.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += text.substring(pos1, pos2 - 1);\r\n                result += \"[\";\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            result += text.substring(pos1, pos2);\r\n            pos1 = pos2;\r\n            pos2 = text.indexOf(\"]\", pos1);\r\n            if (pos2 == -1)\r\n                break;\r\n\r\n            end = text.charAt(pos1 + 1) == '/';\r\n            tag = text.substring(end ? pos1 + 2 : pos1 + 1, pos2);\r\n            this._readPos = pos2 + 1;\r\n            attr = null;\r\n            repl = null;\r\n            pos3 = tag.indexOf(\"=\");\r\n            if (pos3 != -1) {\r\n                attr = tag.substring(pos3 + 1);\r\n                tag = tag.substring(0, pos3);\r\n            }\r\n            tag = tag.toLowerCase();\r\n            func = this._handlers[tag];\r\n            if (func != null) {\r\n                if (!remove) {\r\n                    repl = func.call(this, tag, end, attr);\r\n                    if (repl != null)\r\n                        result += repl;\r\n                }\r\n            }\r\n            else\r\n                result += text.substring(pos1, this._readPos);\r\n            pos1 = this._readPos;\r\n        }\r\n\r\n        if (pos1 < text.length)\r\n            result += text.substring(pos1);\r\n\r\n        this._text = null;\r\n\r\n        return result;\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { BitmapFont } from \"./BitmapFont\";\r\nimport { TextStyle } from \"./css/TextStyle\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { WordText } from \"../utils/WordText\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Config } from \"../../Config\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\";\r\nimport { HtmlElement, HtmlElementType } from \"../html/HtmlElement\";\r\nimport { HtmlLink } from \"../html/HtmlLink\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { IHtmlObject } from \"../html/IHtmlObject\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { HtmlParser } from \"../html/HtmlParser\";\r\nimport { UBBParser } from \"../html/UBBParser\";\r\nimport { HtmlParseOptions } from \"../html/HtmlParseOptions\";\r\n\r\n/**\r\n * 文本内容发生改变后调度。\r\n * @eventType Event.CHANGE\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Text</code> 类用于创建显示对象以显示文本。</p>\r\n * <p>\r\n * 注意：如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。\r\n * </p>\r\n * @example\r\n * package\r\n * {\r\n * \timport laya.display.Text;\r\n * \tpublic class Text_Example\r\n * \t{\r\n * \t\tpublic function Text_Example()\r\n * \t\t{\r\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * \t\t\tonInit();\r\n * \t\t}\r\n * \t\tprivate function onInit():void\r\n * \t\t{\r\n * \t\t\tvar text:Text = new Text();//创建一个 Text 类的实例对象 text 。\r\n * \t\t\ttext.text = \"这个是一个 Text 文本示例。\";\r\n * \t\t\ttext.color = \"#008fff\";//设置 text 的文本颜色。\r\n * \t\t\ttext.font = \"Arial\";//设置 text 的文本字体。\r\n * \t\t\ttext.bold = true;//设置 text 的文本显示为粗体。\r\n * \t\t\ttext.fontSize = 30;//设置 text 的字体大小。\r\n * \t\t\ttext.wordWrap = true;//设置 text 的文本自动换行。\r\n * \t\t\ttext.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n * \t\t\ttext.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n * \t\t\ttext.width = 300;//设置 text 的宽度。\r\n * \t\t\ttext.height = 200;//设置 text 的高度。\r\n * \t\t\ttext.italic = true;//设置 text 的文本显示为斜体。\r\n * \t\t\ttext.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n * \t\t\tLaya.stage.addChild(text);//将 text 添加到显示列表。\r\n * \t\t}\r\n * \t}\r\n * }\r\n * @example\r\n * Text_Example();\r\n * function Text_Example()\r\n * {\r\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *     onInit();\r\n * }\r\n * function onInit()\r\n * {\r\n *     var text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\r\n *     text.text = \"这个是一个 Text 文本示例。\";\r\n *     text.color = \"#008fff\";//设置 text 的文本颜色。\r\n *     text.font = \"Arial\";//设置 text 的文本字体。\r\n *     text.bold = true;//设置 text 的文本显示为粗体。\r\n *     text.fontSize = 30;//设置 text 的字体大小。\r\n *     text.wordWrap = true;//设置 text 的文本自动换行。\r\n *     text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n *     text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n *     text.width = 300;//设置 text 的宽度。\r\n *     text.height = 200;//设置 text 的高度。\r\n *     text.italic = true;//设置 text 的文本显示为斜体。\r\n *     text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n *     Laya.stage.addChild(text);//将 text 添加到显示列表。\r\n * }\r\n * @example\r\n * class Text_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         var text: laya.display.Text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\r\n *         text.text = \"这个是一个 Text 文本示例。\";\r\n *         text.color = \"#008fff\";//设置 text 的文本颜色。\r\n *         text.font = \"Arial\";//设置 text 的文本字体。\r\n *         text.bold = true;//设置 text 的文本显示为粗体。\r\n *         text.fontSize = 30;//设置 text 的字体大小。\r\n *         text.wordWrap = true;//设置 text 的文本自动换行。\r\n *         text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n *         text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n *         text.width = 300;//设置 text 的宽度。\r\n *         text.height = 200;//设置 text 的高度。\r\n *         text.italic = true;//设置 text 的文本显示为斜体。\r\n *         text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n *         Laya.stage.addChild(text);//将 text 添加到显示列表。\r\n *     }\r\n * }\r\n */\r\nexport class Text extends Sprite {\r\n\r\n    /**visible不进行任何裁切。*/\r\n    static VISIBLE: string = \"visible\";\r\n    /**scroll 不显示文本域外的字符像素，并且支持 scroll 接口。*/\r\n    static SCROLL: string = \"scroll\";\r\n    /**hidden 不显示超出文本域的字符。*/\r\n    static HIDDEN: string = \"hidden\";\r\n    /**shrink 超出文本域时，文本整体缩小以适应文本框。*/\r\n    static SHRINK: string = \"shrink\";\r\n    /**ellipsis 超出文本域时，文本被截断，并且文本最后显示省略号。*/\r\n    static ELLIPSIS: string = \"ellipsis\";\r\n\r\n    /**语言包，是一个包含key:value的集合，用key索引，替换为目标value语言*/\r\n    static langPacks: Record<string, string>;\r\n    /**是否是从右向左的显示顺序*/\r\n    static RightToLeft: boolean = false;\r\n\r\n    /**@internal 预测长度的文字，用来提升计算效率，不同语言找一个最大的字符即可*/\r\n    static _testWord: string = \"游\";\r\n    static _passwordChar = \"●\";\r\n\r\n    /**@private 位图字体字典。*/\r\n    private static _bitmapFonts: Record<string, BitmapFont> = {};\r\n\r\n    /** 标记此文本是否忽略语言包 */\r\n    ignoreLang: boolean;\r\n\r\n    /**表示文本内容字符串。*/\r\n    protected _text: string;\r\n    protected _overflow: string = Text.VISIBLE;\r\n    protected _singleCharRender: boolean = false;\t// 拆分渲染\r\n    protected _textStyle: TextStyle;\r\n    protected _prompt: string = '';\r\n    /**输入提示符颜色。*/\r\n    protected _promptColor: string;\r\n    /**\r\n     * 文本背景颜色，以字符串表示。\r\n     */\r\n    protected _bgColor: string;\r\n    /**\r\n     * 文本边框背景颜色，以字符串表示。\r\n     */\r\n    protected _borderColor: string;\r\n    /**\r\n     * <p>默认边距信息</p>\r\n     * <p>[上边距，右边距，下边距，左边距]（边距以像素为单位）</p>\r\n     */\r\n    protected _padding: number[];\r\n    /**\r\n     * <p>表示使用此文本格式的文本字段是否自动换行。</p>\r\n     * 如果 wordWrap 的值为 true，则该文本字段自动换行；如果值为 false，则该文本字段不自动换行。\r\n     * @default false。\r\n     */\r\n    protected _wordWrap: boolean;\r\n\r\n    /**\r\n     * <p>指定文本字段是否是密码文本字段。</p>\r\n     * 如果此属性的值为 true，则文本字段被视为密码文本字段，并使用星号而不是实际字符来隐藏输入的字符。如果为 false，则不会将文本字段视为密码文本字段。\r\n     */\r\n    protected _asPassword: boolean;\r\n\r\n    protected _htmlParseOptions: HtmlParseOptions;\r\n\r\n    protected _templateVars: Record<string, string>;\r\n\r\n    /**表示文本内容是否发生改变。*/\r\n    protected _isChanged: boolean;\r\n    /**表示文本的宽度，以像素为单位。*/\r\n    protected _textWidth: number = 0;\r\n    /**表示文本的高度，以像素为单位。*/\r\n    protected _textHeight: number = 0;\r\n    protected _realFont: string;\r\n    protected _bitmapFont: BitmapFont;\r\n    protected _scrollPos: Point | null;\r\n    protected _bgDrawCmd: DrawRectCmd;\r\n    protected _html: boolean;\r\n    protected _ubb: boolean;\r\n    protected _lines: Array<ITextLine>;\r\n    protected _elements: Array<HtmlElement>;\r\n    protected _objContainer: Sprite;\r\n    protected _maxWidth: number;\r\n    protected _hideText: boolean;\r\n\r\n    private _updatingLayout: boolean;\r\n    private _fontSizeScale: number;\r\n\r\n    /**是否将字符串中的\\n,\\t转换为实际功能的字符 */\r\n    _parseEscapeChars: boolean;\r\n    _onPostLayout: () => void;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Text</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._textStyle = new TextStyle();\r\n        this._textStyle.fontSize = Config.defaultFontSize;\r\n        this._text = \"\";\r\n        this.font = \"\";\r\n        this._elements = [];\r\n        this._lines = [];\r\n        this._padding = [0, 0, 0, 0];\r\n        this._fontSizeScale = 1;\r\n    }\r\n\r\n    /**\r\n     * 注册位图字体。\r\n     * @param\tname\t\t位图字体的名称。\r\n     * @param\tbitmapFont\t位图字体文件。\r\n     */\r\n    static registerBitmapFont(name: string, bitmapFont: BitmapFont): void {\r\n        bitmapFont._addReference();\r\n        Text._bitmapFonts[name] = bitmapFont;\r\n    }\r\n\r\n    /**\r\n     * 移除注册的位图字体文件。\r\n     * @param\tname\t\t位图字体的名称。\r\n     * @param\tdestroy\t\t是否销毁指定的字体文件。\r\n     */\r\n    static unregisterBitmapFont(name: string, destroy: boolean = true): void {\r\n        let font = Text._bitmapFonts[name];\r\n        if (font) {\r\n            font._removeReference();\r\n            if (destroy) font.destroy();\r\n            delete Text._bitmapFonts[name];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        recoverLines(this._lines);\r\n        HtmlElement.returnToPool(this._elements);\r\n\r\n        super.destroy(destroyChild);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\r\n        var rec: Rectangle = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec._getBoundPoints();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    getGraphicBounds(realSize: boolean = false): Rectangle {\r\n        var rec: Rectangle = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        return this.textWidth;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        if (!this._updatingLayout)\r\n            this.markChanged();\r\n        else\r\n            this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        return this.textHeight;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        if (!this._updatingLayout)\r\n            this.markChanged();\r\n        else\r\n            this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * 表示文本的宽度，以像素为单位。\r\n     */\r\n    get textWidth(): number {\r\n        this.typeset();\r\n        return this._textWidth;\r\n    }\r\n\r\n    /**\r\n     * 表示文本的高度，以像素为单位。\r\n     */\r\n    get textHeight(): number {\r\n        this.typeset();\r\n        return this._textHeight;\r\n    }\r\n\r\n    /** 当前文本的内容字符串。*/\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        if (value == null)\r\n            value = \"\";\r\n        else if (typeof (value) !== \"string\")\r\n            value = '' + value;\r\n\r\n        if (!this.ignoreLang && Text.langPacks)\r\n            value = Text.langPacks[value] || value;\r\n\r\n        if (this._text != value) {\r\n            this._text = value;\r\n            this.markChanged();\r\n            this.event(Event.CHANGE);\r\n        }\r\n    }\r\n\r\n    /** @deprecated **/\r\n    changeText(text: string): void {\r\n        this.text = text;\r\n    }\r\n\r\n    /**\r\n     * <p>文本的字体名称，以字符串形式表示。</p>\r\n     * <p>默认值为：\"Arial\"，可以通过Config.defaultFont设置默认字体。</p>\r\n     * <p>如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。</p>\r\n     */\r\n    get font(): string {\r\n        return this._textStyle.font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._textStyle.font = value;\r\n        if (!value) {\r\n            value = Config.defaultFont;\r\n            if (!value)\r\n                value = \"Arial\";\r\n        }\r\n\r\n        this._realFont = value;\r\n        this._bitmapFont = Text._bitmapFonts[value];\r\n\r\n        if (this._bitmapFont) {\r\n            if (this._text)\r\n                this.markChanged();\r\n        }\r\n        else if (value && (Utils.getFileExtension(value) || value.startsWith(\"res://\"))) {\r\n            let t = value;\r\n            let fontObj = ILaya.loader.getRes(value);\r\n            if (!fontObj || fontObj.obsolute) {\r\n                ILaya.loader.load(value).then(fontObj => {\r\n                    if (!fontObj || this._realFont != t)\r\n                        return;\r\n\r\n                    if (fontObj instanceof BitmapFont)\r\n                        this._bitmapFont = fontObj;\r\n                    else\r\n                        this._realFont = fontObj.family;\r\n                    if (this._text)\r\n                        this.markChanged();\r\n                });\r\n            }\r\n            else {\r\n                if (fontObj instanceof BitmapFont)\r\n                    this._bitmapFont = fontObj;\r\n                else\r\n                    this._realFont = fontObj.family;\r\n                if (this._text)\r\n                    this.markChanged();\r\n            }\r\n        }\r\n        else {\r\n            this._realFont = (ILaya.Browser.onIPhone ? (Config.fontFamilyMap[value] || value) : value);\r\n            if (this._text)\r\n                this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>指定文本的字体大小（以像素为单位）。</p>\r\n     * <p>默认为20像素，可以通过 <code>Config.defaultFontSize</code> 设置默认大小。</p>\r\n     */\r\n    get fontSize(): number {\r\n        return this._textStyle.fontSize;\r\n    }\r\n\r\n    set fontSize(value: number) {\r\n        if (this._textStyle.fontSize != value) {\r\n            this._textStyle.fontSize = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的颜色值。可以通过 <code>Text.defaultColor</code> 设置默认颜色。</p>\r\n     * <p>默认值为黑色。</p>\r\n     */\r\n    get color(): string {\r\n        return this._textStyle.color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this.set_color(value);\r\n    }\r\n\r\n    set_color(value: string): void {\r\n        if (this._textStyle.color != value) {\r\n            this._textStyle.color = value;\r\n            //如果仅仅更新颜色，无需重新排版\r\n            if (!this._isChanged && this._graphics && this._elements.length == 0)\r\n                this._graphics.replaceTextColor(this._textStyle.color);\r\n            else\r\n                this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>指定文本是否为粗体字。</p>\r\n     * <p>默认值为 false，这意味着不使用粗体字。如果值为 true，则文本为粗体字。</p>\r\n     */\r\n    get bold(): boolean {\r\n        return this._textStyle.bold;\r\n    }\r\n\r\n    set bold(value: boolean) {\r\n        if (this._textStyle.bold != value) {\r\n            this._textStyle.bold = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本是否为斜体。</p>\r\n     * <p>默认值为 false，这意味着不使用斜体。如果值为 true，则文本为斜体。</p>\r\n     */\r\n    get italic(): boolean {\r\n        return this._textStyle.italic;\r\n    }\r\n\r\n    set italic(value: boolean) {\r\n        if (this._textStyle.italic != value) {\r\n            this._textStyle.italic = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的水平显示方式。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"left\"： 居左对齐显示。</li>\r\n     * <li>\"center\"： 居中对齐显示。</li>\r\n     * <li>\"right\"： 居右对齐显示。</li>\r\n     * </p>\r\n     */\r\n    get align(): string {\r\n        return this._textStyle.align;\r\n    }\r\n\r\n    set align(value: string) {\r\n        if (this._textStyle.align != value) {\r\n            this._textStyle.align = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的垂直显示方式。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"top\"： 居顶部对齐显示。</li>\r\n     * <li>\"middle\"： 居中对齐显示。</li>\r\n     * <li>\"bottom\"： 居底部对齐显示。</li>\r\n     * </p>\r\n     */\r\n    get valign(): string {\r\n        return this._textStyle.valign;\r\n    }\r\n\r\n    set valign(value: string) {\r\n        if (this._textStyle.valign != value) {\r\n            this._textStyle.valign = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 图文混排时图片和文字的对齐方式。可选值是top,middle,bottom\r\n     */\r\n    get alignItems(): string {\r\n        return this._textStyle.alignItems;\r\n    }\r\n\r\n    set alignItems(value: string) {\r\n        if (this._textStyle.alignItems != value) {\r\n            this._textStyle.alignItems = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本是否自动换行，默认为false。</p>\r\n     * <p>若值为true，则自动换行；否则不自动换行。</p>\r\n     */\r\n    get wordWrap(): boolean {\r\n        return this._wordWrap;\r\n    }\r\n\r\n    set wordWrap(value: boolean) {\r\n        if (this._wordWrap != value) {\r\n            this._wordWrap = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 垂直行间距（以像素为单位）。\r\n     */\r\n    get leading(): number {\r\n        return this._textStyle.leading;\r\n    }\r\n\r\n    set leading(value: number) {\r\n        if (this._textStyle.leading != value) {\r\n            this._textStyle.leading = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>边距信息。</p>\r\n     * <p>数据格式：[上边距，右边距，下边距，左边距]（边距以像素为单位）。</p>\r\n     */\r\n    get padding(): number[] {\r\n        return this._padding;\r\n    }\r\n\r\n    set padding(value: number[] | string) {\r\n        if (typeof (value) == 'string') {\r\n            let arr = value.split(\",\");\r\n            this._padding.length = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                let v = parseFloat(arr[i]);\r\n                if (isNaN(v))\r\n                    v = 0;\r\n                this._padding.push(v);\r\n            }\r\n        }\r\n        else\r\n            this._padding = value;\r\n        this.markChanged();\r\n    }\r\n\r\n    /**\r\n     * 文本背景颜色，以字符串表示。\r\n     */\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * 文本边框背景颜色，以字符串表示。\r\n     */\r\n    get borderColor(): string {\r\n        return this._borderColor;\r\n    }\r\n\r\n    set borderColor(value: string) {\r\n        this._borderColor = value;\r\n        this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * <p>默认值0，表示不描边。</p>\r\n     */\r\n    get stroke(): number {\r\n        return this._textStyle.stroke;\r\n    }\r\n\r\n    set stroke(value: number) {\r\n        if (this._textStyle.stroke != value) {\r\n            this._textStyle.stroke = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * <p>默认值为 \"#000000\"（黑色）;</p>\r\n     */\r\n    get strokeColor(): string {\r\n        return this._textStyle.strokeColor;\r\n    }\r\n\r\n    set strokeColor(value: string) {\r\n        if (this._textStyle.strokeColor != value) {\r\n            this._textStyle.strokeColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 指定文本超出文本域后的行为\r\n     * @tips: <p>值为:可见visible、隐藏hidden、滚动:scroll、自动收缩shrink、显示省略号ellipsis。</p>\r\n     * @tips: <p>作用：可见，表示文本不受文本宽高约束全部可见；隐藏，超过文本宽高就会被裁切掉，性能最好；\r\n     * 滚动，表示超出宽高的部分被隐藏，可以通过划动控制显示在宽高内区域；自动收缩，表示文本会跟随宽高的大小而自动调整文本的大小，始终全部显示在文本宽高内。\r\n     * 显示省略号，表示当文本超出宽高后，未尾的几位字符会替换为省略号，表示当前文本还有未显示的内容</p>\r\n     */\r\n    get overflow(): string {\r\n        return this._overflow;\r\n    }\r\n\r\n    set overflow(value: string) {\r\n        if (this._overflow != value) {\r\n            this._overflow = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**是否显示下划线。*/\r\n    get underline(): boolean {\r\n        return this._textStyle.underline;\r\n    }\r\n\r\n    set underline(value: boolean) {\r\n        if (this._textStyle.underline != value) {\r\n            this._textStyle.underline = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**下划线的颜色，为null则使用字体颜色。*/\r\n    get underlineColor(): string {\r\n        return this._textStyle.underlineColor;\r\n    }\r\n\r\n    set underlineColor(value: string) {\r\n        if (this._textStyle.underlineColor != value) {\r\n            this._textStyle.underlineColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get singleCharRender(): boolean {\r\n        return this._singleCharRender;\r\n    }\r\n\r\n    /** 设置是否单个字符渲染，如果Textd的内容一直改变，例如是一个增加的数字，就设置这个，防止无效占用缓存 */\r\n    set singleCharRender(value: boolean) {\r\n        this._singleCharRender = value;\r\n    }\r\n\r\n    get html(): boolean {\r\n        return this._html;\r\n    }\r\n\r\n    /** 设置是否富文本，支持html语法 */\r\n    set html(value: boolean) {\r\n        if (this._html != value) {\r\n            this._html = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get ubb(): boolean {\r\n        return this._ubb;\r\n    }\r\n\r\n    /** 设置是否使用UBB语法解析文本 */\r\n    set ubb(value: boolean) {\r\n        if (this._ubb != value) {\r\n            this._ubb = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get maxWidth(): number {\r\n        return this._maxWidth;\r\n    }\r\n\r\n    /** 设置当文本达到最大允许的宽度时，自定换行，设置为0则此限制不生效。*/\r\n    set maxWidth(value: number) {\r\n        if (this._maxWidth != value) {\r\n            this._maxWidth = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get htmlParseOptions(): HtmlParseOptions {\r\n        return this._htmlParseOptions;\r\n    }\r\n\r\n    set htmlParseOptions(value: HtmlParseOptions) {\r\n        this._htmlParseOptions = value;\r\n    }\r\n\r\n    protected parseTemplate(template: string): string {\r\n        let pos1: number = 0, pos2: number, pos3: number;\r\n        let tag: string;\r\n        let value: string;\r\n        let result: string = \"\";\r\n        while ((pos2 = template.indexOf(\"{\", pos1)) != -1) {\r\n            if (pos2 > 0 && template.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += template.substring(pos1, pos2 - 1);\r\n                result += \"{\";\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            result += template.substring(pos1, pos2);\r\n            pos1 = pos2;\r\n            pos2 = template.indexOf(\"}\", pos1);\r\n            if (pos2 == -1)\r\n                break;\r\n\r\n            if (pos2 == pos1 + 1) {\r\n                result += template.substring(pos1, pos1 + 2);\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            tag = template.substring(pos1 + 1, pos2);\r\n            pos3 = tag.indexOf(\"=\");\r\n            if (pos3 != -1) {\r\n                value = this._templateVars[tag.substring(0, pos3)];\r\n                if (value == null)\r\n                    result += tag.substring(pos3 + 1);\r\n                else\r\n                    result += value;\r\n            }\r\n            else {\r\n                value = this._templateVars[tag];\r\n                if (value != null)\r\n                    result += value;\r\n            }\r\n            pos1 = pos2 + 1;\r\n        }\r\n\r\n        if (pos1 < template.length)\r\n            result += template.substring(pos1);\r\n\r\n        return result;\r\n    }\r\n\r\n    public get templateVars(): Record<string, any> {\r\n        return this._templateVars;\r\n    }\r\n\r\n    public set templateVars(value: Record<string, any> | boolean) {\r\n        if (!this._templateVars && !value)\r\n            return;\r\n\r\n        if (value === true)\r\n            this._templateVars = {};\r\n        else if (value === false)\r\n            this._templateVars = null;\r\n        else\r\n            this._templateVars = value;\r\n        this.markChanged();\r\n    }\r\n\r\n    public setVar(name: string, value: any): Text {\r\n        if (!this._templateVars)\r\n            this._templateVars = {};\r\n        this._templateVars[name] = value;\r\n        this.markChanged();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n    * <p>设置横向滚动量。</p>\r\n    * <p>即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。</p>\r\n    */\r\n    set scrollX(value: number) {\r\n        this.typeset();\r\n        if (!this._scrollPos) return;\r\n\r\n        let maxScrollX = this.maxScrollX;\r\n        value = value < 0 ? 0 : value;\r\n        value = value > maxScrollX ? maxScrollX : value;\r\n\r\n        this._scrollPos.x = value;\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * 获取横向滚动量。\r\n     */\r\n    get scrollX(): number {\r\n        if (!this._scrollPos) return 0;\r\n        return this._scrollPos.x;\r\n    }\r\n\r\n    /**\r\n     * 设置纵向滚动量（px)。即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。\r\n     */\r\n    set scrollY(value: number) {\r\n        this.typeset();\r\n        if (!this._scrollPos) return;\r\n\r\n        let maxScrollY = this.maxScrollY;\r\n        value = value < 0 ? 0 : value;\r\n        value = value > maxScrollY ? maxScrollY : value;\r\n\r\n        this._scrollPos.y = value;\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * 获取纵向滚动量。\r\n     */\r\n    get scrollY(): number {\r\n        if (!this._scrollPos) return 0;\r\n        return this._scrollPos.y;\r\n    }\r\n\r\n    /**\r\n     * 获取横向可滚动最大值。\r\n     */\r\n    get maxScrollX(): number {\r\n        let r = this.textWidth - this._width;\r\n        return r < 0 ? 0 : r;\r\n    }\r\n\r\n    /**\r\n     * 获取纵向可滚动最大值。\r\n     */\r\n    get maxScrollY(): number {\r\n        let r = this.textHeight - this._height;\r\n        return r < 0 ? 0 : r;\r\n    }\r\n\r\n    /**返回文字行信息*/\r\n    get lines(): ReadonlyArray<ITextLine> {\r\n        this.typeset();\r\n        return this._lines;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected markChanged() {\r\n        if (!this._isChanged) {\r\n            this._isChanged = true;\r\n            ILaya.systemTimer.callLater(this, this._typeset);\r\n        }\r\n    }\r\n\r\n    typeset() {\r\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this._typeset);\r\n    }\r\n\r\n    refreshLayout() {\r\n        ILaya.systemTimer.callLater(this, this.doLayout);\r\n    }\r\n\r\n    get objContainer(): Sprite {\r\n        if (!this._objContainer) {\r\n            this._objContainer = new Sprite();\r\n            this._objContainer.hideFlags |= HideFlags.HideAndDontSave;\r\n            this.addChild(this._objContainer);\r\n        }\r\n        return this._objContainer;\r\n    }\r\n\r\n    /**\r\n     * <p>排版文本。</p>\r\n     * <p>进行宽高计算，渲染、重绘文本。</p>\r\n     */\r\n    protected _typeset(): void {\r\n        this._isChanged = false;\r\n        if (this._hideText || this._destroyed)\r\n            return;\r\n\r\n        HtmlElement.returnToPool(this._elements);\r\n        if (this._objContainer)\r\n            this._objContainer.removeChildren();\r\n\r\n        let text = this._text;\r\n        let isPrompt: boolean;\r\n        if (!text && this._prompt) {\r\n            text = this._prompt;\r\n            isPrompt = true;\r\n        }\r\n\r\n        if (!text) {\r\n            this.graphics.clear(true);\r\n            this.drawBg();\r\n\r\n            this._textWidth = this._textHeight = 0;\r\n            this._scrollPos = null;\r\n            if (this._onPostLayout) {\r\n                this._updatingLayout = true;\r\n                this._onPostLayout();\r\n                this._updatingLayout = false;\r\n            }\r\n            return;\r\n        }\r\n\r\n        let html = this._html;\r\n        text = text.replace(normalizeCR, \"\\n\");\r\n        if (this._parseEscapeChars)\r\n            text = text.replace(escapeCharsPattern, getReplaceStr);\r\n        if (!isPrompt && this._templateVars)\r\n            text = this.parseTemplate(text);\r\n\r\n        if (this._ubb) {\r\n            text = UBBParser.defaultParser.parse(text);\r\n            html = true;\r\n        }\r\n        if (!isPrompt && this._asPassword)\r\n            text = Text._passwordChar.repeat(text.length);\r\n\r\n        let saveColor: string;\r\n        if (isPrompt) {\r\n            saveColor = this._textStyle.color;\r\n            this._textStyle.color = this._promptColor;\r\n        }\r\n        if (html)\r\n            HtmlParser.defaultParser.parse(text, this._textStyle, this._elements, this._htmlParseOptions);\r\n        else {\r\n            let ele = HtmlElement.getFromPool(HtmlElementType.Text);\r\n            Object.assign(ele.style, this._textStyle);\r\n            ele.text = text;\r\n            this._elements.push(ele);\r\n        }\r\n        if (isPrompt)\r\n            this._textStyle.color = saveColor;\r\n\r\n        this.doLayout();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 分析文本换行。\r\n     */\r\n    protected doLayout(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._updatingLayout = true;\r\n        this._fontSizeScale = 1;\r\n\r\n        let wordWrap = this._wordWrap || this._overflow == Text.ELLIPSIS;\r\n        let padding = this._padding;\r\n        let rectWidth: number;\r\n        if (this._isWidthSet)\r\n            rectWidth = this._width - padding[3] - padding[1];\r\n        else\r\n            rectWidth = Number.MAX_VALUE;\r\n        if (this._maxWidth > 0) {\r\n            let m = this._maxWidth - padding[3] - padding[1];\r\n            if (!wordWrap || m < rectWidth)\r\n                rectWidth = m;\r\n            wordWrap = true;\r\n        }\r\n        let rectHeight = this._isHeightSet ? (this._height - padding[0] - padding[2]) : Number.MAX_VALUE;\r\n        let bfont = this._bitmapFont;\r\n        let alignItems = this._textStyle.alignItems == \"middle\" ? 1 : (this._textStyle.alignItems == \"bottom\" ? 2 : 0);\r\n\r\n        let lineX: number, lineY: number;\r\n        let curLine: ITextLine;\r\n        let lastCmd: ITextCmd;\r\n        let charWidth: number, charHeight: number;\r\n        let fontSize: number;\r\n\r\n        let getTextWidth = (text: string) => {\r\n            if (bfont)\r\n                return bfont.getTextWidth(text, fontSize);\r\n            else {\r\n                let ret = ILaya.Browser.context.measureText(text);\r\n                return ret ? ret.width : 100;\r\n            }\r\n        };\r\n\r\n        let buildLines = (text: string, style: TextStyle) => {\r\n            if (bfont) {\r\n                charWidth = bfont.getMaxWidth(fontSize);\r\n                charHeight = bfont.getMaxHeight(fontSize);\r\n            } else {\r\n                let ctxFont = (style.italic ? \"italic \" : \"\") + (style.bold ? \"bold \" : \"\") + fontSize + \"px \" + this._realFont;\r\n                (<any>style)._ctxFont = ctxFont; //缓存起来，避免renderText里又拼一次\r\n\r\n                ILaya.Browser.context.font = ctxFont;\r\n                let mr: any = ILaya.Browser.context.measureText(Text._testWord);\r\n\r\n                if (mr) {\r\n                    charWidth = mr.width;\r\n                    charHeight = Math.ceil(mr.height || fontSize);\r\n                }\r\n                else {\r\n                    charWidth = 100;\r\n                    charHeight = fontSize;\r\n                }\r\n            }\r\n\r\n            let lines = text.split(\"\\n\");\r\n            if (wordWrap) {\r\n                for (let i = 0, n = lines.length; i < n; i++) {\r\n                    let line = lines[i];\r\n                    if (line.length > 0)\r\n                        wrapText(line, style);\r\n                    if (i != n - 1) {\r\n                        endLine();\r\n                        startLine();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0, n = lines.length; i < n; i++) {\r\n                    let line = lines[i];\r\n                    if (line.length > 0)\r\n                        addCmd(line, style, null);\r\n                    if (i != n - 1) {\r\n                        endLine();\r\n                        startLine();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        let addCmd = (target: string | IHtmlObject, style: TextStyle, width?: number) => {\r\n            let cmd: ITextCmd = cmdPool.length > 0 ? cmdPool.pop() : <any>{};\r\n            cmd.x = lineX;\r\n            cmd.y = lineY;\r\n            if (typeof (target) === \"string\") {\r\n                if (!width)\r\n                    width = getTextWidth(target);\r\n                if (!cmd.wt)\r\n                    cmd.wt = new WordText();\r\n                cmd.wt.setText(target);\r\n                cmd.wt.width = width;\r\n                cmd.wt.splitRender = this._singleCharRender;\r\n                cmd.width = width;\r\n                cmd.height = charHeight;\r\n            }\r\n            else {\r\n                cmd.obj = target;\r\n                cmd.x++;\r\n                cmd.width = target.width + 2;\r\n                cmd.height = target.height;\r\n            }\r\n            cmd.style = style;\r\n            cmd.linkEnd = false;\r\n            cmd.next = null;\r\n            lineX += Math.round(cmd.width);\r\n\r\n            if (!curLine.cmd)\r\n                curLine.cmd = cmd;\r\n            else\r\n                lastCmd.next = cmd;\r\n            lastCmd = cmd;\r\n        };\r\n\r\n        let endLine = () => {\r\n            //计算行高\r\n            let lineHeight = 0;\r\n            let cmd = curLine.cmd;\r\n            while (cmd) {\r\n                if (cmd.height > lineHeight) lineHeight = cmd.height;\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            //调整元素y位置\r\n            cmd = curLine.cmd;\r\n            while (cmd) {\r\n                if (alignItems == 1)\r\n                    cmd.y = Math.floor((lineHeight - cmd.height) * 0.5);\r\n                else if (alignItems == 2)\r\n                    cmd.y = Math.floor((lineHeight - cmd.height));\r\n                else\r\n                    cmd.y = 0;\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            if (lineHeight == 0)\r\n                lineHeight = charHeight;\r\n            lineHeight++; //预览一个像素用来放下划线\r\n\r\n            curLine.height = lineHeight;\r\n            curLine.width = lineX;\r\n        };\r\n\r\n        let startLine = () => {\r\n            lineX = 0;\r\n            if (curLine)\r\n                lineY += curLine.height + Math.floor(this._textStyle.leading * this._fontSizeScale);\r\n\r\n            curLine = linePool.length > 0 ? linePool.pop() : <any>{ cmds: [] };\r\n            curLine.x = 0;\r\n            curLine.y = lineY;\r\n            this._lines.push(curLine);\r\n\r\n            return curLine;\r\n        };\r\n\r\n        let wrapText = (text: string, style: TextStyle) => {\r\n            let remainWidth = Math.max(0, rectWidth - lineX);\r\n\r\n            let tw = getTextWidth(text);\r\n            //优化1，如果一行小于宽度，则直接跳过遍历\r\n            if (tw <= remainWidth) {\r\n                addCmd(text, style, tw);\r\n                return;\r\n            }\r\n\r\n            let maybeIndex = 0;\r\n            let wordWidth = 0;\r\n            let startIndex = 0;\r\n\r\n            let isEmoji = testEmoji(text);\r\n            if (!bfont && !isEmoji) {\r\n                //优化2，预算第几个字符会超出，减少遍历及字符宽度度量\r\n                maybeIndex = Math.floor(remainWidth / charWidth);\r\n                (maybeIndex == 0) && (maybeIndex = 1);\r\n                wordWidth = getTextWidth(text.substring(0, maybeIndex));\r\n                if (remainWidth < wordWidth && lineX != 0) {\r\n                    endLine();\r\n                    startLine();\r\n                    remainWidth = rectWidth;\r\n                }\r\n            }\r\n\r\n            let len = text.length;\r\n            for (let j = maybeIndex; j < len; j++) {\r\n                // 逐字符测量后加入到总宽度中，在某些情况下自动换行不准确。\r\n                // 目前已知在全是字符1的自动换行就会出现这种情况。\r\n                // 考虑性能，保留这种非方式。\r\n                tw = getTextWidth(text.charAt(j));\r\n                wordWidth += tw;\r\n                let isEmojiChar = false;\r\n                if (isEmoji && j + 1 < len && testEmoji(text.charAt(j) + text.charAt(j + 1))) {\r\n                    wordWidth += tw >> 1;\r\n                    j++;\r\n                    isEmojiChar = true;\r\n                }\r\n\r\n                // 如果j的位置已经超出范围，要从startIndex到j找到一个能拆分的地方\r\n                if (wordWidth > remainWidth) {\r\n                    if (isEmojiChar) {\r\n                        if (wordWidth == tw + (tw >> 1)) {\r\n                            //这里是代表第一个就是emoji表情的逻辑\r\n                            j++;\r\n                        } else {\r\n                            j--;\r\n                        }\r\n                    }\r\n\r\n                    if (j == 0) {\r\n                        if (lineX > 0) {\r\n                            endLine();\r\n                            startLine();\r\n                            remainWidth = rectWidth;\r\n                        }\r\n                        continue;\r\n                    }\r\n\r\n                    //截断换行单词\r\n                    let newLine = text.substring(startIndex, j);\r\n                    wordWidth -= tw;\r\n\r\n                    // 如果最后一个是中文则直接截断，否则找空格或者-来拆分\r\n                    let ccode = newLine.charCodeAt(newLine.length - 1);\r\n                    if (isEnglishChar(ccode)) {\r\n                        //按照英文单词字边界截取 因此将会无视中文\r\n                        let execResult = wordBoundaryTest.exec(newLine);// 找不是 空格和标点符号的\r\n                        if (execResult) {\r\n                            j = execResult.index + startIndex;\r\n                            //此行只够容纳这一个单词 强制换行\r\n                            if (execResult.index == 0)\r\n                                j += newLine.length;\r\n                            //此行有多个单词 按单词分行\r\n                            else {\r\n                                wordWidth = null;\r\n                                newLine = text.substring(startIndex, j);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //如果自动换行，则另起一行\r\n                    addCmd(newLine, style, wordWidth);\r\n                    endLine();\r\n                    startLine();\r\n                    remainWidth = rectWidth;\r\n                    //如果非自动换行，则只截取字符串\r\n\r\n                    startIndex = j;\r\n                    if (j + maybeIndex < len) {\r\n                        if (maybeIndex != 0)\r\n                            j += maybeIndex - 1;\r\n                        wordWidth = getTextWidth(text.substring(startIndex, j + 1));\r\n                    } else {\r\n                        //此处执行将不会在循环结束后再push一次\r\n                        addCmd(text.substring(startIndex, len), style);\r\n                        startIndex = -1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (startIndex != -1)\r\n                addCmd(text.substring(startIndex, len), style);\r\n        };\r\n\r\n        let calcTextSize = () => {\r\n            let nw: number = 0, nh: number = 0;\r\n            for (let line of this._lines) {\r\n                if (line.width > nw)\r\n                    nw = line.width;\r\n            }\r\n            if (nw > 0)\r\n                nw += padding[1] + padding[3];\r\n            this._textWidth = nw;\r\n\r\n            let lastLine = this._lines[this._lines.length - 1];\r\n            if (lastLine)\r\n                nh = lastLine.y + lastLine.height;\r\n            if (nh > 0)\r\n                nh += padding[0] + padding[2];\r\n            this._textHeight = nh;\r\n        };\r\n\r\n        let run = () => {\r\n            lineX = lineY = charWidth = charHeight = 0;\r\n            curLine = null;\r\n            lastCmd = null;\r\n\r\n            recoverLines(this._lines);\r\n            startLine();\r\n\r\n            let elements = this._elements;\r\n            for (let i = 0, n = elements.length; i < n; i++) {\r\n                let ele = elements[i];\r\n                if (ele.type == HtmlElementType.Text) {\r\n                    fontSize = Math.floor(ele.style.fontSize * this._fontSizeScale);\r\n                    if (fontSize == 0)\r\n                        fontSize = 1;\r\n                    buildLines(ele.text, ele.style);\r\n                }\r\n                else if (ele.type == HtmlElementType.LinkEnd) {\r\n                    if (lastCmd)\r\n                        lastCmd.linkEnd = true;\r\n                }\r\n                else {\r\n                    let htmlObj = ele.obj;\r\n                    if (!htmlObj) {\r\n                        let cls = HtmlParser.classMap[ele.type];\r\n                        if (cls) {\r\n                            htmlObj = Pool.createByClass(cls);\r\n                            htmlObj.create(this, ele);\r\n                            ele.obj = htmlObj;\r\n                        }\r\n                    }\r\n\r\n                    if (htmlObj) {\r\n                        if (wordWrap) {\r\n                            let remainWidth = rectWidth - lineX;\r\n                            if (remainWidth < htmlObj.width + 1) {\r\n                                if (lineX > 0) { //如果已经是开始位置了，就算放不下也不换行\r\n                                    endLine();\r\n                                    startLine();\r\n                                }\r\n                            }\r\n                        }\r\n                        addCmd(htmlObj, ele.style);\r\n                    }\r\n                }\r\n            }\r\n\r\n            endLine();\r\n            calcTextSize();\r\n        };\r\n\r\n        run();\r\n\r\n        if (this._overflow == Text.SHRINK) {\r\n            if (this._lines.length > 1 && this._textHeight > rectHeight) {\r\n                //多行的情况，涉及到自动换行，得用二分法查找最合适的比例，会消耗多一点计算资源\r\n                let low = 0;\r\n                let high = this._textStyle.fontSize;\r\n\r\n                //先尝试猜测一个比例\r\n                this._fontSizeScale = Math.sqrt(rectHeight / this._textHeight);\r\n                let cur = Math.floor(this._fontSizeScale * this._textStyle.fontSize);\r\n\r\n                while (true) {\r\n                    run();\r\n\r\n                    if (this._textWidth > rectWidth || this._textHeight > rectHeight)\r\n                        high = cur;\r\n                    else\r\n                        low = cur;\r\n                    if (high - low > 1 || high != low && cur == high) {\r\n                        cur = low + (high - low) / 2;\r\n                        this._fontSizeScale = cur / this._textStyle.fontSize;\r\n                    }\r\n                    else\r\n                        break;\r\n                }\r\n            }\r\n            else if (this._textWidth > rectWidth) {\r\n                this._fontSizeScale = rectWidth / this._textWidth;\r\n\r\n                run();\r\n\r\n                if (this._textWidth > rectWidth) //如果还超出，缩小一点再来一次\r\n                {\r\n                    let size = Math.floor(this._textStyle.fontSize * this._fontSizeScale);\r\n                    size--;\r\n                    this._fontSizeScale = size / this._textStyle.fontSize;\r\n\r\n                    run();\r\n                }\r\n            }\r\n        }\r\n        else if (this._overflow == Text.ELLIPSIS && (this._textWidth > rectWidth || this._textHeight > rectHeight)) {\r\n            //删掉超出的行\r\n            let i = this._lines.findIndex(line => line.y + line.height > rectHeight);\r\n            if (i == 0) i = 1;\r\n            let linesDeleted = false;\r\n            if (i != -1 && this._lines.length > i) {\r\n                recoverLines(this._lines.splice(i, this._lines.length - i));\r\n                linesDeleted = true;\r\n            }\r\n\r\n            //在最后一行加省略号\r\n            let lastLine = this._lines[this._lines.length - 1];\r\n            let cmd = lastLine.cmd;\r\n            let next: ITextCmd;\r\n            let done = false;\r\n            while (cmd) {\r\n                next = cmd.next;\r\n\r\n                if (done) {\r\n                    if (cmd.obj)\r\n                        cmd.obj = null;\r\n                    else if (cmd.wt)\r\n                        cmd.wt.cleanCache();\r\n                    cmdPool.push(cmd);\r\n                }\r\n                else if ((!next && linesDeleted) || cmd.x + cmd.width > rectWidth) {\r\n                    if (cmd.obj) //如果最后是个图片，那就删除图片，换成省略号\r\n                        cmd.obj = null;\r\n                    if (!cmd.wt)\r\n                        cmd.wt = new WordText();\r\n\r\n                    cmd.wt.setText(cmd.wt.text.substring(0, Math.max(0, cmd.wt.text.length - 2)) + ellipsisStr);\r\n                    fontSize = cmd.style.fontSize;\r\n                    cmd.width = cmd.wt.width = getTextWidth(cmd.wt.text);\r\n                    cmd.wt.splitRender = this._singleCharRender;\r\n                    cmd.next = null;\r\n                    done = true;\r\n                }\r\n\r\n                cmd = next;\r\n            }\r\n\r\n            if (done)\r\n                calcTextSize();\r\n        }\r\n\r\n        if (this._onPostLayout)\r\n            this._onPostLayout();\r\n\r\n        //处理水平对齐\r\n        let align = this._textStyle.align == \"center\" ? 1 : (this._textStyle.align == \"right\" ? 2 : 0);\r\n        if (align != 0 && this._isWidthSet) {\r\n            let rectWidth = this._width - padding[3] - padding[1];\r\n            for (let line of this._lines) {\r\n                let offsetX = 0;\r\n                if (align == 1)\r\n                    offsetX = Math.floor((rectWidth - line.width) * 0.5);\r\n                else if (align == 2)\r\n                    offsetX = rectWidth - line.width;\r\n\r\n                if (offsetX > 0)\r\n                    line.x = offsetX;\r\n            }\r\n        }\r\n\r\n        //处理垂直对齐\r\n        if (this._isHeightSet && this._textHeight < this._height) {\r\n            let offsetY = 0;\r\n            if (this._textStyle.valign === \"middle\")\r\n                offsetY = Math.floor((this._height - this._textHeight) * 0.5);\r\n            else if (this._textStyle.valign === \"bottom\")\r\n                offsetY = this._height - this._textHeight;\r\n\r\n            if (offsetY > 0) {\r\n                for (let line of this._lines) {\r\n                    line.y += offsetY;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._overflow == Text.SCROLL\r\n            && (this._isWidthSet && this._textWidth > this._width || this._isHeightSet && this._textHeight > this._height)) {\r\n            if (!this._scrollPos)\r\n                this._scrollPos = new Point(0, 0);\r\n            else {\r\n                let maxScrollX = this.maxScrollX;\r\n                let maxScrollY = this.maxScrollY;\r\n                if (this._scrollPos.x > maxScrollX)\r\n                    this._scrollPos.x = maxScrollX;\r\n                if (this._scrollPos.y > maxScrollY)\r\n                    this._scrollPos.y = maxScrollY;\r\n            }\r\n        }\r\n        else\r\n            this._scrollPos = null;\r\n\r\n        if (this._objContainer) {\r\n            this._objContainer.size(this._width, this._height);\r\n\r\n            if (this._scrollPos || this._overflow == Text.HIDDEN && this._objContainer.numChildren > 0) {\r\n                if (!this._objContainer.scrollRect)\r\n                    this._objContainer.scrollRect = new Rectangle();\r\n                this._objContainer.scrollRect.setTo(0, 0, this._width, this._height);\r\n            }\r\n            else\r\n                this._objContainer.scrollRect = null;\r\n        }\r\n\r\n        this._updatingLayout = false;\r\n\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    * 渲染文字。\r\n    * @param\tbegin 开始渲染的行索引。\r\n    * @param\tvisibleLineCount 渲染的行数。\r\n    */\r\n    protected renderText(): void {\r\n        let graphics = this.graphics;\r\n        graphics.clear(true);\r\n        this.drawBg();\r\n\r\n        let padding = this._padding;\r\n        let paddingLeft = padding[3];\r\n        let paddingTop = padding[0];\r\n        let bfont = this._bitmapFont;\r\n        let scrollPos = this._scrollPos;\r\n        let rectWidth = this._isWidthSet ? this._width : this._textWidth;\r\n        let rectHeight = this._isHeightSet ? this._height : this._textHeight;\r\n        let bottom = rectHeight - padding[2];\r\n        let clipped = this._overflow == Text.HIDDEN || this._overflow == Text.SCROLL;\r\n\r\n        if (clipped) {\r\n            graphics.save();\r\n            graphics.clipRect(0, 0, rectWidth, rectHeight);\r\n            this.repaint();\r\n        }\r\n\r\n        rectWidth -= (padding[3] + padding[1]);\r\n        rectHeight -= (padding[0] + padding[2]);\r\n\r\n        let x = 0, y = 0;\r\n        let lines = this._lines;\r\n        let lineCnt = lines.length;\r\n        let curLink: HtmlLink;\r\n        let linkStartX: number;\r\n        for (let i = 0; i < lineCnt; i++) {\r\n            let line = lines[i];\r\n            x = paddingLeft + line.x;\r\n            y = paddingTop + line.y;\r\n            if (scrollPos) {\r\n                x -= scrollPos.x;\r\n                y -= scrollPos.y;\r\n            }\r\n            let lineClipped = clipped && ((y + line.height) <= paddingTop || y >= bottom);\r\n\r\n            let cmd = line.cmd;\r\n            while (cmd) {\r\n                if (cmd.linkEnd) {\r\n                    if (curLink) {\r\n                        curLink.addRect(linkStartX, y, x + cmd.x + cmd.width - linkStartX, line.height);\r\n                        curLink = null;\r\n                    }\r\n                }\r\n\r\n                if (cmd.obj) {\r\n                    cmd.obj.pos(x + cmd.x, y + cmd.y);\r\n\r\n                    if (cmd.obj.element.type == HtmlElementType.Link) {\r\n                        curLink = <HtmlLink>cmd.obj;\r\n                        curLink.resetArea();\r\n                        linkStartX = x + cmd.x;\r\n                    }\r\n                }\r\n                else if (!lineClipped) {\r\n                    if (bfont) {\r\n                        let tx: number = 0;\r\n                        let str = cmd.wt.text;\r\n                        let color = bfont.tint ? cmd.style.color : \"#FFFFFF\";\r\n                        let scale = Math.floor((bfont.autoScaleSize ? cmd.style.fontSize : bfont.fontSize) * this._fontSizeScale) / bfont.fontSize;\r\n                        for (let i = 0, n = str.length; i < n; i++) {\r\n                            let c = str.charCodeAt(i);\r\n                            let g = bfont.dict[c];\r\n                            if (g) {\r\n                                if (g.texture)\r\n                                    graphics.drawImage(g.texture, x + cmd.x + tx + g.x * scale, y + cmd.y + g.y * scale, g.width * scale, g.height * scale, color);\r\n                                tx += Math.round(g.advance * scale);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let ctxFont = (<any>cmd.style)._ctxFont;\r\n                        if (cmd.style.stroke)\r\n                            graphics.fillBorderText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null, cmd.style.stroke, cmd.style.strokeColor);\r\n                        else\r\n                            graphics.fillText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null);\r\n                    }\r\n                }\r\n\r\n                if (!lineClipped && cmd.style.underline) {\r\n                    let thickness = Math.max(1, cmd.style.fontSize * this._fontSizeScale / 16);\r\n                    graphics.drawLine(x + cmd.x, y + line.height - thickness, x + cmd.x + cmd.width, y + line.height - thickness, cmd.style.underlineColor || cmd.style.color, thickness);\r\n                }\r\n\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            if (curLink) {\r\n                curLink.addRect(linkStartX, y, rectWidth - linkStartX + paddingLeft, line.height);\r\n                linkStartX = paddingLeft;\r\n            }\r\n        }\r\n\r\n        if (clipped)\r\n            graphics.restore();\r\n    }\r\n\r\n    protected drawBg() {\r\n        let cmd = this._bgDrawCmd;\r\n        if (this._bgColor || this._borderColor) {\r\n            if (!cmd) {\r\n                cmd = new DrawRectCmd();\r\n                cmd.x = cmd.y = 0;\r\n                cmd.width = cmd.height = 1;\r\n                cmd.percent = true;\r\n                this._bgDrawCmd = cmd;\r\n            }\r\n            cmd.fillColor = this._bgColor;\r\n            cmd.lineColor = this._borderColor;\r\n            cmd.lineWidth = this._borderColor ? 1 : 0;\r\n\r\n            let cmds = this.graphics.cmds;\r\n            let i = cmds.indexOf(cmd);\r\n            if (i != 0) {\r\n                if (i != -1)\r\n                    cmds.splice(i, 1);\r\n                cmds.unshift(cmd);\r\n                this.graphics.cmds = cmds;\r\n            }\r\n        }\r\n        else if (cmd) {\r\n            this.graphics.removeCmd(cmd);\r\n        }\r\n    }\r\n}\r\nexport interface ITextCmd {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    style: TextStyle;\r\n    wt: WordText;\r\n    obj: IHtmlObject;\r\n    linkEnd: boolean;\r\n    next: ITextCmd;\r\n}\r\n\r\nexport interface ITextLine {\r\n    x: number;\r\n    y: number;\r\n    height: number;\r\n    width: number;\r\n    cmd: ITextCmd;\r\n}\r\n\r\nconst cmdPool: Array<ITextCmd> = [];\r\nconst linePool: Array<ITextLine> = [];\r\n\r\nfunction recoverLines(lines: Array<ITextLine>) {\r\n    for (let line of lines) {\r\n        let cmd = line.cmd;\r\n        while (cmd) {\r\n            if (cmd.obj)\r\n                cmd.obj = null;\r\n            else if (cmd.wt)\r\n                cmd.wt.cleanCache();\r\n            cmdPool.push(cmd);\r\n            cmd = cmd.next;\r\n        }\r\n        line.cmd = null;\r\n    }\r\n\r\n    linePool.push(...lines);\r\n    lines.length = 0;\r\n}\r\n\r\nconst emojiTest = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\nfunction testEmoji(str: string) {\r\n    if (null == str) return false;\r\n    return emojiTest.test(str);\r\n}\r\nfunction isEnglishChar(unicode: number): boolean {\r\n    return (unicode >= 65 && unicode <= 90) ||  // A-Z\r\n        (unicode >= 97 && unicode <= 122) || // a-z\r\n        unicode === 39; // 单引号\r\n}\r\n\r\n\r\nconst wordBoundaryTest = /(?:[^\\s\\!-\\/])+$/;\r\nconst normalizeCR = /\\r\\n/g;\r\nconst escapeCharsPattern = /\\\\(\\w)/g;\r\nconst escapeSequence: any = { \"\\\\n\": \"\\n\", \"\\\\t\": \"\\t\" };\r\nconst ellipsisStr = \"…\";\r\n\r\nfunction getReplaceStr(word: string): string {\r\n    return escapeSequence[word];\r\n}","import { HideFlags, NodeFlags } from \"../Const\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Stage } from \"../display/Stage\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Event, ITouchInfo } from \"./Event\";\r\n\r\nvar _isFirstTouch = true;\r\nconst _tempPoint = new Point();\r\nconst _tempRect = new Rectangle();\r\nconst _rollOverChain: Array<Node> = [];\r\nconst _rollOutChain: Array<Node> = [];\r\nvar _inst: InputManager;\r\n\r\nexport class InputManager {\r\n\r\n    /**是否开启多点触控*/\r\n    static multiTouchEnabled: boolean = true;\r\n    /**是否开启鼠标/触摸事件，默认为true*/\r\n    static mouseEventsEnabled: boolean = true;\r\n    /**是否开启键盘事件，默认为true*/\r\n    static keyEventsEnabled: boolean = true;\r\n    /**如果鼠标按下的位置和弹起的位置距离超过这个阀值，则不视为一次点击*/\r\n    static clickTestThreshold = 10;\r\n\r\n    /** canvas 上的鼠标X坐标。*/\r\n    static mouseX: number = 0;\r\n    /** canvas 上的鼠标Y坐标。*/\r\n    static mouseY: number = 0;\r\n    /** 当前是否正在输入文字 */\r\n    static isTextInputting = false;\r\n    static isiOSWKwebView: boolean = false;\r\n    protected _stage: Stage;\r\n    protected _mouseTouch: TouchInfo;\r\n    protected _touches: TouchInfo[];\r\n    protected _touchPool: TouchInfo[];\r\n    protected _touchTarget: Node;\r\n\r\n    //用于IDE处理\r\n    protected _eventType: number;\r\n    protected _nativeEvent: MouseEvent | WheelEvent | TouchEvent;\r\n\r\n    protected _pressKeys: Set<string | number>;\r\n    protected _keyEvent: Event;\r\n\r\n    private _touchInput: boolean;\r\n\r\n    constructor() {\r\n        this._touches = [];\r\n        this._touchPool = [];\r\n        this._mouseTouch = new TouchInfo(this._touches);\r\n        this._pressKeys = new Set();\r\n        this._keyEvent = new Event();\r\n        this._keyEvent._touches = this._touches;\r\n    }\r\n\r\n    static get inst() {\r\n        return _inst;\r\n    }\r\n\r\n    static getTouchPos(touchId?: number): Readonly<Point> {\r\n        if (touchId == null)\r\n            return _inst._touches[0]?.pos || Point.EMPTY;\r\n        else\r\n            return _inst.getTouch(touchId)?.pos || Point.EMPTY;\r\n    }\r\n\r\n    static get touchTarget(): Node {\r\n        return _inst._touchTarget;\r\n    }\r\n\r\n    static get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\r\n        return _inst._touches;\r\n    }\r\n\r\n    static get touchCount(): number {\r\n        return _inst._touches.length;\r\n    }\r\n\r\n    static cancelClick(touchId?: number): void {\r\n        let touch = touchId == null ? _inst._touches[0] : _inst.getTouch(touchId);\r\n        if (touch)\r\n            touch.clickCancelled = true;\r\n    }\r\n\r\n    /**\r\n     * 返回指定键是否被按下。\r\n     * @param\tkey 键值。参考：https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\r\n     * @return 是否被按下。\r\n     */\r\n    static hasKeyDown(key: string | number): boolean {\r\n        return _inst._pressKeys.has(key);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 初始化。\r\n     */\r\n    static __init__(stage: Stage, canvas: HTMLCanvasElement): void {\r\n        let inst = _inst = new InputManager();\r\n        inst._stage = stage;\r\n\r\n        canvas.oncontextmenu = () => {\r\n            return false;\r\n        };\r\n        canvas.addEventListener(\"mousedown\", ev => {\r\n            if (!Browser.onIE)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 0);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mouseup\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 1);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mousemove\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 2);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mouseout\", ev => {\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 3);\r\n        }, { passive: false });\r\n        // canvas.addEventListener(\"mouseover\", ev => {\r\n        // });\r\n\r\n        canvas.addEventListener(\"touchstart\", ev => {\r\n            inst._touchInput = true;\r\n            if (!_isFirstTouch && !InputManager.isTextInputting)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 0);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchend\", ev => {\r\n            if (!_isFirstTouch && !InputManager.isTextInputting)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            _isFirstTouch = false;\r\n            inst.handleTouch(ev, 1);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchmove\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 2);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchcancel\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 3);\r\n        }, { passive: false });\r\n\r\n        canvas.addEventListener(\"wheel\", ev => {\r\n            inst.handleMouse(ev, 4);\r\n        }, { passive: false });\r\n\r\n        canvas.addEventListener(\"pointerdown\", ev => {\r\n            canvas.setPointerCapture(ev.pointerId);\r\n        });\r\n        canvas.addEventListener(\"pointerup\", ev => {\r\n            canvas.releasePointerCapture(ev.pointerId);\r\n        }, true);\r\n\r\n        let document = <Document>Browser.document;\r\n        document.addEventListener(\"keydown\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n        document.addEventListener(\"keypress\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n        document.addEventListener(\"keyup\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n    }\r\n\r\n    handleMouse(ev: MouseEvent | WheelEvent, type: number) {\r\n        this._eventType = type;\r\n        this._nativeEvent = ev;\r\n\r\n        //console.log(\"handleMouse\", type);\r\n        let touch: TouchInfo = this._mouseTouch;\r\n\r\n        _tempPoint.setTo(ev.pageX || ev.clientX, ev.pageY || ev.clientY);\r\n        if (this._stage._canvasTransform)\r\n            this._stage._canvasTransform.invertTransformPoint(_tempPoint);\r\n        InputManager.mouseX = _tempPoint.x;\r\n        InputManager.mouseY = _tempPoint.y;\r\n        let x = _tempPoint.x / this._stage.clientScaleX;\r\n        let y = _tempPoint.y / this._stage.clientScaleY;\r\n\r\n        touch.event.nativeEvent = ev;\r\n        if (type == 3 || !InputManager.mouseEventsEnabled)\r\n            touch.target = this._touchTarget = null;\r\n        else {\r\n            touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\r\n\r\n            let ix = Math.round(x);\r\n            let iy = Math.round(y);\r\n\r\n            if (ix != touch.pos.x || iy != touch.pos.y) {\r\n                this._stage._mouseMoveTime = Browser.now();\r\n\r\n                touch.pos.setTo(ix, iy);\r\n                touch.move();\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\r\n\r\n                    for (let t of touch.downTargets)\r\n                        t.event(Event.MOUSE_DRAG, touch.event);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (touch.lastRollOver != touch.target)\r\n            this.handleRollOver(touch);\r\n\r\n        if (type == 0) {\r\n            if (!touch.began) {\r\n                touch.begin();\r\n                this._touches[0] = touch;\r\n                touch.event.button = ev.button;\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    this.handleFocus();\r\n\r\n                    if (ev.button == 0)\r\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\r\n                    else\r\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_DOWN, touch.event);\r\n                }\r\n            }\r\n        }\r\n        else if (type == 1) {\r\n            if (touch.began) {\r\n                touch.end();\r\n                this._touches.length = 0;\r\n                touch.event.button = ev.button;\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    if (ev.button == 0)\r\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\r\n                    else\r\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_UP, touch.event);\r\n\r\n                    if (touch.moved) {\r\n                        for (let t of touch.downTargets)\r\n                            t.event(Event.MOUSE_DRAG_END, touch.event);\r\n                    }\r\n\r\n                    let clickTarget = touch.clickTest();\r\n                    if (clickTarget) {\r\n                        if (ev.button == 0) {\r\n                            touch.event.isDblClick = touch.clickCount == 2;\r\n\r\n                            clickTarget.bubbleEvent(Event.CLICK, touch.event);\r\n\r\n                            if (touch.clickCount == 2)\r\n                                clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\r\n\r\n                            touch.event.isDblClick = false;\r\n                        }\r\n                        else {\r\n                            touch.event.isDblClick = touch.clickCount == 2;\r\n                            clickTarget.bubbleEvent(Event.RIGHT_CLICK, touch.event);\r\n                            touch.event.isDblClick = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                touch.event.button = 0;\r\n            }\r\n        }\r\n        else if (type == 4) {\r\n            if (InputManager.mouseEventsEnabled) {\r\n                touch.event.delta = (<WheelEvent>ev).deltaY * 0.025;\r\n                touch.target?.bubbleEvent(Event.MOUSE_WHEEL, touch.event);\r\n                touch.event.delta = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTouch(ev: TouchEvent, type: number) {\r\n        this._eventType = type;\r\n        this._nativeEvent = ev;\r\n\r\n        let touches = ev.changedTouches;\r\n        for (let i = 0; i < touches.length; ++i) {\r\n            let uTouch: Touch = touches[i];\r\n\r\n            if (!InputManager.multiTouchEnabled\r\n                && this._touches.length > 0\r\n                && this._touches[0].touchId != uTouch.identifier)\r\n                continue;\r\n\r\n            _tempPoint.setTo(uTouch.pageX, uTouch.pageY);\r\n            if (this._stage._canvasTransform)\r\n                this._stage._canvasTransform.invertTransformPoint(_tempPoint);\r\n            InputManager.mouseX = _tempPoint.x;\r\n            InputManager.mouseY = _tempPoint.y;\r\n            let x = _tempPoint.x / this._stage.clientScaleX;\r\n            let y = _tempPoint.y / this._stage.clientScaleY;\r\n\r\n            let touch = this.getTouch(uTouch.identifier, type == 0);\r\n            if (!touch)\r\n                continue;\r\n\r\n            touch.event.nativeEvent = ev;\r\n            touch.event.touchId = touch.touchId;\r\n            if (type == 3 || !InputManager.mouseEventsEnabled)\r\n                touch.target = this._touchTarget = null;\r\n            else {\r\n                touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\r\n                this._stage._mouseMoveTime = Browser.now();\r\n\r\n                let ix = Math.round(x);\r\n                let iy = Math.round(y);\r\n\r\n                if (Math.abs(ix - touch.pos.x) > 1.5 || Math.abs(iy - touch.pos.y) > 1.5) {\r\n                    touch.pos.setTo(ix, iy);\r\n\r\n                    if (type == 2) {\r\n                        touch.move();\r\n\r\n                        if (InputManager.mouseEventsEnabled) {\r\n\r\n                            touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\r\n\r\n                            for (let t of touch.downTargets)\r\n                                t.event(Event.MOUSE_DRAG, touch.event);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (touch.lastRollOver != touch.target)\r\n                this.handleRollOver(touch);\r\n\r\n            if (type == 0) {\r\n                if (!touch.began) {\r\n                    touch.begin();\r\n\r\n                    if (InputManager.mouseEventsEnabled) {\r\n                        this.handleFocus();\r\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\r\n                    }\r\n                }\r\n            }\r\n            else if (type == 1 || type == 3) {\r\n                if (touch.began) {\r\n                    touch.end();\r\n\r\n                    if (InputManager.mouseEventsEnabled) {\r\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\r\n\r\n                        if (touch.moved) {\r\n                            for (let t of touch.downTargets)\r\n                                t.event(Event.MOUSE_DRAG_END, touch.event);\r\n                        }\r\n\r\n                        if (type != 3) {\r\n                            let clickTarget = touch.clickTest();\r\n                            if (clickTarget != null) {\r\n                                touch.event.isDblClick = touch.clickCount == 2;\r\n\r\n                                clickTarget.bubbleEvent(Event.CLICK, touch.event);\r\n\r\n                                if (touch.clickCount == 2)\r\n                                    clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\r\n\r\n                                touch.event.isDblClick = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    touch.target = null;\r\n                    this.handleRollOver(touch);\r\n                }\r\n\r\n                touch.reset();\r\n                this._touches.splice(this._touches.indexOf(touch), 1);\r\n                this._touchPool.push(touch);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getTouch(touchId: number, shouldCreate?: boolean): TouchInfo {\r\n        let touch = this._touches.find(e => e.touchId == touchId);\r\n        if (touch || !shouldCreate)\r\n            return touch;\r\n\r\n        touch = this._touchPool.length > 0 ? this._touchPool.pop() : new TouchInfo(this._touches);\r\n        touch.touchId = touchId;\r\n        this._touches.push(touch);\r\n\r\n        return touch;\r\n    }\r\n\r\n    private handleFocus() {\r\n        if (InputManager.isTextInputting\r\n            && this._stage.focus && (<any>this._stage.focus)[\"focus\"]\r\n            && !this._stage.focus.contains(this._touchTarget)) {\r\n            // 从UI Input组件中取得Input引用\r\n            // _tf 是TextInput的属性\r\n            let pre_input: any = (<any>this._stage.focus)['_tf'] || this._stage.focus;\r\n            let new_input = (<any>this._touchTarget)['_tf'] || this._touchTarget;\r\n\r\n            // 新的焦点是Input的情况下，不需要blur；\r\n            // 不过如果是Input和TextArea之间的切换，还是需要重新弹出输入法；\r\n            if (new_input.nativeInput && new_input.multiline == pre_input.multiline)\r\n                pre_input['_focusOut']();\r\n            else\r\n                pre_input.focus = false;\r\n        }\r\n    }\r\n\r\n    handleKeys(ev: KeyboardEvent): void {\r\n        let type = ev.type;\r\n        let keyCode = ev.keyCode;\r\n        //判断同时按下的键\r\n        if (type === \"keydown\") {\r\n            if (keyCode != 0)\r\n                this._pressKeys.add(keyCode);\r\n            this._pressKeys.add(ev.key);\r\n        }\r\n        else if (type === \"keyup\") {\r\n            if (keyCode != 0)\r\n                this._pressKeys.delete(keyCode);\r\n            this._pressKeys.delete(ev.key);\r\n        }\r\n\r\n        this._keyEvent.nativeEvent = ev;\r\n\r\n        if (InputManager.keyEventsEnabled) {\r\n            let target = (this._stage.focus && (this._stage.focus.event != null) && this._stage.focus.displayedInStage) ? this._stage.focus : this._stage;\r\n            let ct = target;\r\n            while (ct) {\r\n                ct.event(type, this._keyEvent.setTo(type, ct, target));\r\n                ct = ct.parent;\r\n            }\r\n        }\r\n\r\n        this._keyEvent.nativeEvent = null;\r\n    }\r\n\r\n    getNodeUnderPoint(x: number, y: number): Node {\r\n        let target: Node = this.getSpriteUnderPoint(this._stage, x, y);\r\n        if (!target)\r\n            target = this.getSprite3DUnderPoint(x, y);\r\n        return target || this._stage;\r\n    }\r\n\r\n    /**\r\n     * 获取指定坐标下的sprite。x/y值是sp的本地坐标\r\n     * @param sp\r\n     * @param x\r\n     * @param y\r\n     */\r\n    getSpriteUnderPoint(sp: Sprite, x: number, y: number): Sprite {\r\n        //如果有裁剪，则先判断是否在裁剪范围内\r\n        let scrollRect = sp._style.scrollRect;\r\n        if (scrollRect && !sp._getBit(NodeFlags.DISABLE_INNER_CLIPPING)) {\r\n            _tempRect.setTo(scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height);\r\n            if (!_tempRect.contains(x, y))\r\n                return null;\r\n        }\r\n\r\n        let editing = sp._getBit(NodeFlags.EDITING_NODE);\r\n\r\n        if (!editing && sp.hitTestPrior && !sp.mouseThrough && sp != this._stage && !this.hitTest(sp, x, y))\r\n            return null;\r\n\r\n        for (let i = sp._children.length - 1; i > -1; i--) {\r\n            let child = <Sprite>sp._children[i];\r\n            let childEditing = editing || child._getBit(NodeFlags.EDITING_NODE);\r\n            //只有接受交互事件的，才进行处理\r\n            if (!child._destroyed\r\n                && (childEditing ? ((!child.hasHideFlag(HideFlags.HideInHierarchy) || child.mouseThrough) && !child._getBit(NodeFlags.HIDE_BY_EDITOR)) : child._mouseState > 1)\r\n                && (child._visible || child._getBit(NodeFlags.DISABLE_VISIBILITY))) {\r\n                _tempPoint.setTo(x, y);\r\n                child.fromParentPoint(_tempPoint);\r\n                let ret = this.getSpriteUnderPoint(child, _tempPoint.x, _tempPoint.y);\r\n                if (ret)\r\n                    return ret;\r\n            }\r\n        }\r\n\r\n        if (editing) {\r\n            if (!sp._getBit(NodeFlags.LOCK_BY_EDITOR)\r\n                && !sp.hasHideFlag(HideFlags.HideInHierarchy)\r\n                && this.hitTest(sp, x, y, editing))\r\n                return sp;\r\n        }\r\n        else if (sp != this._stage) {\r\n            if (sp.hitTestPrior && !sp.mouseThrough || this.hitTest(sp, x, y))\r\n                return sp;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSprite3DUnderPoint(x: number, y: number): Node {\r\n        return null;\r\n    }\r\n\r\n    hitTest(sp: Sprite, x: number, y: number, editing?: boolean): boolean {\r\n        let isHit: boolean = false;\r\n        if (sp.scrollRect) {\r\n            x -= sp._style.scrollRect.x;\r\n            y -= sp._style.scrollRect.y;\r\n        }\r\n        let hitArea = sp._style.hitArea;\r\n        let mouseThrough = sp.mouseThrough;\r\n        if (editing) {\r\n            hitArea = null;\r\n            mouseThrough = false;\r\n        }\r\n\r\n        if (hitArea) {\r\n            return hitArea.contains(x, y, sp);\r\n        }\r\n\r\n        if (sp.width > 0 && sp.height > 0 || mouseThrough || hitArea) {\r\n            //判断是否在矩形区域内\r\n            if (!mouseThrough)\r\n                isHit = (hitArea ? hitArea : _tempRect.setTo(0, 0, sp.width, sp.height)).contains(x, y);\r\n            else //如果可穿透，则根据子对象实际大小进行碰撞\r\n                isHit = sp.getGraphicBounds().contains(x, y);\r\n        }\r\n        return isHit;\r\n    }\r\n\r\n    private handleRollOver(touch: TouchInfo) {\r\n        if (!InputManager.mouseEventsEnabled) {\r\n            touch.lastRollOver = touch.target;\r\n            return;\r\n        }\r\n\r\n        _rollOverChain.length = 0;\r\n        _rollOutChain.length = 0;\r\n\r\n        let ele = touch.lastRollOver;\r\n        while (ele) {\r\n            _rollOutChain.push(ele);\r\n            ele = ele.parent;\r\n        }\r\n        touch.lastRollOver = touch.target;\r\n\r\n        ele = touch.target;\r\n        while (ele) {\r\n            let i = _rollOutChain.indexOf(ele);\r\n            if (i != -1) {\r\n                _rollOutChain.splice(i, _rollOutChain.length - i);\r\n                break;\r\n            }\r\n\r\n            _rollOverChain.push(ele);\r\n\r\n            ele = ele.parent;\r\n        }\r\n\r\n        let cnt = _rollOutChain.length;\r\n        if (cnt > 0) {\r\n            for (let i = 0; i < cnt; i++) {\r\n                ele = _rollOutChain[i];\r\n                if (!ele._destroyed)\r\n                    ele.event(Event.MOUSE_OUT, touch.event.setTo(Event.MOUSE_OUT, ele, ele));\r\n            }\r\n            _rollOutChain.length = 0;\r\n        }\r\n\r\n        cnt = _rollOverChain.length;\r\n        if (cnt > 0) {\r\n            for (let i = 0; i < cnt; i++) {\r\n                ele = _rollOverChain[i];\r\n                if (ele.activeInHierarchy)\r\n                    ele.event(Event.MOUSE_OVER, touch.event.setTo(Event.MOUSE_OVER, ele, ele));\r\n            }\r\n            _rollOverChain.length = 0;\r\n        };\r\n    }\r\n}\r\n\r\nconst clickTrack: Record<number, { pos: Point, time: number, button: number }> = {};\r\n\r\nclass TouchInfo implements ITouchInfo {\r\n    readonly event: Event;\r\n    readonly pos: Point;\r\n    touchId: number;\r\n    clickCount: number;\r\n    began: boolean;\r\n    target: Node;\r\n    lastRollOver: Node;\r\n    clickCancelled: boolean;\r\n    moved: boolean;\r\n    readonly downTargets: Node[];\r\n\r\n    private downPos: Point;\r\n\r\n    constructor(touches: Array<TouchInfo>) {\r\n        this.downPos = new Point();\r\n        this.downTargets = [];\r\n        this.event = new Event();\r\n        this.event._touches = touches;\r\n        this.pos = this.event.touchPos;\r\n        this.reset();\r\n    }\r\n\r\n    begin() {\r\n        this.began = true;\r\n        this.clickCancelled = false;\r\n        this.moved = false;\r\n        this.downPos.copy(this.pos);\r\n\r\n        this.downTargets.length = 0;\r\n        if (this.target) {\r\n            let ele = this.target;\r\n            while (ele) {\r\n                this.downTargets.push(ele);\r\n                ele = ele.parent;\r\n            }\r\n        }\r\n    }\r\n\r\n    move() {\r\n        this.moved = true;\r\n\r\n        if (Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\r\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold)\r\n            this.clickCancelled = true;\r\n    }\r\n\r\n    end() {\r\n        this.began = false;\r\n        let now = performance.now();\r\n\r\n        let lastClick = clickTrack[this.touchId];\r\n        if (!lastClick) {\r\n            lastClick = { pos: new Point(), time: 0, button: 0 };\r\n            clickTrack[this.touchId] = lastClick;\r\n        }\r\n\r\n        if (this.downTargets.length == 0\r\n            || this.clickCancelled\r\n            || Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\r\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold) {\r\n            this.clickCancelled = true;\r\n            lastClick.time = 0;\r\n            this.clickCount = 1;\r\n        }\r\n        else {\r\n            if (now - lastClick.time < 350\r\n                && Math.abs(this.pos.x - lastClick.pos.x) < InputManager.clickTestThreshold\r\n                && Math.abs(this.pos.y - lastClick.pos.y) < InputManager.clickTestThreshold\r\n                && lastClick.button == this.event.button) {\r\n                this.clickCount = 2;\r\n            }\r\n            else\r\n                this.clickCount = 1;\r\n            lastClick.time = now;\r\n            lastClick.pos.copy(this.pos);\r\n            lastClick.button = this.event.button;\r\n        }\r\n    }\r\n\r\n    clickTest(): Node {\r\n        if (this.clickCancelled) {\r\n            this.downTargets.length = 0;\r\n            return null;\r\n        }\r\n\r\n        let obj = this.downTargets[0];\r\n        if (obj.activeInHierarchy) {\r\n            this.downTargets.length = 0;\r\n            return obj;\r\n        }\r\n\r\n        obj = this.target;\r\n        while (obj) {\r\n            let i = this.downTargets.indexOf(obj);\r\n            if (i != -1 && obj.activeInHierarchy)\r\n                break;\r\n\r\n            obj = obj.parent;\r\n        }\r\n\r\n        this.downTargets.length = 0;\r\n\r\n        return obj;\r\n    }\r\n\r\n    reset() {\r\n        this.pos.setTo(0, 0);\r\n        this.touchId = 0;\r\n        this.clickCount = 0;\r\n        this.began = false;\r\n        this.moved = false;\r\n        this.target = null;\r\n        this.downTargets.length = 0;\r\n        this.lastRollOver = null;\r\n        this.clickCancelled = false;\r\n    }\r\n}\r\n","import { ILaya } from \"./../../ILaya\";\r\nimport { Config } from \"./../../Config\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { VertexElementFormat } from \"./VertexElementFormat\";\r\n\r\n/**\r\n * <code>Render</code> 是渲染管理类。它是一个单例，可以使用 Laya.render 访问。\r\n */\r\nexport class Render {\r\n    /** @internal */\r\n    static _context: Context;\r\n    /** @internal 主画布。canvas和webgl渲染都用这个画布*/\r\n    static _mainCanvas: HTMLCanvas;\r\n    /** 表示是否是 3D 模式。*/\r\n    static is3DMode: boolean;\r\n    /**自定义帧循环 */\r\n    static _customRequestAnimationFrame: any;\r\n    /**帧循环函数 */\r\n    static _loopFunction: any;\r\n\r\n    /** 当前的帧数 */\r\n    private static lastFrm = 0;\r\n    /** 第一次运行标记 */\r\n    private _first = true;\r\n    /** 刚启动的时间。由于微信的rAF不标准，传入的stamp参数不对，因此自己计算一个从启动开始的相对时间 */\r\n    private _startTm = 0;\r\n\r\n    /** @internal */\r\n    private static ifps = 1000 / 60;\r\n\r\n    static _Render: Render;\r\n\r\n    static customRequestAnimationFrame(value: any, loopFun: any) {\r\n        Render._customRequestAnimationFrame = value;\r\n        Render._loopFunction = loopFun;\r\n    }\r\n\r\n    private static _customEngine: IRenderEngine;\r\n    static set customRenderEngine(engine: IRenderEngine) {\r\n        Render._customEngine = engine;\r\n    }\r\n    static get customRenderEngine() {\r\n        return Render._customEngine;\r\n    }\r\n\r\n\r\n    /**\r\n     * 初始化引擎。\r\n     * @param\twidth 游戏窗口宽度。\r\n     * @param\theight\t游戏窗口高度。\r\n     */\r\n    constructor(width: number, height: number, mainCanv: HTMLCanvas) {\r\n        Render._Render = this;\r\n        Render._mainCanvas = mainCanv;\r\n        let source: HTMLCanvasElement = Render._mainCanvas.source as HTMLCanvasElement;\r\n        //创建主画布。改到Browser中了，因为为了runtime，主画布必须是第一个\r\n        source.id = \"layaCanvas\";\r\n        source.width = width;\r\n        source.height = height;\r\n        if (LayaEnv.isConch) {\r\n            document.body.appendChild(source);\r\n        }\r\n\r\n        this.initRender(Render._mainCanvas, width, height);\r\n        window.requestAnimationFrame(loop);\r\n        let me = this;\r\n        let lastFrmTm = performance.now();\r\n        let fps = Config.FPS;\r\n        let ifps = Render.ifps = 1000 / fps; //如果VR的话，需要改这个\r\n        function loop(stamp: number) {\r\n            //let perf = PerfHUD.inst;\r\n            let sttm = performance.now();\r\n            //perf && perf.updateValue(0, sttm-lastFrmTm);\r\n            lastFrmTm = sttm;\r\n            if (me._first) {\r\n                // 把starttm转成帧对齐\r\n                me._startTm = Math.floor(stamp / ifps) * ifps;\r\n                me._first = false;\r\n            }\r\n            // 与第一帧开始时间的delta\r\n            stamp -= me._startTm;\r\n            // 计算当前帧数\r\n            let frm = Math.floor(stamp / ifps);    // 不能|0 在微信下会变成负的\r\n            // 是否已经跨帧了\r\n            let dfrm = frm - Render.lastFrm;\r\n            if (dfrm > 0 || LayaEnv.isConch || !Config.fixedFrames) {\r\n                //不限制\r\n                Render.lastFrm = frm;\r\n                ILaya.stage._loop();\r\n            }\r\n            //perf && perf.updateValue(1, performance.now()-sttm);\r\n\r\n            if (!!Render._customRequestAnimationFrame && !!Render._loopFunction) {\r\n                Render._customRequestAnimationFrame(Render._loopFunction);\r\n            }\r\n            else\r\n                window.requestAnimationFrame(loop);\r\n        }\r\n        ILaya.stage.on(\"visibilitychange\", this, this._onVisibilitychange);\r\n    }\r\n\r\n    /**@private */\r\n    private _timeId: number = 0;\r\n\r\n    /**@private */\r\n    private _onVisibilitychange(): void {\r\n        if (!ILaya.stage.isVisibility) {\r\n            this._timeId = window.setInterval(this._enterFrame, 1000);\r\n        } else if (this._timeId != 0) {\r\n            window.clearInterval(this._timeId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取帧对齐的时间。\r\n     * 用这个做动画的时间参数会更平滑。\r\n     * 从render构造开始算起。\r\n     * @returns \r\n     */\r\n    static vsyncTime() {\r\n        return Render.lastFrm * Render.ifps;\r\n    }\r\n\r\n    initRender(canvas: HTMLCanvas, w: number, h: number): boolean {\r\n\r\n        canvas.size(w, h);\t//在ctx之后调用。\r\n        ShaderDefines2D.__init__();\r\n        VertexElementFormat.__init__();\r\n        Context.__init__();\r\n        SubmitBase.__init__();\r\n\r\n        var ctx: Context = new Context();\r\n        Context._rendercontex = ctx;\r\n        ctx.isMain = true;\r\n        Render._context = ctx;\r\n        canvas._setContext(ctx);\r\n\r\n\r\n        Shader2D.__init__();\r\n        BlendMode._init_();\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**@private */\r\n    private _enterFrame(e: any = null): void {\r\n        ILaya.stage._loop();\r\n    }\r\n\r\n    /** 目前使用的渲染器。*/\r\n    static get context(): Context {\r\n        return Render._context;\r\n    }\r\n\r\n    /** 渲染使用的原生画布引用。 */\r\n    static get canvas(): any {\r\n        return Render._mainCanvas.source;\r\n    }\r\n}\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\n\r\nexport const TypedArrayClasses: Record<string, any> = {\r\n    \"Int8Array\": Int8Array,\r\n    \"Uint8Array\": Uint8Array,\r\n    \"Int16Array\": Int16Array,\r\n    \"Uint16Array\": Uint16Array,\r\n    \"Int32Array\": Int32Array,\r\n    \"Uint32Array\": Uint32Array,\r\n    \"Float32Array\": Float32Array,\r\n    \"Float64Array\": Float64Array\r\n};\r\n\r\nexport interface IDecodeObjOptions {\r\n    outErrors?: Array<string>;\r\n    getNodeByRef?: (id: string | string[]) => Node;\r\n    getNodeData?: (node: Node) => any;\r\n}\r\n\r\nvar _errors: Array<string>;\r\nvar _getNodeByRef: (id: string | string[]) => Node;\r\nvar _getNodeData: (node: Node) => any;\r\n\r\nexport class SerializeUtil {\r\n    public static isDeserializing = false;\r\n\r\n    public static decodeObj(data: any, obj?: any, options?: IDecodeObjOptions) {\r\n        if (options) {\r\n            _errors = options.outErrors;\r\n            _getNodeByRef = options.getNodeByRef;\r\n            _getNodeData = options.getNodeData;\r\n        }\r\n        else {\r\n            _errors = null;\r\n            _getNodeByRef = null;\r\n            _getNodeData = null;\r\n        }\r\n\r\n        SerializeUtil.isDeserializing = true;\r\n        try {\r\n            return SerializeUtil._decodeObj(data, obj);\r\n        } finally {\r\n            SerializeUtil.isDeserializing = false;\r\n        }\r\n    }\r\n\r\n    private static _decodeObj(data: any, obj?: any): any {\r\n        if (data == null)\r\n            return null;\r\n        else if (Array.isArray(data)) {\r\n            let arr: any[] = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let v = data[i];\r\n                if (v != null) {\r\n                    try {\r\n                        arr[i] = SerializeUtil._decodeObj(v);\r\n                    }\r\n                    catch (error: any) {\r\n                        if (_errors)\r\n                            _errors.push(error);\r\n                        arr[i] = null;\r\n                    }\r\n                }\r\n                else\r\n                    arr[i] = null;\r\n            }\r\n            return arr;\r\n        }\r\n        else if (typeof (data) === \"object\") {\r\n            if (data._$uuid != null) {\r\n                let url = URL.getResURLByUUID(data._$uuid);\r\n                return ILaya.loader.getRes(url, SerializeUtil.getLoadTypeByEngineType(data._$type));\r\n            }\r\n\r\n            if (data._$ref != null) {\r\n                let node = _getNodeByRef?.(data._$ref);\r\n                if (node && data._$type) {\r\n                    let cls: any = ClassUtils.getClass(data._$type);\r\n                    if (cls)\r\n                        return node.getComponent(cls);\r\n                    else\r\n                        return null;\r\n                }\r\n                else\r\n                    return node;\r\n            }\r\n\r\n            let type = data._$type;\r\n\r\n            if (type === \"any\") {\r\n                if (data._$type)\r\n                    return data.value;\r\n                else\r\n                    return data;\r\n            }\r\n\r\n            let typedArray = TypedArrayClasses[type];\r\n            if (typedArray != null) {\r\n                if (data._$type)\r\n                    return new typedArray(data.value);\r\n                else\r\n                    return new typedArray(data);\r\n            }\r\n\r\n            if (!obj) {\r\n                let cls: any = ClassUtils.getClass(type);\r\n                if (!cls) {\r\n                    //this._errors.push(new Error(`missing type '${type}'`));\r\n                    return null;\r\n                }\r\n\r\n                obj = new cls();\r\n            }\r\n\r\n            for (let key in data) {\r\n                if (key.startsWith(\"_$\"))\r\n                    continue;\r\n\r\n                let v = data[key];\r\n                if (v == null || typeof (v) !== \"object\" || Array.isArray(v)\r\n                    || v._$type || v._$uuid || v._$ref) {\r\n                    try {\r\n                        let v2 = SerializeUtil._decodeObj(v);\r\n                        obj[key] = v2;\r\n\r\n                        if (v2 != null && v != null && v._$tmpl)\r\n                            obj[v._$tmpl] = _getNodeData(v2);\r\n                    }\r\n                    catch (error: any) {\r\n                        if (_errors)\r\n                            _errors.push(error);\r\n                    }\r\n                }\r\n                else {\r\n                    let childObj = obj[key];\r\n                    if (childObj) {\r\n                        try {\r\n                            SerializeUtil._decodeObj(v, childObj);\r\n                        }\r\n                        catch (error: any) {\r\n                            if (_errors)\r\n                                _errors.push(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (obj.onAfterDeserialize)\r\n                obj.onAfterDeserialize();\r\n\r\n            return obj;\r\n        }\r\n        else\r\n            return data;\r\n    }\r\n\r\n    static getLoadTypeByEngineType(type: string) {\r\n        switch (type) {\r\n            case \"Texture2D\":\r\n            case \"RenderTexture\":\r\n                return Loader.TEXTURE2D;\r\n            case \"TextureCube\":\r\n                return Loader.TEXTURECUBE;\r\n            case \"Prefab\":\r\n                return Loader.HIERARCHY;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n\r\n    static bakeOverrideData(overrideData: any) {\r\n        let dataMap: Record<string, Array<any>> = null;\r\n        for (let n = overrideData.length, i = n - 1; i >= 0; i--) {\r\n            let arr = overrideData[i];\r\n            if (arr && arr.length > 0) {\r\n                for (let d of arr) {\r\n                    let od = d._$override || d._$parent;\r\n                    let k: string;\r\n                    if (Array.isArray(od))\r\n                        k = od[n - i - 1];\r\n                    else if (i == n - 1)\r\n                        k = od;\r\n\r\n                    if (k != null) {\r\n                        if (!dataMap) dataMap = {};\r\n                        let arr2 = dataMap[k];\r\n                        if (!arr2)\r\n                            dataMap[k] = arr2 = [];\r\n                        arr2.push(n - i, d);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return dataMap;\r\n    }\r\n\r\n    static applyOverrideData(nodeData: any, overrideDataMap: Record<string, Array<any>>) {\r\n        function test(obj: any) {\r\n            if (overrideDataMap[obj._$id])\r\n                return true;\r\n\r\n            let children: Array<any> = obj._$child;\r\n            if (children && children.find(child => test(child)))\r\n                return true;\r\n\r\n            return false;\r\n        }\r\n\r\n        function cloneTree(obj: any) {\r\n            let ret = Object.assign({}, obj);\r\n            let children: Array<any> = ret._$child;\r\n            if (children)\r\n                ret._$child = children.map(c => cloneTree(c));\r\n            let comps: Array<any> = ret._$comp;\r\n            if (comps)\r\n                ret._$comp = comps.map(c => Object.assign({}, c));\r\n            return ret;\r\n        }\r\n\r\n        function visit(data: any) {\r\n            let children: Array<any> = data._$child;\r\n            if (children) {\r\n                for (let child of children) {\r\n                    if (child._$id)\r\n                        visit(child);\r\n                }\r\n            }\r\n\r\n            let od = overrideDataMap[data._$id];\r\n            if (od) {\r\n                for (let i = 0; i < od.length; i += 2) {\r\n                    let j = od[i];\r\n                    let e = od[i + 1];\r\n                    let idPath: string | string[];\r\n                    if (idPath = e._$override) {\r\n                        let toWrite: any;\r\n                        if (Array.isArray(idPath)) {\r\n                            if (j == idPath.length - 1) {\r\n                                let k = idPath[j];\r\n                                if (!children)\r\n                                    data._$child = children = [];\r\n                                else\r\n                                    toWrite = children.find(c => c._$override == k);\r\n                                if (!toWrite) {\r\n                                    toWrite = { _$override: k };\r\n                                    children.push(toWrite);\r\n                                }\r\n                            }\r\n                            else if (j < idPath.length - 1) {\r\n                                let k = idPath.slice(j);\r\n                                if (!children)\r\n                                    data._$child = children = [];\r\n                                else {\r\n                                    toWrite = children.find(c => {\r\n                                        let o = c._$override;\r\n                                        return Array.isArray(o) && arrayEquals(o, k);\r\n                                    });\r\n                                }\r\n                                if (!toWrite) {\r\n                                    toWrite = { _$override: k };\r\n                                    children.push(toWrite);\r\n                                }\r\n                            }\r\n                            else\r\n                                toWrite = data;\r\n                        }\r\n                        else\r\n                            toWrite = data;\r\n\r\n                        mergeData(toWrite, e);\r\n                        if (e._$comp) {\r\n                            let comps: Array<any> = toWrite._$comp;\r\n                            if (!comps)\r\n                                toWrite._$comp = comps = [];\r\n                            for (let comp of e._$comp) {\r\n                                let compType = comp._$type || comp._$override;\r\n                                let c = comps.find(c => c._$override == compType || c._$type == compType);\r\n                                if (!c) {\r\n                                    c = {};\r\n                                    if (comp._$type)\r\n                                        c._$type = compType;\r\n                                    else\r\n                                        c._$override = compType;\r\n                                    comps.push(c);\r\n                                }\r\n                                mergeData(c, comp);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (idPath = e._$parent) { //增加的节点\r\n                        if (!children)\r\n                            data._$child = children = [];\r\n                        let k: string | string[];\r\n                        if (j < idPath.length) { //挂接的节点在嵌套预制体内部\r\n                            if (j == idPath.length - 1)\r\n                                k = idPath[j];\r\n                            else\r\n                                k = idPath.slice(j);\r\n                            let toWrite = Object.assign({}, e);\r\n                            //todo: toWrite._$id有极小几率重复？\r\n                            toWrite._$parent = k;\r\n                            children.push(toWrite);\r\n                        }\r\n                        else {\r\n                            let toWrite = Object.assign({}, e);\r\n                            //todo: toWrite._$id有极小几率重复？\r\n                            delete toWrite._$parent;\r\n                            if (data._$prefab) {\r\n                                children.push(toWrite);\r\n                            }\r\n                            else {\r\n                                delete toWrite._$index;\r\n                                if (e._$index < children.length)\r\n                                    children.splice(e._$index, 0, toWrite);\r\n                                else\r\n                                    children.push(toWrite);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (test(nodeData)) {\r\n            nodeData = cloneTree(nodeData);\r\n            visit(nodeData);\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n}\r\n\r\nfunction mergeData(target: any, overrided: any) {\r\n    for (let k in overrided) {\r\n        if (k.startsWith(\"_$\"))\r\n            continue;\r\n\r\n        let v = overrided[k];\r\n        if (v != null && typeof (v) === \"object\" && !Array.isArray(v) && !(v._$type || v._$uuid || v._$ref)) {\r\n            let v2 = target[k];\r\n            if (v2 != null && typeof (v2) === \"object\") {\r\n                target[k] = v2 = Object.assign({}, v2);\r\n                mergeData(v2, v);\r\n            }\r\n            else\r\n                target[k] = v;\r\n        }\r\n        else\r\n            target[k] = v;\r\n    }\r\n}\r\n\r\nfunction arrayEquals(a: ReadonlyArray<any>, b: ReadonlyArray<any>): boolean {\r\n    if (a.length === b.length) {\r\n        for (var i = 0; i < a.length; i++) {\r\n            if (a[i] !== b[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { Text } from \"./Text\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { InputManager } from \"../events/InputManager\";\r\nimport { Render } from \"../renders/Render\";\r\nimport { Config } from \"../../Config\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\n\r\n/**\r\n * 用户输入一个或多个文本字符时后调度。\r\n * @eventType Event.INPUT\r\n * */\r\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 文本发生变化后调度。\r\n * @eventType Event.CHANGE\r\n * */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 用户在输入框内敲回车键后，将会调度 <code>enter</code> 事件。\r\n * @eventType Event.ENTER\r\n * */\r\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 显示对象获得焦点后调度。\r\n * @eventType Event.FOCUS\r\n * */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 显示对象失去焦点后调度。\r\n * @eventType Event.BLUR\r\n * */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p><code>Input</code> 类用于创建显示对象以显示和输入文本。</p>\r\n * <p>Input 类封装了原生的文本输入框，由于不同浏览器的差异，会导致此对象的默认文本的位置与用户点击输入时的文本的位置有少许的偏差。</p>\r\n */\r\nexport class Input extends Text {\r\n    /** 常规文本域。*/\r\n    static TYPE_TEXT: string = \"text\";\r\n    /** password 类型用于密码域输入。*/\r\n    static TYPE_PASSWORD: string = \"password\";\r\n    /** email 类型用于应该包含 e-mail 地址的输入域。*/\r\n    static TYPE_EMAIL: string = \"email\";\r\n    /** url 类型用于应该包含 URL 地址的输入域。*/\r\n    static TYPE_URL: string = \"url\";\r\n    /** number 类型用于应该包含数值的输入域。*/\r\n    static TYPE_NUMBER: string = \"number\";\r\n    /**\r\n     * <p>range 类型用于应该包含一定范围内数字值的输入域。</p>\r\n     * <p>range 类型显示为滑动条。</p>\r\n     * <p>您还能够设定对所接受的数字的限定。</p>\r\n     */\r\n    static TYPE_RANGE: string = \"range\";\r\n    /**  选取日、月、年。*/\r\n    static TYPE_DATE: string = \"date\";\r\n    /** month - 选取月、年。*/\r\n    static TYPE_MONTH: string = \"month\";\r\n    /** week - 选取周和年。*/\r\n    static TYPE_WEEK: string = \"week\";\r\n    /** time - 选取时间（小时和分钟）。*/\r\n    static TYPE_TIME: string = \"time\";\r\n    /** datetime - 选取时间、日、月、年（UTC 时间）。*/\r\n    static TYPE_DATE_TIME: string = \"datetime\";\r\n    /** datetime-local - 选取时间、日、月、年（本地时间）。*/\r\n    static TYPE_DATE_TIME_LOCAL: string = \"datetime-local\";\r\n    /**\r\n     * <p>search 类型用于搜索域，比如站点搜索或 Google 搜索。</p>\r\n     * <p>search 域显示为常规的文本域。</p>\r\n     */\r\n    static TYPE_SEARCH: string = \"search\";\r\n\r\n    /**@private */\r\n    protected static input: HTMLInputElement;\r\n    /**@private */\r\n    protected static area: HTMLTextAreaElement;\r\n    /**@private */\r\n    protected static inputElement: HTMLInputElement | HTMLTextAreaElement;\r\n    /**@private */\r\n    protected static inputContainer: HTMLDivElement;\r\n    /**@private */\r\n    protected static confirmButton: any;\r\n    /**@private */\r\n    protected static promptStyleDOM: any;\r\n\r\n    protected _focus: boolean;\r\n    protected _multiline: boolean = false;\r\n    protected _editable: boolean = true;\r\n    protected _restrict: string;\r\n    protected _restrictPattern: any;\r\n    protected _maxChars: number = 0;\r\n\r\n    private _type: string = \"text\";\r\n\r\n    /**@private */\r\n    static IOS_IFRAME: boolean = false;\r\n\r\n    static isAppUseNewInput: boolean = false;\r\n\r\n    /**创建一个新的 <code>Input</code> 类实例。*/\r\n    constructor() {\r\n        super();\r\n        Input.IOS_IFRAME = (ILaya.Browser.onIOS && ILaya.Browser.window.top != ILaya.Browser.window.self);\r\n        this._width = 100;\r\n        this._height = 20;\r\n\r\n        this.multiline = false;\r\n        this.overflow = Text.SCROLL;\r\n        this._promptColor = \"#A9A9A9\";\r\n\r\n        this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\r\n        this.on(Event.UNDISPLAY, this, this._onUnDisplay);\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): void {\r\n        Input._createInputElement();\r\n\r\n        // 移动端通过画布的touchend调用focus\r\n        if (ILaya.Browser.onMobile) {\r\n            var isTrue: boolean = false;\r\n            if (ILaya.Browser.onMiniGame || ILaya.Browser.onBDMiniGame || ILaya.Browser.onQGMiniGame || ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onQQMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onHWMiniGame || ILaya.Browser.onTBMiniGame) {\r\n                isTrue = true;\r\n            }\r\n            Render.canvas.addEventListener(Input.IOS_IFRAME ? (isTrue ? \"touchend\" : \"click\") : \"touchend\", Input._popupInputMethod);\r\n        }\r\n    }\r\n\r\n    // 移动平台在单击事件触发后弹出输入法\r\n    private static _popupInputMethod(e: any): void {\r\n        //e.preventDefault();\r\n        if (!InputManager.isTextInputting) return;\r\n\r\n        var input: any = Input.inputElement;\r\n\r\n        // 弹出输入法。\r\n        input.focus();\r\n    }\r\n\r\n    private static _createInputElement(): void {\r\n        Input._initInput(Input.area = ILaya.Browser.createElement(\"textarea\"));\r\n        Input._initInput(Input.input = ILaya.Browser.createElement(\"input\"));\r\n\r\n        Input.inputContainer = ILaya.Browser.createElement(\"div\");\r\n        Input.inputContainer.style.position = \"absolute\";\r\n        Input.inputContainer.style.zIndex = '1E5';\r\n        ILaya.Browser.container.appendChild(Input.inputContainer);\r\n        (Input.inputContainer as any).setPos = function (x: number, y: number): void {\r\n            Input.inputContainer.style.left = x + 'px';\r\n            Input.inputContainer.style.top = y + 'px';\r\n        };\r\n    }\r\n\r\n    private static _initInput(input: HTMLInputElement): void {\r\n        var style = input.style;\r\n        style.cssText = \"position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;\";\r\n        style.resize = 'none';\r\n        style.backgroundColor = 'transparent';\r\n        style.border = 'none';\r\n        style.outline = 'none';\r\n        style.zIndex = '1';\r\n\r\n        input.addEventListener('input', Input._processInputting);\r\n\r\n        input.addEventListener('mousemove', Input._stopEvent, { passive: false });\r\n        input.addEventListener('mousedown', Input._stopEvent, { passive: false });\r\n        input.addEventListener('touchmove', Input._stopEvent, { passive: false });\r\n\r\n        (input as any).setFontFace = function (fontFace: string): void { input.style.fontFamily = fontFace; };\r\n        if (!(LayaEnv.isConch && !Input.isAppUseNewInput)) {\r\n            (input as any).setColor = function (color: string): void { input.style.color = color; };\r\n            (input as any).setFontSize = function (fontSize: number): void { input.style.fontSize = fontSize + 'px'; };\r\n        }\r\n    }\r\n\r\n    private static _processInputting(e: any): void {\r\n        var input: Input = (Input.inputElement as any).target;\r\n        if (!input) return;\r\n\r\n        var value = Input.inputElement.value;\r\n\r\n        // 对输入字符进行限制\r\n        if (input._restrictPattern) {\r\n            // 部分输入法兼容\r\n            value = value.replace(/\\u2006|\\x27/g, \"\");\r\n\r\n            if (input._restrictPattern.test(value)) {\r\n                value = value.replace(input._restrictPattern, \"\");\r\n                Input.inputElement.value = value;\r\n            }\r\n        }\r\n\r\n        if (value == null) value = \"\";\r\n        input._text = value;\r\n        input.event(Event.INPUT);\r\n    }\r\n\r\n    private static _stopEvent(e: any): void {\r\n        if (e.type == 'touchmove')\r\n            e.preventDefault();\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * 设置光标位置和选取字符。\r\n     * @param\tstartIndex\t光标起始位置。\r\n     * @param\tendIndex\t光标结束位置。\r\n     */\r\n    setSelection(startIndex: number, endIndex: number): void {\r\n        this.focus = true;\r\n        Input.inputElement.selectionStart = startIndex;\r\n        Input.inputElement.selectionEnd = endIndex;\r\n    }\r\n\r\n    /**表示是否是多行输入框。*/\r\n    get multiline(): boolean {\r\n        return this._multiline;\r\n    }\r\n\r\n    set multiline(value: boolean) {\r\n        this._multiline = value;\r\n        if (!SerializeUtil.isDeserializing)\r\n            this.valign = value ? \"top\" : \"middle\";\r\n    }\r\n\r\n    /**\r\n     * 获取对输入框的引用实例。\r\n     */\r\n    get nativeInput(): HTMLInputElement | HTMLTextAreaElement {\r\n        return this._multiline ? Input.area : Input.input;\r\n    }\r\n\r\n    private _onUnDisplay(e: Event = null): void {\r\n        this.focus = false;\r\n    }\r\n\r\n    private _onMouseDown(e: Event): void {\r\n        this.focus = true;\r\n    }\r\n    /**\r\n     * 在输入期间，如果 Input 实例的位置改变，调用_syncInputTransform同步输入框的位置。\r\n     */\r\n    private _syncInputTransform(): void {\r\n        var inputElement = this.nativeInput;\r\n        var transform = SpriteUtils.getTransformRelativeToWindow(this, this._padding[3], this._padding[0]);\r\n        var inputWid = this._width - this._padding[1] - this._padding[3];\r\n        var inputHei = this._height - this._padding[0] - this._padding[2];\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (inputElement as any).setScale(transform.scaleX, transform.scaleY);\r\n            (inputElement as any).setSize(inputWid, inputHei);\r\n            (inputElement as any).setPos(transform.x, transform.y);\r\n        } else {\r\n            Input.inputContainer.style.transform = Input.inputContainer.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n            inputElement.style.width = inputWid + 'px';\r\n            inputElement.style.height = inputHei + 'px';\r\n            Input.inputContainer.style.left = transform.x + 'px';\r\n            Input.inputContainer.style.top = transform.y + 'px';\r\n        }\r\n    }\r\n\r\n    /**选中当前实例的所有文本。*/\r\n    select(): void {\r\n        this.nativeInput.select();\r\n    }\r\n\r\n    /**\r\n     * 表示焦点是否在此实例上。\r\n     */\r\n    get focus(): boolean {\r\n        return this._focus;\r\n    }\r\n\r\n    // 移动平台最后单击画布才会调用focus\r\n    // 因此 调用focus接口是无法都在移动平台立刻弹出键盘的\r\n    set focus(value: boolean) {\r\n        var input = this.nativeInput;\r\n\r\n        if (this._focus !== value) {\r\n            if (value) {\r\n                if ((input as any).target) {\r\n                    (input as any).target._focusOut();\r\n                } else {\r\n                    this._setInputMethod();\r\n                }\r\n                input = this.nativeInput;\r\n                (input as any).target = this;\r\n                this._focusIn();\r\n            } else {\r\n                (input as any).target = null;\r\n                this._focusOut();\r\n                ILaya.Browser.document.body.scrollTop = 0;\r\n                input.blur();\r\n\r\n                if (LayaEnv.isConch && !Input.isAppUseNewInput) (input as any).setPos(-10000, -10000);\r\n                else if (Input.inputContainer.contains(input)) Input.inputContainer.removeChild(input);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _setInputMethod(): void {\r\n        Input.input.parentElement && (Input.inputContainer.removeChild(Input.input));\r\n        Input.area.parentElement && (Input.inputContainer.removeChild(Input.area));\r\n\r\n        // 安卓的安全键盘的问题；\r\n        // 如果设置type='password' 则会弹安全键盘\r\n        // 就算以后设置type='text' 还是会弹安全键盘，所以对于安卓，干脆全部重新生成\r\n        if (ILaya.Browser.onAndroid) {\r\n            Input.input = Input.inputElement = ILaya.Browser.createElement('input');\r\n            Input._initInput(Input.input);\r\n        }\r\n\r\n        Input.inputElement = (this._multiline ? Input.area : Input.input);\r\n        Input.inputContainer.appendChild(Input.inputElement);\r\n        if (Text.RightToLeft) {\r\n            Input.inputElement.style.direction = \"rtl\";\r\n        }\r\n    }\r\n\r\n    private _focusIn(): void {\r\n        InputManager.isTextInputting = true;\r\n        var input = this.nativeInput;\r\n\r\n        Input.input && (Input.input.type = this._type);\t\t// 设置input控件的 password\r\n\r\n        this._focus = true;\r\n\r\n        var cssStyle = input.style;\r\n        cssStyle.whiteSpace = (this.wordWrap ? \"pre-wrap\" : \"nowrap\");\r\n        this._setPromptColor();\r\n\r\n        input.readOnly = !this._editable;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (input as any).setType(this._type);\r\n            (input as any).setForbidEdit(!this._editable);\r\n        }\r\n        input.maxLength = this._maxChars <= 0 ? 1E5 : this._maxChars;\r\n\r\n        input.value = this._text;\r\n        input.placeholder = this._prompt;\r\n\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.on(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = this;\r\n        this.event(Event.FOCUS);\r\n\r\n        // PC端直接调用focus进入焦点。\r\n        if (ILaya.Browser.onPC) input.focus();\r\n\r\n        // PC浏览器隐藏文字\r\n        if (!(LayaEnv.isConch && Input.isAppUseNewInput) && !ILaya.Browser.onMiniGame && !ILaya.Browser.onBDMiniGame && !ILaya.Browser.onQGMiniGame && !ILaya.Browser.onKGMiniGame && !ILaya.Browser.onVVMiniGame && !ILaya.Browser.onAlipayMiniGame && !ILaya.Browser.onQQMiniGame && !ILaya.Browser.onBLMiniGame && !ILaya.Browser.onTTMiniGame && !ILaya.Browser.onHWMiniGame && !ILaya.Browser.onTBMiniGame) {\r\n            this.graphics.clear(true);\r\n            this.drawBg();\r\n            this._hideText = true;\r\n        }\r\n\r\n        // PC同步输入框外观。\r\n        (input as any).setColor(this.color);\r\n        (input as any).setFontSize(this.fontSize);\r\n        (input as any).setFontFace(this._realFont);\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (input as any).setMultiAble && (input as any).setMultiAble(this._multiline);\r\n        }\r\n        cssStyle.lineHeight = (this.leading + this.fontSize) + \"px\";\r\n        cssStyle.fontStyle = (this.italic ? \"italic\" : \"normal\");\r\n        cssStyle.fontWeight = (this.bold ? \"bold\" : \"normal\");\r\n        cssStyle.textAlign = this.align;\r\n        cssStyle.padding = \"0 0\";\r\n\r\n        // 输入框重定位。\r\n        this._syncInputTransform();\r\n        if (!LayaEnv.isConch && ILaya.Browser.onPC)\r\n            ILaya.systemTimer.frameLoop(1, this, this._syncInputTransform);\r\n    }\r\n\r\n    // 设置DOM输入框提示符颜色。\r\n    private _setPromptColor(): void {\r\n        // 创建style标签\r\n        Input.promptStyleDOM = ILaya.Browser.getElementById(\"promptStyle\");\r\n        if (!Input.promptStyleDOM) {\r\n            Input.promptStyleDOM = ILaya.Browser.createElement(\"style\");\r\n            Input.promptStyleDOM.setAttribute(\"id\", \"promptStyle\");\r\n            ILaya.Browser.document.head.appendChild(Input.promptStyleDOM);\r\n        }\r\n\r\n        // 设置style标签\r\n        Input.promptStyleDOM.innerText = \"input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-moz-placeholder, textarea:-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input::-moz-placeholder, textarea::-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-ms-input-placeholder, textarea:-ms-input-placeholder {\" + \"color:\" + this._promptColor + \"}\";\r\n    }\r\n\r\n    /**@private */\r\n    private _focusOut(): void {\r\n        if (!InputManager.isTextInputting) return;\r\n        if (!InputManager.isiOSWKwebView)\r\n            InputManager.isTextInputting = false;\r\n        this._focus = false;\r\n        this._hideText = false;\r\n\r\n        this.text = this.nativeInput.value;\r\n        this.markChanged();\r\n        this.typeset();\r\n\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = null;\r\n        this.event(Event.BLUR);\r\n        this.event(Event.CHANGE);\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) this.nativeInput.blur();\r\n        // 只有PC会注册此事件。\r\n        ILaya.Browser.onPC && ILaya.systemTimer.clear(this, this._syncInputTransform);\r\n    }\r\n\r\n    /**@private */\r\n    private _onKeyDown(e: any): void {\r\n        if (e.keyCode === 13) {\r\n            // 移动平台单行输入状态下点击回车收回输入法。 \r\n            if (ILaya.Browser.onMobile && !this._multiline)\r\n                this.focus = false;\r\n\r\n            this.event(Event.ENTER);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 小游戏专用(解决键盘输入框内容和游戏输入框内容不同步的bug)\r\n     * @param value \r\n     */\r\n    miniGameTxt(value: string) {\r\n        value += '';\r\n        if (!this._multiline)\r\n            value = value.replace(/\\r?\\n/g, '');\r\n        this.text = value;\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set text(value: string) {\r\n        if (value == null)\r\n            value = \"\";\r\n        else if (typeof (value) !== \"string\")\r\n            value = '' + value;\r\n\r\n        if (this._focus) {\r\n            this.nativeInput.value = value;\r\n            this.event(Event.CHANGE);\r\n        } else {\r\n            // 单行时不允许换行\r\n            if (!this._multiline)\r\n                value = value.replace(/\\r?\\n/g, '');\r\n\r\n            super.text = value;\r\n        }\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    get text(): string {\r\n        if (this._focus)\r\n            return this.nativeInput.value;\r\n        else\r\n            return super.text;\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set_color(value: string) {\r\n        if (this._focus)\r\n            (this.nativeInput as any).setColor(value);\r\n\r\n        super.set_color(value);\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set bgColor(value: string) {\r\n        super.bgColor = value;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput)\r\n            (this.nativeInput as any).setBgColor(value);\r\n    }\r\n\r\n    get bgColor() {\r\n        return super.bgColor;\r\n    }\r\n\r\n    /**限制输入的字符。*/\r\n    get restrict(): string {\r\n        return this._restrict;\r\n    }\r\n\r\n    set restrict(value: string) {\r\n        this._restrict = value;\r\n        // H5保存RegExp\r\n        if (value) {\r\n            value = \"[^\" + value + \"]\";\r\n\r\n            // 如果pattern为^\\00-\\FF，则我们需要的正则表达式是\\00-\\FF\r\n            if (value.indexOf(\"^^\") > -1)\r\n                value = value.replace(\"^^\", \"\");\r\n\r\n            this._restrictPattern = new RegExp(value, \"g\");\r\n        } else\r\n            this._restrictPattern = null;\r\n    }\r\n\r\n    /**\r\n     * 是否可编辑。\r\n     */\r\n    set editable(value: boolean) {\r\n        this._editable = value;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (Input.input as any).setForbidEdit(!value);\r\n        }\r\n    }\r\n\r\n    get editable(): boolean {\r\n        return this._editable;\r\n    }\r\n\r\n    /**\r\n     * <p>字符数量限制，默认为10000。</p>\r\n     * <p>设置字符数量限制时，小于等于0的值将会限制字符数量为10000。</p>\r\n     */\r\n    get maxChars(): number {\r\n        return this._maxChars;\r\n    }\r\n\r\n    set maxChars(value: number) {\r\n        this._maxChars = value;\r\n    }\r\n\r\n    /**\r\n     * 设置输入提示符。\r\n     */\r\n    get prompt(): string {\r\n        return this._prompt;\r\n    }\r\n\r\n    set prompt(value: string) {\r\n        value = Text.langPacks?.[value] || value;\r\n        if (this._prompt != value) {\r\n            this._prompt = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置输入提示符颜色。\r\n     */\r\n    get promptColor(): string {\r\n        return this._promptColor;\r\n    }\r\n\r\n    set promptColor(value: string) {\r\n        if (this._promptColor != value) {\r\n            this._promptColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>输入框类型为Input静态常量之一。</p>\r\n     * <ul>\r\n     * <li>TYPE_TEXT</li>\r\n     * <li>TYPE_PASSWORD</li>\r\n     * <li>TYPE_EMAIL</li>\r\n     * <li>TYPE_URL</li>\r\n     * <li>TYPE_NUMBER</li>\r\n     * <li>TYPE_RANGE</li>\r\n     * <li>TYPE_DATE</li>\r\n     * <li>TYPE_MONTH</li>\r\n     * <li>TYPE_WEEK</li>\r\n     * <li>TYPE_TIME</li>\r\n     * <li>TYPE_DATE_TIME</li>\r\n     * <li>TYPE_DATE_TIME_LOCAL</li>\r\n     * </ul>\r\n     * <p>平台兼容性参见http://www.w3school.com.cn/html5/html_5_form_input_types.asp。</p>\r\n     */\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._asPassword = value === \"password\";\r\n        this._type = value;\r\n        this.markChanged();\r\n    }\r\n}","import { Component } from \"./Component\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * 相对布局插件\r\n */\r\nexport class Widget extends Component {\r\n    /**一个已初始化的 <code>Widget</code> 实例。*/\r\n    static EMPTY: Widget = null;// new Widget();\r\n\r\n    private _top: number = null;\r\n    private _bottom: number = null;\r\n    private _left: number = null;\r\n    private _right: number = null;\r\n    private _centerX: number = null;\r\n    private _centerY: number = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.runInEditor = true;\r\n        this.hideFlags |= HideFlags.HideAndDontSave;\r\n    }\r\n\r\n    onReset(): void {\r\n        this._top = this._bottom = this._left = this._right = this._centerX = this._centerY = null;\r\n    }\r\n\r\n    protected _onEnable(): void {\r\n        if (this.owner.parent) this._onAdded();\r\n        else this.owner.once(Event.ADDED, this, this._onAdded);\r\n    }\r\n\r\n    protected _onDisable(): void {\r\n        this.owner.off(Event.ADDED, this, this._onAdded);\r\n        if (this.owner.parent) this.owner.parent.off(Event.RESIZE, this, this._onParentResize);\r\n    }\r\n\r\n    protected _onAdded(): void {\r\n        if (this.owner.parent)\r\n            this.owner.parent.on(Event.RESIZE, this, this._onParentResize);\r\n        this.resetLayoutX();\r\n        this.resetLayoutY();\r\n    }\r\n\r\n    /**\r\n     * 父容器的 <code>Event.RESIZE</code> 事件侦听处理函数。\r\n     */\r\n    protected _onParentResize(): void {\r\n        var flagX = this.resetLayoutX();\r\n        var flagY = this.resetLayoutY();\r\n        if (flagX || flagY) this.owner.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * <p>重置对象的 <code>X</code> 轴（水平方向）布局。</p>\r\n     * @private\r\n     */\r\n    resetLayoutX(): boolean {\r\n        var owner: Sprite = (<Sprite>this.owner);\r\n        if (!owner) return false;\r\n        var parent: Sprite = (<Sprite>owner.parent);\r\n        if (parent) {\r\n            if (this._centerX != null) {\r\n                owner.x = Math.round((parent.width - owner.displayWidth) * 0.5 + this._centerX + owner.pivotX * owner.scaleX);\r\n            } else if (this._left != null) {\r\n                owner.x = Math.round(this._left + owner.pivotX * owner.scaleX);\r\n                if (this._right != null) {\r\n                    if (!parent._width) return false;\r\n                    //TODO:如果用width，会死循环\r\n                    var temp: number = (parent._width - this._left - this._right) / (owner.scaleX || 0.01);\r\n                    if (temp != owner._width) {\r\n                        owner.width = temp;\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (this._right != null) {\r\n                owner.x = Math.round(parent.width - owner.displayWidth - this._right + owner.pivotX * owner.scaleX);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * <p>重置对象的 <code>Y</code> 轴（垂直方向）布局。</p>\r\n     * @private\r\n     */\r\n    resetLayoutY(): boolean {\r\n        var owner: Sprite = (<Sprite>this.owner);\r\n        if (!owner) return false;\r\n        var parent: Sprite = (<Sprite>owner.parent);\r\n        if (parent) {\r\n            if (this._centerY != null) {\r\n                owner.y = Math.round((parent.height - owner.displayHeight) * 0.5 + this._centerY + owner.pivotY * owner.scaleY);\r\n            } else if (this._top != null) {\r\n                owner.y = Math.round(this._top + owner.pivotY * owner.scaleY);\r\n                if (this._bottom != null) {\r\n                    if (!parent._height) return false;\r\n                    //TODO:\r\n                    var temp: number = (parent._height - this._top - this._bottom) / (owner.scaleY || 0.01);\r\n                    if (temp != owner._height) {\r\n                        owner.height = temp;\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (this._bottom != null) {\r\n                owner.y = Math.round(parent.height - owner.displayHeight - this._bottom + owner.pivotY * owner.scaleY);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 重新计算布局\r\n     */\r\n    resetLayout(): void {\r\n        if (this.owner) {\r\n            this.resetLayoutX();\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距顶边的距离（以像素为单位）。*/\r\n    get top(): number {\r\n        return this._top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._top != value) {\r\n            this._top = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距底边的距离（以像素为单位）。*/\r\n    get bottom(): number {\r\n        return this._bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._bottom != value) {\r\n            this._bottom = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距左边的距离（以像素为单位）。*/\r\n    get left(): number {\r\n        return this._left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._left != value) {\r\n            this._left = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距右边的距离（以像素为单位）。*/\r\n    get right(): number {\r\n        return this._right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._right != value) {\r\n            this._right = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距水平方向中心轴的距离（以像素为单位）。*/\r\n    get centerX(): number {\r\n        return this._centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._centerX != value) {\r\n            this._centerX = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距垂直方向中心轴的距离（以像素为单位）。*/\r\n    get centerY(): number {\r\n        return this._centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._centerY != value) {\r\n            this._centerY = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n}\r\n\r\nWidget.EMPTY = new Widget();\r\n","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { Graphics } from \"../display/Graphics\"\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { ClassUtils } from \"./ClassUtils\";\r\nimport { IHitArea } from \"./IHitArea\";\r\n\r\nconst _rect: Rectangle = new Rectangle();\r\nconst _ptPoint: Point = new Point();\r\n\r\n/**\r\n * 鼠标点击区域，可以设置绘制一系列矢量图作为点击区域和非点击区域（目前只支持圆形，矩形，多边形）\r\n *\r\n */\r\nexport class HitArea implements IHitArea {\r\n    _hit: Graphics;\r\n    _unHit: Graphics;\r\n\r\n    /**\r\n     * 检测对象是否包含指定的点。\r\n     * @param\tx\t点的 X 轴坐标值（水平位置）。\r\n     * @param\ty\t点的 Y 轴坐标值（垂直位置）。\r\n     * @return\t如果包含指定的点，则值为 true；否则为 false。\r\n     */\r\n    contains(x: number, y: number, sp: Sprite): boolean {\r\n        if (!HitArea._isHitGraphic(x, y, sp, this._hit))\r\n            return false;\r\n        return !HitArea._isHitGraphic(x, y, sp, this._unHit);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 是否击中Graphic\r\n     */\r\n    static _isHitGraphic(x: number, y: number, sp: Sprite, graphic: Graphics): boolean {\r\n        if (!graphic) return false;\r\n        let cmds = graphic.cmds;\r\n        if (cmds.length == 0) return false;\r\n        let len = cmds.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let cmd = cmds[i];\r\n            if (!cmd) continue;\r\n            switch (cmd.cmdID) {\r\n                case \"Translate\":\r\n                    x -= cmd.tx;\r\n                    y -= cmd.ty;\r\n            }\r\n            if (HitArea._isHitCmd(x, y, sp, cmd)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 是否击中绘图指令\r\n     */\r\n    static _isHitCmd(x: number, y: number, sp: Sprite, cmd: any): boolean {\r\n        if (!cmd) return false;\r\n        var rst: boolean = false;\r\n        switch (cmd.cmdID) {\r\n            case \"DrawRect\":\r\n                if (cmd.percent)\r\n                    _rect.setTo(cmd.x * sp.width, cmd.y * sp.height, cmd.width * sp.width, cmd.height * sp.height);\r\n                else\r\n                    _rect.setTo(cmd.x, cmd.y, cmd.width, cmd.height);\r\n                rst = _rect.contains(x, y);\r\n                break;\r\n            case \"DrawCircle\":\r\n                let r = cmd.radius;\r\n                var d: number;\r\n                if (cmd.percent) {\r\n                    x -= cmd.x * sp.width;\r\n                    y -= cmd.y * sp.height;\r\n                    r *= sp.width;\r\n                }\r\n                else {\r\n                    x -= cmd.x;\r\n                    y -= cmd.y;\r\n                }\r\n                d = x * x + y * y;\r\n                rst = d < r * r;\r\n                break;\r\n            case \"DrawPoly\":\r\n                x -= cmd.x;\r\n                y -= cmd.y;\r\n                rst = HitArea._ptInPolygon(x, y, cmd.points);\r\n                break;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 坐标是否在多边形内\r\n     */\r\n    static _ptInPolygon(x: number, y: number, areaPoints: any[]): boolean {\r\n        var p: Point = _ptPoint;\r\n        p.setTo(x, y);\r\n        // 交点个数\r\n        var nCross: number = 0;\r\n        var p1x: number, p1y: number, p2x: number, p2y: number;\r\n        var len: number;\r\n        len = areaPoints.length;\r\n        for (var i: number = 0; i < len; i += 2) {\r\n            p1x = areaPoints[i];\r\n            p1y = areaPoints[i + 1];\r\n            p2x = areaPoints[(i + 2) % len];\r\n            p2y = areaPoints[(i + 3) % len];\r\n            //var p1:Point = areaPoints[i];\r\n            //var p2:Point = areaPoints[(i + 1) % areaPoints.length]; // 最后一个点与第一个点连线\r\n            if (p1y == p2y) continue;\r\n            if (p.y < Math.min(p1y, p2y)) continue;\r\n            if (p.y >= Math.max(p1y, p2y)) continue;\r\n            // 求交点的x坐标\r\n            var tx: number = (p.y - p1y) * (p2x - p1x) / (p2y - p1y) + p1x;\r\n            // 只统计p1p2与p向右射线的交点\r\n            if (tx > p.x) nCross++;\r\n        }\r\n        // 交点为偶数，点在多边形之外\r\n        return (nCross % 2 == 1);\r\n    }\r\n\r\n    /**\r\n     * 可点击区域，可以设置绘制一系列矢量图作为点击区域（目前只支持圆形，矩形，多边形）\r\n     */\r\n    get hit(): Graphics {\r\n        if (!this._hit) this._hit = new Graphics();\r\n        return this._hit;\r\n    }\r\n\r\n    set hit(value: Graphics) {\r\n        this._hit = value;\r\n    }\r\n\r\n    /**\r\n     * 不可点击区域，可以设置绘制一系列矢量图作为非点击区域（目前只支持圆形，矩形，多边形）\r\n     */\r\n    get unHit(): Graphics {\r\n        if (!this._unHit) this._unHit = new Graphics();\r\n        return this._unHit;\r\n    }\r\n\r\n    set unHit(value: Graphics) {\r\n        this._unHit = value;\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        if (LayaEnv.isPlaying) {\r\n            if ((<any>this)._hitCmds) {\r\n                this.hit.cmds = (<any>this)._hitCmds;\r\n                delete (<any>this)._hitCmds;\r\n            }\r\n\r\n            if ((<any>this)._unHitCmds) {\r\n                this.unHit.cmds = (<any>this)._unHitCmds;\r\n                delete (<any>this)._unHitCmds;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"HitArea\", HitArea);\r\n\r\n","import { Utils } from \"./Utils\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 封装弱引用WeakMap\r\n * 如果支持WeakMap，则使用WeakMap，如果不支持，则用Object代替\r\n * 注意：如果采用Object，为了防止内存泄漏，则采用定时清理缓存策略\r\n * \r\n * 这里的设计是错误的，为了兼容，先不删掉这个类，直接采用Object\r\n */\r\nexport class WeakObject {\r\n    /**是否支持WeakMap*/\r\n    static supportWeakMap = false;\r\n    /**如果不支持WeakMap，则多少时间清理一次缓存，默认10分钟清理一次*/\r\n    static delInterval = 10 * 60 * 1000;\r\n    /**全局WeakObject单例*/\r\n    static I: WeakObject;\r\n    /**@private */\r\n    private static _maps: any[] = [];\r\n    /**@internal */\r\n    _obj: any;\r\n\r\n    /**@internal */\r\n    static __init__(): void {\r\n        WeakObject.I = new WeakObject();\r\n        //WeakObject.supportWeakMap = Browser.window.WeakMap != null;\r\n        //如果不支持，10分钟回收一次\r\n        if (!WeakObject.supportWeakMap) ILaya.systemTimer.loop(WeakObject.delInterval, null, WeakObject.clearCache);\r\n    }\r\n\r\n    /**清理缓存，回收内存*/\r\n    static clearCache(): void {\r\n        for (var i = 0, n = WeakObject._maps.length; i < n; i++) {\r\n            var obj = WeakObject._maps[i];\r\n            obj._obj = {};\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        this._obj = {};\r\n        WeakObject._maps.push(this);\r\n    }\r\n\r\n\t/**\r\n\t * 设置缓存\r\n\t * @param\tkey kye对象，可被回收\r\n\t * @param\tvalue object对象，可被回收\r\n\t */\r\n    set(key: any, value: any): void {\r\n        if (key == null) return;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') {\r\n                this._obj[key as any] = value;\r\n            } else {\r\n                key.$_GID || (key.$_GID = Utils.getGID());\r\n                this._obj[key.$_GID] = value;\r\n            }\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取缓存\r\n\t * @param\tkey kye对象，可被回收\r\n\t */\r\n    get(key: any): any {\r\n        if (key == null) return null;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any];\r\n            return this._obj[key.$_GID];\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 删除缓存\r\n\t */\r\n    del(key: any): void {\r\n        if (key == null) return;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') delete this._obj[key as any];\r\n            else delete this._obj[this._obj.$_GID];\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 是否有缓存\r\n\t */\r\n    has(key: any): boolean {\r\n        if (key == null) return false;\r\n        if (WeakObject.supportWeakMap) {\r\n            return false;\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any] != null;\r\n            return this._obj[this._obj.$_GID] != null;\r\n        }\r\n    }\r\n}\r\n\r\n//WeakObject.__init__();","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { Resource } from \"./Resource\";\r\n\r\nexport class Prefab extends Resource {\r\n    public readonly version: number;\r\n    protected _deps: Array<Resource>;\r\n\r\n    /**@private */\r\n    json: any; //兼容2.0\r\n\r\n    constructor(version?: number) {\r\n        super();\r\n\r\n        this.version = version;\r\n        this._deps = [];\r\n    }\r\n\r\n    /**\r\n     * 创建实例\r\n     */\r\n    create(options?: Record<string, any>, errors?: Array<any>): Node {\r\n        if (this.json) //兼容2.0\r\n            return LegacyUIParser.createByData(null, this.json);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    get deps(): ReadonlyArray<Resource> {\r\n        return this._deps;\r\n    }\r\n\r\n    addDep(res: Resource) {\r\n        if (res instanceof Resource) {\r\n            res._addReference();\r\n            this._deps.push(res);\r\n\r\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                res.on(\"obsolute\", this, this.onDepObsolute);\r\n        }\r\n    }\r\n\r\n    addDeps(resArr: Array<Resource>) {\r\n        for (let res of resArr) {\r\n            if (res instanceof Resource) {\r\n                res._addReference();\r\n                this._deps.push(res);\r\n\r\n                if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                    res.on(\"obsolute\", this, this.onDepObsolute);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n        for (let res of this._deps) {\r\n            res._removeReference();\r\n\r\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                res.off(\"obsolute\", this, this.onDepObsolute);\r\n        }\r\n    }\r\n\r\n    public get obsolute(): boolean {\r\n        return this._obsolute;\r\n    }\r\n\r\n    public set obsolute(value: boolean) {\r\n        if (this._obsolute != value) {\r\n            this._obsolute = value;\r\n            if (value && !LayaEnv.isPlaying)\r\n                this.event(\"obsolute\");\r\n        }\r\n    }\r\n\r\n    private onDepObsolute() {\r\n        this.obsolute = true;\r\n    }\r\n}\r\n\r\n//旧版本兼容\r\nexport type HierarchyResource = Prefab;\r\nexport var HierarchyResource = Prefab;","import { Component } from \"../components/Component\"\r\nimport { FrameAnimation } from \"../display/FrameAnimation\"\r\nimport { Node } from \"../display/Node\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Graphics } from \"../display/Graphics\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { HitArea } from \"../utils/HitArea\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { WeakObject } from \"../utils/WeakObject\";\r\nimport { Handler } from \"laya/utils/Handler\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { PrefabImpl } from \"../resource/PrefabImpl\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\nvar _listClass: any;\r\nvar _viewClass: any;\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nexport class LegacyUIParser {\r\n    /**@private */\r\n    private static _funMap: WeakObject;\r\n    /**@private */\r\n    private static _parseWatchData: RegExp = /\\${(.*?)}/g;\r\n    /**@private */\r\n    private static _parseKeyWord: RegExp = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;\r\n    /**@internal */\r\n    static _sheet: any;\r\n\r\n    static parse(data: any, options: any) {\r\n        let root: Sprite = options?.root;\r\n        if (!root) {\r\n            let runtime: string = (LayaEnv.isPlaying && data.props.runtime) ? data.props.runtime : data.type;\r\n            let clas = ClassUtils.getClass(runtime);\r\n\r\n            if (data.props.renderType == \"instance\")\r\n                root = clas.instance || (clas.instance = new clas());\r\n            else\r\n                root = new clas();\r\n        }\r\n\r\n        if (root && (<any>root)._viewCreated)\r\n            return root;\r\n\r\n        return LegacyUIParser.createByData(root, data);\r\n    }\r\n\r\n    /**\r\n     * @private 根据字符串，返回函数表达式\r\n     */\r\n    //TODO:coverage\r\n    static getBindFun(value: string): Function {\r\n        let map = LegacyUIParser._funMap;\r\n        if (!map)\r\n            map = LegacyUIParser._funMap = new WeakObject();\r\n        var fun: Function = LegacyUIParser._funMap.get(value);\r\n        if (fun == null) {\r\n            var temp: string = \"\\\"\" + value + \"\\\"\";\r\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\r\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\r\n            fun = (window as any).Laya._runScript(str);\r\n            LegacyUIParser._funMap.set(value, fun);\r\n        }\r\n        return fun;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过视图数据创建视图。\r\n     * @param uiView 视图数据信息。\r\n     */\r\n    //TODO:coverage\r\n    static createByData(root: Sprite, uiView: any): Sprite {\r\n        var tInitTool: InitTool = InitTool.create();\r\n\r\n        //递归创建节点\r\n        root = LegacyUIParser.createComp(uiView, root, root, null, tInitTool);\r\n        if (\"_idMap\" in root) {\r\n            (<any>root)[\"_idMap\"] = tInitTool._idMap;\r\n        }\r\n\r\n        //处理动画信息\r\n        if (uiView.animations) {\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAni: FrameAnimation;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAni = new FrameAnimation();\r\n                tAniO = animations[i];\r\n                tAni._setUp(tInitTool._idMap, tAniO);\r\n                (<any>root)[tAniO.name] = tAni;\r\n                tAni._setControlNode(root);\r\n                switch (tAniO.action) {\r\n                    case 1:\r\n                        tAni.play(0, false);\r\n                        break;\r\n                    case 2:\r\n                        tAni.play(0, true);\r\n                        break;\r\n                }\r\n                anilist.push(tAni);\r\n            }\r\n            (<any>root)._aniList = anilist;\r\n        }\r\n\r\n        //设置页面穿透\r\n        if ((root instanceof Scene) && root._width > 0 && uiView.props.hitTestPrior == null && !root.mouseThrough)\r\n            root.hitTestPrior = true;\r\n\r\n        //设置组件\r\n        tInitTool.finish();\r\n        root._setBit(NodeFlags.NOT_READY, false);\r\n        if (root.parent && root.parent.activeInHierarchy && root.active)\r\n            root._processActive(true);\r\n        return root;\r\n    }\r\n\r\n    static createInitTool(): InitTool {\r\n        return InitTool.create();\r\n    }\r\n\r\n    /**\r\n     * 根据UI数据实例化组件。\r\n     * @param uiView UI数据。\r\n     * @param comp 组件本体，如果为空，会新创建一个。\r\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\r\n     * @return 一个 Component 对象。\r\n     */\r\n    static createComp(uiView: any, comp: Sprite = null, view: Sprite = null, dataMap: any[] = null, initTool: InitTool = null): any {\r\n        comp = comp || LegacyUIParser.getCompInstance(uiView);\r\n        if (!comp) {\r\n            if (uiView.props && uiView.props.runtime)\r\n                console.warn(\"runtime not found:\" + uiView.props.runtime);\r\n            else\r\n                console.warn(\"can not create:\" + uiView.type);\r\n            return null;\r\n        }\r\n\r\n        var child: any[] = uiView.child;\r\n        if (child) {\r\n            var isList: boolean = comp instanceof (_listClass || (_listClass = ClassUtils.getClass(\"List\")));\r\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\r\n                var node: any = child[i];\r\n                if ('itemRender' in comp && (node.props.name == \"render\" || node.props.renderType === \"render\")) {\r\n                    //如果list的itemRender\r\n                    (<any>comp)[\"itemRender\"] = node;\r\n                } else if (node.type == \"Graphic\") {\r\n                    //绘制矢量图\r\n                    this._addGraphicsToSprite(node, comp);\r\n                } else if (this._isDrawType(node.type)) {\r\n                    this._addGraphicToSprite(node, comp, true);\r\n                } else {\r\n                    if (isList) {\r\n                        //收集数据绑定信息\r\n                        var arr: any[] = [];\r\n                        var tChild: any = LegacyUIParser.createComp(node, null, view, arr, initTool);\r\n                        if (arr.length)\r\n                            tChild[\"_$bindData\"] = arr;\r\n                    } else {\r\n                        tChild = LegacyUIParser.createComp(node, null, view, dataMap, initTool);\r\n                    }\r\n\r\n                    //处理脚本\r\n                    if (node.type == \"Script\") {\r\n                        if (tChild instanceof Component) {\r\n                            comp.addComponentInstance(tChild);\r\n                        } else {\r\n                            //兼容老版本\r\n                            if (\"owner\" in tChild) {\r\n                                tChild[\"owner\"] = comp;\r\n                            } else if (\"target\" in tChild) {\r\n                                tChild[\"target\"] = comp;\r\n                            }\r\n                        }\r\n                    } else if (node.props.renderType == \"mask\" || node.props.name == \"mask\") {\r\n                        comp.mask = tChild;\r\n                    } else {\r\n                        tChild instanceof Node && comp.addChild(tChild);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var props: any = uiView.props;\r\n        for (var prop in props) {\r\n            var value: any = props[prop];\r\n            if (typeof (value) == 'string' && (value.indexOf(\"@node:\") >= 0 || value.indexOf(\"@Prefab:\") >= 0)) {\r\n                if (initTool) {\r\n                    initTool.addNodeRef(comp, prop, <string>value);\r\n                }\r\n            } else\r\n                LegacyUIParser.setCompValue(comp, prop, value, view, dataMap);\r\n        }\r\n\r\n        if ((<any>comp)._afterInited) {\r\n            //if (initTool) {\r\n            //initTool.addInitItem(comp);\r\n            //} else {\r\n            (<any>comp)._afterInited();\r\n            //}\r\n        }\r\n\r\n        if (uiView.compId && initTool && initTool._idMap) {\r\n            initTool._idMap[uiView.compId] = comp;\r\n        }\r\n\r\n        return comp;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置组件的属性值。\r\n     * @param comp 组件实例。\r\n     * @param prop 属性名称。\r\n     * @param value 属性值。\r\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\r\n     */\r\n    private static setCompValue(comp: any, prop: string, value: any, view: any = null, dataMap: any[] = null): void {\r\n        //处理数据绑定\r\n        if (typeof (value) == 'string' && value.indexOf(\"${\") > -1) {\r\n            LegacyUIParser._sheet || (LegacyUIParser._sheet = ClassUtils.getClass(\"laya.data.Table\"));\r\n            if (!LegacyUIParser._sheet) {\r\n                console.warn(\"Can not find class Sheet\");\r\n                return;\r\n            }\r\n            //list的item处理\r\n            if (dataMap) {\r\n                dataMap.push(comp, prop, value);\r\n            } else if (view) {\r\n                if (value.indexOf(\"].\") == -1) {\r\n                    //TODO\r\n                    value = value.replace(\".\", \"[0].\");\r\n                }\r\n                var watcher: DataWatcher = new DataWatcher(comp, prop, value);\r\n\r\n                //执行第一次数据赋值\r\n                watcher.exe(view);\r\n                var one: any[], temp: any[];\r\n                var str: string = value.replace(/\\[.*?\\]\\./g, \".\");\r\n                while ((one = LegacyUIParser._parseWatchData.exec(str)) != null) {\r\n                    var key1: string = one[1];\r\n                    while ((temp = LegacyUIParser._parseKeyWord.exec(key1)) != null) {\r\n                        var key2: string = temp[0];\r\n                        var arr: any[] = (view._watchMap[key2] || (view._watchMap[key2] = []));\r\n                        arr.push(watcher);\r\n                        //监听数据变化\r\n                        LegacyUIParser._sheet.I.notifer.on(key2, view, view.changeData, [key2]);\r\n                    }\r\n                    //TODO\r\n                    arr = (view._watchMap[key1] || (view._watchMap[key1] = []));\r\n                    arr.push(watcher);\r\n                    LegacyUIParser._sheet.I.notifer.on(key1, view, view.changeData, [key1]);\r\n                }\r\n                //trace(view._watchMap);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (prop === \"var\" && view) {\r\n            view[value] = comp;\r\n        } else {\r\n            comp[prop] = (value === \"true\" ? true : (value === \"false\" ? false : value));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过组建UI数据，获取组件实例。\r\n     * @param json UI数据。\r\n     * @return Component 对象。\r\n     */\r\n    static getCompInstance(json: any): any {\r\n        if (json.type == \"UIView\") {\r\n            if (json.props && json.props.pageData) {\r\n                return LegacyUIParser.createByData(null, json.props.pageData);\r\n            }\r\n        }\r\n        var runtime: string = LayaEnv.isPlaying ? ((json.props && json.props.runtime) || json.type) : json.type;\r\n        var compClass = ClassUtils.getClass(runtime);\r\n        if (!compClass) throw \"Can not find class \" + runtime;\r\n        if (json.type === \"Script\" && compClass.prototype._doAwake) {\r\n            var comp: any = Pool.createByClass(compClass);\r\n            comp._destroyed = false;\r\n            return comp;\r\n        }\r\n        if (json.props && \"renderType\" in json.props && json.props[\"renderType\"] == \"instance\") {\r\n            if (!(compClass as any)[\"instance\"]) (compClass as any)[\"instance\"] = new compClass();\r\n            return (compClass as any)[\"instance\"];\r\n        }\r\n\r\n        let ret = new compClass();\r\n        if (ret instanceof (_viewClass || (_viewClass = ClassUtils.getClass(\"View\")))) //3.0取消了View的_scene属性，因为它不应该是一个scene。但兼容2.0的代码，这里补回去\r\n            (<any>ret)._scene = ret;\r\n        return ret;\r\n    }\r\n\r\n    public static collectResourceLinks(uiView: any) {\r\n        let test = new Set();\r\n        let innerUrls: string[] = [];\r\n\r\n        function addInnerUrl(url: string) {\r\n            if (!test.has(url)) {\r\n                test.add(url);\r\n                innerUrls.push(url);\r\n            }\r\n        }\r\n\r\n        function check(uiView: any) {\r\n            let props: any = uiView.props;\r\n            for (let prop in props) {\r\n                let value: any = props[prop];\r\n                if (typeof (value) == 'string' && value.indexOf(\"@Prefab:\") >= 0) {\r\n                    let url = value.replace(\"@Prefab:\", \"\");\r\n                    addInnerUrl(url);\r\n                }\r\n            }\r\n\r\n            let child: any[] = uiView.child;\r\n            if (child) {\r\n                for (let i: number = 0, n: number = child.length; i < n; i++) {\r\n                    let node: any = child[i];\r\n                    check(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (uiView.loadList) {\r\n            for (let url of uiView.loadList)\r\n                addInnerUrl(url);\r\n        }\r\n\r\n        if (uiView.loadList3D) {\r\n            for (let url of uiView.loadList3D)\r\n                addInnerUrl(url);\r\n        }\r\n\r\n        check(uiView);\r\n        return innerUrls;\r\n    }\r\n\r\n    /**\r\n     * 根据指定的 json 数据创建节点对象。\r\n     * 比如:\r\n     * {\r\n     * \t\"type\":\"Sprite\",\r\n     * \t\"props\":{\r\n     * \t\t\"x\":100,\r\n     * \t\t\"y\":50,\r\n     * \t\t\"name\":\"item1\",\r\n     * \t\t\"scale\":[2,2]\r\n     * \t},\r\n     * \t\"customProps\":{\r\n     * \t\t\"x\":100,\r\n     * \t\t\"y\":50,\r\n     * \t\t\"name\":\"item1\",\r\n     * \t\t\"scale\":[2,2]\r\n     * \t},\r\n     * \t\"child\":[\r\n     * \t\t{\r\n     * \t\t\t\"type\":\"Text\",\r\n     * \t\t\t\"props\":{\r\n     * \t\t\t\t\"text\":\"this is a test\",\r\n     * \t\t\t\t\"var\":\"label\",\r\n     * \t\t\t\t\"rumtime\":\"\"\r\n     * \t\t\t}\r\n     * \t\t}\r\n     * \t]\r\n     * }\r\n     * @param\tjson json字符串或者Object对象。\r\n     * @param\tnode node节点，如果为空，则新创建一个。\r\n     * @param\troot 根节点，用来设置var定义。\r\n     * @return\t生成的节点。\r\n     */\r\n    static createByJson(json: any, node: any = null, root: Node = null, customHandler: Handler = null, instanceHandler: Handler = null): any {\r\n        if (typeof (json) == 'string') json = JSON.parse((<string>json));\r\n        var props: any = json.props;\r\n\r\n        if (!node) {\r\n            node = instanceHandler ? instanceHandler.runWith(json) : ClassUtils.getInstance(LayaEnv.isPlaying ? (props.runtime || json.type) : json.type);\r\n            if (!node) return null;\r\n        }\r\n\r\n        var child: any[] = json.child;\r\n        if (child) {\r\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\r\n                var data: any = child[i];\r\n                if ((data.props.name === \"render\" || data.props.renderType === \"render\") && node[\"_$set_itemRender\"])\r\n                    node.itemRender = data;\r\n                else {\r\n                    if (data.type == \"Graphic\") {\r\n                        this._addGraphicsToSprite(data, node);\r\n                    } else if (this._isDrawType(data.type)) {\r\n                        this._addGraphicToSprite(data, node, true);\r\n                    } else {\r\n                        var tChild: any = this.createByJson(data, null, root, customHandler, instanceHandler)\r\n                        if (data.type === \"Script\") {\r\n                            if (\"owner\" in tChild) {\r\n                                tChild[\"owner\"] = node;\r\n                            } else if (\"target\" in tChild) {\r\n                                tChild[\"target\"] = node;\r\n                            }\r\n                        } else if (data.props.renderType == \"mask\") {\r\n                            node.mask = tChild;\r\n                        } else {\r\n                            node.addChild(tChild);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props) {\r\n            for (var prop in props) {\r\n                var value: any = props[prop];\r\n                if (prop === \"var\" && root) {\r\n                    (root as any)[value] = node;\r\n                } else if (value instanceof Array && node[prop] instanceof Function) {\r\n                    node[prop].apply(node, value);\r\n                } else {\r\n                    node[prop] = value;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (customHandler && json.customProps) {\r\n            customHandler.runWith([node, json]);\r\n        }\r\n\r\n        if (node[\"created\"]) node.created();\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 将graphic对象添加到Sprite上\r\n     * @param graphicO graphic对象描述\r\n     */\r\n    static _addGraphicsToSprite(graphicO: any, sprite: Sprite): void {\r\n        var graphics: any[] = graphicO.child;\r\n        if (!graphics || graphics.length < 1) return;\r\n        var g: Graphics = this._getGraphicsFromSprite(graphicO, sprite);\r\n        var ox: number = 0;\r\n        var oy: number = 0;\r\n        if (graphicO.props) {\r\n            ox = this._getObjVar(graphicO.props, \"x\", 0);\r\n            oy = this._getObjVar(graphicO.props, \"y\", 0);\r\n        }\r\n        if (ox != 0 && oy != 0) {\r\n            g.translate(ox, oy);\r\n        }\r\n        var i: number, len: number;\r\n        len = graphics.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._addGraphicToGraphics(graphics[i], g);\r\n        }\r\n        if (ox != 0 && oy != 0) {\r\n            g.translate(-ox, -oy);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 将graphic绘图指令添加到sprite上\r\n     * @param graphicO 绘图指令描述\r\n     */\r\n    static _addGraphicToSprite(graphicO: any, sprite: Sprite, isChild: boolean = false): void {\r\n        var g: Graphics = isChild ? this._getGraphicsFromSprite(graphicO, sprite) : sprite.graphics;\r\n        this._addGraphicToGraphics(graphicO, g);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getGraphicsFromSprite(dataO: any, sprite: Sprite): Graphics {\r\n        if (!dataO || !dataO.props) return sprite.graphics;\r\n        var propsName: string = dataO.props.renderType;\r\n        if (propsName === \"hit\" || propsName === \"unHit\") {\r\n            var hitArea: HitArea = <HitArea>sprite._style.hitArea || (sprite.hitArea = new HitArea());\r\n            if (!hitArea[propsName]) {\r\n                hitArea[propsName] = new Graphics();\r\n            }\r\n            var g: Graphics = hitArea[propsName];\r\n        }\r\n        if (!g) g = sprite.graphics;\r\n        return g;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getTransformData(propsO: any): Matrix {\r\n        var m: Matrix;\r\n\r\n        if (\"pivotX\" in propsO || \"pivotY\" in propsO) {\r\n            m = m || new Matrix();\r\n            m.translate(-this._getObjVar(propsO, \"pivotX\", 0), -this._getObjVar(propsO, \"pivotY\", 0));\r\n        }\r\n\r\n        var sx: number = this._getObjVar(propsO, \"scaleX\", 1), sy: number = this._getObjVar(propsO, \"scaleY\", 1);\r\n        var rotate: number = this._getObjVar(propsO, \"rotation\", 0);\r\n        var skewX: number = this._getObjVar(propsO, \"skewX\", 0);\r\n        var skewY: number = this._getObjVar(propsO, \"skewY\", 0);\r\n\r\n        if (sx != 1 || sy != 1 || rotate != 0) {\r\n            m = m || new Matrix();\r\n            m.scale(sx, sy);\r\n            m.rotate(rotate * 0.0174532922222222);\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _addGraphicToGraphics(graphicO: any, graphic: Graphics): void {\r\n        var propsO: any;\r\n        propsO = graphicO.props;\r\n        if (!propsO) return;\r\n        var drawConfig: any;\r\n        drawConfig = this.DrawTypeDic[graphicO.type];\r\n        if (!drawConfig) return;\r\n\r\n        var g: Graphics = graphic;\r\n        var params: any = this._getParams(propsO, drawConfig[1], drawConfig[2], drawConfig[3]);\r\n        var m: Matrix = this._tM;\r\n        if (m || this._alpha != 1) {\r\n            g.save();\r\n            if (m) g.transform(m);\r\n            if (this._alpha != 1) g.alpha(this._alpha);\r\n        }\r\n        (g as any)[drawConfig[0]].apply(g, params);\r\n        if (m || this._alpha != 1) {\r\n            g.restore();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptLineData(params: any[]): any[] {\r\n        params[2] = parseFloat(params[0]) + parseFloat(params[2]);\r\n        params[3] = parseFloat(params[1]) + parseFloat(params[3]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptTextureData(params: any[]): any[] {\r\n        params[0] = ILaya.Loader.getRes(params[0]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptLinesData(params: any[]): any[] {\r\n        params[2] = this._getPointListByStr(params[2]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _isDrawType(type: string): boolean {\r\n        if (type === \"Image\") return false;\r\n        return type in this.DrawTypeDic;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getParams(obj: any, params: any[], xPos: number = 0, adptFun: string = null): any[] {\r\n        var rst: any = this._temParam;\r\n        rst.length = params.length;\r\n        var i: number, len: number;\r\n        len = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], params[i][1]);\r\n        }\r\n        this._alpha = this._getObjVar(obj, \"alpha\", 1);\r\n        var m: Matrix;\r\n        m = this._getTransformData(obj);\r\n        if (m) {\r\n            if (!xPos) xPos = 0;\r\n\r\n            m.translate(rst[xPos], rst[xPos + 1]);\r\n            rst[xPos] = rst[xPos + 1] = 0;\r\n            this._tM = m;\r\n        } else {\r\n            this._tM = null;\r\n        }\r\n        if (adptFun && (this as any)[adptFun]) {\r\n            rst = (this as any)[adptFun](rst);\r\n        }\r\n        return rst;\r\n    }\r\n    /**@private */\r\n    private static DrawTypeDic: any = { \"Rect\": [\"drawRect\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Circle\": [\"drawCircle\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Pie\": [\"drawPie\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"startAngle\", 0], [\"endAngle\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Image\": [\"drawTexture\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]]], \"Texture\": [\"drawTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]], 1, \"_adptTextureData\"], \"FillTexture\": [\"fillTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"repeat\", null]], 1, \"_adptTextureData\"], \"FillText\": [\"fillText\", [[\"text\", \"\"], [\"x\", 0], [\"y\", 0], [\"font\", null], [\"color\", null], [\"textAlign\", null]], 1], \"Line\": [\"drawLine\", [[\"x\", 0], [\"y\", 0], [\"toX\", 0], [\"toY\", 0], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLineData\"], \"Lines\": [\"drawLines\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Curves\": [\"drawCurves\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Poly\": [\"drawPoly\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]], 0, \"_adptLinesData\"] };\r\n    /**@private */\r\n    private static _temParam: any[] = [];\r\n    /**@private */\r\n    private static _tM: Matrix;\r\n    /**@private */\r\n    private static _alpha: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _getPointListByStr(str: string): any[] {\r\n        var pointArr: any[] = str.split(\",\");\r\n        var i: number, len: number;\r\n        len = pointArr.length;\r\n        for (i = 0; i < len; i++) {\r\n            pointArr[i] = parseFloat(pointArr[i]);\r\n        }\r\n        return pointArr;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getObjVar(obj: any, key: string, noValue: any): any {\r\n        if (key in obj) {\r\n            return obj[key];\r\n        }\r\n        return noValue;\r\n    }\r\n}\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nclass DataWatcher {\r\n    comp: any;\r\n    prop: string;\r\n    value: string;\r\n\r\n    //TODO:coverage\r\n    constructor(comp: any, prop: string, value: string) {\r\n        this.comp = comp;\r\n        this.prop = prop;\r\n        this.value = value;\r\n    }\r\n\r\n    exe(view: any): void {\r\n        var fun: Function = LegacyUIParser.getBindFun(this.value);\r\n        this.comp[this.prop] = fun.call(this, view);\r\n    }\r\n}\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nclass InitTool {\r\n    /**@private */\r\n    private _nodeRefList: any[];\r\n    /**@private */\r\n    private _initList: any[];\r\n    /**@internal */\r\n    _idMap: { [key: string]: Sprite };\r\n\r\n    //TODO:coverage\r\n    reset(): void {\r\n        this._nodeRefList = null;\r\n        this._initList = null;\r\n        this._idMap = null;\r\n    }\r\n\r\n    //TODO:coverage\r\n    recover(): void {\r\n        this.reset();\r\n        Pool.recover(\"InitTool\", this);\r\n    }\r\n\r\n    static create(): InitTool {\r\n        var tool: InitTool = Pool.getItemByClass(\"InitTool\", InitTool);\r\n        tool._idMap = {};\r\n        return tool;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    addNodeRef(node: any, prop: string, referStr: string): void {\r\n        if (!this._nodeRefList) this._nodeRefList = [];\r\n        this._nodeRefList.push([node, prop, referStr]);\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    setNodeRef(): void {\r\n        if (!this._nodeRefList) return;\r\n        if (!this._idMap) {\r\n            this._nodeRefList = null;\r\n            return;\r\n        }\r\n        var i: number, len: number;\r\n        len = this._nodeRefList.length;\r\n        var tRefInfo: any[];\r\n        for (i = 0; i < len; i++) {\r\n            tRefInfo = this._nodeRefList[i];\r\n            tRefInfo[0][tRefInfo[1]] = this.getReferData(tRefInfo[2]);\r\n        }\r\n        this._nodeRefList = null;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    getReferData(referStr: string): any {\r\n        if (referStr.indexOf(\"@Prefab:\") >= 0) {\r\n            return new PrefabImpl(LegacyUIParser, Loader.getRes(referStr.replace(\"@Prefab:\", \"\")), 2);\r\n        } else if (referStr.indexOf(\"@arr:\") >= 0) {\r\n            referStr = referStr.replace(\"@arr:\", \"\");\r\n            var list: string[];\r\n            list = referStr.split(\",\");\r\n            var i: number, len: number;\r\n            var tStr: string;\r\n            len = list.length;\r\n            var list2: Sprite[] = [];\r\n            for (i = 0; i < len; i++) {\r\n                tStr = list[i];\r\n                if (tStr) {\r\n                    list2.push(this._idMap[tStr.replace(\"@node:\", \"\")]);\r\n                } else {\r\n                    list2.push(null);\r\n                }\r\n            }\r\n            return list2;\r\n        } else {\r\n            return this._idMap[referStr.replace(\"@node:\", \"\")];\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    addInitItem(item: any): void {\r\n        if (!this._initList) this._initList = [];\r\n        this._initList.push(item);\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    doInits(): void {\r\n        if (!this._initList) return;\r\n        this._initList = null;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    finish(): void {\r\n        this.setNodeRef();\r\n        this.doInits();\r\n        this.recover();\r\n    }\r\n}","import { Node } from \"../display/Node\";\r\nimport { ILoadURL } from \"../net/Loader\";\r\nimport { Prefab } from \"./HierarchyResource\";\r\n\r\n/**\r\n * 层次结构分析器API\r\n */\r\nexport interface IHierarchyParserAPI {\r\n    /**收集资源链接 */\r\n    collectResourceLinks: (data: any, basePath: string) => (string | ILoadURL)[],\r\n    /**解析 */\r\n    parse: (data: any, options?: Record<string, any>, errors?: Array<any>) => Array<Node> | Node;\r\n}\r\n\r\n/**\r\n * 预制体导入\r\n */\r\nexport class PrefabImpl extends Prefab {\r\n    /**数据 */\r\n    data: any;\r\n    /**层次结构API */\r\n    api: IHierarchyParserAPI;\r\n\r\n    /**\r\n     * 实例化一个预制体\r\n     * @param api 层次结构API\r\n     * @param data 数据\r\n     * @param version 版本\r\n     */\r\n    constructor(api: IHierarchyParserAPI, data: any, version: number) {\r\n        super(version);\r\n\r\n        this.api = api;\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * 创建一个\r\n     * @param options \r\n     * @param errors \r\n     * @returns \r\n     */\r\n    create(options?: Record<string, any>, errors?: any[]): Node {\r\n        let ret = this.api.parse(this.data, options, errors);\r\n        if (Array.isArray(ret)) {\r\n            if (ret.length == 1) {\r\n                ret[0].url = this.url;\r\n            }\r\n            return ret[0];\r\n        }\r\n        else {\r\n            ret.url = this.url;\r\n            return ret;\r\n        }\r\n    }\r\n}\r\n","import { Sprite } from \"./Sprite\";\r\nimport { Widget } from \"../components/Widget\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Resource } from \"../resource/Resource\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Timer } from \"../utils/Timer\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { NodeFlags } from \"../Const\";\r\n\r\n/**\r\n * 场景类，负责场景创建，加载，销毁等功能\r\n * 场景被从节点移除后，并不会被自动垃圾机制回收，如果想回收，请调用destroy接口，可以通过unDestroyedScenes属性查看还未被销毁的场景列表\r\n */\r\nexport class Scene extends Sprite {\r\n    /**创建后，还未被销毁的场景列表，方便查看还未被销毁的场景列表，方便内存管理，本属性只读，请不要直接修改*/\r\n    static readonly unDestroyedScenes: Set<Scene> = new Set();\r\n    /**获取根节点*/\r\n    private static _root: Sprite;\r\n    /**@private */\r\n    private static _loadPage: Sprite;\r\n\r\n    /**场景被关闭后，是否自动销毁（销毁节点和使用到的资源），默认为false*/\r\n    autoDestroyAtClosed: boolean = false;\r\n    /**@internal */\r\n    _idMap?: any;\r\n    _scene3D: any;\r\n\r\n    /**@private 相对布局组件*/\r\n    protected _widget: Widget;\r\n\r\n    /**场景时钟*/\r\n    private _timer: Timer;\r\n    /**@private */\r\n    private _viewCreated: boolean = false;\r\n\r\n    constructor(createChildren = true) {\r\n        super();\r\n\r\n        this._timer = ILaya.timer;\r\n        this._widget = Widget.EMPTY;\r\n\r\n        this._scene = this;\r\n        if (createChildren)\r\n            this.createChildren();\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     */\r\n    protected createChildren(): void {\r\n    }\r\n\r\n    /**\r\n     * 兼容加载模式\r\n     * 加载模式设置uimap\r\n     * @param url uimapJosn的url\r\n     */\r\n    static setUIMap(url: string): void {\r\n        let uimap = ILaya.loader.getRes(url);\r\n        if (uimap) {\r\n            for (let key in uimap) {\r\n                ILaya.Loader.loadedMap[key + \".scene\"] = uimap[key];\r\n            }\r\n        } else {\r\n            throw \"请提前加载uimap的json，再使用该接口设置！\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     * 装载场景视图。用于加载模式。\r\n     * @param path 场景地址。\r\n     */\r\n    loadScene(path: string): void {\r\n        Scene.unDestroyedScenes.add(this);\r\n        let url: string = path.indexOf(\".\") > -1 ? path : path + \".scene\";\r\n        let content: Prefab = ILaya.loader.getRes(url);\r\n        if (content) {\r\n            if (!this._viewCreated) {\r\n                content.create({ root: this });\r\n                this._viewCreated = true;\r\n                Scene.unDestroyedScenes.add(this);\r\n            }\r\n        } else {\r\n            this._setBit(NodeFlags.NOT_READY, true);\r\n            ILaya.loader.load(url, null, value => {\r\n                if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\r\n            }).then((content: Prefab) => {\r\n                if (!content) throw \"Can not find scene:\" + path;\r\n                if (!this._viewCreated) {\r\n                    this.url = url;\r\n                    Scene.hideLoadingPage();\r\n\r\n                    content.create({ root: this });\r\n                    this._viewCreated = true;\r\n                    Scene.unDestroyedScenes.add(this);\r\n                }\r\n                else\r\n                    this._setBit(NodeFlags.NOT_READY, false);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     * 通过视图数据创建视图。\r\n     * @param uiView 视图数据信息。\r\n     */\r\n    createView(view: any): void {\r\n        if (view && !this._viewCreated) {\r\n            this._viewCreated = true;\r\n            LegacyUIParser.createByData(this, view);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 根据IDE内的节点id，获得节点实例\r\n    */\r\n    getNodeByID(id: number): any {\r\n        if (this._idMap) return this._idMap[id];\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 打开场景。【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选）\r\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\r\n     */\r\n    open(closeOther: boolean = true, param: any = null): void {\r\n        if (closeOther) Scene.closeAll();\r\n        Scene.root.addChild(this);\r\n        if (this._scene3D)\r\n            ILaya.stage.addChildAt(this._scene3D, 0);\r\n        this.onOpened(param);\r\n    }\r\n\r\n    /**场景打开完成后，调用此方法（如果有弹出动画，则在动画完成后执行）*/\r\n    onOpened(param: any): void {\r\n        //trace(\"onOpened\");\r\n    }\r\n\r\n    /**\r\n     * 关闭场景\r\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param type 关闭的原因，会传递给onClosed函数\r\n     */\r\n    close(type: string = null): void {\r\n        this.onClosed(type);\r\n        if (this.autoDestroyAtClosed) {\r\n            this.destroy();\r\n            if (this._scene3D)\r\n                this._scene3D.destroy();\r\n        }\r\n        else {\r\n            this.removeSelf();\r\n            if (this._scene3D)\r\n                this._scene3D.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭完成后，调用此方法（如果有关闭动画，则在动画完成后执行）\r\n     * @param type 如果是点击默认关闭按钮触发，则传入关闭按钮的名字(name)，否则为null。\r\n     */\r\n    onClosed(type: string = null): void {\r\n        //trace(\"onClosed\");\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        if (this._scene3D) {\r\n            this._scene3D.destroy();\r\n            this._scene3D = null;\r\n        }\r\n\r\n        this._idMap = null;\r\n        Scene.unDestroyedScenes.delete(this);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        var max: number = 0;\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        var max: number = 0;\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * 场景时钟\r\n     * @override\r\n     */\r\n    get timer(): Timer {\r\n        return this._timer;\r\n    }\r\n\r\n    set timer(value: Timer) {\r\n        this._timer = value;\r\n    }\r\n\r\n    /**\r\n     * 场景包含的3D场景实例\r\n     */\r\n    get scene3D() {\r\n        return this._scene3D;\r\n    }\r\n\r\n    /**\r\n     * <p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get top(): number {\r\n        return this._widget.top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        if (value != this._widget.top) {\r\n            this._getWidget().top = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get bottom(): number {\r\n        return this._widget.bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        if (value != this._widget.bottom) {\r\n            this._getWidget().bottom = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get left(): number {\r\n        return this._widget.left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (value != this._widget.left) {\r\n            this._getWidget().left = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get right(): number {\r\n        return this._widget.right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (value != this._widget.right) {\r\n            this._getWidget().right = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerX(): number {\r\n        return this._widget.centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (value != this._widget.centerX) {\r\n            this._getWidget().centerX = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerY(): number {\r\n        return this._widget.centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (value != this._widget.centerY) {\r\n            this._getWidget().centerY = value;\r\n        }\r\n    }\r\n\r\n    protected _shouldRefreshLayout(): void {\r\n        super._shouldRefreshLayout();\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        this.event(Event.RESIZE);\r\n        if (this._widget !== Widget.EMPTY) this._widget.resetLayout();\r\n    }\r\n\r\n    /**\r\n     * 重新排版\r\n     */\r\n    freshLayout() {\r\n        if (this._widget != Widget.EMPTY) {\r\n            this._widget.resetLayout();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>获取对象的布局样式。请不要直接修改此对象</p>\r\n     */\r\n    private _getWidget(): Widget {\r\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\r\n        return this._widget;\r\n    }\r\n\r\n    //////////////////////////////////////静态方法//////////////////////////////////////////\r\n\r\n    /**获取场景根容器*/\r\n    static get root(): Sprite {\r\n        let root = Scene._root;\r\n        if (!root) {\r\n            root = Scene._root = (<Sprite>ILaya.stage.addChild(new Sprite()));\r\n            root.name = \"root\";\r\n            root.mouseThrough = true;\r\n            ILaya.stage.on(\"resize\", null, () => {\r\n                root.size(ILaya.stage.width, ILaya.stage.height);\r\n                root.event(Event.RESIZE);\r\n            });\r\n            root.size(ILaya.stage.width, ILaya.stage.height);\r\n            root.event(Event.RESIZE);\r\n        }\r\n        return root;\r\n    }\r\n\r\n    /**\r\n     * 加载场景及场景使用到的资源\r\n     * @param\turl\t\t\t场景地址\r\n     * @param\tcomplete\t加载完成回调，返回场景实例（可选）\r\n     * @param\tprogress\t加载进度回调（可选）\r\n     */\r\n    static load(url: string, complete: Handler = null, progress: Handler = null): Promise<Scene> {\r\n        return ILaya.loader.load(url, null, value => {\r\n            if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\r\n            progress && progress.runWith(value);\r\n        }).then((content: Prefab) => {\r\n            if (!content) throw \"Can not find scene:\" + url;\r\n\r\n            let scene: Scene;\r\n            let errors: Array<any> = [];\r\n            let ret = content.create(null, errors);\r\n            if (errors.length > 0)\r\n                console.warn(`Error loading ${url}: \\n${errors.join(\"\\n\")}`);\r\n\r\n            if (ret instanceof Scene)\r\n                scene = ret;\r\n            else if (ret._is3D) {\r\n                scene = new Scene();\r\n                scene.left = scene.right = scene.top = scene.bottom = 0;\r\n                scene._scene3D = ret;\r\n            }\r\n            else\r\n                throw \"Not a scene:\" + url;\r\n\r\n            scene._viewCreated = true;\r\n            if (scene._scene3D)\r\n                scene._scene3D._scene2D = scene;\r\n            Scene.unDestroyedScenes.add(scene);\r\n            Scene.hideLoadingPage();\r\n            complete && complete.runWith(scene);\r\n\r\n            return scene;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载并打开场景\r\n     * @param\turl\t\t\t场景地址\r\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选），【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\r\n     * @param\tcomplete\t打开完成回调，返回场景实例（可选）\r\n     * @param\tprogress\t加载进度回调（可选）\r\n     */\r\n    static open(url: string, closeOther: boolean = true, param: any = null, complete: Handler = null, progress: Handler = null): Promise<Scene> {\r\n        //兼容处理\r\n        if (param instanceof Handler) {\r\n            var temp: any = complete;\r\n            complete = param;\r\n            param = temp;\r\n        }\r\n        Scene.showLoadingPage();\r\n        return Scene.load(url, Handler.create(null, this._onSceneLoaded, [closeOther, complete, param]), progress);\r\n    }\r\n\r\n    /**@private */\r\n    private static _onSceneLoaded(closeOther: boolean, complete: Handler, param: any, scene: Scene): void {\r\n        scene.open(closeOther, param);\r\n        if (complete) complete.runWith(scene);\r\n    }\r\n\r\n    /**\r\n     * 根据地址，关闭场景（包括对话框）\r\n     * @param\turl\t\t场景地址\r\n     * @param\tname\t如果name不为空，name必须相同才能关闭\r\n     * @return\t返回是否关闭成功，如果url找不到，则不成功\r\n     */\r\n    static close(url: string, name?: string): boolean {\r\n        let flag: boolean = false;\r\n        for (let scene of Scene.unDestroyedScenes) {\r\n            if (scene && scene.parent && scene.url === url && (name == null || scene.name == name)) {\r\n                scene.close();\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * 关闭所有场景，不包括对话框，如果关闭对话框，请使用Dialog.closeAll()\r\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     */\r\n    static closeAll(): void {\r\n        let root: Sprite = Scene.root;\r\n        for (let i = 0, n = root.numChildren; i < n; i++) {\r\n            var scene = root.getChildAt(0);\r\n            if (scene instanceof Scene)\r\n                scene.close();\r\n            else\r\n                scene.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据地址，销毁场景（包括对话框）\r\n     * @param\turl\t\t场景地址\r\n     * @param\tname\t如果name不为空，name必须相同才能关闭\r\n     * @return\t返回是否销毁成功，如果url找不到，则不成功\r\n     */\r\n    static destroy(url: string, name?: string): boolean {\r\n        let flag: boolean = false;\r\n        for (let scene of Scene.unDestroyedScenes) {\r\n            if (scene.url === url && (name == null || scene.name == name) && !scene._destroyed) {\r\n                scene.destroy();\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\r\n     */\r\n    static gc(): void {\r\n        Resource.destroyUnusedResources();\r\n    }\r\n\r\n    /**\r\n     * 设置loading界面，引擎会在调用open方法后，延迟打开loading界面，在页面添加到舞台之后，关闭loading界面\r\n     * @param\tloadPage \tload界面实例\r\n     */\r\n    static setLoadingPage(loadPage: Sprite): void {\r\n        Scene._loadPage = loadPage;\r\n    }\r\n\r\n    /**\r\n     * 显示loading界面\r\n     * @param\tparam 打开参数，如果是scene，则会传递给onOpened方法\r\n     * @param\tdelay 延迟打开时间，默认500毫秒\r\n     */\r\n    static showLoadingPage(param: any = null, delay: number = 500): void {\r\n        if (Scene._loadPage) {\r\n            ILaya.systemTimer.clear(null, Scene._showLoading);\r\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\r\n            ILaya.systemTimer.once(delay, null, Scene._showLoading, [param], false);\r\n        }\r\n    }\r\n\r\n    private static _showLoading(param: any): void {\r\n        ILaya.stage.addChild(Scene._loadPage);\r\n        if (Scene._loadPage instanceof Scene)\r\n            Scene._loadPage.onOpened(param);\r\n    }\r\n\r\n    private static _hideLoading(): void {\r\n        if (Scene._loadPage instanceof Scene)\r\n            Scene._loadPage.close();\r\n        else\r\n            Scene._loadPage.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * 隐藏loading界面\r\n     * @param\tdelay 延迟关闭时间，默认500毫秒\r\n     */\r\n    static hideLoadingPage(delay: number = 500): void {\r\n        if (Scene._loadPage) {\r\n            ILaya.systemTimer.clear(null, Scene._showLoading);\r\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\r\n            ILaya.systemTimer.once(delay, null, Scene._hideLoading);\r\n        }\r\n    }\r\n}","import { CallLater } from \"./CallLater\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/**\r\n * <code>Timer</code> 是时钟管理类。它是一个单例，不要手动实例化此类，应该通过 Laya.timer 访问。\r\n */\r\nexport class Timer {\r\n    /**@private */\r\n    static gSysTimer: Timer = null;\r\n\r\n    /**@private */\r\n    private static _pool: any[] = [];\r\n    /**@private */\r\n    static _mid: number = 1;\r\n\r\n\r\n    /** 时针缩放。*/\r\n    scale: number = 1;\r\n    /** 当前帧开始的时间。*/\r\n    currTimer: number;\r\n    /** 当前的帧数。*/\r\n    currFrame: number = 0;\r\n    /**@internal 两帧之间的时间间隔,单位毫秒。*/\r\n    _delta: number = 0;\r\n    /**@internal */\r\n    _lastTimer: number;\r\n    /**@private */\r\n    private _map: { [key: string]: TimerHandler } = {};\r\n    /**@private */\r\n    private _handlers: any[] = [];\r\n    /**@private */\r\n    private _temp: any[] = [];\r\n    /**@private */\r\n    private _count: number = 0;\r\n\r\n    /**\r\n     * 创建 <code>Timer</code> 类的一个实例。\r\n     */\r\n    constructor(autoActive: boolean = true) {\r\n        autoActive && Timer.gSysTimer && Timer.gSysTimer.frameLoop(1, this, this._update);\r\n        this.currTimer = this._getNowData();\r\n        this._lastTimer = this._getNowData();\r\n    }\r\n\r\n    /**两帧之间的时间间隔,单位毫秒。*/\r\n    get delta(): number {\r\n        return this._delta;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * 帧循环处理函数。\r\n     */\r\n    _update(): void {\r\n        if (this.scale <= 0) {\r\n            this._lastTimer = this._getNowData();\r\n            this._delta = 0;\r\n            return;\r\n        }\r\n        var frame: number = this.currFrame = this.currFrame + this.scale;\r\n        var now: number = this._getNowData();\r\n        var awake: boolean = (now - this._lastTimer) > 30000;\r\n        this._delta = (now - this._lastTimer) * this.scale;\r\n        var timer: number = this.currTimer = this.currTimer + this._delta;\r\n        this._lastTimer = now;\r\n\r\n        //处理handler\r\n        var handlers: any[] = this._handlers;\r\n        this._count = 0;\r\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) {\r\n                var t: number = handler.userFrame ? frame : timer;\r\n                if (t >= handler.exeTime) {\r\n                    if (handler.repeat) {\r\n                        if (!handler.jumpFrame || awake) {\r\n                            handler.exeTime += handler.delay;\r\n                            handler.run(false);\r\n                            if (t > handler.exeTime) {\r\n                                //如果执行一次后还能再执行，做跳出处理，如果想用多次执行，需要设置jumpFrame=true\r\n                                handler.exeTime += Math.ceil((t - handler.exeTime) / handler.delay) * handler.delay;\r\n                            }\r\n                        } else {\r\n                            while (t >= handler.exeTime) {\r\n                                handler.exeTime += handler.delay;\r\n                                handler.run(false);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        handler.run(true);\r\n                    }\r\n                }\r\n            } else {\r\n                this._count++;\r\n            }\r\n        }\r\n\r\n        if (this._count > 30 || frame % 200 === 0) this._clearHandlers();\r\n    }\r\n\r\n    /** @private */\r\n    private _clearHandlers(): void {\r\n        var handlers: any[] = this._handlers;\r\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) this._temp.push(handler);\r\n            else this._recoverHandler(handler);\r\n        }\r\n        this._handlers = this._temp;\r\n        handlers.length = 0;\r\n        this._temp = handlers;\r\n    }\r\n\r\n    /** @private */\r\n    private _recoverHandler(handler: TimerHandler): void {\r\n        if (this._map[handler.key] == handler) delete this._map[handler.key];\r\n        handler.clear();\r\n        Timer._pool.push(handler);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * get now time data\r\n     * @returns \r\n     */\r\n    public _getNowData(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    /** @internal */\r\n    _create(useFrame: boolean, repeat: boolean, delay: number, caller: any, method: Function, args: any[], coverBefore: boolean): TimerHandler {\r\n        //如果延迟为0，则立即执行\r\n        if (!delay) {\r\n            method.apply(caller, args);\r\n            return null;\r\n        }\r\n\r\n        //先覆盖相同函数的计时\r\n        if (coverBefore) {\r\n            var handler: TimerHandler = this._getHandler(caller, method);\r\n            if (handler) {\r\n                handler.repeat = repeat;\r\n                handler.userFrame = useFrame;\r\n                handler.delay = delay;\r\n                handler.caller = caller;\r\n                handler.method = method;\r\n                handler.args = args;\r\n                handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\r\n                return handler;\r\n            }\r\n        }\r\n\r\n        //找到一个空闲的timerHandler\r\n        handler = Timer._pool.length > 0 ? Timer._pool.pop() : new TimerHandler();\r\n        handler.repeat = repeat;\r\n        handler.userFrame = useFrame;\r\n        handler.delay = delay;\r\n        handler.caller = caller;\r\n        handler.method = method;\r\n        handler.args = args;\r\n        handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\r\n\r\n        //索引handler\r\n        this._indexHandler(handler);\r\n\r\n        //插入数组\r\n        this._handlers.push(handler);\r\n\r\n        return handler;\r\n    }\r\n\r\n    /** @private */\r\n    private _indexHandler(handler: TimerHandler): void {\r\n        var caller: any = handler.caller;\r\n        var method: any = handler.method;\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\r\n        handler.key = cid + \"_\" + mid;\r\n        this._map[handler.key] = handler;\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次。\r\n     * @param\tdelay\t延迟时间(单位为毫秒)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    once(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行。\r\n     * @param\tdelay\t间隔时间(单位毫秒)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\r\n     */\r\n    loop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        var handler: TimerHandler = this._create(false, true, delay, caller, method, args, coverBefore);\r\n        if (handler) handler.jumpFrame = jumpFrame;\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次(基于帧率)。\r\n     * @param\tdelay\t延迟几帧(单位为帧)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行(基于帧率)。\r\n     * @param\tdelay\t间隔几帧(单位为帧)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /** 返回统计信息。*/\r\n    toString(): string {\r\n        return \" handlers:\" + this._handlers.length + \" pool:\" + Timer._pool.length;\r\n    }\r\n\r\n    /**\r\n     * 清理定时器。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    clear(caller: any, method: Function): void {\r\n        var handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理对象身上的所有定时器。\r\n     * @param\tcaller 执行域(this)。\r\n     */\r\n    clearAll(caller: any): void {\r\n        if (!caller) return;\r\n        for (var i: number = 0, n: number = this._handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = this._handlers[i];\r\n            if (handler.caller === caller) {\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): TimerHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\r\n        var key: any = cid + \"_\" + mid;\r\n        return this._map[key];\r\n    }\r\n\r\n    /**\r\n     * 延迟执行。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     * @param\targs 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        CallLater.I.callLater(caller, method, args);\r\n    }\r\n\r\n    /**\r\n     * 立即执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        CallLater.I.runCallLater(caller, method);\r\n    }\r\n\r\n    /**\r\n     * 取消执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    clearCallLater(caller: any, method: Function): void {\r\n        CallLater.I.clear(caller, method);\r\n    }\r\n\r\n    /**\r\n     * 立即提前执行定时器，执行之后从队列中删除\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runTimer(caller: any, method: Function): void {\r\n        var handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停时钟\r\n     */\r\n    pause(): void {\r\n        this.scale = 0;\r\n    }\r\n\r\n    /**\r\n     * 恢复时钟\r\n     */\r\n    resume(): void {\r\n        this.scale = 1;\r\n    }\r\n\r\n\r\n    destroy() {\r\n        for (var i = 0, n = this._handlers.length; i < n; i++) {\r\n            var handler = this._handlers[i];\r\n            handler.clear();\r\n        }\r\n        this._handlers.length = 0;\r\n        this._map = {};\r\n        this._temp.length = 0;\r\n    }\r\n}\r\n\r\n\r\n\r\n/** @private */\r\nclass TimerHandler {\r\n    key: string;\r\n    repeat: boolean;\r\n    delay: number;\r\n    userFrame: boolean;\r\n    exeTime: number;\r\n    caller: any\r\n    method: Function;\r\n    args: any[];\r\n    jumpFrame: boolean;\r\n\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    run(withClear: boolean): void {\r\n        var caller: any = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method: Function = this.method;\r\n        var args: any[] = this.args;\r\n        withClear && this.clear();\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n","import { Timer } from \"./Timer\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class CallLater {\r\n    static I = new CallLater();\r\n    /**@private */\r\n    private _pool: LaterHandler[] = [];\r\n    /**@private */\r\n    private _map: { [key: string]: LaterHandler } = {};\r\n    /**@private */\r\n    private _laters: LaterHandler[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     * 帧循环处理函数。\r\n     */\r\n    _update(): void {\r\n        let laters = this._laters;\r\n        let len = laters.length;\r\n        if (len > 0) {\r\n            for (let i = 0, n = len - 1; i <= n; i++) {\r\n                let handler = laters[i];\r\n                this._map[handler.key] = null;\r\n                if (handler.method !== null) {\r\n                    handler.run();\r\n                    handler.clear();\r\n                }\r\n                this._pool.push(handler);\r\n                i === n && (n = laters.length - 1);\r\n            }\r\n            laters.length = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): LaterHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = (Timer._mid++));\r\n        return this._map[cid + '.' + mid]\r\n    }\r\n\r\n    /**\r\n     * 延迟执行。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     * @param\targs 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        if (this._getHandler(caller, method) == null) {\r\n            let handler: LaterHandler;\r\n            if (this._pool.length)\r\n                handler = this._pool.pop();\r\n            else\r\n                handler = new LaterHandler();\r\n            //设置属性\r\n            handler.caller = caller;\r\n            handler.method = method;\r\n            handler.args = args;\r\n            //索引handler\r\n            var cid: number = caller ? caller.$_GID : 0;\r\n            var mid: number = (method as any)[\"$_TID\"];\r\n            handler.key = cid + '.' + mid;\r\n            this._map[handler.key] = handler\r\n            //插入队列\r\n            this._laters.push(handler);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 立即执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run();\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    clear(caller: any, method: Function) {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            this._map[handler.key] = null;\r\n            handler.key = \"\";\r\n            handler.clear();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clearAll(caller: any) {\r\n        if (!caller) return;\r\n        for (var i = 0, n = this._laters.length; i < n; i++) {\r\n            var handler = this._laters[i];\r\n            if (handler.caller === caller) {\r\n                this._map[handler.key] = null;\r\n                handler.key = \"\";\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/** @private */\r\nclass LaterHandler {\r\n    key: string;\r\n    caller: any\r\n    method: Function;\r\n    args: any[];\r\n\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    run(): void {\r\n        var caller = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method = this.method;\r\n        var args = this.args;\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderState2D } from \"./utils/RenderState2D\"\r\n\r\n/**\r\n * @private\r\n */\r\nexport class WebGL {\r\n    static isNativeRender_enable: boolean = false;\r\n\r\n    static _nativeRender_enable(): void {\r\n    }\r\n\r\n    //使用webgl渲染器\r\n    static enable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    static onStageResize(width: number, height: number): void {\r\n        LayaGL.renderEngine.viewport(0, 0, width, height);\r\n        RenderState2D.width = width;\r\n        RenderState2D.height = height;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { WebGL } from \"../webgl/WebGL\"\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nexport class RunDriver {\r\n\r\n    /**\r\n     * 用于改变 WebGL宽高信息。\r\n     */\r\n    static changeWebGLSize: Function = function (w: number, h: number): void {\r\n        WebGL.onStageResize(w, h);\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from \"./Component\";\r\n\r\nexport class ComponentDriver {\r\n    private _onUpdates: Set<Component> = new Set();\r\n    private _onLateUpdates: Set<Component> = new Set();\r\n    private _onPreRenders: Set<Component> = new Set();\r\n    private _onPostRenders: Set<Component> = new Set();\r\n\r\n    private _toStarts: Set<Component> = new Set();\r\n    readonly _toDestroys: Set<Component> = new Set();\r\n    /**\r\n     * @internal\r\n     * 调用组件Onstart\r\n     */\r\n    callStart() {\r\n        for (let ele of this._toStarts) {\r\n            if (ele._status == 2) {\r\n                ele._status = 3;\r\n\r\n                try {\r\n                    ele.onStart();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n        this._toStarts.clear();\r\n    }\r\n    /**\r\n     * @internal\r\n     * 调用组件OnUpdate\r\n     */\r\n    callUpdate() {\r\n        for (let ele of this._onUpdates) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onUpdate();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件LayeUpdate\r\n     */\r\n    callLateUpdate() {\r\n        for (let ele of this._onLateUpdates) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onLateUpdate();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件onPreRender\r\n     */\r\n    callPreRender() {\r\n        for (let ele of this._onPreRenders) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onPreRender();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件onPostRender\r\n     */\r\n    callPostRender() {\r\n        for (let ele of this._onPostRenders) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onPostRender();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用销毁\r\n     */\r\n    callDestroy(): void {\r\n        for (let ele of this._toDestroys) {\r\n            try {\r\n                ele._destroy(true);\r\n            }\r\n            catch (err: any) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        this._toDestroys.clear();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 添加一个组件\r\n     * @param comp 组件\r\n     */\r\n    add(comp: Component) {\r\n        if (comp._status == 1) {\r\n            if (comp.onStart) {\r\n                comp._status = 2;\r\n                this._toStarts.add(comp);\r\n            }\r\n            else\r\n                comp._status = 3;\r\n        }\r\n\r\n        if (comp.onUpdate)\r\n            this._onUpdates.add(comp);\r\n        if (comp.onLateUpdate)\r\n            this._onLateUpdates.add(comp);\r\n\r\n        if (comp.onPreRender)\r\n            this._onPreRenders.add(comp);\r\n        if (comp.onPostRender)\r\n            this._onPostRenders.add(comp);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 移除一个组件\r\n     * @param comp 组件\r\n     */\r\n    remove(comp: Component) {\r\n        if (comp._status == 2) //starting\r\n            comp._status = 1; //cancel start\r\n\r\n        if (comp.onUpdate)\r\n            this._onUpdates.delete(comp);\r\n        if (comp.onLateUpdate)\r\n            this._onLateUpdates.delete(comp);\r\n\r\n        if (comp.onPreRender)\r\n            this._onPreRenders.delete(comp);\r\n        if (comp.onPostRender)\r\n            this._onPostRenders.delete(comp);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 删除组件Driver\r\n     */\r\n    destroy() {\r\n        //TODO:\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { Node } from \"./Node\";\r\nimport { Config } from \"./../../Config\";\r\nimport { Input } from \"./Input\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\nimport { InputManager } from \"../events/InputManager\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Render } from \"../renders/Render\"\r\nimport { RenderInfo } from \"../renders/RenderInfo\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { CallLater } from \"../utils/CallLater\"\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { RunDriver } from \"../utils/RunDriver\"\r\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ComponentDriver } from \"../components/ComponentDriver\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * stage大小经过重新调整时进行调度。\r\n * @eventType Event.RESIZE\r\n */\r\n/*[Event(name = \"resize\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台获得焦点时调度。比如浏览器或者当前标签处于后台，重新切换回来时进行调度。\r\n * @eventType Event.FOCUS\r\n */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台失去焦点时调度。比如浏览器或者当前标签被切换到后台后调度。\r\n * @eventType Event.BLUR\r\n */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台焦点变化时调度，使用Laya.stage.isFocused可以获取当前舞台是否获得焦点。\r\n * @eventType Event.FOCUS_CHANGE\r\n */\r\n/*[Event(name = \"focuschange\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台可见性发生变化时调度（比如浏览器或者当前标签被切换到后台后调度），使用Laya.stage.isVisibility可以获取当前是否处于显示状态。\r\n * @eventType Event.VISIBILITY_CHANGE\r\n */\r\n/*[Event(name = \"visibilitychange\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 浏览器全屏更改时调度，比如进入全屏或者退出全屏。\r\n * @eventType Event.FULL_SCREEN_CHANGE\r\n */\r\n/*[Event(name = \"fullscreenchange\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Stage</code> 是舞台类，显示列表的根节点，所有显示对象都在舞台上显示。通过 Laya.stage 单例访问。</p>\r\n * <p>Stage提供几种适配模式，不同的适配模式会产生不同的画布大小，画布越大，渲染压力越大，所以要选择合适的适配方案。</p>\r\n * <p>Stage提供不同的帧率模式，帧率越高，渲染压力越大，越费电，合理使用帧率甚至动态更改帧率有利于改进手机耗电。</p>\r\n */\r\nexport class Stage extends Sprite {\r\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_NOSCALE: string = \"noscale\";\r\n    /**应用根据屏幕大小铺满全屏，非等比缩放会变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_EXACTFIT: string = \"exactfit\";\r\n    /**应用显示全部内容，按照最小比率缩放，等比缩放不变形，一边可能会留空白，stage的宽高等于设计宽高。*/\r\n    static SCALE_SHOWALL: string = \"showall\";\r\n    /**应用按照最大比率缩放显示，宽或高方向会显示一部分，等比缩放不变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_NOBORDER: string = \"noborder\";\r\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于屏幕宽高。*/\r\n    static SCALE_FULL: string = \"full\";\r\n    /**应用保持设计宽度不变，高度根据屏幕比缩放，stage的宽度等于设计高度，高度根据屏幕比率大小而变化*/\r\n    static SCALE_FIXED_WIDTH: string = \"fixedwidth\";\r\n    /**应用保持设计高度不变，宽度根据屏幕比缩放，stage的高度等于设计宽度，宽度根据屏幕比率大小而变化*/\r\n    static SCALE_FIXED_HEIGHT: string = \"fixedheight\";\r\n    /**应用保持设计比例不变，全屏显示全部内容(类似showall，但showall非全屏，会有黑边)，根据屏幕长宽比，自动选择使用SCALE_FIXED_WIDTH或SCALE_FIXED_HEIGHT*/\r\n    static SCALE_FIXED_AUTO: string = \"fixedauto\";\r\n\r\n    static SCALE_FIXED_AUTO_LAYAME: string = \"fixedauto_layame\";\r\n    static SCALE_FIXED_AUTO_LAYAVERSE: string = \"fixedauto_layaverse\";\r\n\r\n    /**画布水平居左对齐。*/\r\n    static ALIGN_LEFT: string = \"left\";\r\n    /**画布水平居右对齐。*/\r\n    static ALIGN_RIGHT: string = \"right\";\r\n    /**画布水平居中对齐。*/\r\n    static ALIGN_CENTER: string = \"center\";\r\n    /**画布垂直居上对齐。*/\r\n    static ALIGN_TOP: string = \"top\";\r\n    /**画布垂直居中对齐。*/\r\n    static ALIGN_MIDDLE: string = \"middle\";\r\n    /**画布垂直居下对齐。*/\r\n    static ALIGN_BOTTOM: string = \"bottom\";\r\n\r\n    /**不更改屏幕。*/\r\n    static SCREEN_NONE: string = \"none\";\r\n    /**自动横屏。*/\r\n    static SCREEN_HORIZONTAL: string = \"horizontal\";\r\n    /**自动竖屏。*/\r\n    static SCREEN_VERTICAL: string = \"vertical\";\r\n\r\n    /**全速模式，以60的帧率运行。*/\r\n    static FRAME_FAST: string = \"fast\";\r\n    /**慢速模式，以30的帧率运行。*/\r\n    static FRAME_SLOW: string = \"slow\";\r\n    /**自动模式，以30的帧率运行，但鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗。*/\r\n    static FRAME_MOUSE: string = \"mouse\";\r\n    /**休眠模式，以1的帧率运行*/\r\n    static FRAME_SLEEP: string = \"sleep\";\r\n\r\n    /**当前焦点对象，此对象会影响当前键盘事件的派发主体。*/\r\n    focus: Node;\r\n    /**@private 相对浏览器左上角的偏移，弃用，请使用_canvasTransform。*/\r\n    offset: Point = new Point();\r\n    /**帧率类型，支持三种模式：fast-60帧(默认)，slow-30帧，mouse-30帧（鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗），sleep-1帧。*/\r\n    private _frameRate: string = \"fast\";\r\n    /**设计宽度（初始化时设置的宽度Laya.init(width,height)）*/\r\n    designWidth: number = 0;\r\n    /**设计高度（初始化时设置的高度Laya.init(width,height)）*/\r\n    designHeight: number = 0;\r\n    /**画布是否发生翻转。*/\r\n    canvasRotation: boolean = false;\r\n    /**画布的旋转角度。*/\r\n    canvasDegree: number = 0;\r\n    /**\r\n     * <p>设置是否渲染，设置为false，可以停止渲染，画面会停留到最后一次渲染上，减少cpu消耗，此设置不影响时钟。</p>\r\n     * <p>比如非激活状态，可以设置renderingEnabled=false以节省消耗。</p>\r\n     * */\r\n    renderingEnabled: boolean = true;\r\n    /**是否启用屏幕适配，可以适配后，在某个时候关闭屏幕适配，防止某些操作导致的屏幕意外改变*/\r\n    screenAdaptationEnabled: boolean = true;\r\n    /**@internal */\r\n    _canvasTransform: Matrix = new Matrix();\r\n    /**@private */\r\n    private _screenMode: string = \"none\";\r\n    /**@private */\r\n    private _scaleMode: string = \"noscale\";\r\n    /**@private */\r\n    private _alignV: string = \"top\";\r\n    /**@private */\r\n    private _alignH: string = \"left\";\r\n    /**@private */\r\n    private _bgColor: string = \"black\";\r\n    /**@internal */\r\n    _mouseMoveTime: number = 0;\r\n    /**@private */\r\n    private _renderCount: number = 0;\r\n    /**@private */\r\n    private _safariOffsetY: number = 0;\r\n    /**@private */\r\n    private _frameStartTime: number = 0;\r\n    /**@private */\r\n    private _previousOrientation: number = Browser.window.orientation;\r\n    /**@private */\r\n    private _isFocused: boolean;\r\n    /**@private */\r\n    private _isVisibility: boolean;\r\n    /**@internal webgl Color*/\r\n    _wgColor: number[] | null = [0, 0, 0, 1];\r\n    /**@internal */\r\n    _scene3Ds: Node[] = [];\r\n\r\n    /**@private */\r\n    private _globalRepaintSet: boolean = false;\t\t// 设置全局重画标志。这个是给IDE用的。IDE的Image无法在onload的时候通知对应的sprite重画。\r\n    /**@private */\r\n    private _globalRepaintGet: boolean = false;\t\t// 一个get一个set是为了把标志延迟到下一帧的开始，防止部分对象接收不到。\r\n\r\n    /**使用物理分辨率作为canvas大小，会改进渲染效果，但是会降低性能*/\r\n    useRetinalCanvas: boolean = false;\r\n\r\n    /**场景类，引擎中只有一个stage实例，此实例可以通过Laya.stage访问。*/\r\n    constructor() {\r\n        super();\r\n        super.set_transform(this._createTransform());\r\n        //重置默认值，请不要修改\r\n        this.mouseEnabled = true;\r\n        this.hitTestPrior = true;\r\n        this.autoSize = false;\r\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, true);\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\r\n        this._isFocused = true;\r\n        this._isVisibility = true;\r\n\r\n        //this.drawCallOptimize=true;\r\n        this.useRetinalCanvas = Config.useRetinalCanvas;\r\n\r\n        var window: any = Browser.window;\r\n        //var _me = this;\t\r\n\r\n        window.addEventListener(\"focus\", () => {\r\n            this._isFocused = true;\r\n            this.event(Event.FOCUS);\r\n            this.event(Event.FOCUS_CHANGE);\r\n        });\r\n        window.addEventListener(\"blur\", () => {\r\n            this._isFocused = false;\r\n            this.event(Event.BLUR);\r\n            this.event(Event.FOCUS_CHANGE);\r\n            if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\r\n        });\r\n\r\n        // 各种浏览器兼容\r\n        var state = \"visibilityState\", visibilityChange = \"visibilitychange\";\r\n        var document: any = window.document;\r\n        if (typeof document.hidden !== \"undefined\") {\r\n            visibilityChange = \"visibilitychange\";\r\n            state = \"visibilityState\";\r\n        } else if (typeof document.mozHidden !== \"undefined\") {\r\n            visibilityChange = \"mozvisibilitychange\";\r\n            state = \"mozVisibilityState\";\r\n        } else if (typeof document.msHidden !== \"undefined\") {\r\n            visibilityChange = \"msvisibilitychange\";\r\n            state = \"msVisibilityState\";\r\n        } else if (typeof document.webkitHidden !== \"undefined\") {\r\n            visibilityChange = \"webkitvisibilitychange\";\r\n            state = \"webkitVisibilityState\";\r\n        }\r\n\r\n        window.document.addEventListener(visibilityChange, () => {\r\n            if (Browser.document[state] == \"hidden\") {\r\n                this._isVisibility = false;\r\n                if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\r\n            } else {\r\n                this._isVisibility = true;\r\n            }\r\n            this.renderingEnabled = this._isVisibility;\r\n            this.event(Event.VISIBILITY_CHANGE);\r\n        });\r\n        window.addEventListener(\"resize\", () => {\r\n            // 处理屏幕旋转。旋转后收起输入法。\r\n            var orientation: any = Browser.window.orientation;\r\n            if (orientation != null && orientation != this._previousOrientation && this._isInputting()) {\r\n                (Input[\"inputElement\"] as any).target.focus = false;\r\n            }\r\n            this._previousOrientation = orientation;\r\n\r\n            // 弹出输入法不应对画布进行resize。\r\n            if (this._isInputting()) return;\r\n\r\n            // Safari横屏工具栏偏移\r\n            if (Browser.onSafari)\r\n                this._safariOffsetY = Browser.getSafariToolbarOffset();\r\n\r\n            if (this.screenAdaptationEnabled) {\r\n                this.event(Event.WILL_RESIZE);\r\n                this.updateCanvasSize();\r\n            }\r\n        });\r\n\r\n        // 微信的iframe不触发orientationchange。\r\n        window.addEventListener(\"orientationchange\", (e: any) => {\r\n            if (this.screenAdaptationEnabled) {\r\n                this.event(Event.WILL_RESIZE);\r\n                this.updateCanvasSize();\r\n            }\r\n        });\r\n\r\n        this._componentDriver = new ComponentDriver();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 在移动端输入时，输入法弹出期间不进行画布尺寸重置。\r\n     */\r\n    private _isInputting(): boolean {\r\n        return (Browser.onMobile && InputManager.isTextInputting);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    set_width(value: number) {\r\n        this.designWidth = value;\r\n        super.set_width(value);\r\n        this.updateCanvasSize(true);\r\n    }\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        this.needUpdateCanvasSize();\r\n        return super.get_width();\r\n    }\r\n\r\n    /**@inheritDoc @override */\r\n    set_height(value: number) {\r\n        this.designHeight = value;\r\n        super.set_height(value);\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /** @override*/\r\n    get_height(): number {\r\n        this.needUpdateCanvasSize();\r\n        return super.get_height();\r\n    }\r\n\r\n    /**@override*/\r\n    set transform(value: Matrix) {\r\n        super.set_transform(value);\r\n    }\r\n    /**@inheritDoc @override*/\r\n    get transform(): Matrix {\r\n        if (this._tfChanged) this._adjustTransform();\r\n        return (this._transform = this._transform || this._createTransform());\r\n    }\r\n\r\n    /**\r\n     * 舞台是否获得焦点。\r\n     */\r\n    get isFocused(): boolean {\r\n        return this._isFocused;\r\n    }\r\n\r\n    /**\r\n     * 舞台是否处于可见状态(是否进入后台)。\r\n     */\r\n    get isVisibility(): boolean {\r\n        return this._isVisibility;\r\n    }\r\n\r\n    private _needUpdateCanvasSize: boolean = false;\r\n    updateCanvasSize(delay?: boolean): void {\r\n        if (delay) {\r\n            if (!this._needUpdateCanvasSize) {\r\n                this._needUpdateCanvasSize = true;\r\n                ILaya.systemTimer.callLater(this, this.updateCanvasSize);\r\n            }\r\n        }\r\n        else {\r\n            this.setScreenSize(Browser.clientWidth * Browser.pixelRatio, Browser.clientHeight * Browser.pixelRatio);\r\n        }\r\n    }\r\n\r\n    needUpdateCanvasSize() {\r\n        if (this._needUpdateCanvasSize)\r\n            this.updateCanvasSize();\r\n    }\r\n\r\n    /**\r\n     * 设置屏幕大小，场景会根据屏幕大小进行适配。可以动态调用此方法，来更改游戏显示的大小。\r\n     * @param\tscreenWidth\t\t屏幕宽度。\r\n     * @param\tscreenHeight\t屏幕高度。\r\n     */\r\n    setScreenSize(screenWidth: number, screenHeight: number): void {\r\n        this._needUpdateCanvasSize = false;\r\n\r\n        //计算是否旋转\r\n        var rotation: boolean = false;\r\n        if (this._screenMode !== Stage.SCREEN_NONE) {\r\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\r\n            rotation = screenType !== this._screenMode;\r\n            if (rotation) {\r\n                //宽高互换\r\n                var temp: number = screenHeight;\r\n                screenHeight = screenWidth;\r\n                screenWidth = temp;\r\n            }\r\n        }\r\n        this.canvasRotation = rotation;\r\n\r\n        var canvas: HTMLCanvas = Render._mainCanvas;\r\n        var mat: Matrix = this._canvasTransform.identity();\r\n        var scaleMode: string = this._scaleMode;\r\n        var scaleX: number = screenWidth / this.designWidth;\r\n        var scaleY: number = screenHeight / this.designHeight;\r\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\r\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\r\n        var realWidth: number = screenWidth;\r\n        var realHeight: number = screenHeight;\r\n        var pixelRatio: number = Browser.pixelRatio;\r\n        this._width = this.designWidth;\r\n        this._height = this.designHeight;\r\n\r\n        //处理缩放模式\r\n        switch (scaleMode) {\r\n            case Stage.SCALE_NOSCALE:\r\n                scaleX = scaleY = 1;\r\n                realWidth = this.designWidth;\r\n                realHeight = this.designHeight;\r\n                break;\r\n            case Stage.SCALE_SHOWALL:\r\n                scaleX = scaleY = Math.min(scaleX, scaleY);\r\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\r\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_NOBORDER:\r\n                scaleX = scaleY = Math.max(scaleX, scaleY);\r\n                realWidth = Math.round(this.designWidth * scaleX);\r\n                realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            // case Stage.SCALE_FULL:\r\n            //     scaleX = scaleY = 1;\r\n            //     this._width = canvasWidth = screenWidth;\r\n            //     this._height = canvasHeight = screenHeight;\r\n            //     break;\r\n            case Stage.SCALE_FULL:\r\n                scaleX = scaleY = pixelRatio;\r\n                canvasWidth = screenWidth;\r\n                canvasHeight = screenHeight;\r\n                this._width = screenWidth / pixelRatio;\r\n                this._height = screenHeight / pixelRatio;\r\n                break;\r\n            case Stage.SCALE_FIXED_WIDTH:\r\n                scaleY = scaleX;\r\n                this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                break;\r\n            case Stage.SCALE_FIXED_HEIGHT:\r\n                scaleX = scaleY;\r\n                this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO:\r\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\r\n                    scaleY = scaleX;\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = scaleY;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO_LAYAME:\r\n                if (screenWidth < screenHeight) {\r\n                    scaleY = scaleX;\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = screenHeight / this.designWidth;\r\n                    scaleY = scaleX;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\r\n                }\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO_LAYAVERSE:\r\n                if (screenWidth > screenHeight) {\r\n                    scaleX = scaleY;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                else {\r\n                    scaleX = screenWidth / this.designHeight;\r\n                    scaleY = scaleX;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.useRetinalCanvas) {\r\n            realWidth = canvasWidth = screenWidth;\r\n            realHeight = canvasHeight = screenHeight;\r\n        }\r\n\r\n        //根据不同尺寸缩放stage画面\r\n        scaleX *= this.scaleX;\r\n        scaleY *= this.scaleY;\r\n        if (scaleX === 1 && scaleY === 1) {\r\n            this.transform.identity();\r\n        } else {\r\n            this.transform.a = this._formatData(scaleX / (realWidth / canvasWidth));\r\n            this.transform.d = this._formatData(scaleY / (realHeight / canvasHeight));\r\n        }\r\n\r\n        //处理canvas大小\r\n        canvas.size(canvasWidth, canvasHeight);\r\n        RunDriver.changeWebGLSize(canvasWidth, canvasHeight);\r\n        mat.scale(realWidth / canvasWidth / pixelRatio, realHeight / canvasHeight / pixelRatio);\r\n\r\n        //处理水平对齐\r\n        if (this._alignH === Stage.ALIGN_LEFT) this.offset.x = 0;\r\n        else if (this._alignH === Stage.ALIGN_RIGHT) this.offset.x = screenWidth - realWidth;\r\n        else this.offset.x = (screenWidth - realWidth) * 0.5 / pixelRatio;\r\n\r\n        //处理垂直对齐\r\n        if (this._alignV === Stage.ALIGN_TOP) this.offset.y = 0;\r\n        else if (this._alignV === Stage.ALIGN_BOTTOM) this.offset.y = screenHeight - realHeight;\r\n        else this.offset.y = (screenHeight - realHeight) * 0.5 / pixelRatio;\r\n\r\n        //处理用户自行设置的画布偏移\r\n        this.offset.x = Math.round(this.offset.x);\r\n        this.offset.y = Math.round(this.offset.y);\r\n        mat.translate(this.offset.x, this.offset.y);\r\n        if (this._safariOffsetY) mat.translate(0, this._safariOffsetY);\r\n\r\n        //处理横竖屏\r\n        this.canvasDegree = 0;\r\n        if (rotation) {\r\n            if (this._screenMode === Stage.SCREEN_HORIZONTAL) {\r\n                mat.rotate(Math.PI / 2);\r\n                mat.translate(screenHeight / pixelRatio, 0);\r\n                this.canvasDegree = 90;\r\n            } else {\r\n                mat.rotate(-Math.PI / 2);\r\n                mat.translate(0, screenWidth / pixelRatio);\r\n                this.canvasDegree = -90;\r\n            }\r\n        }\r\n\r\n        mat.a = this._formatData(mat.a);\r\n        mat.d = this._formatData(mat.d);\r\n        mat.tx = this._formatData(mat.tx);\r\n        mat.ty = this._formatData(mat.ty);\r\n\r\n        super.set_transform(this.transform);\r\n        Stage._setStageStyle(canvas, canvasWidth, canvasHeight, mat);\r\n        //修正用户自行设置的偏移\r\n        if (this._safariOffsetY) mat.translate(0, -this._safariOffsetY);\r\n        this.visible = true;\r\n        this._repaint |= SpriteConst.REPAINT_CACHE;\r\n\r\n        this.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 适配淘宝小游戏\r\n     * @param mainCanv \r\n     */\r\n    static _setStageStyle(mainCanv: HTMLCanvas, canvasWidth: number, canvasHeight: number, mat: Matrix) {\r\n        var canvasStyle: any = mainCanv.source.style;\r\n        canvasStyle.transformOrigin = canvasStyle.webkitTransformOrigin = canvasStyle.msTransformOrigin = canvasStyle.mozTransformOrigin = canvasStyle.oTransformOrigin = \"0px 0px 0px\";\r\n        canvasStyle.transform = canvasStyle.webkitTransform = canvasStyle.msTransform = canvasStyle.mozTransform = canvasStyle.oTransform = \"matrix(\" + mat.toString() + \")\";\r\n        canvasStyle.width = canvasWidth;\r\n        canvasStyle.height = canvasHeight;\r\n        mat.translate(parseInt(canvasStyle.left) || 0, parseInt(canvasStyle.top) || 0);\r\n    }\r\n\r\n    /**\r\n     * 屏幕旋转用layaverse 需要\r\n     * @param screenWidth \r\n     * @param screenHeight \r\n     * @param _screenMode \r\n     * @returns \r\n     */\r\n    setScreenSizeForScene(screenWidth: number, screenHeight: number, _screenMode: string) {\r\n        //计算是否旋转\r\n        var rotation: boolean = false;\r\n        if (/**this.*/_screenMode !== Stage.SCREEN_NONE) {\r\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\r\n            rotation = screenType !== /**this.*/_screenMode;\r\n            if (rotation) {\r\n                //宽高互换\r\n                var temp: number = screenHeight;\r\n                screenHeight = screenWidth;\r\n                screenWidth = temp;\r\n            }\r\n        }\r\n        this.canvasRotation = rotation;\r\n\r\n        var canvas: HTMLCanvas = Render._mainCanvas;\r\n        var canvasStyle: any = canvas.source.style;\r\n        var mat: Matrix = this._canvasTransform/**add */.clone().identity();\r\n        var scaleMode: string = this._scaleMode;\r\n        var scaleX: number = screenWidth / this.designWidth\r\n        var scaleY: number = screenHeight / this.designHeight;\r\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\r\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\r\n        var realWidth: number = screenWidth;\r\n        var realHeight: number = screenHeight;\r\n        var pixelRatio: number = Browser.pixelRatio;\r\n        let /**this.*/_width = this.designWidth;\r\n        let /**this.*/_height = this.designHeight;\r\n\r\n        //处理缩放模式\r\n        switch (scaleMode) {\r\n            case Stage.SCALE_NOSCALE:\r\n                scaleX = scaleY = 1;\r\n                realWidth = this.designWidth;\r\n                realHeight = this.designHeight;\r\n                break;\r\n            case Stage.SCALE_SHOWALL:\r\n                scaleX = scaleY = Math.min(scaleX, scaleY);\r\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\r\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_NOBORDER:\r\n                scaleX = scaleY = Math.max(scaleX, scaleY);\r\n                realWidth = Math.round(this.designWidth * scaleX);\r\n                realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_FULL:\r\n                scaleX = scaleY = 1;\r\n\t\t\t\t/**this.*/_width = canvasWidth = screenWidth;\r\n\t\t\t\t/**this.*/_height = canvasHeight = screenHeight;\r\n                break;\r\n            case Stage.SCALE_FIXED_WIDTH:\r\n                scaleY = scaleX;\r\n\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                break;\r\n            case Stage.SCALE_FIXED_HEIGHT:\r\n                scaleX = scaleY;\r\n\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO:\r\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\r\n                    scaleY = scaleX;\r\n\t\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = scaleY;\r\n\t\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.useRetinalCanvas) {\r\n            realWidth = canvasWidth = screenWidth;\r\n            realHeight = canvasHeight = screenHeight;\r\n        }\r\n\r\n        return {\r\n            stageWidth: _width,\r\n            stageHeight: _height,\r\n            canvasWidth: canvasWidth,\r\n            canvasHeight: canvasHeight,\r\n            scaleX: scaleX / (realWidth / canvasWidth),\r\n            scaleY: scaleY / (realHeight / canvasHeight),\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _formatData(value: number): number {\r\n        if (Math.abs(value) < 0.000001) return 0;\r\n        if (Math.abs(1 - value) < 0.001) return value > 0 ? 1 : -1;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * <p>缩放模式。默认值为 \"noscale\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"noscale\" ：不缩放；</li>\r\n     * <li>\"exactfit\" ：全屏不等比缩放；</li>\r\n     * <li>\"showall\" ：最小比例缩放；</li>\r\n     * <li>\"noborder\" ：最大比例缩放；</li>\r\n     * <li>\"full\" ：不缩放，stage的宽高等于屏幕宽高；</li>\r\n     * <li>\"fixedwidth\" ：宽度不变，高度根据屏幕比缩放；</li>\r\n     * <li>\"fixedheight\" ：高度不变，宽度根据屏幕比缩放；</li>\r\n     * <li>\"fixedauto\" ：根据宽高比，自动选择使用fixedwidth或fixedheight；</li>\r\n     * </ul></p>\r\n     */\r\n    get scaleMode(): string {\r\n        return this._scaleMode;\r\n    }\r\n\r\n    set scaleMode(value: string) {\r\n        this._scaleMode = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * <p>水平对齐方式。默认值为\"left\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"left\" ：居左对齐；</li>\r\n     * <li>\"center\" ：居中对齐；</li>\r\n     * <li>\"right\" ：居右对齐；</li>\r\n     * </ul></p>\r\n     */\r\n    get alignH(): string {\r\n        this.needUpdateCanvasSize();\r\n        return this._alignH;\r\n    }\r\n\r\n    set alignH(value: string) {\r\n        this._alignH = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * <p>垂直对齐方式。默认值为\"top\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"top\" ：居顶部对齐；</li>\r\n     * <li>\"middle\" ：居中对齐；</li>\r\n     * <li>\"bottom\" ：居底部对齐；</li>\r\n     * </ul></p>\r\n     */\r\n    get alignV(): string {\r\n        this.needUpdateCanvasSize();\r\n        return this._alignV;\r\n    }\r\n\r\n    set alignV(value: string) {\r\n        this._alignV = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**舞台的背景颜色，默认为黑色，null为透明。*/\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        if (value)\r\n            this._wgColor = ColorUtils.create(value).arrColor;\r\n        else\r\n            this._wgColor = null;\r\n\r\n        Stage._setStyleBgColor(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 适配淘宝小游戏\r\n     * @param value \r\n     */\r\n    static _setStyleBgColor(value: string) {\r\n        if (value) {\r\n            Render.canvas.style.background = value;\r\n        } else {\r\n            Render.canvas.style.background = \"none\";\r\n        }\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 X 轴坐标。@override*/\r\n    get mouseX(): number {\r\n        return Math.round(InputManager.mouseX / this.clientScaleX);\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 Y 轴坐标。@override*/\r\n    get mouseY(): number {\r\n        return Math.round(InputManager.mouseY / this.clientScaleY);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    getMousePoint(): Point {\r\n        return Point.TEMP.setTo(this.mouseX, this.mouseY);\r\n    }\r\n\r\n    /**当前视窗由缩放模式导致的 X 轴缩放系数。*/\r\n    get clientScaleX(): number {\r\n        this.needUpdateCanvasSize();\r\n        return this._transform ? this._transform.getScaleX() : 1;\r\n    }\r\n\r\n    /**当前视窗由缩放模式导致的 Y 轴缩放系数。*/\r\n    get clientScaleY(): number {\r\n        this.needUpdateCanvasSize();\r\n        return this._transform ? this._transform.getScaleY() : 1;\r\n    }\r\n\r\n    /**\r\n     * <p>场景布局类型。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"none\" ：不更改屏幕</li>\r\n     * <li>\"horizontal\" ：自动横屏</li>\r\n     * <li>\"vertical\" ：自动竖屏</li>\r\n     * </ul></p>\r\n     */\r\n    get screenMode(): string {\r\n        return this._screenMode;\r\n    }\r\n\r\n    set screenMode(value: string) {\r\n        this._screenMode = value;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        this._repaint |= type;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _loop(): boolean {\r\n        this._globalRepaintGet = this._globalRepaintSet;\r\n        this._globalRepaintSet = false;\r\n        this.render(Render._context, 0, 0);\r\n        return true;\r\n    }\r\n\r\n    /**@private */\r\n    getFrameTm(): number {\r\n        return this._frameStartTime;\r\n    }\r\n\r\n    /**\r\n     * <p>获得距当前帧开始后，过了多少时间，单位为毫秒。</p>\r\n     * <p>可以用来判断函数内时间消耗，通过合理控制每帧函数处理消耗时长，避免一帧做事情太多，对复杂计算分帧处理，能有效降低帧率波动。</p>\r\n     */\r\n    getTimeFromFrameStart(): number {\r\n        return Browser.now() - this._frameStartTime;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    set visible(value: boolean) {\r\n        if (this.visible !== value) {\r\n            super.set_visible(value);\r\n            Stage._setVisibleStyle(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 适配淘宝小游戏\r\n     * @param value \r\n     */\r\n    static _setVisibleStyle(value: boolean) {\r\n        var style: any = Render._mainCanvas.source.style;\r\n        style.visibility = value ? \"visible\" : \"hidden\";\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get visible() {\r\n        return super.visible;\r\n    }\r\n\r\n    /** @private */\r\n    static clear: Function = function (value: string): void {\r\n        //修改需要同步到上面的native实现中\r\n        Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\r\n        RenderState2D.worldScissorTest && LayaGL.renderEngine.scissorTest(false);\r\n        var ctx: Context = Render.context;\r\n        //兼容浏览器\r\n        var c: any[] = (ctx._submits._length == 0 || Config.preserveDrawingBuffer) ? ColorUtils.create(value).arrColor : ILaya.stage._wgColor;\r\n        if (c)\r\n            ctx.clearBG(c[0], c[1], c[2], c[3]);\r\n        else\r\n            ctx.clearBG(0, 0, 0, 0);\r\n        RenderState2D.clear();\r\n    };\r\n\r\n    /**@inheritDoc @override*/\r\n    render(context: Context, x: number, y: number): void {\r\n        if (LayaEnv.isConch) {\r\n            this.renderToNative(context, x, y);\r\n            return;\r\n        }\r\n\r\n        let delta: number = ILaya.timer._delta / 1000;\r\n        if (this._frameRate === Stage.FRAME_SLEEP) {\r\n            var now: number = Browser.now();\r\n            if (now - this._frameStartTime < 1000)\r\n                return;\r\n            this._frameStartTime = now;\r\n        } else {\r\n            if (!this._visible) {\r\n                this._renderCount++;\r\n                if (this._renderCount % 5 === 0) {\r\n                    CallLater.I._update();\r\n                    Stat.loopCount++;\r\n                    RenderInfo.loopCount = Stat.loopCount;\r\n                    this._runComponents();\r\n                    this._updateTimers();\r\n                }\r\n                return;\r\n            }\r\n            this._frameStartTime = Browser.now();\r\n            RenderInfo.loopStTm = this._frameStartTime;\r\n        }\r\n\r\n        this._renderCount++;\r\n        var frameMode: string = this._frameRate === Stage.FRAME_MOUSE ? (((this._frameStartTime - this._mouseMoveTime) < 2000) ? Stage.FRAME_FAST : Stage.FRAME_SLOW) : this._frameRate;\r\n        var isFastMode: boolean = (frameMode !== Stage.FRAME_SLOW);\r\n        var isDoubleLoop: boolean = (this._renderCount % 2 === 0);\r\n\r\n        Stat.renderSlow = !isFastMode;\r\n        if (!isFastMode && !isDoubleLoop)//统一双帧处理渲染\r\n            return;\r\n\r\n        CallLater.I._update();\r\n        Stat.loopCount++;\r\n        RenderInfo.loopCount = Stat.loopCount;\r\n\r\n        if (this.renderingEnabled) {\r\n            for (let i = 0, n = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\r\n                (<any>this._scene3Ds[i])._update(delta);\r\n            this._runComponents();\r\n\r\n            context.clear();\r\n\r\n            this._componentDriver.callPreRender();\r\n\r\n            super.render(context, x, y);\r\n\r\n            Stat.render(context, x, y);\r\n\r\n            Stage.clear(this._bgColor);\r\n\r\n            context.flush();\r\n\r\n            this._componentDriver.callPostRender();\r\n\r\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\r\n        }\r\n        else\r\n            this._runComponents();\r\n\r\n        this._updateTimers();\r\n    }\r\n\r\n    renderToNative(context: Context, x: number, y: number): void {\r\n        this._renderCount++;\r\n\r\n        if (!this._visible) {\r\n            if (this._renderCount % 5 === 0) {\r\n                CallLater.I._update();\r\n                Stat.loopCount++;\r\n                RenderInfo.loopCount = Stat.loopCount;\r\n                this._runComponents();\r\n                this._updateTimers();\r\n            }\r\n            return;\r\n        }\r\n        this._frameStartTime = Browser.now();\r\n        //update\r\n        CallLater.I._update();\r\n        Stat.loopCount++;\r\n        RenderInfo.loopCount = Stat.loopCount;\r\n\r\n        //render\r\n        if (this.renderingEnabled) {\r\n            for (let i: number = 0, n: number = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\r\n                (<any>this._scene3Ds[i])._update();\r\n\r\n            this._runComponents();\r\n\r\n            this._componentDriver.callPreRender();\r\n\r\n            context.clear();\r\n            super.render(context, x, y);\r\n            Stat.render(context, x, y);\r\n\r\n            this._componentDriver.callPostRender();\r\n        }\r\n        else\r\n            this._runComponents();\r\n\r\n        //commit submit\r\n        if (this.renderingEnabled) {\r\n            Stage.clear(this._bgColor);\r\n            context.flush();\r\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\r\n        }\r\n        this._updateTimers();\r\n    }\r\n\r\n    private _runComponents() {\r\n        this._componentDriver.callStart();\r\n        this._componentDriver.callUpdate();\r\n        this._componentDriver.callLateUpdate();\r\n        this._componentDriver.callDestroy();\r\n    }\r\n\r\n    private _updateTimers(): void {\r\n        ILaya.systemTimer._update();\r\n        ILaya.physicsTimer._update();\r\n        ILaya.timer._update();\r\n    }\r\n\r\n    /**\r\n     * <p>是否开启全屏，用户点击后进入全屏。</p>\r\n     * <p>兼容性提示：部分浏览器不允许点击进入全屏，比如Iphone等。</p>\r\n     */\r\n    set fullScreenEnabled(value: boolean) {\r\n        var document: any = Browser.document;\r\n        var canvas: any = Render.canvas;\r\n        if (value) {\r\n            canvas.addEventListener('mousedown', requestFullscreen);\r\n            canvas.addEventListener('touchstart', requestFullscreen);\r\n            document.addEventListener(\"fullscreenchange\", fullScreenChanged);\r\n            document.addEventListener(\"mozfullscreenchange\", fullScreenChanged);\r\n            document.addEventListener(\"webkitfullscreenchange\", fullScreenChanged);\r\n            document.addEventListener(\"msfullscreenchange\", fullScreenChanged);\r\n        } else {\r\n            canvas.removeEventListener('mousedown', requestFullscreen);\r\n            canvas.removeEventListener('touchstart', requestFullscreen);\r\n            document.removeEventListener(\"fullscreenchange\", fullScreenChanged);\r\n            document.removeEventListener(\"mozfullscreenchange\", fullScreenChanged);\r\n            document.removeEventListener(\"webkitfullscreenchange\", fullScreenChanged);\r\n            document.removeEventListener(\"msfullscreenchange\", fullScreenChanged);\r\n        }\r\n    }\r\n\r\n    /**退出全屏模式*/\r\n    exitFullscreen(): void {\r\n        var document: any = Browser.document;\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n    }\r\n\r\n    get frameRate(): string {\r\n        if (!LayaEnv.isConch) {\r\n            return this._frameRate;\r\n        } else {\r\n            return ((<any>this))._frameRateNative;\r\n        }\r\n    }\r\n\r\n    set frameRate(value: string) {\r\n        if (!LayaEnv.isConch) {\r\n            this._frameRate = value;\r\n        } else {\r\n            var c: any = ((<any>window)).conch;\r\n            switch (value) {\r\n                case Stage.FRAME_FAST:\r\n                    c.config.setLimitFPS(60);\r\n                    break;\r\n                case Stage.FRAME_MOUSE:\r\n                    c.config.setMouseFrame(2000);\r\n                    break;\r\n                case Stage.FRAME_SLOW:\r\n                    c.config.setSlowFrame(true);\r\n                    break;\r\n                case Stage.FRAME_SLEEP:\r\n                    c.config.setLimitFPS(1);\r\n                    break;\r\n            }\r\n            ((<any>this))._frameRateNative = value;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    isGlobalRepaint(): boolean {\r\n        return this._globalRepaintGet;\r\n    }\r\n\r\n    /**@private */\r\n    setGlobalRepaint(): void {\r\n        this._globalRepaintSet = true;\r\n    }\r\n}\r\n\r\nfunction requestFullscreen(): void {\r\n    var element: any = Browser.document.documentElement;\r\n    if (element.requestFullscreen) {\r\n        element.requestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n        element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n        element.webkitRequestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n        element.msRequestFullscreen();\r\n    }\r\n\r\n    var canvas: any = Render.canvas;\r\n    canvas.removeEventListener('mousedown', requestFullscreen);\r\n    canvas.removeEventListener('touchstart', requestFullscreen);\r\n}\r\n\r\nfunction fullScreenChanged(): void {\r\n    ILaya.stage.event(Event.FULL_SCREEN_CHANGE);\r\n}","import { Matrix } from \"../maths/Matrix\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { BlurFilter } from \"./BlurFilter\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class BlurFilterGLRender {\r\n    private static blurinfo = new Vector2();\r\n    render(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: BlurFilter): void {\r\n        var shaderValue: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n        this.setShaderInfo(shaderValue, filter, rt.width, rt.height);\r\n        ctx.drawTarget(rt, 0, 0, width, height, Matrix.EMPTY.identity(), shaderValue);\r\n    }\r\n\r\n    setShaderInfo(shader: Value2D, filter: BlurFilter, w: number, h: number): void {\r\n        shader.defines.addDefine(ShaderDefines2D.FILTERBLUR);\r\n        var sv = <TextureSV>shader;\r\n        BlurFilterGLRender.blurinfo.x = w; BlurFilterGLRender.blurinfo.y = h;\r\n        sv.blurInfo = BlurFilterGLRender.blurinfo;\r\n        var sigma: number = filter.strength / 3.0;//3σ以外影响很小。即当σ=1的时候，半径为3;\r\n        var sigma2: number = sigma * sigma;\r\n        Vector4.tempVec4.x = filter.strength_sig2_2sig2_gauss1[0] = filter.strength;\r\n        Vector4.tempVec4.y = filter.strength_sig2_2sig2_gauss1[1] = sigma2;\t\t\t//做一些预计算传给shader，提高效率\r\n        Vector4.tempVec4.z = filter.strength_sig2_2sig2_gauss1[2] = 2.0 * sigma2;\r\n        Vector4.tempVec4.w = filter.strength_sig2_2sig2_gauss1[3] = 1.0 / (2.0 * Math.PI * sigma2);\r\n\r\n        sv.strength_sig2_2sig2_gauss1 = Vector4.tempVec4;\r\n    }\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { BlurFilterGLRender } from \"./BlurFilterGLRender\";\r\n\r\n/**\r\n * 模糊滤镜\r\n */\r\nexport class BlurFilter extends Filter {\r\n\r\n    /**模糊滤镜的强度(值越大，越不清晰 */\r\n    strength: number;\r\n    strength_sig2_2sig2_gauss1: number[] = [];//给shader用的。避免创建对象\r\n    strength_sig2_native: Float32Array;//给native用的\r\n    renderFunc: any;//\r\n\r\n    /**\r\n     * 模糊滤镜\r\n     * @param\tstrength\t模糊滤镜的强度值\r\n     */\r\n    constructor(strength: number = 4) {\r\n        super();\r\n        this.strength = strength;\r\n        this._glRender = new BlurFilterGLRender();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 当前滤镜的类型\r\n     * @override\r\n     */\r\n    get type(): number {\r\n        return Filter.BLUR;\r\n    }\r\n\r\n    getStrenth_sig2_2sig2_native(): Float32Array {\r\n        if (!this.strength_sig2_native) {\r\n            this.strength_sig2_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不要每次进行计算\r\n        var sigma: number = this.strength / 3.0;\r\n        var sigma2: number = sigma * sigma;\r\n        this.strength_sig2_native[0] = this.strength;\r\n        this.strength_sig2_native[1] = sigma2;\r\n        this.strength_sig2_native[2] = 2.0 * sigma2;\r\n        this.strength_sig2_native[3] = 1.0 / (2.0 * Math.PI * sigma2);\r\n        return this.strength_sig2_native;\r\n    }\r\n}\r\n\r\n","import { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\"\r\nimport { RenderStateContext } from \"../RenderEngine/RenderStateContext\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { GlowFilter } from \"./GlowFilter\";\r\n/**\r\n * @private\r\n */\r\nexport class GlowFilterGLRender {\r\n\tprivate setShaderInfo(shader: Value2D, w: number, h: number, data: GlowFilter): void {\r\n\t\tshader.defines.addDefine(data.typeDefine);\r\n\t\tvar sv = <TextureSV>shader;\r\n\t\t//data._sv_blurInfo1;// [data.blur, data.blur, data.offX, -data.offY];\r\n\t\tVector4.tempVec4.setValue(data._sv_blurInfo1[0], data._sv_blurInfo1[1], data._sv_blurInfo1[2], data._sv_blurInfo1[3]);\r\n\t\tsv.u_blurInfo1 = Vector4.tempVec4;\r\n\t\tvar info2 = data._sv_blurInfo2;\r\n\t\tinfo2[0] = w; info2[1] = h;\r\n\t\tVector4.tempVec4.setValue(info2[0], info2[1], info2[2], info2[3]);\r\n\t\tsv.u_blurInfo2 = Vector4.tempVec4;\r\n\t\tvar arry = data.getColor();\r\n\t\tVector4.tempVec4.setValue(arry[0], arry[1], arry[2], arry[3]);\r\n\t\tsv.color = Vector4.tempVec4;\r\n\t}\r\n\trender(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: GlowFilter): void {\r\n\t\tvar w: number = width, h: number = height;\r\n\t\tvar svBlur: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n\t\tthis.setShaderInfo(svBlur, w, h, filter);\r\n\t\tvar svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n\t\tvar matI: Matrix = Matrix.TEMP.identity();\r\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svBlur);\t//先画模糊的底\r\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svCP, null, 9);\t\t//再画原始图片,blend为9是为了解决文字边缘锯齿问题，主要是由于预乘alpha导致的，暂时先用这种方法解决\r\n\t\t//ctx.drawTarget(rt, 0, 0, w, h, matI, svCP);\r\n\t}\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { GlowFilterGLRender } from \"./GlowFilterGLRender\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { BlurFilter } from \"./BlurFilter\";\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\n\r\n/**\r\n *  发光滤镜(也可以当成阴影滤使用）\r\n */\r\nexport class GlowFilter extends Filter {\r\n\r\n    /**数据的存储，顺序R,G,B,A,blurWidth,offX,offY;*/\r\n    private _elements: Float32Array = new Float32Array(9);\r\n    /**@internal */\r\n    _sv_blurInfo1: number[] = new Array(4);\t//给shader用\r\n    /**@internal */\r\n    _sv_blurInfo2: number[] = [0, 0, 1, 0];\r\n    /**滤镜的颜色*/\r\n    private _color: ColorUtils;\r\n    /**@internal */\r\n    _color_native: Float32Array;\r\n    /**@internal */\r\n    _blurInof1_native: Float32Array;\r\n    /**@internal */\r\n    _blurInof2_native: Float32Array;\r\n\r\n    /**\r\n     * 创建发光滤镜\r\n     * @param\tcolor\t滤镜的颜色\r\n     * @param\tblur\t边缘模糊的大小\r\n     * @param\toffX\tX轴方向的偏移\r\n     * @param\toffY\tY轴方向的偏移\r\n     */\r\n    constructor(color: string, blur: number = 4, offX: number = 6, offY: number = 6) {\r\n        super();\r\n        this._color = new ColorUtils(color || \"#000\");\r\n        //限制最大效果为20\r\n        this.blur = Math.min(blur, 20);\r\n        this.offX = offX;\r\n        this.offY = offY;\r\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = this.blur; this._sv_blurInfo1[2] = offX; this._sv_blurInfo1[3] = -offY;\r\n        this._glRender = new GlowFilterGLRender();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滤镜类型\r\n     * @override\r\n     */\r\n    get type(): number {\r\n        return BlurFilter.GLOW;\r\n    }\r\n\r\n    /**@internal */\r\n    get typeDefine(): ShaderDefine {\r\n        return ShaderDefines2D.FILTERGLOW;\r\n    }\r\n\r\n    /**@private */\r\n    get offY(): number {\r\n        return this._elements[6];\r\n    }\r\n\r\n    /**@private */\r\n    set offY(value: number) {\r\n        this._elements[6] = value;\r\n        this._sv_blurInfo1[3] = -value;\r\n    }\r\n\r\n    /**@private */\r\n    get offX(): number {\r\n        return this._elements[5];\r\n    }\r\n\r\n    /**@private */\r\n    set offX(value: number) {\r\n        this._elements[5] = value;\r\n        this._sv_blurInfo1[2] = value;\r\n    }\r\n\r\n    /**@private */\r\n    get color(): string {\r\n        return this._color.strColor;\r\n    }\r\n\r\n    /**@private */\r\n    set color(value: string) {\r\n        this._color = new ColorUtils(value);\r\n    }\r\n\r\n    /**@private */\r\n    getColor(): any[] {\r\n        return this._color.arrColor;\r\n    }\r\n\r\n    /**@private */\r\n    get blur(): number {\r\n        return this._elements[4];\r\n    }\r\n\r\n    /**@private */\r\n    set blur(value: number) {\r\n        this._elements[4] = value;\r\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = value;\r\n    }\r\n\r\n    getColorNative(): Float32Array {\r\n        if (!this._color_native) {\r\n            this._color_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        var color: any[] = this.getColor();\r\n        this._color_native[0] = color[0];\r\n        this._color_native[1] = color[1];\r\n        this._color_native[2] = color[2];\r\n        this._color_native[3] = color[3];\r\n        return this._color_native;\r\n    }\r\n    getBlurInfo1Native(): Float32Array {\r\n        if (!this._blurInof1_native) {\r\n            this._blurInof1_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        this._blurInof1_native[0] = this._blurInof1_native[1] = this.blur;\r\n        this._blurInof1_native[2] = this.offX;\r\n        this._blurInof1_native[3] = this.offY;\r\n        return this._blurInof1_native;\r\n    }\r\n    getBlurInfo2Native(): Float32Array {\r\n        if (!this._blurInof2_native) {\r\n            this._blurInof2_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        this._blurInof2_native[2] = 1;\r\n        return this._blurInof2_native;\r\n    }\r\n}\r\n\r\n","import { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Handler } from \"../utils/Handler\"\r\n\r\n/**\r\n * <p> <code>SoundChannel</code> 用来控制程序中的声音。每个声音均分配给一个声道，而且应用程序可以具有混合在一起的多个声道。</p>\r\n * <p> <code>SoundChannel</code> 类包含控制声音的播放、暂停、停止、音量的方法，以及获取声音的播放状态、总时间、当前播放时间、总循环次数、播放地址等信息的方法。</p>\r\n */\r\nexport class SoundChannel extends EventDispatcher {\r\n    /**\r\n     * 声音地址。\r\n     */\r\n    url: string;\r\n    /**\r\n     * 循环次数。\r\n     */\r\n    loops: number;\r\n    /**\r\n     * 播放声音开始时间。\r\n     */\r\n    startTime: number;\r\n    /**\r\n     * 表示声音是否已暂停。\r\n     */\r\n    isStopped: boolean = false;\r\n    /**\r\n     * 播放完成处理器。\r\n     */\r\n    completeHandler: Handler;\r\n\r\n    /**\r\n     * 音量范围从 0（静音）至 1（最大音量）。\r\n     */\r\n    set volume(v: number) {\r\n\r\n    }\r\n\r\n    get volume(): number {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放时间，单位是秒。\r\n     */\r\n    get position(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间，单位是秒。\r\n     */\r\n    get duration(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 播放声音。\r\n     */\r\n    play(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 停止播放。\r\n     */\r\n    stop(): void {\r\n        if (this.completeHandler) this.completeHandler.runWith(false);\r\n    }\r\n\r\n    /**\r\n     * 暂停播放。\r\n     */\r\n    pause(): void {\r\n    }\r\n\r\n    /**\r\n     * 继续播放。\r\n     */\r\n    resume(): void {\r\n    }\r\n\r\n    /**\r\n     * private\r\n     */\r\n    protected __runComplete(handler: Handler): void {\r\n        if (handler) {\r\n            handler.runWith(true);\r\n        }\r\n    }\r\n}\r\n\r\n","import { Event as LayaEvent } from \"../../events/Event\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\n//import { SoundManager } from \"../SoundManager\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { AudioSound } from \"./AudioSound\";\r\n\r\n/**\r\n * @private\r\n * audio标签播放声音的音轨控制\r\n */\r\nexport class AudioSoundChannel extends SoundChannel {\r\n\r\n    /**\r\n     * 播放用的audio标签\r\n     */\r\n    private _audio: HTMLAudioElement = null;\r\n    private _onEnd: (evt: Event) => void;\r\n    private _resumePlay: (evt: Event) => void;\r\n    private _src: string;\r\n\r\n    constructor(audio: HTMLAudioElement) {\r\n        super();\r\n        this._onEnd = this.__onEnd.bind(this);\r\n        this._resumePlay = this.__resumePlay.bind(this);\r\n        audio.addEventListener(\"ended\", this._onEnd);\r\n        this._audio = audio;\r\n        this._src = audio.src;\r\n    }\r\n\r\n    private __onEnd(evt: Event): void {\r\n        if (this.loops == 1) {\r\n            if (this.completeHandler) {\r\n                ILaya.systemTimer.once(10, this, this.__runComplete, [this.completeHandler], false);\r\n                this.completeHandler = null;\r\n            }\r\n            this.stop();\r\n            this.event(LayaEvent.COMPLETE);\r\n            return;\r\n        }\r\n        if (this.loops > 0) {\r\n            this.loops--;\r\n        }\r\n        this.startTime = 0;\r\n        this.play();\r\n    }\r\n\r\n    private __resumePlay(): void {\r\n        if (this._audio) this._audio.removeEventListener(\"canplay\", this._resumePlay as any);\r\n        if (this.isStopped) return;\r\n        try {\r\n            this._audio.currentTime = this.startTime;\r\n            Browser.container.appendChild(this._audio);\r\n            this._audio.play();\r\n        } catch (e) {\r\n            //this.audio.play();\r\n            this.event(LayaEvent.ERROR);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放\r\n     * @override\r\n     */\r\n    play(): void {\r\n        this.isStopped = false;\r\n        try {\r\n            this._audio.playbackRate = SoundManager.playbackRate;\r\n            this._audio.currentTime = this.startTime;\r\n        } catch (e) {\r\n            this._audio.addEventListener(\"canplay\", this._resumePlay as any);\r\n            return;\r\n        }\r\n        SoundManager.addChannel(this);\r\n        Browser.container.appendChild(this._audio);\r\n        if (\"play\" in this._audio) {\r\n            let p = this._audio.play();\r\n            if (p)\r\n                p.catch(e => { /*Auto-play was prevented*/ });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当前播放到的位置\r\n     * @return\r\n     * @override\r\n     *\r\n     */\r\n    get position(): number {\r\n        if (!this._audio)\r\n            return 0;\r\n        return this._audio.currentTime;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     * @override\r\n     */\r\n    get duration(): number {\r\n        if (!this._audio)\r\n            return 0;\r\n        return this._audio.duration;\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     * @override\r\n     */\r\n    stop(): void {\r\n        //trace(\"stop and remove event\");\r\n        super.stop();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        this.completeHandler = null;\r\n        if (!this._audio)\r\n            return;\r\n        if (\"pause\" in this._audio)\r\n            //理论上应该全部使用stop，但是不知为什么，使用pause，为了安全我只修改在加速器模式下再调用一次stop\r\n            if (LayaEnv.isConch) {\r\n                (this._audio as any).stop();\r\n            }\r\n        this._audio.pause();\r\n        this._audio.removeEventListener(\"ended\", this._onEnd as EventListener);\r\n        this._audio.removeEventListener(\"canplay\", this._resumePlay);\r\n        //ie下使用对象池可能会导致后面的声音播放不出来\r\n        if (!ILaya.Browser.onIE) {\r\n            if (this._audio != AudioSound._musicAudio) {\r\n                Pool.recover(\"audio:\" + this.url, this._audio);\r\n            }\r\n        }\r\n        Browser.removeElement(this._audio);\r\n        this._audio = null;\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    pause(): void {\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        if (!this._audio)\r\n            return;\r\n        if (\"pause\" in this._audio)\r\n            this._audio.pause();\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    resume(): void {\r\n        var audio = this._audio;\r\n        if (!audio)\r\n            return;\r\n        this.isStopped = false;\r\n        if (audio.readyState == 0) { //当音频放到后台一定时间后，会被卸载，音频会断开连接，并将readyState重置为0\r\n            audio.src = this._src;\r\n            audio.addEventListener(\"canplay\", this._resumePlay as any);\r\n            audio.load();\r\n        }\r\n        SoundManager.addChannel(this);\r\n        if (\"play\" in audio) {\r\n            audio.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置音量\r\n     * @param v\r\n     * @override\r\n     *\r\n     */\r\n    set volume(v: number) {\r\n        if (!this._audio) return;\r\n        this._audio.volume = v;\r\n    }\r\n\r\n    /**\r\n     * 获取音量\r\n     * @return\r\n     * @override\r\n     *\r\n     */\r\n    get volume(): number {\r\n        if (!this._audio) return 1;\r\n        return this._audio.volume;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { AudioSoundChannel } from \"./AudioSoundChannel\";\r\nimport { Event } from \"../../events/Event\"\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { URL } from \"../../net/URL\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { Pool } from \"../../utils/Pool\"\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { AssetDb } from \"../../resource/AssetDb\";\r\n\r\n/**\r\n * @private\r\n * 使用Audio标签播放声音\r\n */\r\nexport class AudioSound extends EventDispatcher {\r\n\r\n    /**@private */\r\n    private static _audioCache: any = {};\r\n    /**\r\n     * 声音URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * 播放用的audio标签\r\n     */\r\n    audio: HTMLAudioElement;\r\n    /**\r\n     * 是否已加载完成\r\n     */\r\n    loaded: boolean = false;\r\n    /**@internal */\r\n    static _musicAudio: HTMLAudioElement;\r\n    /**\r\n     * 释放声音\r\n     *\r\n     */\r\n    dispose(): void {\r\n        var ad: HTMLAudioElement = AudioSound._audioCache[this.url];\r\n        Pool.clearBySign(\"audio:\" + this.url);\r\n        if (ad) {\r\n            if (!LayaEnv.isConch) {\r\n                ad.src = \"\";\r\n            }\r\n            delete AudioSound._audioCache[this.url];\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    static _initMusicAudio(): void {\r\n        if (AudioSound._musicAudio) return;\r\n        if (!AudioSound._musicAudio) AudioSound._musicAudio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n        if (!LayaEnv.isConch) {\r\n            Browser.document.addEventListener(\"mousedown\", AudioSound._makeMusicOK);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private static _makeMusicOK(): void {\r\n        Browser.document.removeEventListener(\"mousedown\", AudioSound._makeMusicOK);\r\n        if (!AudioSound._musicAudio.src) {\r\n            AudioSound._musicAudio.src = \"\";\r\n            AudioSound._musicAudio.load();\r\n        } else {\r\n            AudioSound._musicAudio.play();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 加载声音\r\n     * @param url\r\n     *\r\n     */\r\n    load(url: string): void {\r\n        this.url = url;\r\n        var ad: HTMLAudioElement;\r\n        if (url == SoundManager._bgMusic) {\r\n            AudioSound._initMusicAudio();\r\n            ad = AudioSound._musicAudio;\r\n            if ((<any>ad).originalUrl != url) {\r\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\r\n                ad = null;\r\n            }\r\n        } else {\r\n            ad = AudioSound._audioCache[url];\r\n        }\r\n        if (ad && ad.readyState >= 2) {\r\n            this.event(Event.COMPLETE);\r\n            return;\r\n        }\r\n        if (!ad) {\r\n            if (url == SoundManager._bgMusic) {\r\n                AudioSound._initMusicAudio();\r\n                ad = AudioSound._musicAudio;\r\n            } else {\r\n                ad = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n            }\r\n            AudioSound._audioCache[url] = ad;\r\n            AssetDb.inst.resolveURL(url, url => {\r\n                ad.src = URL.postFormatURL(URL.formatURL(url));\r\n            });\r\n        }\r\n        (<any>ad).originalUrl = url;\r\n\r\n        ad.addEventListener(\"canplaythrough\", onLoaded);\r\n        ad.addEventListener(\"error\", onErr);\r\n        var me: AudioSound = this;\r\n        function onLoaded(): void {\r\n            offs();\r\n            me.loaded = true;\r\n            me.event(Event.COMPLETE);\r\n        }\r\n\r\n        function onErr(): void {\r\n            ad.load = null;\r\n            offs();\r\n            me.event(Event.ERROR);\r\n        }\r\n\r\n        function offs(): void {\r\n            ad.removeEventListener(\"canplaythrough\", onLoaded);\r\n            ad.removeEventListener(\"error\", onErr);\r\n        }\r\n\r\n        this.audio = ad;\r\n        if (ad.load) {\r\n            ad.load();\r\n        } else {\r\n            onErr();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 播放声音\r\n     * @param startTime 起始时间\r\n     * @param loops 循环次数\r\n     * @return\r\n     *\r\n     */\r\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\r\n        //trace(\"playAudioSound\");\r\n        if (!this.url)\r\n            return null;\r\n\r\n        var ad: HTMLAudioElement;\r\n        if (this.url == SoundManager._bgMusic) {\r\n            ad = AudioSound._musicAudio;\r\n            if (ad.src != \"\" && (<any>ad).originalUrl != this.url) {  //@fix 清除上一次记录 防止它释放时把音乐暂停了\r\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\r\n                AudioSound._audioCache[this.url] = ad;\r\n            }\r\n        } else {\r\n            ad = AudioSound._audioCache[this.url];\r\n        }\r\n\r\n        if (!ad) return null;\r\n        var tAd: HTMLAudioElement;\r\n\r\n        tAd = Pool.getItem(\"audio:\" + this.url);\r\n\r\n        if (LayaEnv.isConch) {\r\n            if (!tAd) {\r\n                tAd = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n                AssetDb.inst.resolveURL(this.url, url => {\r\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this.url == SoundManager._bgMusic) {\r\n                AudioSound._initMusicAudio();\r\n                tAd = AudioSound._musicAudio;\r\n                AssetDb.inst.resolveURL(this.url, url => {\r\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\r\n                });\r\n            } else {\r\n                tAd = tAd ? tAd : ad.cloneNode(true) as HTMLAudioElement;\r\n            }\r\n        }\r\n        (<any>tAd).originalUrl = this.url;\r\n\r\n        var channel: AudioSoundChannel = new AudioSoundChannel(tAd);\r\n        channel.url = this.url;\r\n        channel.loops = loops;\r\n        channel.startTime = startTime;\r\n        channel.play();\r\n        SoundManager.addChannel(channel);\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     */\r\n    get duration(): number {\r\n        var ad: HTMLAudioElement;\r\n        ad = AudioSound._audioCache[this.url];\r\n        if (!ad)\r\n            return 0;\r\n        return ad.duration;\r\n    }\r\n}\r\n\r\n\r\n","import { Event } from \"../../events/Event\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { WebAudioSound } from \"./WebAudioSound\";\r\n\r\n/**\r\n * @private\r\n * web audio api方式播放声音的音轨控制\r\n */\r\nexport class WebAudioSoundChannel extends SoundChannel {\r\n    /**\r\n     * 声音原始文件数据\r\n     */\r\n    audioBuffer: any;\r\n\r\n    /**\r\n     * gain节点\r\n     */\r\n    private gain: any;\r\n\r\n    /**\r\n     * 播放用的数据\r\n     */\r\n    private bufferSource: any = null;\r\n    /**\r\n     * 当前时间\r\n     */\r\n    private _currentTime: number = 0;\r\n\r\n    /**\r\n     * 当前音量\r\n     */\r\n    private _volume: number = 1;\r\n\r\n    /**\r\n     * 播放开始时的时间戳\r\n     */\r\n    private _startTime: number = 0;\r\n\r\n    private _pauseTime: number = 0;\r\n\r\n    /**\r\n     * 播放设备\r\n     */\r\n    private context: AudioContext;\r\n\r\n    private _onPlayEnd: Function;\r\n    private static _tryCleanFailed: boolean = false;\r\n    static SetTargetDelay: number = 0.001;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.context = WebAudioSound.ctx;\r\n\r\n        this._onPlayEnd = this.__onPlayEnd.bind(this);\r\n        if (this.context[\"createGain\"]) {\r\n            this.gain = this.context[\"createGain\"]();\r\n        } else {\r\n            this.gain = (<any>this.context)[\"createGainNode\"]();\r\n        }\r\n    }\r\n    /**\r\n     * 播放声音\r\n     * @override\r\n     */\r\n    play(): void {\r\n        SoundManager.addChannel(this);\r\n        this.isStopped = false;\r\n        this._clearBufferSource();\r\n        if (!this.audioBuffer) return;\r\n        if (this.startTime >= this.duration) return this.stop();\r\n        var context: any = this.context;\r\n        var gain: any = this.gain;\r\n        var bufferSource: any = context.createBufferSource();\r\n        this.bufferSource = bufferSource;\r\n        bufferSource.buffer = this.audioBuffer;\r\n        bufferSource.connect(gain);\r\n        if (gain)\r\n            gain.disconnect();\r\n        gain.connect(context.destination);\r\n        bufferSource.onended = this._onPlayEnd;\r\n        // if (this.startTime >= this.duration) this.startTime = 0;\r\n        this._startTime = Browser.now();\r\n        if (this.gain.gain.setTargetAtTime) {\r\n            this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\r\n        } else\r\n            this.gain.gain.value = this._volume;\r\n        if (this.loops == 0) {\r\n            bufferSource.loop = true;\r\n        }\r\n        if (bufferSource.playbackRate.setTargetAtTime) {\r\n            bufferSource.playbackRate.setTargetAtTime(SoundManager.playbackRate, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay)\r\n        } else\r\n            bufferSource.playbackRate.value = SoundManager.playbackRate;\r\n        bufferSource.start(0, this.startTime);\r\n        this._currentTime = 0;\r\n    }\r\n\r\n\r\n\r\n    private __onPlayEnd(): void {\r\n        if (this.loops == 1) {\r\n\r\n            if (this.completeHandler) {\r\n                ILaya.timer.once(10, this, this.__runComplete, [this.completeHandler], false);\r\n                this.completeHandler = null;\r\n            }\r\n            this.stop();\r\n            this.event(Event.COMPLETE);\r\n            return;\r\n        }\r\n        if (this.loops > 0) {\r\n            this.loops--;\r\n        }\r\n        this.startTime = 0;\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放位置\r\n     * @override\r\n     */\r\n    get position(): number {\r\n        if (this.bufferSource) {\r\n            return (Browser.now() - this._startTime) / 1000 + this.startTime;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    get duration(): number {\r\n        if (this.audioBuffer) {\r\n            return this.audioBuffer.duration;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private _clearBufferSource(): void {\r\n        if (this.bufferSource) {\r\n            var sourceNode: any = this.bufferSource;\r\n            if (sourceNode.stop) {\r\n                sourceNode.stop(0);\r\n            } else {\r\n                sourceNode.noteOff(0);\r\n            }\r\n            sourceNode.disconnect(0);\r\n            sourceNode.onended = null;\r\n            if (!WebAudioSoundChannel._tryCleanFailed) this._tryClearBuffer(sourceNode);\r\n            this.bufferSource = null;\r\n        }\r\n    }\r\n\r\n    private _tryClearBuffer(sourceNode: any): void {\r\n        try {//已经支持buffer=null\r\n            sourceNode.buffer = null;\r\n        } catch (e) {\r\n            WebAudioSoundChannel._tryCleanFailed = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     * @override\r\n     */\r\n    stop(): void {\r\n        super.stop();\r\n        this._clearBufferSource();\r\n        this.audioBuffer = null;\r\n        if (this.gain)\r\n            this.gain.disconnect();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        this.completeHandler = null;\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    pause(): void {\r\n        if (!this.isStopped) {\r\n            this._pauseTime = this.position;\r\n        }\r\n        this._clearBufferSource();\r\n        if (this.gain)\r\n            this.gain.disconnect();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    resume(): void {\r\n        this.startTime = this._pauseTime;\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * 设置音量\r\n     * @override\r\n     */\r\n    set volume(v: number) {\r\n        this._volume = v;\r\n        if (this.isStopped) {\r\n            return;\r\n        }\r\n        if (this.gain.gain.setTargetAtTime) {\r\n            this.gain.gain.setTargetAtTime(v, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\r\n        } else\r\n            this.gain.gain.value = v;\r\n    }\r\n\r\n    /**\r\n     * 获取音量\r\n     * @override\r\n     */\r\n    get volume(): number {\r\n        return this._volume;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { WebAudioSoundChannel } from \"./WebAudioSoundChannel\";\r\nimport { Event } from \"../../events/Event\"\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Loader } from \"../../net/Loader\";\r\n\r\n/**\r\n * @private\r\n * web audio api方式播放声音\r\n */\r\nexport class WebAudioSound extends EventDispatcher {\r\n\r\n    /**\r\n     * 播放设备\r\n     */\r\n    static ctx: AudioContext;\r\n\r\n    /**\r\n     * 用于播放解锁声音以及解决Ios9版本的内存释放\r\n     */\r\n    static _miniBuffer: any = WebAudioSound.ctx ? WebAudioSound.ctx.createBuffer(1, 1, 22050) : undefined;\r\n\r\n    /**\r\n     * 是否已解锁声音播放\r\n     */\r\n    private static _unlocked: boolean = false;\r\n\r\n    /**\r\n     * 声音URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * 是否已加载完成\r\n     */\r\n    loaded: boolean = false;\r\n    /**\r\n     * 声音原始文件数据\r\n     */\r\n    audioBuffer: AudioBuffer;\r\n    /**\r\n     * 待播放的声音列表\r\n     */\r\n    private __toPlays: any[];\r\n    /**\r\n     * @private\r\n     */\r\n    private _disposed: boolean = false;\r\n\r\n\r\n    /**\r\n     * 播放声音以解锁IOS的声音\r\n     *\r\n     */\r\n    private static _playEmptySound(): void {\r\n        if (WebAudioSound.ctx == null) {\r\n            return;\r\n        }\r\n        var source: any = WebAudioSound.ctx.createBufferSource();\r\n        source.buffer = WebAudioSound._miniBuffer;\r\n        source.connect(WebAudioSound.ctx.destination);\r\n        source.start(0, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 尝试解锁声音\r\n     *\r\n     */\r\n    private static _unlock(): void {\r\n        if (WebAudioSound._unlocked) {\r\n            return;\r\n        }\r\n        WebAudioSound._playEmptySound();\r\n        if (WebAudioSound.ctx.state == \"running\") {\r\n            window.document.removeEventListener(\"mousedown\", WebAudioSound._unlock, true);\r\n            window.document.removeEventListener(\"touchend\", WebAudioSound._unlock, true);\r\n            window.document.removeEventListener(\"touchstart\", WebAudioSound._unlock, true);\r\n            WebAudioSound._unlocked = true;\r\n        }\r\n    }\r\n    /*;*/\r\n\r\n    static initWebAudio(): void {\r\n        WebAudioSound.ctx = new (window[\"AudioContext\"] || (window as any)[\"webkitAudioContext\"] || (window as any)[\"mozAudioContext\"])();\r\n\r\n        if (WebAudioSound.ctx.state != \"running\") {\r\n            WebAudioSound._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\r\n            window.document.addEventListener(\"mousedown\", WebAudioSound._unlock, true);\r\n            window.document.addEventListener(\"touchend\", WebAudioSound._unlock, true);\r\n            window.document.addEventListener(\"touchstart\", WebAudioSound._unlock, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载声音\r\n     * @param url\r\n     *\r\n     */\r\n    load(url: string): void {\r\n        this.url = url;\r\n        this.audioBuffer = ILaya.loader.getRes(url);\r\n        if (this.audioBuffer) {\r\n            this._loaded(this.audioBuffer);\r\n            return;\r\n        }\r\n        ILaya.loader.load(url, Loader.SOUND).then(audioBuffer => this._loaded(audioBuffer));\r\n    }\r\n\r\n    private _loaded(audioBuffer: any): void {\r\n        if (this._disposed)\r\n            return;\r\n\r\n        this.audioBuffer = audioBuffer;\r\n        this.loaded = true;\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    private __playAfterLoaded(): void {\r\n        if (!this.__toPlays) return;\r\n        var i: number, len: number;\r\n        var toPlays: any[];\r\n        toPlays = this.__toPlays;\r\n        len = toPlays.length;\r\n        var tParams: any[];\r\n        for (i = 0; i < len; i++) {\r\n            tParams = toPlays[i];\r\n            if (tParams[2] && !((<WebAudioSoundChannel>tParams[2])).isStopped) {\r\n                this.play(tParams[0], tParams[1], tParams[2]);\r\n            }\r\n        }\r\n        this.__toPlays.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 播放声音\r\n     * @param startTime 起始时间\r\n     * @param loops 循环次数\r\n     * @return\r\n     *\r\n     */\r\n    play(startTime: number = 0, loops: number = 0, channel: WebAudioSoundChannel = null): SoundChannel {\r\n        channel = channel ? channel : new WebAudioSoundChannel();\r\n        if (!this.audioBuffer) {\r\n            if (this.url) {\r\n                if (!this.__toPlays) this.__toPlays = [];\r\n                this.__toPlays.push([startTime, loops, channel]);\r\n                this.once(Event.COMPLETE, this, this.__playAfterLoaded);\r\n                this.load(this.url);\r\n            }\r\n        }\r\n        channel.url = this.url;\r\n        channel.loops = loops;\r\n        channel.audioBuffer = this.audioBuffer;\r\n        channel.startTime = startTime;\r\n        channel.play();\r\n        SoundManager.addChannel(channel);\r\n        return channel;\r\n    }\r\n\r\n    get duration(): number {\r\n        if (this.audioBuffer) {\r\n            return this.audioBuffer.duration;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    dispose(): void {\r\n        this._disposed = true;\r\n        if (this.audioBuffer) {\r\n            ILaya.loader.clearRes(this.url, this.audioBuffer);\r\n            this.audioBuffer = null;\r\n        }\r\n        this.__toPlays = [];\r\n    }\r\n}\r\n\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { Event } from \"../events/Event\"\r\nimport { AudioSound } from \"./h5audio/AudioSound\"\r\nimport { WebAudioSound } from \"./webaudio/WebAudioSound\"\r\nimport { URL } from \"../net/URL\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Sound } from \"./Sound\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * <code>SoundManager</code> 是一个声音管理类。提供了对背景音乐、音效的播放控制方法。\r\n * 引擎默认有两套声音方案：WebAudio和H5Audio\r\n * 播放音效，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\r\n * 播放背景音乐，则使用H5Audio播放（使用WebAudio会增加特别大的内存，并且要等加载完毕后才能播放，有延迟）\r\n * 建议背景音乐用mp3类型，音效用wav或者mp3类型（如果打包为app，音效只能用wav格式）。\r\n * 详细教程及声音格式请参考：http://ldc2.layabox.com/doc/?nav=ch-as-1-7-0\r\n */\r\nexport class SoundManager {\r\n    /**\r\n     * 背景音乐音量。\r\n     * @default 1\r\n     */\r\n    static musicVolume: number = 1;\r\n    /**\r\n     * 音效音量。\r\n     * @default 1\r\n     */\r\n    static soundVolume: number = 1;\r\n    /**\r\n     * 声音播放速率。\r\n     * @default 1\r\n     */\r\n    static playbackRate: number = 1;\r\n    /**\r\n     * 背景音乐使用Audio标签播放。\r\n     * @default true\r\n     */\r\n    private static _useAudioMusic: boolean = true;\r\n    /**@private 是否静音，默认为false。*/\r\n    private static _muted: boolean = false;\r\n    /**@private 是否音效静音，默认为false。*/\r\n    private static _soundMuted: boolean = false;\r\n    /**@private 是否背景音乐静音，默认为false。*/\r\n    private static _musicMuted: boolean = false;\r\n    /**@internal 当前背景音乐url。*/\r\n    static _bgMusic: string = null;\r\n    /**@private 当前背景音乐声道。*/\r\n    static _musicChannel: SoundChannel = null;\r\n    /**@private 当前播放的Channel列表。*/\r\n    private static _channels: any[] = [];\r\n    /**@private */\r\n    private static _autoStopMusic: boolean;\r\n    /**@private */\r\n    private static _blurPaused: boolean = false;\r\n    /**@private */\r\n    private static _isActive: boolean = true;\r\n    /**@internal */\r\n    static _soundClass: new () => any;\r\n    /**@internal */\r\n    static _musicClass: new () => any;\r\n    /**@private */\r\n    private static _lastSoundUsedTimeDic: any = {};\r\n    /**@private */\r\n    private static _isCheckingDispose: boolean = false;\r\n    /**@private */\r\n    private static _soundCache: Record<string, Sound> = {};\r\n\r\n    /**@internal */\r\n    static __init__(): boolean {\r\n        var win: any = ILaya.Browser.window;\r\n        var supportWebAudio = win[\"AudioContext\"] || win[\"webkitAudioContext\"] || win[\"mozAudioContext\"] ? true : false;\r\n        if (supportWebAudio)\r\n            WebAudioSound.initWebAudio();\r\n        SoundManager._soundClass = supportWebAudio ? WebAudioSound : AudioSound;\r\n\r\n        if (!Browser.onTBMiniGame) {\r\n            AudioSound._initMusicAudio();\r\n        }\r\n        SoundManager._musicClass = AudioSound;\r\n\r\n        return supportWebAudio;\r\n    }\r\n\r\n    /**\r\n     * 音效播放后自动删除。\r\n     * @default true\r\n     */\r\n    static autoReleaseSound: boolean = true;\r\n\r\n    /**\r\n     * 添加播放的声音实例。\r\n     * @param channel <code>SoundChannel</code> 对象。\r\n     */\r\n    static addChannel(channel: SoundChannel): void {\r\n        if (SoundManager._channels.indexOf(channel) >= 0) return;\r\n        SoundManager._channels.push(channel);\r\n    }\r\n\r\n    /**\r\n     * 移除播放的声音实例。\r\n     * @param channel <code>SoundChannel</code> 对象。\r\n     */\r\n    static removeChannel(channel: SoundChannel): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            if (SoundManager._channels[i] == channel) {\r\n                SoundManager._channels.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static disposeSoundLater(url: string): void {\r\n        SoundManager._lastSoundUsedTimeDic[url] = ILaya.Browser.now();\r\n        if (!SoundManager._isCheckingDispose) {\r\n            SoundManager._isCheckingDispose = true;\r\n            ILaya.timer.loop(5000, null, SoundManager._checkDisposeSound);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private static _checkDisposeSound(): void {\r\n        let tTime: number = ILaya.Browser.now();\r\n        let hasCheck: boolean = false;\r\n        for (let key in SoundManager._lastSoundUsedTimeDic) {\r\n            if (tTime - SoundManager._lastSoundUsedTimeDic[key] > 30000) {\r\n                delete SoundManager._lastSoundUsedTimeDic[key];\r\n                SoundManager.disposeSoundIfNotUsed(key);\r\n            } else {\r\n                hasCheck = true;\r\n            }\r\n        }\r\n        if (!hasCheck) {\r\n            SoundManager._isCheckingDispose = false;\r\n            ILaya.timer.clear(null, SoundManager._checkDisposeSound);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static disposeSoundIfNotUsed(url: string): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            if (SoundManager._channels[i].url == url) {\r\n                return;\r\n            }\r\n        }\r\n        SoundManager.destroySound(url);\r\n    }\r\n\r\n    /**\r\n     * 失去焦点后是否自动停止背景音乐。\r\n     * @param v Boolean 失去焦点后是否自动停止背景音乐。\r\n     *\r\n     */\r\n    static set autoStopMusic(v: boolean) {\r\n        ILaya.stage.off(Event.BLUR, null, SoundManager._stageOnBlur);\r\n        ILaya.stage.off(Event.FOCUS, null, SoundManager._stageOnFocus);\r\n        ILaya.stage.off(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\r\n        SoundManager._autoStopMusic = v;\r\n        if (v) {\r\n            ILaya.stage.on(Event.BLUR, null, SoundManager._stageOnBlur);\r\n            ILaya.stage.on(Event.FOCUS, null, SoundManager._stageOnFocus);\r\n            ILaya.stage.on(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 失去焦点后是否自动停止背景音乐。\r\n     */\r\n    static get autoStopMusic(): boolean {\r\n        return SoundManager._autoStopMusic;\r\n    }\r\n\r\n    private static _visibilityChange(): void {\r\n        if (ILaya.stage.isVisibility) {\r\n            SoundManager._stageOnFocus();\r\n        } else {\r\n            SoundManager._stageOnBlur();\r\n        }\r\n    }\r\n\r\n    private static _stageOnBlur(): void {\r\n        SoundManager._isActive = false;\r\n        if (SoundManager._musicChannel) {\r\n            if (!SoundManager._musicChannel.isStopped) {\r\n                SoundManager._blurPaused = true;\r\n                SoundManager._musicChannel.pause();\r\n\r\n            }\r\n\r\n        }\r\n        SoundManager.stopAllSound();\r\n        ILaya.stage.once(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\r\n    }\r\n\r\n    private static _recoverWebAudio(): void {\r\n        if (WebAudioSound.ctx && WebAudioSound.ctx.state != \"running\" && WebAudioSound.ctx.resume)\r\n            WebAudioSound.ctx.resume();\r\n    }\r\n\r\n    private static _stageOnFocus(): void {\r\n        SoundManager._isActive = true;\r\n        SoundManager._recoverWebAudio();\r\n        ILaya.stage.off(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\r\n        if (SoundManager._blurPaused) {\r\n            if (SoundManager._musicChannel && SoundManager._musicChannel.isStopped) {\r\n                SoundManager._blurPaused = false;\r\n                SoundManager._musicChannel.resume();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 背景音乐和所有音效是否静音。\r\n     */\r\n    static set muted(value: boolean) {\r\n        if (value == SoundManager._muted) return;\r\n        if (value) {\r\n            SoundManager.stopAllSound();\r\n        }\r\n        SoundManager.musicMuted = value;\r\n        SoundManager._muted = value;\r\n    }\r\n\r\n    static get muted(): boolean {\r\n        return SoundManager._muted;\r\n    }\r\n\r\n    /**\r\n     * 所有音效（不包括背景音乐）是否静音。\r\n     */\r\n    static set soundMuted(value: boolean) {\r\n        SoundManager._soundMuted = value;\r\n    }\r\n\r\n    static get soundMuted(): boolean {\r\n        return SoundManager._soundMuted;\r\n    }\r\n\r\n    /**\r\n     * 背景音乐（不包括音效）是否静音。\r\n     */\r\n    static set musicMuted(value: boolean) {\r\n        if (value == SoundManager._musicMuted) return;\r\n        if (value) {\r\n            if (SoundManager._bgMusic) {\r\n                if (SoundManager._musicChannel && !SoundManager._musicChannel.isStopped) {\r\n                    if (LayaEnv.isConch) {\r\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = true;;\r\n                    }\r\n                    else {\r\n                        SoundManager._musicChannel.pause();\r\n                    }\r\n                } else {\r\n                    SoundManager._musicChannel = null;\r\n                }\r\n            } else {\r\n                SoundManager._musicChannel = null;\r\n            }\r\n\r\n            SoundManager._musicMuted = value;\r\n        } else {\r\n            SoundManager._musicMuted = value;\r\n            if (SoundManager._bgMusic) {\r\n                if (SoundManager._musicChannel) {\r\n                    if (LayaEnv.isConch) {\r\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = false;;\r\n                    }\r\n                    else {\r\n                        SoundManager._musicChannel.resume();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static get musicMuted(): boolean {\r\n        return SoundManager._musicMuted;\r\n    }\r\n\r\n    static get useAudioMusic(): boolean {\r\n        return SoundManager._useAudioMusic;\r\n    }\r\n\r\n    static set useAudioMusic(value: boolean) {\r\n        SoundManager._useAudioMusic = value;\r\n        if (value) {\r\n            SoundManager._musicClass = AudioSound;\r\n        } else {\r\n            SoundManager._musicClass = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放音效。音效可以同时播放多个。\r\n     * @param url\t\t\t声音文件地址。\r\n     * @param loops\t\t\t循环次数,0表示无限循环。\r\n     * @param complete\t\t声音播放完成回调  Handler对象。\r\n     * @param soundClass\t使用哪个声音类进行播放，null表示自动选择。\r\n     * @param startTime\t\t声音播放起始时间。\r\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\r\n     */\r\n    static playSound(url: string, loops: number = 1, complete: Handler = null, soundClass: new () => any = null, startTime: number = 0): SoundChannel {\r\n        if (!SoundManager._isActive || !url) return null;\r\n        if (SoundManager._muted) return null;\r\n        SoundManager._recoverWebAudio();\r\n        if (url == SoundManager._bgMusic) {\r\n            if (SoundManager._musicMuted) return null;\r\n        } else {\r\n            if (SoundManager._soundMuted) return null;\r\n        }\r\n        let tSound: Sound;\r\n        if (!Browser._isMiniGame) {\r\n            tSound = SoundManager._soundCache[url];\r\n        }\r\n        if (!soundClass) soundClass = SoundManager._soundClass;\r\n        if (!tSound) {\r\n            tSound = new soundClass();\r\n            tSound.load(url);\r\n            if (!Browser._isMiniGame) {\r\n                SoundManager._soundCache[url] = tSound;\r\n            }\r\n        }\r\n        let channel = tSound.play(startTime, loops);\r\n        if (!channel) return null;\r\n        channel.url = url;\r\n        channel.volume = (url == SoundManager._bgMusic) ? SoundManager.musicVolume : SoundManager.soundVolume;\r\n        channel.completeHandler = complete;\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * 释放声音资源。\r\n     * @param url\t声音播放地址。\r\n     */\r\n    static destroySound(url: string): void {\r\n        let tSound = SoundManager._soundCache[url];\r\n        if (tSound) {\r\n            delete SoundManager._soundCache[url];\r\n            tSound.dispose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放背景音乐。背景音乐同时只能播放一个，如果在播放背景音乐时再次调用本方法，会先停止之前的背景音乐，再播放当前的背景音乐。\r\n     * @param url\t\t声音文件地址。\r\n     * @param loops\t\t循环次数,0表示无限循环。\r\n     * @param complete\t声音播放完成回调,complete 结果参数 true: 播放完成, false/undefined ：stop触发的complete。\r\n     * @param startTime\t声音播放起始时间。\r\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\r\n     */\r\n    static playMusic(url: string, loops: number = 0, complete: Handler = null, startTime: number = 0): SoundChannel {\r\n        SoundManager._bgMusic = url;\r\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\r\n        return SoundManager._musicChannel = SoundManager.playSound(url, loops, complete, SoundManager._musicClass, startTime);\r\n    }\r\n\r\n    /**\r\n     * 停止声音播放。此方法能够停止任意声音的播放（包括背景音乐和音效），只需传入对应的声音播放地址。\r\n     * @param url  声音文件地址。\r\n     */\r\n    static stopSound(url: string): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url == url) {\r\n                channel.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放所有声音（包括背景音乐和音效）。\r\n     */\r\n    static stopAll(): void {\r\n        SoundManager._bgMusic = null;\r\n        var i: number;\r\n        var channel: SoundChannel;\r\n        for (i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            channel = SoundManager._channels[i];\r\n            channel.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放所有音效（不包括背景音乐）。\r\n     */\r\n    static stopAllSound(): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url != SoundManager._bgMusic) {\r\n                channel.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放背景音乐（不包括音效）。\r\n     * @param url  声音文件地址。\r\n     */\r\n    static stopMusic(): void {\r\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\r\n        SoundManager._bgMusic = null;\r\n    }\r\n\r\n    /**\r\n     * 设置声音音量。根据参数不同，可以分别设置指定声音（背景音乐或音效）音量或者所有音效（不包括背景音乐）音量。\r\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param url\t\t(default = null)声音播放地址。默认为null。为空表示设置所有音效（不包括背景音乐）的音量，不为空表示设置指定声音（背景音乐或音效）的音量。\r\n     */\r\n    static setSoundVolume(volume: number, url: string = null): void {\r\n        if (url) {\r\n            SoundManager._setVolume(url, volume);\r\n        } else {\r\n            SoundManager.soundVolume = volume;\r\n            for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n                let channel = SoundManager._channels[i];\r\n                if (channel.url != SoundManager._bgMusic) {\r\n                    channel.volume = volume;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置背景音乐音量。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     */\r\n    static setMusicVolume(volume: number): void {\r\n        SoundManager.musicVolume = volume;\r\n        SoundManager._setVolume(SoundManager._bgMusic, volume);\r\n    }\r\n\r\n    /**\r\n     * 设置指定声音的音量。\r\n     * @param url\t\t声音文件url\r\n     * @param volume\t音量。初始值为1。\r\n     */\r\n    private static _setVolume(url: string, volume: number): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url == url) {\r\n                channel.volume = volume;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { SoundManager } from \"./SoundManager\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * 用于播放背景音乐或者音效的节点\r\n */\r\nexport class SoundNode extends Sprite {\r\n    private _channel: SoundChannel;\r\n    private _tar: Sprite;\r\n    private _playEvents: string;\r\n    private _stopEvents: string;\r\n    private _source: string;\r\n    private _isMusic: boolean;\r\n    private _autoPlay: boolean;\r\n    private _loop: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._loop = 1;\r\n\r\n        this.on(Event.ADDED, this, this._onParentChange);\r\n        this.on(Event.REMOVED, this, this._onParentChange);\r\n    }\r\n\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        this._source = value;\r\n        if (value) {\r\n            if (this._autoPlay && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\r\n                this.play();\r\n        }\r\n        else\r\n            this.stop();\r\n    }\r\n\r\n    /**\r\n     * 如果是，音乐类型为背景音乐，否则为音效\r\n     */\r\n    get isMusic() {\r\n        return this._isMusic;\r\n    }\r\n\r\n    set isMusic(value: boolean) {\r\n        this._isMusic = value;\r\n    }\r\n\r\n    /**\r\n     * 循环次数\r\n     */\r\n    get loop() {\r\n        return this._loop;\r\n    }\r\n\r\n    set loop(value: number) {\r\n        this._loop = value;\r\n    }\r\n\r\n    /**\r\n     * 是否自动播放\r\n     */\r\n    get autoPlay() {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n        if (value && this._source && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\r\n            this.play();\r\n    }\r\n\r\n    /**@private */\r\n    private _onParentChange(): void {\r\n        this.target = (<Sprite>this.parent);\r\n    }\r\n\r\n    /**\r\n     * 播放\r\n     * @param loops 循环次数\r\n     * @param complete 完成回调\r\n     *\r\n     */\r\n    play(loops?: number, complete?: Handler): void {\r\n        if (!this._source) return;\r\n\r\n        if (loops == null || isNaN(loops))\r\n            loops = this._loop;\r\n\r\n        this.stop();\r\n\r\n        if (this._isMusic)\r\n            this._channel = SoundManager.playMusic(this._source, loops, complete);\r\n        else\r\n            this._channel = SoundManager.playSound(this._source, loops, complete);\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     *\r\n     */\r\n    stop(): void {\r\n        if (this._channel && !this._channel.isStopped) {\r\n            this._channel.stop();\r\n        }\r\n        this._channel = null;\r\n    }\r\n\r\n    /**@private */\r\n    private _setPlayAction(tar: Sprite, event: string, action: string, add: boolean = true): void {\r\n        if (!(this as any)[action]) return;\r\n        if (!tar) return;\r\n        if (add) {\r\n            tar.on(event, this, (this as any)[action]);\r\n        } else {\r\n            tar.off(event, this, (this as any)[action]);\r\n        }\r\n\r\n    }\r\n\r\n    /**@private */\r\n    private _setPlayActions(tar: Sprite, events: string, action: string, add: boolean = true): void {\r\n        if (!tar) return;\r\n        if (!events) return;\r\n        let eventArr = events.split(\",\");\r\n        let len = eventArr.length;\r\n        for (let i = 0; i < len; i++) {\r\n            this._setPlayAction(tar, eventArr[i], action, add);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置触发播放的事件\r\n     * @param events\r\n     *\r\n     */\r\n    set playEvent(events: string) {\r\n        this._playEvents = events;\r\n        if (!events) return;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, events, \"play\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置控制播放的对象\r\n     * @param tar\r\n     *\r\n     */\r\n    set target(tar: Sprite) {\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, this._playEvents, \"play\", false);\r\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", false);\r\n        }\r\n        this._tar = tar;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, this._playEvents, \"play\", true);\r\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置触发停止的事件\r\n     * @param events\r\n     *\r\n     */\r\n    set stopEvent(events: string) {\r\n        this._stopEvents = events;\r\n        if (!events) return;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, events, \"stop\");\r\n        }\r\n    }\r\n}\r\n","import { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { URL } from \"../net/URL\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Event as LayaEvent } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * <code>VideoTexture</code> 多媒体纹理\r\n */\r\nexport class VideoTexture extends BaseTexture {\r\n    public readonly element: HTMLVideoElement;\r\n\r\n    private _source: string;\r\n    private _listeningEvents: Record<string, (evt: Event) => void>;\r\n    private immediatelyPlay: boolean;\r\n    /**\r\n     * 是否开发者自己调用Render\r\n     */\r\n    private _frameRender: boolean;\r\n    /** @inernal 避免重复的加载 */\r\n    _isLoaded: boolean;\r\n    _needUpdate: boolean;\r\n    /** @inernal 是否使用了requestVideoFrameCallback 接口 */\r\n    _requestVideoFrame: boolean = false;\r\n\r\n    /**\r\n     * 创建VideoTexture对象，\r\n     */\r\n    constructor() {\r\n        let ele: HTMLVideoElement = ILaya.Browser.createElement(\"video\");\r\n        super(ele.videoWidth, ele.videoHeight, RenderTargetFormat.R8G8B8);\r\n        this._frameRender = true;\r\n        this._isLoaded = false;\r\n        this._needUpdate = false;\r\n        this.immediatelyPlay = false;\r\n        this.element = ele;\r\n\r\n        this._listeningEvents = {};\r\n\r\n        this._dimension = TextureDimension.Tex2D;\r\n\r\n\r\n        // ele.setAttribute('crossorigin', 'Anonymous');\r\n\r\n        var style: any = this.element.style;\r\n        style.position = 'absolute';\r\n        style.top = '0px';\r\n        style.left = '0px';\r\n\r\n        // 默认放开webGL对纹理数据的跨域限制\r\n        ele.setAttribute('crossorigin', 'anonymous');\r\n        if (ILaya.Browser.onMobile) {\r\n            //@ts-ignore\r\n            ele[\"x5-playsInline\"] = true;\r\n            //@ts-ignore\r\n            ele[\"x5-playsinline\"] = true;\r\n            //@ts-ignore\r\n            ele.x5PlaysInline = true;\r\n            //@ts-ignore\r\n            ele.playsInline = true;\r\n            //@ts-ignore\r\n            ele[\"webkit-playsInline\"] = true;\r\n            //@ts-ignore\r\n            ele[\"webkit-playsinline\"] = true;\r\n            //@ts-ignore\r\n            ele.webkitPlaysInline = true;\r\n            //@ts-ignore\r\n            ele.playsinline = true;\r\n            //@ts-ignore\r\n            ele.style.playsInline = true;\r\n            ele.crossOrigin = \"anonymous\";\r\n            ele.setAttribute('playsinline', 'true');\r\n            ele.setAttribute('x5-playsinline', 'true');\r\n            ele.setAttribute('webkit-playsinline', 'true');\r\n            ele.autoplay = true;\r\n        }\r\n\r\n        ele.addEventListener(\"loadedmetadata\", () => {\r\n            this.loadedmetadata();\r\n        });\r\n\r\n        if ('requestVideoFrameCallback' in ele) {\r\n            const scope = this;\r\n            function updateVideo() {\r\n                scope._needUpdate = true;\r\n                ele.requestVideoFrameCallback(updateVideo);\r\n            }\r\n            ele.requestVideoFrameCallback(updateVideo);\r\n            this._requestVideoFrame = true\r\n        } else {\r\n            this._needUpdate = true;\r\n        }\r\n      \r\n    }\r\n\r\n    private isNeedUpdate() {\r\n        return !this._requestVideoFrame || this._needUpdate;\r\n    }\r\n\r\n    loadedmetadata() {\r\n        if (this._isLoaded)\r\n            return;\r\n        //flag only TODO\r\n        this._width = this.element.videoWidth;\r\n        this._height = this.element.videoHeight;\r\n        if (Browser.onLayaRuntime) {\r\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8A8, false, false, false);\r\n        }\r\n        else {\r\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8, false, false, false);\r\n        }\r\n        this.wrapModeU = WrapMode.Clamp;\r\n        this.wrapModeV = WrapMode.Clamp;\r\n        this.filterMode = FilterMode.Bilinear;\r\n        LayaGL.textureContext.initVideoTextureData(this._texture);\r\n        this._texture.gammaCorrection = 2.2;//这里使用srgb会变得特别的卡，所以srgb的转换放入Shader中进行\r\n        if (this.immediatelyPlay) {\r\n            this.play();\r\n        }\r\n        this._isLoaded = true;\r\n        this.event(LayaEvent.READY, this);\r\n    }\r\n\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    get gammaCorrection() {\r\n        return 2.2;\r\n    }\r\n\r\n    /**\r\n    * 设置播放源路径\r\n    * @param url 播放源路径\r\n    */\r\n    set source(url: string) {\r\n        this._source = url;\r\n        if (!url)\r\n            return;\r\n\r\n        AssetDb.inst.resolveURL(url, url => {\r\n            while (this.element.childElementCount)\r\n                this.element.firstChild.remove();\r\n\r\n            if (url.startsWith(\"blob:\"))\r\n                this.element.src = url;\r\n            else\r\n                this.appendSource(url);\r\n        });\r\n    }\r\n\r\n    private appendSource(source: string): void {\r\n        var sourceElement: HTMLSourceElement = ILaya.Browser.createElement(\"source\");\r\n        sourceElement.src = URL.postFormatURL(URL.formatURL(source));\r\n        let extension = Utils.getFileExtension(source);\r\n        sourceElement.type = extension == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + extension);\r\n        this.element.appendChild(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    render() {\r\n\r\n        if (this.element.readyState == 0)\r\n            return;\r\n        if (this.isNeedUpdate() || Browser.onLayaRuntime) {\r\n            LayaGL.textureContext.updateVideoTexture(this._texture, this.element, false, false);\r\n            this._needUpdate = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否每一帧都渲染\r\n     */\r\n    set frameRender(value: boolean) {\r\n        if (this._frameRender && !value) {\r\n            ILaya.timer.clear(this, this.render);\r\n        }\r\n        if (!this._frameRender && value) {\r\n            ILaya.timer.frameLoop(1, this, this.render);\r\n        }\r\n        this._frameRender = value;\r\n    }\r\n\r\n    get frameRender() {\r\n        return this._frameRender;\r\n    }\r\n\r\n\r\n    /**\r\n     * 开始播放视频\r\n     */\r\n    play() {\r\n        if (!this._texture) {\r\n            this.immediatelyPlay = true;\r\n        } else {\r\n            this.element.play().catch(() => {\r\n                this.event(\"NotAllowedError\");\r\n            });\r\n            if (this._frameRender) {\r\n                ILaya.timer.frameLoop(1, this, this.render);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    _getSource() {\r\n        return this._texture ? this._texture.resource : null;\r\n    }\r\n\r\n    get defaultTexture() {\r\n        return Texture2D.whiteTexture;\r\n    }\r\n\r\n    /**\r\n     * 暂停播放视频\r\n     */\r\n    pause() {\r\n        this.element.pause();\r\n        if (this._frameRender) {\r\n            ILaya.timer.clear(this, this.render);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 重新加载视频。\r\n     */\r\n    load(): void {\r\n        this.element.load();\r\n    }\r\n\r\n    /**\r\n     * 检测是否支持播放指定格式视频。\r\n     * @param type\t\"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\r\n     * @return 表示支持的级别。可能的值：\r\n     * <ul>\r\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\r\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\r\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\r\n     * </ul>\r\n     */\r\n    canPlayType(type: string): CanPlayTypeResult {\r\n        type = type == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + type);\r\n        return this.element.canPlayType(type);\r\n    }\r\n\r\n    /**\r\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\r\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\r\n     * @return TimeRanges(JS)对象\r\n     */\r\n    get buffered(): any {\r\n        return this.element.buffered;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放源路径。\r\n     */\r\n    get currentSrc(): string {\r\n        return this.element.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前播放头位置。\r\n     */\r\n    get currentTime(): number {\r\n        return this.element.currentTime;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        if (!this.element)\r\n            return;\r\n\r\n        this.element.currentTime = value;\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前音量。\r\n     */\r\n    set volume(value: number) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.volume = value;\r\n    }\r\n\r\n    get volume(): number {\r\n        return this.element.volume;\r\n    }\r\n\r\n    /**\r\n     * 表示视频元素的就绪状态：\r\n     * <ul>\r\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\r\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\r\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\r\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\r\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\r\n     * </ul>\r\n     */\r\n    get readyState(): any {\r\n        return this.element.readyState;\r\n    }\r\n\r\n    /**\r\n     * 获取视频源尺寸。ready事件触发后可用。\r\n     */\r\n    get videoWidth(): number {\r\n        return this.element.videoWidth;\r\n    }\r\n\r\n    get videoHeight(): number {\r\n        return this.element.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * 获取视频长度（秒）。ready事件触发后可用。\r\n     */\r\n    get duration(): number {\r\n        return this.element.duration;\r\n    }\r\n\r\n    /**\r\n     * 返回音频/视频的播放是否已结束\r\n     */\r\n    get ended(): boolean {\r\n        return this.element.ended;\r\n    }\r\n\r\n    /**\r\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\r\n     */\r\n    get error(): MediaError {\r\n        return this.element.error;\r\n    }\r\n\r\n    /**\r\n     * 设置或返回音频/视频是否应在结束时重新播放。\r\n     */\r\n    get loop(): boolean {\r\n        return this.element.loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.loop = value;\r\n    }\r\n\r\n    /**\r\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\r\n     * <ul>\r\n     * <li>1.0 正常速度</li>\r\n     * <li>0.5 半速（更慢）</li>\r\n     * <li>2.0 倍速（更快）</li>\r\n     * <li>-1.0 向后，正常速度</li>\r\n     * <li>-0.5 向后，半速</li>\r\n     * </ul>\r\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\r\n     */\r\n    get playbackRate(): number {\r\n        return this.element.playbackRate;\r\n    }\r\n\r\n    set playbackRate(value: number) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.playbackRate = value;\r\n    }\r\n\r\n    /**\r\n     * 获取和设置静音状态。\r\n     */\r\n    get muted(): boolean {\r\n        return this.element.muted;\r\n    }\r\n\r\n    set muted(value: boolean) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.muted = value;\r\n    }\r\n\r\n    /**\r\n     * 返回视频是否暂停\r\n     */\r\n    get paused(): boolean {\r\n        return this.element.paused;\r\n    }\r\n\r\n    /**\r\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\r\n     * <ul>\r\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\r\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\r\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\r\n     * </ul>\r\n     */\r\n    get preload(): string {\r\n        return this.element.preload;\r\n    }\r\n\r\n    set preload(value: string) {\r\n        if (!this.element)\r\n            return;\r\n        //@ts-ignore\r\n        this.element.preload = value;\r\n    }\r\n\r\n    /**\r\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\r\n     */\r\n    get seekable(): any {\r\n        return this.element.seekable;\r\n    }\r\n\r\n    /**\r\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\r\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\r\n     */\r\n    get seeking(): boolean {\r\n        return this.element.seeking;\r\n    }\r\n\r\n    protected onStartListeningToType(type: string): void {\r\n        if (videoEvents.has(type)) {\r\n            let func = this._listeningEvents[type];\r\n            if (!func)\r\n                func = this._listeningEvents[type] = () => {\r\n                    this.event(type);\r\n                };\r\n\r\n            this.element.addEventListener(type, func);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        var isConchApp: boolean = LayaEnv.isConch;\r\n        if (this.element) {\r\n            if (LayaEnv.isConch) {\r\n                (<any>this.element)._destroy();\r\n            }\r\n            else {\r\n                this.element.pause();\r\n                this.element.src = \"\";\r\n                while (this.element.childElementCount)\r\n                    this.element.firstChild.remove();\r\n            }\r\n        }\r\n\r\n        ILaya.timer.clear(this, this.render);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\nconst videoEvents = new Set([\r\n    \"abort\", \"canplay\", \"canplaythrough\", \"durationchange\", \"emptied\", \"error\", \"loadeddata\",\r\n    \"loadedmetadata\", \"loadstart\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"seeked\", \"seeking\",\r\n    \"stalled\", \"suspend\", \"timeupdate\", \"volumechange\", \"waiting\", \"ended\"\r\n]);","import { Sprite } from \"../display/Sprite\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { VideoTexture } from \"./VideoTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { Event } from \"../events/Event\";\r\n\r\n/**\r\n * <code>VideoNode</code>将视频显示到Canvas上。<code>Video</code>可能不会在所有浏览器有效。\r\n * <p>关于Video支持的所有事件参见：<i>http://www.w3school.com.cn/tags/html_ref_audio_video_dom.asp</i>。</p>\r\n * <p>\r\n * <b>注意：</b><br/>\r\n * 在PC端可以在任何时机调用<code>play()</code>因此，可以在程序开始运行时就使Video开始播放。但是在移动端，只有在用户第一次触碰屏幕后才可以调用play()，所以移动端不可能在程序开始运行时就自动开始播放Video。\r\n * </p>\r\n *\r\n * <p>MDN Video链接： <i>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video</i></p>\r\n */\r\nexport class VideoNode extends Sprite {\r\n    private _videoTexture: VideoTexture;\r\n    private _internalTex: Texture;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.texture = this._internalTex = new Texture();\r\n\r\n        if (LayaEnv.isPlaying && ILaya.Browser.onMobile) {\r\n            let func = () => {\r\n                ILaya.Browser.document.removeEventListener(\"touchend\", func);\r\n\r\n                if (!this._videoTexture)\r\n                    return;\r\n\r\n                if (Browser.onIOS) {\r\n                    this._videoTexture.load();\r\n                } else {\r\n                    this._videoTexture.play();\r\n                    this._videoTexture.pause();\r\n                }\r\n            }\r\n\r\n            ILaya.Browser.document.addEventListener(\"touchend\", func);\r\n        }\r\n    }\r\n\r\n    get videoTexture(): VideoTexture {\r\n        return this._videoTexture;\r\n    }\r\n\r\n    set videoTexture(value: VideoTexture) {\r\n        if (this._videoTexture) {\r\n            this._videoTexture._removeReference();\r\n            this._videoTexture.off(Event.READY, this, this.onVideoMetaLoaded);\r\n        }\r\n\r\n        this._videoTexture = value;\r\n        if (value) {\r\n            this._videoTexture._addReference();\r\n            this._videoTexture.on(Event.READY, this, this.onVideoMetaLoaded);\r\n            if (this._videoTexture._isLoaded)\r\n                this._internalTex.setTo(this._videoTexture);\r\n        }\r\n        else {\r\n            this._internalTex.setTo(null);\r\n        }\r\n    }\r\n\r\n    get source() {\r\n        return this._videoTexture?.source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        if (value) {\r\n            if (!this._videoTexture)\r\n                this.videoTexture = new VideoTexture();\r\n            this._videoTexture.source = value;\r\n        }\r\n        else if (this._videoTexture)\r\n            this._videoTexture.source = value;\r\n    }\r\n\r\n    /**\r\n     * 设置播放源。\r\n     * @param url\t播放源路径。\r\n     */\r\n    load(url: string): void {\r\n        this.source = url;\r\n    }\r\n\r\n    /**\r\n     * 开始播放视频。\r\n     */\r\n    play(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.play();\r\n    }\r\n\r\n    /**\r\n     * 暂停视频播放。\r\n     */\r\n    pause(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.pause();\r\n    }\r\n\r\n    /**\r\n     * 重新加载视频。\r\n     */\r\n    reload(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.load();\r\n    }\r\n\r\n    /**\r\n     * 检测是否支持播放指定格式视频。\r\n     * @param type\t\"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\r\n     * @return 表示支持的级别。可能的值：\r\n     * <ul>\r\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\r\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\r\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\r\n     * </ul>\r\n     */\r\n    canPlayType(type: string): CanPlayTypeResult {\r\n        if (!this._videoTexture)\r\n            this.videoTexture = new VideoTexture();\r\n        return this._videoTexture.canPlayType(type);\r\n    }\r\n\r\n    private onVideoMetaLoaded(): void {\r\n        this._internalTex.setTo(this._videoTexture);\r\n    }\r\n\r\n    /**\r\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\r\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\r\n     * @return TimeRanges(JS)对象\r\n     */\r\n    get buffered(): any {\r\n        return this._videoTexture?.buffered;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放源路径。\r\n     */\r\n    get currentSrc(): string {\r\n        return this._videoTexture?.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前播放头位置。\r\n     */\r\n    get currentTime(): number {\r\n        return this._videoTexture?.currentTime;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.currentTime = value;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前音量。\r\n     */\r\n    set volume(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.volume = value;\r\n    }\r\n\r\n    get volume(): number {\r\n        return this._videoTexture?.volume;\r\n    }\r\n\r\n    /**\r\n     * 表示视频元素的就绪状态：\r\n     * <ul>\r\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\r\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\r\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\r\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\r\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\r\n     * </ul>\r\n     */\r\n    get readyState(): any {\r\n        return this._videoTexture?.readyState;\r\n    }\r\n\r\n    /**\r\n     * 获取视频源尺寸。ready事件触发后可用。\r\n     */\r\n    get videoWidth(): number {\r\n        return this._videoTexture?.videoWidth;\r\n    }\r\n\r\n    get videoHeight(): number {\r\n        return this._videoTexture?.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * 获取视频长度（秒）。ready事件触发后可用。\r\n     */\r\n    get duration(): number {\r\n        return this._videoTexture?.duration;\r\n    }\r\n\r\n    /**\r\n     * 返回音频/视频的播放是否已结束\r\n     */\r\n    get ended(): boolean {\r\n        return this._videoTexture?.ended;\r\n    }\r\n\r\n    /**\r\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\r\n     */\r\n    get error(): MediaError {\r\n        return this._videoTexture?.error;\r\n    }\r\n\r\n    /**\r\n     * 设置或返回音频/视频是否应在结束时重新播放。\r\n     */\r\n    get loop(): boolean {\r\n        return this._videoTexture?.loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.loop = value;\r\n    }\r\n\r\n    /**\r\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\r\n     * <ul>\r\n     * <li>1.0 正常速度</li>\r\n     * <li>0.5 半速（更慢）</li>\r\n     * <li>2.0 倍速（更快）</li>\r\n     * <li>-1.0 向后，正常速度</li>\r\n     * <li>-0.5 向后，半速</li>\r\n     * </ul>\r\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\r\n     */\r\n    get playbackRate(): number {\r\n        return this._videoTexture?.playbackRate;\r\n    }\r\n\r\n    set playbackRate(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.playbackRate = value;\r\n    }\r\n\r\n    /**\r\n     * 获取和设置静音状态。\r\n     */\r\n    get muted(): boolean {\r\n        return this._videoTexture?.muted;\r\n    }\r\n\r\n    set muted(value: boolean) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.muted = value;\r\n    }\r\n\r\n    /**\r\n     * 返回视频是否暂停\r\n     */\r\n    get paused(): boolean {\r\n        return this._videoTexture?.paused;\r\n    }\r\n\r\n    /**\r\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\r\n     * <ul>\r\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\r\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\r\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\r\n     * </ul>\r\n     */\r\n    get preload(): string {\r\n        return this._videoTexture?.preload;\r\n    }\r\n\r\n    set preload(value: string) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        //@ts-ignore\r\n        this._videoTexture.preload = value;\r\n    }\r\n\r\n    /**\r\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\r\n     */\r\n    get seekable(): any {\r\n        return this._videoTexture?.seekable;\r\n    }\r\n\r\n    /**\r\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\r\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\r\n     */\r\n    get seeking(): boolean {\r\n        return this._videoTexture?.seeking;\r\n    }\r\n\r\n    /**\r\n    * @override\r\n    */\r\n    _setX(value: number): void {\r\n        super._setX(value);\r\n        if (this._videoTexture && LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.style.left = transform.x;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setY(value: number): void {\r\n        super._setY(value);\r\n        if (this._videoTexture && LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.style.top = transform.y;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set_width(value: number): void {\r\n        super.set_width(value);\r\n\r\n        if (!this._videoTexture)\r\n            return;\r\n        if (LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.width = value * transform.scaleX;\r\n        }\r\n        else {\r\n            this._videoTexture.element.width = this.width / ILaya.Browser.pixelRatio;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set_height(value: number) {\r\n        super.set_height(value);\r\n\r\n        if (!this._videoTexture)\r\n            return;\r\n        if (LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.height = value * transform.scaleY;\r\n\r\n        }\r\n        else {\r\n            this._videoTexture.element.height = this.height / ILaya.Browser.pixelRatio;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁内部事件绑定。\r\n     * @override\r\n     */\r\n    destroy(detroyChildren: boolean = true): void {\r\n        this.videoTexture = null;\r\n        super.destroy(detroyChildren);\r\n    }\r\n}","import { AnimatorState2D } from \"./AnimatorState2D\";\r\n\r\nexport class AnimatorPlayState2D {\r\n\t_finish: boolean;\r\n\t/**@internal */\r\n\t_startPlayTime: number;\r\n\t/**@internal */\r\n\t_lastElapsedTime: number;\r\n\t/**@internal 动画播放时间*/\r\n\t_elapsedTime: number;\r\n\t/**@internal 播放的次数*/\r\n\t_playNum: number;\r\n\r\n\t/**播放总时间，不受speed为负数的影响 */\r\n\t_playAllTime: number;\r\n\r\n\t/**@internal 单词播放归一化时间 */\r\n\t_normalizedPlayTime: number;\r\n\t/**@internal */\r\n\t_duration: number;\r\n\t/**@internal 上次播放的时间，event事件使用*/\r\n\t_parentPlayTime: number;\r\n\t/**@internal */\r\n\t_lastIsFront: boolean;\r\n\t/**@internal */\r\n\t_currentState: AnimatorState2D | null = null;\r\n\r\n\t/**是为正向播放 */\r\n\t_frontPlay = true;\r\n\r\n\r\n\t/**\r\n\t * 当前动画的持续时间，以秒为单位。\r\n\t */\r\n\tget duration(): number {\r\n\t\treturn this._duration;\r\n\t}\r\n\r\n\t// checkPlayNext(): Animation2DNext {\r\n\t//     var nexts = this._currentState.nexts;\r\n\t//     if (nexts) {\r\n\t//         for (var i = 0, len = nexts.length; i < len; i++) {\r\n\t//             var no = nexts[i];\r\n\t//             //TODO 需要检测next的条件\r\n\t//             return no;\r\n\t//         }\r\n\t//     }\r\n\t//     return null;\r\n\t// }\r\n\r\n\t/**\r\n\t * 动画状态机。\r\n\t */\r\n\tget animatorState(): AnimatorState2D {\r\n\t\treturn this._currentState!;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个 <code>AnimatorPlayState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_resetPlayState(startTime: number, clipDuration: number): void {\r\n\t\tthis._finish = false;\r\n\t\tthis._startPlayTime = startTime;\r\n\t\tthis._elapsedTime = startTime;\r\n\t\tthis._lastIsFront = true;\r\n\t\tthis._parentPlayTime = null;\r\n\t\tthis._playNum = 0;\r\n\t\tthis._playAllTime = 0;\r\n\t\tvar playTime = (this._elapsedTime / clipDuration) % 1.0;\r\n\t\tthis._normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n\t\tthis._frontPlay = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_cloneTo(dest: AnimatorPlayState2D): void {\r\n\t\tdest._finish = this._finish;\r\n\t\tdest._startPlayTime = this._startPlayTime;\r\n\t\tdest._elapsedTime = this._elapsedTime;\r\n\t\tdest._playNum = this._playNum;\r\n\t\tdest._parentPlayTime = this._parentPlayTime;\r\n\t\tdest._normalizedPlayTime = this._normalizedPlayTime;\r\n\t\tdest._lastIsFront = this._lastIsFront;\r\n\t\tdest._frontPlay = this._frontPlay;\r\n\t\tdest._playAllTime = this._playAllTime;\r\n\t}\r\n\r\n}","import { IClone } from \"../utils/IClone\";\r\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\nexport class AnimatorControllerLayer2D implements IClone {\r\n\r\n    /**混合模式_覆盖。 */\r\n    static BLENDINGMODE_OVERRIDE: number = 0;\r\n\r\n    /**混合模式_叠加。 */\r\n    static BLENDINGMODE_ADDTIVE: number = 1;\r\n\r\n    /**@internal */\r\n    private _defaultState: AnimatorState2D | null;\r\n\r\n    /**@internal */\r\n    private _referenceCount = 0;\r\n\r\n    /**@internal */\r\n    private _defaultStateNameCatch: string;\r\n\r\n    /**@internal*/\r\n    _playStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\r\n\r\n    /**@internal*/\r\n    _crossPlayStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\r\n\r\n    /**@internal*/\r\n    _crossMark: number = 0;\r\n\r\n    /**@internal */\r\n    _crossNodesOwnersCount: number = 0;\r\n\r\n    /**@internal */\r\n    _crossNodesOwnersIndicesMap: any = {};\r\n\r\n    /**@internal */\r\n    _srcCrossClipNodeIndices: number[] = [];\r\n\r\n    /**@internal */\r\n    _destCrossClipNodeIndices: number[] = [];\r\n    \r\n    /**@internal */\r\n    _enterTransition: AnimatorTransition2D;\r\n\r\n    /**\r\n     * 层的名字\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * 是否开始时播放\r\n     */\r\n    playOnWake = true;\r\n\r\n    /**\r\n     * 默认权重\r\n     */\r\n    defaultWeight = 1.0;\r\n\r\n    /**\r\n     * 混合模式\r\n     */\r\n    blendingMode = AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n\r\n    /**\r\n     * 是否开启\r\n     */\r\n    enable = true;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _states: AnimatorState2D[] = [];\r\n\r\n    /**\r\n     * @internal \r\n     * 0:常规播放、1:动态融合播放、2:固定融合播放\r\n     */\r\n    _playType = -1;\r\n\r\n    /**\r\n     * 实例化一个2D动画控制器\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    /**\r\n     * 设置状态机\r\n     */\r\n    set states(states: ReadonlyArray<AnimatorState2D>) {\r\n        if (this._states === states)\r\n            return;\r\n        for (let i = this.states.length - 1; i >= 0; i--) {\r\n            this.removeState(this.states[i]);\r\n        }\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            this.addState(states[i]);\r\n        }\r\n    }\r\n\r\n    get states(): ReadonlyArray<AnimatorState2D> {\r\n        return this._states;\r\n    }\r\n\r\n    /**\r\n     * 默认状态名称\r\n     */\r\n    set defaultStateName(str: string) {\r\n        this._defaultState = this.getStateByName(str);\r\n        if (null == this._defaultState) {\r\n            if (0 == this._states.length) {\r\n                this._defaultStateNameCatch = str;\r\n            } else {\r\n                for (var i = this._states.length - 1; i >= 0; i--) {\r\n                    if (this._states[i].name == str) {\r\n                        this._defaultState = this._states[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get defaultStateName() {\r\n        if (!this._defaultState) {\r\n            return null;\r\n        }\r\n        return this._defaultState.name;\r\n    }\r\n\r\n    /**\r\n     * 默认动画状态机。\r\n     */\r\n    get defaultState(): AnimatorState2D {\r\n        return this._defaultState!;\r\n    }\r\n\r\n    set defaultState(value: AnimatorState2D) {\r\n        this._defaultState = value;\r\n        //this._statesMap[value.name] = value;\r\n    }\r\n\r\n    /**\r\n     * 移除Clip\r\n     * @param clipStateInfos \r\n     * @param index \r\n     * @param state \r\n     */\r\n    private _removeClip(clipStateInfos: AnimatorState2D[], index: number, state: AnimatorState2D): void {\r\n        clipStateInfos.splice(index, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getReferenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _addReference(count: number): void {\r\n        for (var i = 0, n = this._states.length; i < n; i++)\r\n            this._states[i]._addReference(count);\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _removeReference(count = 1): void {\r\n        for (var i = 0, n = this._states.length; i < n; i++)\r\n            this._states[i]._removeReference(count);\r\n        this._referenceCount -= count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clearReference(): void {\r\n        this._removeReference(-this._referenceCount);\r\n    }\r\n\r\n\r\n    /**\r\n    * 获取当前的播放状态。\r\n    * @return 动画播放状态。\r\n    */\r\n    getCurrentPlayState(): AnimatorPlayState2D {\r\n        return this._playStateInfo!;\r\n    }\r\n\r\n    /**\r\n     * 状态机名称\r\n     * @param str \r\n     * @returns \r\n     */\r\n    getStateByName(str: string) {\r\n        for (let i = this._states.length - 1; i >= 0; i--) {\r\n            if (this._states[i].name == str) {\r\n                return this._states[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 添加动画状态。\r\n     * @param\tstate 动画状态。\r\n     * @param   layerIndex 层索引。\r\n     */\r\n    addState(state: AnimatorState2D): void {\r\n        var stateName = state.name;\r\n        if (this.getStateByName(stateName)) {\r\n            throw \"AnimatorControllerLayer:this stat's name has exist.\";\r\n        } else {\r\n            this._states.push(state);\r\n            if (stateName == this._defaultStateNameCatch) {\r\n                this._defaultState = state;\r\n                this._defaultStateNameCatch = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除动画状态。\r\n     * @param\tstate 动画状态。\r\n     * @param   layerIndex 层索引。\r\n     */\r\n    removeState(state: AnimatorState2D): void {\r\n        var states = this._states;\r\n        var index = -1;\r\n        for (var i = 0, n = states.length; i < n; i++) {\r\n            if (states[i] === state) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (-1 != index)\r\n            this._removeClip(states, index, state);\r\n    }\r\n\r\n    /**\r\n         * 克隆。\r\n         * @return\t 克隆副本。\r\n         */\r\n    clone() {\r\n        var dest: AnimatorControllerLayer2D = new AnimatorControllerLayer2D(this.name);\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var dest: AnimatorControllerLayer2D = (<AnimatorControllerLayer2D>destObject);\r\n        dest.name = this.name;\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        this._removeReference();\r\n        for (var i = 0, n = this._states.length; i < n; i++) {\r\n            this._states[i].destroy();\r\n        }\r\n        this._states.length = 0;\r\n    }\r\n}","import { AvatarMask } from \"../d3/component/Animator/AvatarMask\";\r\n\r\nexport interface TypeAnimatorControllerData {\r\n    layerW: number,\r\n    controllerLayers: TypeAnimatorLayer[];\r\n    cullingMode?: number,\r\n    enable?: boolean,\r\n    animatorParams?: TypeAnimatorParams[],\r\n}\r\nexport interface TypeAnimatorParams {\r\n    id: number,\r\n    name: string,\r\n    type: AniParmType,\r\n    val: number | boolean,\r\n}\r\nexport interface TypeAnimatorLayer {\r\n    defaultStateName?: string,\r\n    name: string,\r\n    blendingMode: number,\r\n    states: TypeAnimatorState[],\r\n    playOnWake: boolean,\r\n    defaultWeight: number,\r\n    avatarMask?: any,\r\n\r\n    stageX?: number,\r\n    stageY?: number,\r\n    stageScale?: number,\r\n}\r\n\r\nexport enum AniParmType {\r\n    Float,\r\n    Bool,\r\n    Trigger,\r\n}\r\n\r\n/**\r\n * 动画状态条件类型\r\n */\r\nexport enum AniStateConditionType {\r\n    Number,\r\n    Bool,\r\n    Trigger\r\n}\r\n\r\nexport interface TypeAnimatorState {\r\n    x: number,\r\n    y: number,\r\n    /**-1代表enter，-2代表exit，-3代表anyState */\r\n    id: string,\r\n    name: string,\r\n    speed?: number,\r\n    clipStart?: number,\r\n    clipEnd?: number,\r\n    loop?: number,\r\n    yoyo?: boolean,\r\n    soloTransitions?: TypeAnimatorTransition[],\r\n    clip?: { _$uuid: string, },\r\n    scripts?: string[],\r\n\r\n\r\n    states?: TypeAnimatorState[],\r\n    defaultStateName?: string,\r\n    stageX?: number,\r\n    stageY?: number,\r\n    stageScale?: number,\r\n}\r\nexport interface TypeAnimatorTransition {\r\n    id: string,\r\n    name?: string,\r\n    mute?: boolean,\r\n    solo?: boolean,\r\n    exitTime?: number,\r\n    transduration?: number,\r\n    transstartoffset?: number,\r\n    exitByTime?: boolean,\r\n    conditions?: TypeAnimatorConditions[],\r\n}\r\nexport interface TypeAnimatorConditions {\r\n    id?: number,\r\n    type?: AniStateConditionNumberCompressType,\r\n    checkValue?: number | boolean,\r\n    name?: string,\r\n}\r\n\r\nexport enum AniStateConditionNumberCompressType {\r\n    Less,\r\n    Greater\r\n}\r\n\r\nexport class AnimatorControllerParse {\r\n    static parse(data: TypeAnimatorControllerData) {\r\n        //let ret: TypeAnimatorControllerData = JSON.parse(JSON.stringify(data));\r\n        let ret = data;\r\n        let layers = ret.controllerLayers;\r\n        if (null == layers) {\r\n            layers = [];\r\n        }\r\n\r\n        let clipsID: string[] = [];\r\n\r\n\r\n        for (let i = layers.length - 1; i >= 0; i--) {\r\n            let l = layers[i];\r\n            let states = l.states;\r\n            if (!states) {\r\n                states = [];\r\n                l.states = states;\r\n            }\r\n\r\n            l.defaultStateName = null;\r\n            let retobj = this.checkStates(states, clipsID, ret);\r\n            if (retobj) {\r\n                l.defaultStateName = retobj.enterName;\r\n            } else {\r\n                layers.splice(i, 1);\r\n            }\r\n        }\r\n        return { ret: ret, clipsID: clipsID };\r\n    }\r\n\r\n\r\n    private static checkStates(states: TypeAnimatorState[], clipsID: string[], data: TypeAnimatorControllerData) {\r\n        let clipState: TypeAnimatorState[] = null;\r\n        let enterState: TypeAnimatorState = null;\r\n        for (let j = states.length - 1; j >= 0; j--) {\r\n            let state = states[j];\r\n            if (state.states) {\r\n                if (null == this.checkStates(state.states, clipsID, data)) {\r\n                    states.splice(j, 1);\r\n                } else {\r\n                    if (null == clipState) {\r\n                        clipState = [];\r\n                    }\r\n                    clipState.push(state);\r\n                }\r\n            } else if (\"-1\" == state.id) {\r\n                enterState = state;\r\n                // let defName = this.checkDefault(state, states);\r\n                // if (null != defName) {\r\n                //     l.defaultStateName = defName;\r\n                // }\r\n            } else if (\"-2\" == state.id) {\r\n                //TODO any\r\n            } else if (\"-3\" == state.id) {\r\n                //TODO exit\r\n            } else if (null == state.clip || null == state.clip._$uuid || \"\" == state.clip._$uuid) {\r\n                states.splice(j, 1);\r\n            } else {\r\n                if (0 > clipsID.indexOf(state.clip._$uuid)) {\r\n                    clipsID.push(state.clip._$uuid);\r\n                }\r\n\r\n                this.checkNext(state, states, data);\r\n                if (null == clipState) {\r\n                    clipState = [];\r\n                }\r\n                clipState.push(state);\r\n            }\r\n        }\r\n        let ret: { states: TypeAnimatorState[], enterName: string } = null;\r\n        if (clipState && enterState) {\r\n            let defName = this.checkDefault(enterState, clipState);\r\n            if (null != defName) {\r\n                ret = { states: clipState, enterName: defName };\r\n            }\r\n        }\r\n\r\n\r\n        return ret;\r\n    }\r\n\r\n    private static checkNext(state: TypeAnimatorState, states: TypeAnimatorState[], data: TypeAnimatorControllerData) {\r\n        let nexts = state.soloTransitions;\r\n        if (nexts) {\r\n            for (let i = nexts.length - 1; i >= 0; i--) {\r\n                let next = nexts[i];\r\n                let nState = this.getStateByID(states, next.id);\r\n                if (!nState || (null == nState.clip && \"-3\" != nState.id && null == nState.states)) {\r\n                    nexts.splice(i, 1);\r\n                } else {\r\n                    next.name = nState.name;\r\n\r\n                    next.conditions = this.checkConditions(next.conditions, data);\r\n\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private static checkConditions(conditions: TypeAnimatorConditions[], data: TypeAnimatorControllerData) {\r\n        if (!conditions || 0 == conditions.length || null == data.animatorParams || 0 == data.animatorParams.length) {\r\n            return [];\r\n        }\r\n\r\n        let parms = data.animatorParams;\r\n\r\n        for (let i = conditions.length - 1; i >= 0; i--) {\r\n            let o = conditions[i];\r\n            let parm: TypeAnimatorParams = null;\r\n            for (let j = parms.length - 1; j >= 0; j--) {\r\n                if (parms[j].id == o.id) {\r\n                    parm = parms[j];\r\n                    break;\r\n                }\r\n            }\r\n            if (null == parm) {\r\n                conditions.splice(i, 1);\r\n            } else {\r\n                o.name = parm.name;\r\n                if (parm.type == AniParmType.Float) {\r\n                    let num = Number(o.checkValue);\r\n                    if (isNaN(num)) {\r\n                        o.checkValue = 0;\r\n                    }\r\n                    num = Number(o.type);\r\n                    if (isNaN(num)) {\r\n                        o.type = 0;\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return conditions;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    private static checkDefault(state: TypeAnimatorState, states: TypeAnimatorState[]) {\r\n        let nexts = state.soloTransitions;\r\n        let id: string = null;\r\n        if (nexts && 0 < nexts.length) {\r\n            id = nexts[0].id;\r\n        }\r\n\r\n        let defState: TypeAnimatorState = null;\r\n        if (null != id) {\r\n            defState = this.getStateByID(states, id);\r\n        }\r\n        if (null != defState && (null != defState.clip || null != defState.states)) {\r\n            return defState.name;\r\n        }\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            if (states[i].clip) {\r\n                return states[i].name;\r\n            }\r\n        }\r\n\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n\r\n    private static getStateByID(states: TypeAnimatorState[], id: string) {\r\n        if (states) {\r\n            for (let i = states.length - 1; i >= 0; i--) {\r\n                if (states[i].id == id) {\r\n                    return states[i];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}","/**\r\n * 动画更新模式\r\n */\r\nexport enum AnimatorUpdateMode {\r\n    /**正常更新。*/\r\n    Normal = 0,\r\n    /**低频率更新 */\r\n    LowFrame = 1,\r\n    /**不更新 */\r\n    UnScaleTime = 2\r\n}\r\n","\r\n/**\r\n * 动画条件类型\r\n */\r\nexport enum AniConditionType {\r\n    /**\r\n     * 大于\r\n     */\r\n    Greater,\r\n    /**\r\n     * 小于\r\n     */\r\n    Less,\r\n    /**\r\n     * 等于\r\n     */\r\n    Equals,\r\n    /**\r\n     * 不等于\r\n     */\r\n    NotEqual,//不等于\r\n}\r\n\r\n/**\r\n * 2D动画类型\r\n */\r\nexport class Animation2DCondition {\r\n    /**\r\n     * id编号\r\n     */\r\n    id: number;\r\n    /**\r\n     * 动画条件\r\n     */\r\n    type: AniConditionType;\r\n    /**\r\n     * 检测值\r\n     */\r\n    checkValue: any\r\n}","import { Resource } from \"./Resource\";\r\n/**\r\n * 文字资源格式\r\n */\r\nexport enum TextResourceFormat {\r\n    /**Buffer */\r\n    Buffer,\r\n    /**TODO */\r\n    Plain,\r\n    /**Json */\r\n    JSON,\r\n    /**XML */\r\n    XML\r\n}\r\n\r\n/**\r\n * 文字资源\r\n */\r\nexport class TextResource extends Resource {\r\n    /**数据 */\r\n    public readonly data: any;\r\n    /**格式 */\r\n    public readonly format: TextResourceFormat;\r\n    /**\r\n     * 实例化文字资源\r\n     * @param data \r\n     * @param format \r\n     */\r\n    constructor(data: any, format: TextResourceFormat) {\r\n        super();\r\n        this.data = data;\r\n        this.format = format;\r\n    }\r\n}","\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\r\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { Component } from \"./Component\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { Node } from \"../../laya/display/Node\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AnimatorController2D } from \"./AnimatorController2D\";\r\nimport { AniParmType } from \"./AnimatorControllerParse\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { AnimatorUpdateMode } from \"./AnimatorUpdateMode\";\r\n\r\n/**\r\n * <code>Animator2D<code/>2D动画组件\r\n */\r\nexport class Animator2D extends Component {\r\n    /**@internal */\r\n    private _speed = 1;\r\n    /**@internal 更新模式*/\r\n    private _updateMode = AnimatorUpdateMode.Normal;\r\n    /**@internal 降低更新频率调整值*/\r\n    private _lowUpdateDelty = 20;\r\n    /**@internal */\r\n    private _isPlaying = true;\r\n    /**@internal */\r\n    private _ownerMap: Map<KeyframeNode2D, { ower: Node, pro?: { ower: any, key: string, defVal: any } }>\r\n    /**@internal */\r\n    _parameters: Record<string, Animation2DParm>;\r\n    /**@internal */\r\n    _controllerLayers: AnimatorControllerLayer2D[];\r\n    /**@internal */\r\n    _controller: AnimatorController2D;\r\n    /**@internal */\r\n    _checkEnterIndex: number[];\r\n\r\n    /**\r\n     * 实例化2D动画组件\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._controllerLayers = [];\r\n        this._parameters = {};\r\n    }\r\n\r\n    /**\r\n     * 2D动画控制器\r\n     */\r\n    set controller(val: AnimatorController2D) {\r\n        this._controller = val;\r\n        if (val) {\r\n            val.updateTo(this);\r\n        }\r\n    }\r\n\r\n    get controller() {\r\n        return this._controller;\r\n    }\r\n\r\n    /**\r\n     * 动画参数\r\n     */\r\n    set parameters(val: Record<string, Animation2DParm>) {\r\n        this._parameters = val;\r\n    }\r\n\r\n    get parameters() {\r\n        return this._parameters;\r\n    }\r\n\r\n    /**\r\n     * 播放速度\r\n     */\r\n    set speed(num: number) {\r\n        this._speed = num;\r\n    }\r\n\r\n    get speed() {\r\n        return this._speed;\r\n    }\r\n\r\n    /**\r\n     * 是否正在播放中\r\n     */\r\n    get isPlaying() {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param animatorState \r\n     * @param playState \r\n     */\r\n    private _updateStateFinish(animatorState: AnimatorState2D, playState: AnimatorPlayState2D): void {\r\n        if (playState._finish) {\r\n            animatorState._eventExit();//派发播放完成的事件\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 赋值Node数据\r\n     * @param stateInfo 动画状态\r\n     * @param additive 是否为addtive\r\n     * @param weight state权重\r\n     * @param isFirstLayer 是否是第一层\r\n     */\r\n    private _setClipDatasToNode(stateInfo: AnimatorState2D, additive: boolean, weight: number, controllerLayer: AnimatorControllerLayer2D = null): void {\r\n        var realtimeDatas = stateInfo._realtimeDatas;\r\n        var nodes = stateInfo._clip!._nodes!;\r\n        for (var i = 0, n = nodes.count; i < n; i++) {\r\n            if (null == realtimeDatas[i]) continue;\r\n            var node = nodes.getNodeByIndex(i);\r\n            var o = this.getOwner(node);\r\n            o && this._applyFloat(o, additive, weight, realtimeDatas[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param o \r\n     * @param additive \r\n     * @param weight \r\n     * @param isFirstLayer \r\n     * @param data \r\n     */\r\n    private _applyFloat(o: { ower: Node, pro?: { ower: any, key: string, defVal: any } }, additive: boolean, weight: number, data: string | number | boolean): void {\r\n        var pro = o.pro;\r\n        if (pro && pro.ower) {\r\n            if (additive && \"number\" == typeof data) {\r\n                pro.ower[pro.key] = pro.defVal + weight * data;\r\n            } else if (\"number\" == typeof data) {\r\n                pro.ower[pro.key] = weight * data;\r\n            } else {\r\n                pro.ower[pro.key] = data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param node \r\n     * @returns \r\n     */\r\n    private getOwner(node: KeyframeNode2D) {\r\n        var ret: { ower: Node, pro?: { ower: any, key: string, defVal: any } };\r\n        if (this._ownerMap) {\r\n            ret = this._ownerMap.get(node);\r\n            if (ret) {\r\n                return ret;\r\n            }\r\n        }\r\n\r\n        var property = this.owner;\r\n        for (var j = 0, m = node.ownerPathCount; j < m; j++) {\r\n            var ownPat = node.getOwnerPathByIndex(j);\r\n            if (\"\" == ownPat) {\r\n                continue;\r\n            } else {\r\n                property = property.getChildByName(ownPat);\r\n                if (!property)\r\n                    break;\r\n            }\r\n        }\r\n\r\n        ret = { ower: property };\r\n\r\n        if (property) {\r\n            var pobj: any = property;\r\n            var propertyCount = node.propertyCount;\r\n\r\n            if (1 == propertyCount) {\r\n                var pname = node.getPropertyByIndex(0);\r\n                ret.pro = { ower: property, key: pname, defVal: (property as any)[pname] };\r\n            } else {\r\n                for (var i = 0; i < propertyCount; i++) {\r\n                    var pname = node.getPropertyByIndex(i);\r\n\r\n                    if (i == propertyCount - 1 || null == pobj) {\r\n                        ret.pro = { ower: pobj, key: pname, defVal: pobj ? pobj[pname] : null }\r\n                        break;\r\n                    }\r\n\r\n                    if (null == pobj[pname] && property == pobj) {\r\n                        //有可能是组件,查找组件逻辑\r\n                        pobj = null;\r\n                        var classObj = ClassUtils.getClass(pname);\r\n                        if (classObj) {\r\n                            pobj = property.getComponent(classObj);\r\n                        }\r\n\r\n                    } else {\r\n                        pobj = pobj[pname];\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (null == this._ownerMap) {\r\n            this._ownerMap = new Map();\r\n        }\r\n        this._ownerMap.set(node, ret);\r\n        return ret;\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 更新clip数据\r\n     * @internal\r\n     */\r\n    private _updateClipDatas(animatorState: AnimatorState2D, addtive: boolean, playStateInfo: AnimatorPlayState2D): void {\r\n        var clip = animatorState._clip;\r\n        var clipDuration = clip!._duration;\r\n\r\n        var curPlayTime = animatorState.clipStart * clipDuration + playStateInfo._normalizedPlayTime * playStateInfo._duration;\r\n        var currentFrameIndices = animatorState._currentFrameIndices;\r\n        //var frontPlay = playStateInfo._frontPlay;\r\n        let frontPlay = true;\r\n        clip!._evaluateClipDatasRealTime(curPlayTime, currentFrameIndices, addtive, frontPlay, animatorState._realtimeDatas);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param animatorState \r\n     * @param playState \r\n     * @param elapsedTime \r\n     * @param loop \r\n     * @param layerIndex \r\n     * @returns \r\n     */\r\n    private _updatePlayer(animatorState: AnimatorState2D, playState: AnimatorPlayState2D, elapsedTime: number, loop: number, layerIndex: number): void {\r\n\r\n        let isReplay = false;\r\n        var clipDuration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n        var lastElapsedTime = playState._elapsedTime;\r\n\r\n        let pAllTime = playState._playAllTime;\r\n\r\n        playState._playAllTime += Math.abs(elapsedTime);\r\n\r\n        //动画播放总时间\r\n        elapsedTime = lastElapsedTime + elapsedTime;\r\n        //动画播放的上次总时间\r\n        playState._lastElapsedTime = lastElapsedTime;\r\n        playState._elapsedTime = elapsedTime;\r\n        var normalizedTime = elapsedTime / clipDuration;\r\n\r\n        let scale = 1;\r\n        if (animatorState.yoyo) {\r\n            scale = 2;\r\n        }\r\n\r\n        //总播放次数\r\n        let pTime = playState._playAllTime / (clipDuration * scale);\r\n\r\n        if (Math.floor(pAllTime / (clipDuration * scale)) < Math.floor(pTime)) {\r\n            isReplay = true;\r\n        }\r\n\r\n        var playTime = normalizedTime % 1.0;\r\n        let normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n        playState._normalizedPlayTime = normalizedPlayTime;\r\n        playState._duration = clipDuration;\r\n\r\n        if (1 != scale) {\r\n            normalizedTime = playState._playAllTime / (clipDuration * scale);\r\n            playTime = normalizedTime % 1.0;\r\n            normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n\r\n            if (animatorState.yoyo) {\r\n                if (0.5 > normalizedPlayTime) {\r\n                    if (!playState._frontPlay) {\r\n                        if (0 > animatorState.speed) {\r\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipEnd;\r\n                        } else {\r\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipStart;\r\n                        }\r\n                        playState._frontPlay = true;\r\n                    }\r\n                } else {\r\n                    if (playState._frontPlay) {\r\n                        playState._frontPlay = false;\r\n                        if (0 > animatorState.speed) {\r\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipStart;\r\n                        } else {\r\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipEnd;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        animatorState._eventStateUpdate(normalizedPlayTime);\r\n        let ret = this._applyTransition(layerIndex, animatorState._eventtransition(normalizedPlayTime, this.parameters, isReplay));\r\n\r\n        if (!ret && isReplay) {\r\n            let absTime = playState._playAllTime / (clipDuration * scale);\r\n            if (0 < loop && loop <= absTime) {\r\n                playState._finish = true;\r\n\r\n                if (0 > animatorState.speed) {\r\n                    if (animatorState.yoyo) {\r\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipEnd;\r\n                    } else {\r\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipStart;\r\n                    }\r\n                } else {\r\n                    if (animatorState.yoyo) {\r\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipStart;\r\n                    } else {\r\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipEnd;\r\n                    }\r\n                }\r\n                return;\r\n            } else {\r\n                animatorState._eventLoop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param stateInfo \r\n     * @param playStateInfo \r\n     */\r\n    private _updateEventScript(stateInfo: AnimatorState2D, playStateInfo: AnimatorPlayState2D): void {\r\n        let clip = stateInfo._clip;\r\n        let events = clip!._animationEvents;\r\n        if (!events || 0 == events.length) return;\r\n        let clipDuration = clip!._duration;\r\n        let time = playStateInfo._normalizedPlayTime * clipDuration;\r\n        let frontPlay = playStateInfo._frontPlay;\r\n        let pTime = playStateInfo._parentPlayTime;\r\n        let parentPlayTime = playStateInfo._parentPlayTime;\r\n        if (null == parentPlayTime) {\r\n            if (frontPlay) {\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\r\n            } else {\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\r\n            }\r\n        }\r\n        if (frontPlay) {\r\n            if (time < parentPlayTime) {\r\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipEnd, frontPlay);\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\r\n            }\r\n        } else {\r\n            if (time > parentPlayTime) {\r\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipStart, frontPlay);\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\r\n            }\r\n        }\r\n\r\n        this._eventScript(events, parentPlayTime, time, frontPlay);\r\n        /**如果不相等，应该是event事件里面跳转了，被重置了动画 */\r\n        if(pTime == playStateInfo._parentPlayTime){\r\n            playStateInfo._parentPlayTime = time;\r\n        }\r\n    }\r\n    /**\r\n    * @internal\r\n    */\r\n    private _eventScript(events: Animation2DEvent[], parentPlayTime: number, currPlayTime: number, frontPlay: boolean) {\r\n        let scripts = this.owner.components;\r\n        if (frontPlay) {\r\n            for (let i = 0, len = events.length; i < len; i++) {\r\n                let e = events[i];\r\n                if (e.time > parentPlayTime && e.time <= currPlayTime) {\r\n                    for (let j = 0, m = scripts.length; j < m; j++) {\r\n                        let script = scripts[j];\r\n                        if (script._isScript()) {\r\n                            let fun: Function = (script as any)[e.eventName];\r\n                            (fun) && (fun.apply(script, e.params));\r\n                        }\r\n                    }\r\n                } else if (e.time > currPlayTime) {\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                let e = events[i];\r\n                if (e.time < parentPlayTime && e.time >= currPlayTime) {\r\n                    for (let j = 0, m = scripts.length; j < m; j++) {\r\n                        let script = scripts[j];\r\n                        if (script._isScript()) {\r\n                            let fun: Function = (script as any)[e.eventName];\r\n                            (fun) && (fun.apply(script, e.params));\r\n                        }\r\n                    }\r\n                } else if (e.time < currPlayTime) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    // private _eventScript(events: Animation2DEvent[], eventIndex: number, endTime: number, front: boolean, startTime = 0): number {\r\n    //     let scripts = this.owner.components;\r\n    //     if (front) {\r\n    //         for (let n = events.length; eventIndex < n; eventIndex++) {\r\n    //             let event = events[eventIndex];\r\n    //             if (event.time <= endTime) {\r\n    //                 if (event.time >= startTime) {\r\n    //                     for (let j = 0, m = scripts.length; j < m; j++) {\r\n    //                         let script = scripts[j];\r\n    //                         if (script._isScript()) {\r\n    //                             let fun: Function = (script as any)[event.eventName];\r\n    //                             (fun) && (fun.apply(script, event.params));\r\n    //                         }\r\n    //                     }\r\n    //                 }\r\n    //             } else {\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     } else {\r\n    //         for (; eventIndex >= 0; eventIndex--) {\r\n    //             let event = events[eventIndex];\r\n    //             if (event.time >= endTime) {\r\n    //                 for (let j = 0, m = scripts.length; j < m; j++) {\r\n    //                     let script = scripts[j];\r\n    //                     if (script._isScript()) {\r\n    //                         let fun = (script as any)[event.eventName];\r\n    //                         (fun) && (fun.apply(script, event.params));\r\n    //                     }\r\n    //                 }\r\n    //             } else {\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return eventIndex;\r\n    // }\r\n\r\n    /**\r\n     * 启用过渡\r\n     * @param layerindex \r\n     * @param transition \r\n     * @returns \r\n     */\r\n    private _applyTransition(layerindex: number, transition: AnimatorTransition2D) {\r\n        if (!transition)\r\n            return false;\r\n        return this.crossFade(transition.destState.name, transition.transduration, layerindex, transition.transstartoffset);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param delta \r\n     * @returns \r\n     */\r\n    private _applyUpdateMode(delta: number): number {\r\n        let ret;\r\n        switch (this._updateMode) {\r\n            case AnimatorUpdateMode.Normal:\r\n                ret = delta;\r\n                break;\r\n            case AnimatorUpdateMode.LowFrame:\r\n                ret = (Stat.loopCount % this._lowUpdateDelty == 0) ? delta * this._lowUpdateDelty : 0;\r\n                break;\r\n            case AnimatorUpdateMode.UnScaleTime:\r\n                ret = 0;\r\n                break;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    gotoAndStopByFrame(name: string, layerIndex: number, frame: number) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var animatorState = controllerLayer.getStateByName(name);\r\n            if (!animatorState || !animatorState._clip)\r\n                return;\r\n            var allFrame = animatorState._clip!._duration * animatorState._clip!._frameRate;\r\n            let normalizedTime = frame / allFrame;\r\n            if (1 < normalizedTime) normalizedTime = 1;\r\n            this.gotoAndStop(name, layerIndex, normalizedTime);\r\n        }\r\n    }\r\n\r\n    gotoAndStop(name: string, layerIndex: number, normalizedTime: number) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var animatorState = controllerLayer.getStateByName(name);\r\n            if (!animatorState || !animatorState._clip)\r\n                return;\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            var curPlayState = playStateInfo._currentState!;\r\n\r\n            var clipDuration = animatorState._clip!._duration;\r\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n            playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n            playStateInfo._normalizedPlayTime = normalizedTime;\r\n            controllerLayer._playType = 0;\r\n            if (curPlayState !== animatorState) {\r\n                playStateInfo._currentState = animatorState;\r\n            }\r\n            animatorState._eventStart(this, layerIndex);\r\n            let addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n            this._updateClipDatas(animatorState, addtive, playStateInfo);\r\n            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, controllerLayer);\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     * @param name 动画名称\r\n     * @param layerIndex 层索引\r\n     * @param normalizedTime 归一化时间\r\n     * @returns \r\n     */\r\n    play(name?: string, layerIndex = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\r\n        if (this._checkEnterIndex) {\r\n            let i = this._checkEnterIndex.indexOf(layerIndex);\r\n            if (0 <= i) {\r\n                this._checkEnterIndex.splice(i, 1);\r\n            }\r\n        }\r\n        this._isPlaying = true;\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var defaultState = controllerLayer.defaultState;\r\n            if (!name && !defaultState)\r\n                throw new Error(\"Animator:must have default clip value,please set clip property.\");\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            var curPlayState = playStateInfo._currentState!;\r\n            var animatorState = name ? controllerLayer.getStateByName(name) : defaultState;\r\n\r\n            if (!animatorState._clip)\r\n                return;\r\n\r\n            var clipDuration = animatorState._clip!._duration;\r\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n            // this.resetDefOwerVal();\r\n            // playStateInfo._resetPlayState(0.0, calclipduration);\r\n            // if (curPlayState != animatorState) {\r\n            //     playStateInfo._currentState = animatorState;\r\n            // }\r\n            // controllerLayer._playType = 0;、\r\n\r\n            if (curPlayState !== animatorState) {\r\n                if (normalizedTime !== Number.NEGATIVE_INFINITY)\r\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n                else\r\n                    playStateInfo._resetPlayState(0.0, calclipduration);\r\n                (curPlayState !== null && curPlayState !== animatorState);\r\n                controllerLayer._playType = 0;\r\n                playStateInfo._currentState = animatorState;\r\n            } else {\r\n                if (normalizedTime !== Number.NEGATIVE_INFINITY) {\r\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n                    controllerLayer._playType = 0;\r\n                }\r\n            }\r\n            animatorState._eventStart(this, layerIndex);\r\n        }\r\n        // var scripts = animatorState._scripts!;\r\n        // if (scripts) {\r\n        //     for (var i = 0, n = scripts.length; i < n; i++)\r\n        //         scripts[i].onStateEnter();\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 停止播放动画\r\n     */\r\n    stop() {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    /**\r\n     * 帧循环\r\n     * @returns \r\n     */\r\n    onUpdate(): void {\r\n        if (!this._isPlaying) return;\r\n\r\n        if (this._checkEnterIndex) {\r\n            for (let i = this._checkEnterIndex.length - 1; i >= 0; i--) {\r\n                let index = this._checkEnterIndex[i];\r\n                let enterTransition = this._controllerLayers[index]._enterTransition;\r\n                if (enterTransition.check(0, this.parameters, true)) {\r\n                    var defaultClip = this.getDefaultState(index);\r\n                    this.play(null, index, defaultClip.cycleOffset);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        var delta = this.owner.timer._delta / 1000.0;\r\n        delta = this._applyUpdateMode(delta);\r\n        if (0 == this.speed || 0 == delta) return;\r\n        var needRender = true;//TODO:有渲染节点才可将needRender变为true\r\n\r\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\r\n            var controllerLayer = this._controllerLayers[i];\r\n            if (!controllerLayer.enable)\r\n                continue;\r\n\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            //var crossPlayStateInfo = controllerLayer._crossPlayStateInfo!;\r\n            var addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n            switch (controllerLayer._playType) {\r\n                case 0:\r\n                    var animatorState = playStateInfo._currentState!;\r\n                    var speed = this._speed * animatorState.speed;\r\n                    var finish = playStateInfo._finish;\r\n\r\n                    var loop = animatorState.loop;\r\n                    if (-1 >= loop) {\r\n                        var clip = animatorState._clip!;\r\n                        if (clip.islooping) {\r\n                            loop = 0;\r\n                        } else {\r\n                            loop = 1;\r\n                        }\r\n                    }\r\n\r\n                    let dir = 1;\r\n                    if (!playStateInfo._frontPlay) {\r\n                        dir = -1;\r\n                    }\r\n\r\n\r\n                    finish || this._updatePlayer(animatorState, playStateInfo, delta * speed * dir, loop, i);\r\n                    playStateInfo = controllerLayer._playStateInfo!;\r\n                    animatorState = playStateInfo._currentState!;\r\n                    if (needRender) {\r\n                        this._updateClipDatas(animatorState, addtive, playStateInfo);\r\n                        if (!finish) {\r\n                            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, controllerLayer);\r\n                            this._updateEventScript(animatorState, playStateInfo);\r\n                        }\r\n                    }\r\n                    finish || this._updateStateFinish(animatorState, playStateInfo);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加控制器层。\r\n     */\r\n    addControllerLayer(controllderLayer: AnimatorControllerLayer2D): void {\r\n        this._controllerLayers.push(controllderLayer);\r\n    }\r\n\r\n    /**\r\n     * 在当前动画状态和目标动画状态之间进行融合过渡播放。\r\n     * @param\tname 目标动画状态。\r\n     * @param\ttransitionDuration 过渡时间,该值为当前动画状态的归一化时间，值在0.0~1.0之间。\r\n     * @param\tlayerIndex 层索引。\r\n     * @param\tnormalizedTime 归一化的播放起始时间。\r\n     */\r\n    crossFade(name: string, transitionDuration: number, layerIndex: number = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var destAnimatorState = controllerLayer.getStateByName(name);\r\n            if (destAnimatorState) {\r\n\r\n                this.play(name, layerIndex, normalizedTime);\r\n                return true;\r\n\r\n            }\r\n            else {\r\n                console.warn(\"Invalid layerIndex \" + layerIndex + \".\");\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    onAfterDeserialize(): void {\r\n        let arr = (<any>this).controllerLayers;\r\n        if (!arr || null != this.controller)\r\n            return;\r\n        delete (<any>this).controllerLayers;\r\n        this._controllerLayers.length = 0;\r\n        for (let layer of arr) {\r\n            this.addControllerLayer(layer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onEnable() {\r\n        if (this._checkEnterIndex) this._checkEnterIndex.length = 0;\r\n        else this._checkEnterIndex = [];\r\n\r\n        if (this._isPlaying) {\r\n            for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\r\n                if (this._controllerLayers[i].playOnWake) {\r\n                    var defaultClip = this.getDefaultState(i);\r\n                    //(defaultClip) && (this.play(null, i, defaultClip.cycleOffset));\r\n                    if (defaultClip) {\r\n                        let enterTransition = this._controllerLayers[i]._enterTransition;\r\n                        if (enterTransition) {\r\n                            this._isPlaying = true;\r\n                            if (enterTransition.check(0, this.parameters, true)) {\r\n                                this.play(null, i, defaultClip.cycleOffset);\r\n                            } else {\r\n                                this._checkEnterIndex.push(i);\r\n                            }\r\n                        } else {\r\n                            this.play(null, i, defaultClip.cycleOffset);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 默认状态机\r\n     * @param layerIndex \r\n     * @returns \r\n     */\r\n    getDefaultState(layerIndex = 0) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        return controllerLayer.defaultState;\r\n    }\r\n\r\n    /**\r\n     * 设置参数Trigger值\r\n     * @param name 名字\r\n     */\r\n    setParamsTrigger(name: string) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Trigger, value: true };\r\n    }\r\n\r\n    /**\r\n     * 设置参数Number值\r\n     * @param name 名字\r\n     * @param value 值\r\n     */\r\n    setParamsNumber(name: string, value: number) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\r\n    }\r\n\r\n    /**\r\n     * 设置参数Bool值\r\n     * @param name 名字\r\n     * @param value 值\r\n     */\r\n    setParamsBool(name: string, value: boolean) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\r\n    }\r\n\r\n    /**\r\n     * 得到参数值\r\n     * @param name 名字\r\n     * @returns \r\n     */\r\n    getParamsvalue(name: number) {\r\n        let parm = this._parameters[name];\r\n        if (parm) {\r\n            return parm.value;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onDestroy() {\r\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++)\r\n            this._controllerLayers[i].destroy();\r\n        this._controllerLayers.length = 0;\r\n        this._isPlaying = false;\r\n        this._parameters = null;\r\n    }\r\n}","import { AnimatorStateScript } from \"../d3/animation/AnimatorStateScript\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AnimationClip2D } from \"./AnimationClip2D\";\r\nimport { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * <code>Animator</code> 类用于创建动画组件。\r\n */\r\nexport class AnimatorState2D extends EventDispatcher implements IClone {\r\n    /**@internal */\r\n    static EVENT_OnStateEnter = \"OnStartEnter\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateUpdate = \"OnStateUpdate\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateExit = \"OnStateExit\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateLoop = 'OnStateLoop';\r\n\r\n    /** @internal */\r\n    private _referenceCount = 0;\r\n\r\n    /** @internal */\r\n    _clip: AnimationClip2D | null = null;\r\n\r\n    /**@internal */\r\n    _currentFrameIndices: Int16Array | null = null;\r\n\r\n    /**play on awake start offset*/\r\n    cycleOffset: number = 0;\r\n\r\n    /**\r\n     * 名称\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * 动画播放速度\r\n     */\r\n    speed = 1.0;\r\n\r\n    /**\r\n     * 动作播放起始时间。\r\n     */\r\n    clipStart = 0.0;\r\n\r\n    /**\r\n     * 动作播放结束时间。\r\n     */\r\n    clipEnd = 1.0;\r\n\r\n    /**\r\n     *  动画循环次数，-1或者小于-1为使用clip的循环状态，1为播放一次，2为播放2次，0为无限循环\r\n     */\r\n    loop = -1;\r\n\r\n    /**\r\n     * 是否为一次正播放，一次倒播放模式 \r\n     */\r\n    yoyo = false;\r\n\r\n    /**@internal 过渡列表*/\r\n    transitions: AnimatorTransition2D[] = [];\r\n\r\n    /**@internal 优先过渡列表only play this transition */\r\n    soloTransitions: AnimatorTransition2D[] = [];\r\n\r\n    /**@internal */\r\n    _scripts: AnimatorStateScript[] | null = null;\r\n\r\n    /**@internal */\r\n    _realtimeDatas: Array<number | string | boolean> = [];\r\n\r\n    /**\r\n     * 动作。\r\n     */\r\n    get clip(): AnimationClip2D | null {\r\n        return this._clip;\r\n    }\r\n\r\n    set clip(value: AnimationClip2D | null) {\r\n        if (this._clip != value) {\r\n            if (this._clip)\r\n                (this._referenceCount > 0) && (this._clip._removeReference(this._referenceCount));\r\n            if (value) {\r\n                var clipNodes = value._nodes!;\r\n                var count = clipNodes.count;\r\n                this._currentFrameIndices = new Int16Array(count);\r\n                this._resetFrameIndices();\r\n                (this._referenceCount > 0) && (value._addReference(this._referenceCount));\r\n                this._realtimeDatas.length = count;\r\n            }\r\n            this._clip = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventStateUpdate(value: number) {\r\n        this.event(AnimatorState2D.EVENT_OnStateUpdate, value);\r\n        if (this._scripts) {\r\n            for (var i = 0, n = this._scripts.length; i < n; i++)\r\n                this._scripts[i].onStateUpdate(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventStart(animator: Animator2D, layerIndex: number) {\r\n        this.event(AnimatorState2D.EVENT_OnStateEnter);\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                this._scripts[i].setPlayScriptInfo(animator, layerIndex, this);\r\n                this._scripts[i].onStateEnter();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventExit() {\r\n        this.event(AnimatorState2D.EVENT_OnStateExit);\r\n        if (this._scripts) {\r\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\r\n                this._scripts[i].onStateExit();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventLoop() {\r\n        this.event(AnimatorState2D.EVENT_OnStateLoop);\r\n        if (this._scripts) {\r\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\r\n                if (this._scripts[i].onStateLoop)\r\n                    this._scripts[i].onStateLoop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 派发过渡事件\r\n     * @internal\r\n     * @param normalizeTime \r\n     * @param paramsMap \r\n     */\r\n    _eventtransition(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): AnimatorTransition2D {\r\n        let soloNums = this.soloTransitions.length;\r\n        if (soloNums > 0) {\r\n            for (var i = 0; i < soloNums; i++) {\r\n                if (this.soloTransitions[i].check(normalizeTime, paramsMap, isReplay))\r\n                    return this.soloTransitions[i];\r\n            }\r\n            return null;\r\n        }\r\n        let transNums = this.transitions.length;\r\n        for (var i = 0; i < transNums; i++) {\r\n            if (this.transitions[i].check(normalizeTime, paramsMap, isReplay))\r\n                return this.transitions[i];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resetFrameIndices(): void {\r\n        for (var i = 0, n = this._currentFrameIndices!.length; i < n; i++)\r\n            this._currentFrameIndices![i] = -1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getReferenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _addReference(count: number): void {\r\n        (this._clip) && (this._clip._addReference(count));\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _removeReference(count: number): void {\r\n        (this._clip) && (this._clip._removeReference(count));\r\n        this._referenceCount -= count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clearReference(): void {\r\n        this._removeReference(-this._referenceCount);\r\n    }\r\n\r\n    /**\r\n     * 添加脚本。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本。\r\n     */\r\n    addScript(type: typeof AnimatorStateScript): AnimatorStateScript {\r\n        var script: AnimatorStateScript = new type();\r\n        this._scripts = this._scripts || [];\r\n        this._scripts.push(script);\r\n        return script;\r\n    }\r\n\r\n    /**\r\n     * 获取脚本。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本。\r\n     */\r\n    getScript(type: typeof AnimatorStateScript): AnimatorStateScript | null {\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                var script: AnimatorStateScript = this._scripts[i];\r\n                if (script instanceof type)\r\n                    return script;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取脚本集合。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本集合。\r\n     */\r\n    getScripts(type: typeof AnimatorStateScript): AnimatorStateScript[] | null {\r\n        var coms: AnimatorStateScript[] | null = null;\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                var script: AnimatorStateScript = this._scripts[i];\r\n                if (script instanceof type) {\r\n                    coms = coms || [];\r\n                    coms.push(script);\r\n                }\r\n            }\r\n        }\r\n        return coms;\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * @returns \r\n     */\r\n    clone() {\r\n        var dest: AnimatorState2D = new AnimatorState2D();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * 拷贝到目标\r\n     * @param destObject 目标节点\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var dest: AnimatorState2D = <AnimatorState2D>destObject;\r\n        dest.name = this.name;\r\n        dest.speed = this.speed;\r\n        dest.clip = this._clip;\r\n    }\r\n\r\n    /**\r\n     * 删除\r\n     */\r\n    destroy() {\r\n        this._clip = null;\r\n        this._currentFrameIndices = null;\r\n        this._scripts = null;\r\n        //this.nexts = null;\r\n        this._realtimeDatas.length = 0;\r\n    }\r\n\r\n}","import { Keyframe2D } from \"./KeyFrame2D\";\r\n\r\nexport class KeyframeNode2D {\r\n    _ownerPath: string[] = [];\r\n    _propertys: string[] = [];\r\n    fullPath: string;\r\n    nodePath: string;\r\n    _indexInList: number;\r\n\r\n\r\n\r\n    _keyFrames: Keyframe2D[] = [];\r\n    /**\r\n    * 帧个数。\r\n    */\r\n    get keyFramesCount(): number {\r\n        return this._keyFrames.length;\r\n    }\r\n    _setOwnerPathCount(value: number) {\r\n        this._ownerPath.length = value;\r\n    }\r\n    _setOwnerPathByIndex(index: number, value: string) {\r\n        this._ownerPath[index] = value;\r\n    }\r\n    _setPropertyCount(value: number) {\r\n        this._propertys.length = value;\r\n    }\r\n    _setPropertyByIndex(index: number, value: string) {\r\n        this._propertys[index] = value;\r\n    }\r\n    _setKeyframeCount(value: number) {\r\n        this._keyFrames.length = value;\r\n    }\r\n\r\n    _joinOwnerPath(sep: string): string {\r\n        return this._ownerPath.join(sep);\r\n    }\r\n    _joinProperty(sep: string): string {\r\n        return this._propertys.join(sep);\r\n    }\r\n\r\n    /**\r\n    * 通过索引获取帧。\r\n    * @param index 索引。\r\n    */\r\n    getKeyframeByIndex(index: number): Keyframe2D {\r\n        return this._keyFrames[index];\r\n    }\r\n    /**\r\n    * 精灵路径个数。\r\n    */\r\n    get ownerPathCount(): number {\r\n        return this._ownerPath.length;\r\n    }\r\n    /**\r\n     * 属性路径个数。\r\n     */\r\n    get propertyCount(): number {\r\n        return this._propertys.length;\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取精灵路径。\r\n     * @param index 索引。\r\n     */\r\n    getOwnerPathByIndex(index: number): string {\r\n        return this._ownerPath[index];\r\n    }\r\n    /**\r\n     * 通过索引获取属性路径。\r\n     * @param index 索引。\r\n     */\r\n    getPropertyByIndex(index: number): string {\r\n        return this._propertys[index];\r\n    }\r\n\r\n\r\n}","import { IClone } from \"../utils/IClone\";\r\n\r\nexport interface TypeAniKey {\r\n    /**第几帧 */\r\n    f: number,\r\n    val: number | string | boolean,\r\n    /**目前用于2D动画，用于记录动画补间的类型，比如(Linear|Quad_EaseIn)... */\r\n    tweenType?: string,\r\n    /**扩展，如果有一些其它数据需要加入到关键帧中可以写在这里 */\r\n    extend?: any,\r\n    /**tween的信息 */\r\n    tweenInfo?: TypeTweenInfo,\r\n}\r\n\r\nexport interface TypeTweenInfo {\r\n    outTangent?: number,\r\n    outWeight?: number,\r\n    inTangent?: number,\r\n    inWeight?: number,\r\n    inWeightLock?: boolean,\r\n    outWeightLock?: boolean,\r\n    broken?: boolean,\r\n}\r\n\r\nexport class Keyframe2D implements IClone {\r\n    static defaultWeight = 0.33333;\r\n    /**时间。*/\r\n    time: number;\r\n    /**帧里面的具体数据 */\r\n    data: TypeAniKey;\r\n\r\n\r\n\r\n    clone() {\r\n        var dest = new Keyframe2D();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    cloneTo(destObject: any): void {\r\n        var destKeyFrame: Keyframe2D = (<Keyframe2D>destObject);\r\n        destKeyFrame.time = this.time;\r\n    }\r\n\r\n}","/**\r\n * <code>Animation2DEvent</code> 类用于实现动画事件。\r\n */\r\nexport class Animation2DEvent {\r\n    /** 事件触发时间。*/\r\n    time: number;\r\n    /** 事件触发名称。*/\r\n    eventName: string;\r\n    /** 事件触发参数。*/\r\n    params: any[];\r\n\r\n    /**\r\n     * 创建一个 <code>Animation2DEvent</code> 实例。\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n}\r\n","import { AnimationClip2D } from \"./AnimationClip2D\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { Keyframe2D } from \"./KeyFrame2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\n/**\r\n * <code>AnimationClip2DParse01</code>\r\n * AnimationClip资源解析\r\n */\r\nexport class AnimationClip2DParse01 {\r\n    \r\n    /**@internal */\r\n    private static _clip: AnimationClip2D | null;\r\n    /**@internal */\r\n    private static _reader: Byte | null;\r\n    /**@internal */\r\n    private static _version: string | null;\r\n    /**@internal */\r\n    private static _strings: string[] = [];\r\n    /**@internal */\r\n    private static _DATA = { offset: 0, size: 0 };\r\n    /**@internal */\r\n    private static _BLOCK: { count: number, blockStarts?: number[], blockLengths?: number[] } = { count: 0 };\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_DATA() {\r\n        this._DATA.offset = this._reader!.getUint32();\r\n        this._DATA.size = this._reader!.getUint32();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_BLOCK() {\r\n        var count = this._BLOCK.count = this._reader!.getUint16();\r\n        var blockStarts: number[] = this._BLOCK.blockStarts = [];\r\n        var blockLengths: number[] = this._BLOCK.blockLengths = [];\r\n        for (var i = 0; i < count; i++) {\r\n            blockStarts.push(this._reader!.getUint32());\r\n            blockLengths.push(this._reader!.getUint32());\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_STRINGS() {\r\n        var offset = this._reader!.getUint32();\r\n        var count = this._reader!.getUint16();\r\n        var prePos = this._reader!.pos;\r\n        this._reader!.pos = offset + this._DATA.offset;\r\n\r\n        for (var i = 0; i < count; i++)\r\n            this._strings[i] = this._reader!.readUTFString();\r\n        this._reader!.pos = prePos;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param clip \r\n     * @param reader \r\n     * @param version \r\n     */\r\n    static parse(clip: AnimationClip2D, reader: Byte, version: string) {\r\n        this._clip = clip;\r\n        this._reader = reader;\r\n        this._version = version;\r\n        this.READ_DATA();\r\n        this.READ_BLOCK();\r\n        this.READ_STRINGS();\r\n\r\n        for (var i = 0, n = this._BLOCK.count; i < n; i++) {\r\n            var index = reader.getUint16();\r\n            var blockName = this._strings[index];\r\n            var fn: () => void = (this as any)[\"READ_\" + blockName];\r\n            if (!fn) {\r\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\r\n            }\r\n            else\r\n                fn.call(this);\r\n        }\r\n\r\n        this._version = null;\r\n        this._reader = null;\r\n        this._clip = null;\r\n        this._strings.length = 0;\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param second \r\n     * @param fps \r\n     * @returns \r\n     */\r\n    private static timeToFrame(second: number, fps: number): number {\r\n        return Math.round(second * fps);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static READ_ANIMATIONS2D(): void {\r\n        var i: number, j: number;\r\n\r\n        var reader = this._reader!;\r\n        var clip = this._clip!;\r\n        var node: KeyframeNode2D;\r\n\r\n        var numList: number[] = [];\r\n        var numCount = reader.getUint16();\r\n        numList.length = numCount;\r\n        for (i = 0; i < numCount; i++) {\r\n            numList[i] = reader.getFloat32();\r\n        }\r\n\r\n        var clipDur = clip._duration = numList[reader.getInt16()];\r\n        clip.islooping = !!reader.getByte();\r\n        clip._frameRate = reader.getInt16();\r\n        var nodeCount = reader.getInt16();\r\n\r\n        var nodes = clip._nodes!;\r\n        nodes.count = nodeCount;\r\n        var nodesMap: Record<string, KeyframeNode2D[]> = clip._nodesMap = {};\r\n        var nodesDic: Record<string, KeyframeNode2D> = clip._nodesDic = {};\r\n\r\n        for (i = 0; i < nodeCount; i++) {\r\n            node = new KeyframeNode2D();\r\n            nodes.setNodeByIndex(i, node);\r\n            node._indexInList = i;\r\n\r\n            var pathLength = reader.getUint16();\r\n            node._setOwnerPathCount(pathLength);\r\n\r\n            for (j = 0; j < pathLength; j++) {\r\n                node._setOwnerPathByIndex(j, this._strings[reader.getUint16()]);\r\n            }\r\n            var nodePath = node._joinOwnerPath(\"/\");\r\n            var mapArray = nodesMap[nodePath];\r\n            (mapArray) || (nodesMap[nodePath] = mapArray = []);\r\n            mapArray.push(node);\r\n\r\n\r\n            var propertyLength = reader.getUint16();\r\n            node._setPropertyCount(propertyLength);\r\n            for (j = 0; j < propertyLength; j++) {\r\n                node._setPropertyByIndex(j, this._strings[reader.getUint16()]);\r\n            }\r\n            var fullPath = nodePath + \".\" + node._joinProperty(\".\");\r\n            nodesDic[fullPath] = node;\r\n            node.fullPath = fullPath;\r\n            node.nodePath = nodePath;\r\n\r\n            var keyframeCount = reader.getUint16();\r\n            //node._setKeyframeCount(keyframeCount);\r\n            for (j = 0; j < keyframeCount; j++) {\r\n                var k = new Keyframe2D();\r\n                k.time = numList[reader.getUint16()];\r\n                k.data = { f: this.timeToFrame(k.time, clip._frameRate), val: 0 };\r\n\r\n                if (1 == reader.getByte()) {\r\n                    k.data.tweenType = this._strings[reader.getUint16()];\r\n                }\r\n\r\n                if (1 == reader.getByte()) {\r\n                    k.data.tweenInfo = {};\r\n\r\n                    k.data.tweenInfo.inTangent = numList[reader.getUint16()];\r\n                    k.data.tweenInfo.outTangent = numList[reader.getUint16()];\r\n\r\n                    // if (Infinity == Math.abs(k.data.tweenInfo.inTangent)) {\r\n                    //     k.data.tweenInfo.inTangent = Number.MAX_VALUE;\r\n                    //     if (0 > k.data.tweenInfo.inTangent) {\r\n                    //         k.data.tweenInfo.inTangent *= -1;\r\n                    //     }\r\n                    // }\r\n                    // if (Infinity == Math.abs(k.data.tweenInfo.outTangent)) {\r\n                    //     k.data.tweenInfo.outTangent = Number.MAX_VALUE;\r\n                    //     if (0 > k.data.tweenInfo.outTangent) {\r\n                    //         k.data.tweenInfo.outTangent *= -1;\r\n                    //     }\r\n                    // }\r\n\r\n\r\n                    if (1 == reader.getByte()) {\r\n                        k.data.tweenInfo.inWeight = numList[reader.getUint16()];\r\n                    }\r\n\r\n                    if (1 == reader.getByte()) {\r\n                        k.data.tweenInfo.outWeight = numList[reader.getUint16()];\r\n                    }\r\n                }\r\n                var num = reader.getByte();\r\n                if (0 == num) {\r\n                    k.data.val = numList[reader.getUint16()];\r\n                } else if (1 == num) {\r\n                    k.data.val = this._strings[reader.getUint16()];\r\n                } else if (2 == num) {\r\n                    k.data.val = !!reader.getByte();\r\n                }\r\n\r\n                if (1 == reader.getByte()) {\r\n                    try {\r\n                        k.data.extend = JSON.parse(this._strings[reader.getUint16()])\r\n                    } catch (err) { }\r\n                }\r\n                node._keyFrames.push(k);\r\n            }\r\n        }\r\n        var eventCount = reader.getUint16();\r\n        for (i = 0; i < eventCount; i++) {\r\n            var event = new Animation2DEvent();\r\n            //event.time = Math.min(clipDur, numList[reader.getUint16()]);\r\n            event.time = numList[reader.getUint16()];\r\n            event.eventName = this._strings[reader.getUint16()];\r\n            var params: Array<number | string | boolean> = [];\r\n            var paramCount: number = reader.getUint16();\r\n            (paramCount > 0) && (event.params = params = []);\r\n\r\n            for (j = 0; j < paramCount; j++) {\r\n                var eventType: number = reader.getByte();\r\n                switch (eventType) {\r\n                    case 0:\r\n                        params.push(!!reader.getByte());\r\n                        break;\r\n                    case 1:\r\n                        params.push(reader.getInt32());\r\n                        break;\r\n                    case 2:\r\n                        params.push(numList[reader.getUint16()]);\r\n                        break;\r\n                    case 3:\r\n                        params.push(this._strings[reader.getUint16()]);\r\n                        break;\r\n                    default:\r\n                        throw new Error(\"unknown type.\");\r\n                }\r\n            }\r\n            clip.addEvent(event);\r\n        }\r\n\r\n    }\r\n}","import { KeyframeNode2D } from \"./KeyframeNode2D\";\r\n\r\nexport class KeyframeNodeList2D {\r\n    private _nodes: KeyframeNode2D[] = [];\r\n    /**\r\n    *\t节点个数。\r\n    */\r\n    get count(): number {\r\n        return this._nodes.length;\r\n    }\r\n    set count(value: number) {\r\n        this._nodes.length = value;\r\n    }\r\n    /**\r\n     * 通过索引获取节点。\r\n     * @param\tindex 索引。\r\n     * @return 节点。\r\n     */\r\n    getNodeByIndex(index: number): KeyframeNode2D {\r\n        return this._nodes[index];\r\n    }\r\n\r\n    /**\r\n     * 通过索引设置节点。\r\n     * @param\tindex 索引。\r\n     * @param 节点。\r\n     */\r\n    setNodeByIndex(index: number, node: KeyframeNode2D): void {\r\n        this._nodes[index] = node;\r\n    }\r\n}","import { AnimationClip2DParse01 } from \"./AnimationClip2DParser01\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { KeyframeNodeList2D } from \"./KeyframeNodeList2D\";\r\nimport { Keyframe2D } from \"./KeyFrame2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\nexport class AnimationClip2D extends Resource {\r\n\r\n    /**\r\n     * @param data \r\n     * @returns \r\n     */\r\n    static _parse(data: ArrayBuffer): AnimationClip2D {\r\n        var clip = new AnimationClip2D();\r\n        var reader = new Byte(data);\r\n        var version = reader.readUTFString();\r\n        switch (version) {\r\n            case \"LAYAANIMATION2D:01\":\r\n                AnimationClip2DParse01.parse(clip, reader, version);\r\n                break;\r\n            default:\r\n                throw \"unknown animationClip version.\";\r\n        }\r\n        return clip;\r\n    }\r\n\r\n    /**\r\n     * 动画补帧函数\r\n     */\r\n    static tween = {\r\n        Linear: function (t: number, b: number, c: number, d: number): number { return c * t / d + b; },\r\n        Quad_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t + b;\r\n        },\r\n        Quad_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * (t /= d) * (t - 2) + b;\r\n        },\r\n        Quad_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t + b;\r\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n        },\r\n\r\n        Cubic_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t + b;\r\n        },\r\n        Cubic_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * ((t = t / d - 1) * t * t + 1) + b;\r\n        },\r\n        Cubic_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\r\n            return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n        },\r\n\r\n        Quart_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t * t + b;\r\n        },\r\n        Quart_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n        },\r\n        Quart_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\r\n            return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n        },\r\n\r\n        Quint_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t * t * t + b;\r\n        },\r\n        Quint_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n        },\r\n        Quint_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\r\n            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n        },\r\n\r\n        Sine_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n        },\r\n        Sine_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n        },\r\n        Sine_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n        },\r\n\r\n        Expo_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n        },\r\n        Expo_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n        },\r\n        Expo_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if (t == 0) return b;\r\n            if (t == d) return b + c;\r\n            if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n            return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n        },\r\n\r\n        Circ_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n        },\r\n        Circ_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n        },\r\n        Circ_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n            return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n        },\r\n\r\n        Elastic_EaseIn: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n        },\r\n        Elastic_EaseOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);\r\n        },\r\n        Elastic_EaseInOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d / 2) == 2) return b + c; if (!p) p = d * (.3 * 1.5);\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\r\n        },\r\n\r\n        Back_EaseIn: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n        },\r\n        Back_EaseOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n        },\r\n        Back_EaseInOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n        },\r\n\r\n        Bounce_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c - AnimationClip2D.tween.Bounce_EaseOut(d - t, 0, c, d) + b;\r\n        },\r\n        Bounce_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d) < (1 / 2.75)) {\r\n                return c * (7.5625 * t * t) + b;\r\n            } else if (t < (2 / 2.75)) {\r\n                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n            } else if (t < (2.5 / 2.75)) {\r\n                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n            } else {\r\n                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n            }\r\n        },\r\n        Bounce_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if (t < d / 2) return AnimationClip2D.tween.Bounce_EaseIn(t * 2, 0, c, d) * .5 + b;\r\n            else return AnimationClip2D.tween.Bounce_EaseOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n        },\r\n\r\n        hermiteInterpolate: function (outTangent: number, inTangent: number, startValue: number, endValue: number, t: number, dur: number): number {\r\n            if (Math.abs(outTangent) == Infinity || Math.abs(inTangent) == Infinity) {\r\n                if (0 > outTangent || 0 < inTangent) return startValue;\r\n                return startValue;\r\n            }\r\n            var t2 = t * t;\r\n            var t3 = t2 * t;\r\n            var a = 2.0 * t3 - 3.0 * t2 + 1.0;\r\n            var b = t3 - 2.0 * t2 + t;\r\n            var c = t3 - t2;\r\n            var d = -2.0 * t3 + 3.0 * t2;\r\n            return a * startValue + b * outTangent * dur + c * inTangent * dur + d * endValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _frameRate: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _duration: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _animationEvents: Animation2DEvent[];\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodesDic: Record<string, KeyframeNode2D>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodesMap: Record<string, KeyframeNode2D[]>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodes: KeyframeNodeList2D | null = new KeyframeNodeList2D();\r\n\r\n    /**\r\n     * 是否循环\r\n     */\r\n    islooping: boolean;\r\n\r\n    /**\r\n     * 实例化一个2D动画clip类\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._animationEvents = [];\r\n    }\r\n\r\n    /**\r\n     * 动画时长\r\n     * @returns \r\n     */\r\n    duration() {\r\n        return this._duration;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @param playCurTime \r\n     * @param realTimeCurrentFrameIndexes \r\n     * @param addtive \r\n     * @param frontPlay \r\n     * @param outDatas \r\n     */\r\n    _evaluateClipDatasRealTime(playCurTime: number, realTimeCurrentFrameIndexes: Int16Array, addtive: boolean, frontPlay: boolean, outDatas: Array<number | string | boolean>) {\r\n        var nodes = this._nodes;\r\n        for (var i = 0, n = nodes.count; i < n; i++) {\r\n            var node = nodes.getNodeByIndex(i);\r\n            var nextFrameIndex;\r\n            var keyFrames = node._keyFrames;\r\n            var keyFramesCount = keyFrames.length;\r\n            if (0 == keyFramesCount) continue;\r\n            var frameIndex = realTimeCurrentFrameIndexes[i];\r\n            if (frontPlay) {\r\n                if ((-1 != frameIndex) && (playCurTime < keyFrames[frameIndex].time)) {//重置正向循环\r\n                    frameIndex = -1;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n                nextFrameIndex = frameIndex + 1;\r\n                while (nextFrameIndex < keyFramesCount) {\r\n                    if (keyFrames[nextFrameIndex].time > playCurTime)\r\n                        break;\r\n                    frameIndex++;\r\n                    nextFrameIndex++;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n            } else {\r\n                nextFrameIndex = frameIndex + 1;\r\n                if ((nextFrameIndex != keyFramesCount) && (playCurTime > keyFrames[nextFrameIndex].time)) {//重置逆向循环\r\n                    frameIndex = keyFramesCount - 1;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n                nextFrameIndex = frameIndex + 1;\r\n                while (frameIndex > -1) {\r\n                    if (keyFrames[frameIndex].time < playCurTime)\r\n                        break;\r\n                    frameIndex--;\r\n                    nextFrameIndex--;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n            }\r\n            var isEnd = nextFrameIndex == keyFramesCount;\r\n\r\n            if (-1 != frameIndex) {\r\n                var frame = keyFrames[frameIndex];\r\n                if (isEnd) {//如果nextFarme为空，不修改数据，保持上一帧\r\n                    outDatas[i] = frame.data.val;\r\n                } else {\r\n                    var nextFarme = keyFrames[nextFrameIndex];\r\n                    var d = nextFarme.time - frame.time;\r\n                    var t;\r\n                    if (d !== 0)\r\n                        t = (playCurTime - frame.time) / d;\r\n                    else\r\n                        t = 0;\r\n\r\n                    outDatas[i] = this._getTweenVal(frame, nextFarme, t, d);\r\n                }\r\n            } else {\r\n                outDatas[i] = keyFrames[0].data.val;\r\n            }\r\n\r\n            if (addtive && \"number\" == typeof keyFrames[0].data.val) {\r\n                outDatas[i] = <number>outDatas[i] - keyFrames[0].data.val;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param frame \r\n     * @param nextFrame \r\n     * @param t \r\n     * @param dur \r\n     * @returns \r\n     */\r\n    private _getTweenVal(frame: Keyframe2D, nextFrame: Keyframe2D, t: number, dur: number) {\r\n        var start = frame.data;\r\n        var end = nextFrame.data;\r\n\r\n        if (\"number\" != typeof start.val || \"number\" != typeof end.val) {\r\n            return start.val;\r\n        }\r\n        var tweenFun = (AnimationClip2D.tween as any)[start.tweenType];\r\n        var poval = start.val as number;\r\n        var oval = end.val as number;\r\n\r\n        //var t = (x - s.cx) / (e.cx - s.cx);\r\n        if (null != tweenFun) {\r\n            return tweenFun(t, poval, oval - poval, 1);\r\n        }\r\n\r\n        var outTangent = 0;\r\n        var inTangent = 0;\r\n\r\n        var outWeight = NaN;\r\n        var inWeight = NaN;\r\n\r\n        if (null != start.tweenInfo) {\r\n            outTangent = start.tweenInfo.outTangent;\r\n            outWeight = start.tweenInfo.outWeight;\r\n        }\r\n        if (null != end.tweenInfo) {\r\n            inTangent = end.tweenInfo.inTangent;\r\n            inWeight = end.tweenInfo.inWeight;\r\n        }\r\n        if (isNaN(outWeight) || 0 >= outWeight) outWeight = Keyframe2D.defaultWeight;\r\n        if (isNaN(inWeight) || 0 >= inWeight) inWeight = Keyframe2D.defaultWeight;\r\n        if (isNaN(outTangent)) outTangent = 0;\r\n        if (isNaN(inTangent)) inTangent = 0;\r\n\r\n        if (Math.abs(outTangent) == Number.MAX_VALUE) {\r\n            if (0 > outTangent) {\r\n                outTangent = -Infinity;\r\n            } else {\r\n                outTangent = Infinity;\r\n            }\r\n        }\r\n\r\n        if (Math.abs(inTangent) == Number.MAX_VALUE) {\r\n            if (0 > inTangent) {\r\n                inTangent = -Infinity;\r\n            } else {\r\n                inTangent = Infinity;\r\n            }\r\n        }\r\n\r\n        var tnum: number;\r\n        if ((!start.tweenInfo && !end.tweenInfo) || (Keyframe2D.defaultWeight == inWeight && Keyframe2D.defaultWeight == outWeight)) {\r\n            //var dur = nextFrameTime - startFrameTime;\r\n            tnum = AnimationClip2D.tween.hermiteInterpolate(outTangent, inTangent, poval, oval, t, dur);\r\n        } else {\r\n            tnum = this.hermiteCurveSplineWeight(poval, frame.time, outWeight, outTangent, oval, nextFrame.time, inWeight, inTangent, t);\r\n        }\r\n        return tnum;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param time \r\n     * @returns \r\n     */\r\n    private _binarySearchEventIndex(time: number): number {\r\n        var start = 0;\r\n        var end = this._animationEvents.length - 1;\r\n        var mid;\r\n        while (start <= end) {\r\n            mid = (start + end) >> 1;\r\n            var midValue = this._animationEvents[mid].time;\r\n            if (midValue == time)\r\n                return mid;\r\n            else if (midValue > time)\r\n                end = mid - 1;\r\n            else\r\n                start = mid + 1;\r\n        }\r\n        return start;\r\n    }\r\n\r\n    /**\r\n     * hermite插值算法\r\n     * @param frameValue 上一帧值\r\n     * @param frametime 上一帧事件\r\n     * @param frameOutWeight 上一帧权重\r\n     * @param frameOutTangent 上一帧切线\r\n     * @param nextframeValue 下一帧值\r\n     * @param nextframetime 下一帧时间\r\n     * @param nextframeInweight 下一帧权重\r\n     * @param nextframeIntangent 下一帧切线\r\n     * @param time 时间\r\n     * @returns \r\n     */\r\n    hermiteCurveSplineWeight(frameValue: number, frametime: number, frameOutWeight: number, frameOutTangent: number, nextframeValue: number, nextframetime: number, nextframeInweight: number, nextframeIntangent: number, time: number) {\r\n        let Eps = 2.22e-16;\r\n\r\n        let x = time;\r\n        let x1 = frametime;\r\n        let y1 = frameValue;\r\n        let wt1 = frameOutWeight;\r\n        let x2 = nextframetime;\r\n        let y2 = nextframeValue;\r\n        let wt2 = nextframeInweight;\r\n\r\n        let dx = x2 - x1;\r\n        let dy = y2 - y1;\r\n        dy = Math.max(Math.abs(dy), Eps) * (dy < 0 ? -1 : 1);\r\n\r\n        let yp1 = frameOutTangent;\r\n        let yp2 = nextframeIntangent;\r\n\r\n        if (!Number.isFinite(yp1) || !Number.isFinite(yp2)) {\r\n            return frameValue;\r\n        }\r\n\r\n        yp1 = yp1 * dx / dy;\r\n        yp2 = yp2 * dx / dy;\r\n\r\n        let wt2s = 1 - wt2;\r\n\r\n        let t = 0.5;\r\n        let t2 = 0;\r\n\r\n        if (Math.abs(wt1 - 0.33333334) < 0.0001 && Math.abs(wt2 - 0.33333334) < 0.0001) {\r\n            t = x;\r\n            t2 = 1 - t;\r\n        }\r\n        else {\r\n            while (true) {\r\n                t2 = (1 - t);\r\n                let fg = 3 * t2 * t2 * t * wt1 + 3 * t2 * t * t * wt2s + t * t * t - x;\r\n                if (Math.abs(fg) <= 2.5 * Eps)\r\n                    break;\r\n\r\n                // third order householder method\r\n                let fpg = 3 * t2 * t2 * wt1 + 6 * t2 * t * (wt2s - wt1) + 3 * t * t * (1 - wt2s);\r\n                let fppg = 6 * t2 * (wt2s - 2 * wt1) + 6 * t * (1 - 2 * wt2s + wt1);\r\n                let fpppg = 18 * wt1 - 18 * wt2s + 6;\r\n\r\n                t -= (6 * fg * fpg * fpg - 3 * fg * fg * fppg) / (6 * fpg * fpg * fpg - 6 * fg * fpg * fppg + fg * fg * fpppg);\r\n            }\r\n        }\r\n\r\n        let y = 3 * t2 * t2 * t * wt1 * yp1 + 3 * t2 * t * t * (1 - wt2 * yp2) + t * t * t;\r\n\r\n        return y * dy + y1;\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加动画事件。\r\n     * @param event 动画事件\r\n     */\r\n    addEvent(event: Animation2DEvent): void {\r\n        var index = this._binarySearchEventIndex(event.time);\r\n        this._animationEvents.splice(index, 0, event);\r\n    }\r\n\r\n\r\n\r\n}","import { AniParmType } from \"./AnimatorControllerParse\";\r\n\r\nexport class Animation2DParm {\r\n    name: string;\r\n    type: AniParmType;\r\n    value: boolean | number;\r\n}","import { AniStateConditionType, AniStateConditionNumberCompressType } from \"./AnimatorControllerParse\";\r\n\r\nexport class AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    static _conditionNameMap: any = {};\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _propertyNameCounter: number = 0;\r\n\r\n    /**\r\n     * 通过名称获得唯一ID。\r\n     * @param name Shader属性名称。\r\n     * @return 唯一ID。\r\n     */\r\n    static conditionNameToID(name: string): number {\r\n        if (AnimatorStateCondition._conditionNameMap[name] != null) {\r\n            return AnimatorStateCondition._conditionNameMap[name];\r\n        } else {\r\n            var id: number = this._propertyNameCounter++;\r\n            this._conditionNameMap[name] = id;\r\n            this._conditionNameMap[id] = name;\r\n            return id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过ID获得唯一名称。\r\n     * @param id \r\n     * @returns \r\n     */\r\n    static conditionIDToName(id: number): string {\r\n        return this._conditionNameMap[id];\r\n    }\r\n\r\n    /**\r\n     * @internal 状态条件类型\r\n     */\r\n    protected _type: AniStateConditionType;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _id: number;\r\n\r\n    /**\r\n     * @intenral\r\n     */\r\n    private _name: string;\r\n\r\n    /**\r\n     * 状态机过渡条件\r\n     */\r\n    constructor(name: string = null) {\r\n        if (!name) return;\r\n        this._id = AnimatorStateCondition.conditionNameToID(name);\r\n        this._name = name;\r\n    }\r\n\r\n    /**\r\n     * 唯一ID\r\n     */\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 名称\r\n     */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._id = AnimatorStateCondition.conditionNameToID(value);\r\n        this._name = value\r\n    }\r\n\r\n    /**\r\n     * 条件类型\r\n     */\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: number | boolean): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateNumberCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    private _numberValue: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _numberCompareFlag: AniStateConditionNumberCompressType;\r\n\r\n    /**\r\n     * 创建number比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._numberValue = 0;\r\n        this._numberCompareFlag = AniStateConditionNumberCompressType.Greater;\r\n        this._type = AniStateConditionType.Number;\r\n    }\r\n\r\n    /**\r\n     * number值\r\n     */\r\n    get numberValue() {\r\n        return this._numberValue;\r\n    }\r\n\r\n    set numberValue(value: number) {\r\n        this._numberValue = value;\r\n    }\r\n\r\n    /**\r\n     * 判断类型\r\n     */\r\n    get compareFlag() {\r\n        return this._numberCompareFlag;\r\n    }\r\n\r\n    set compareFlag(value: AniStateConditionNumberCompressType) {\r\n        this._numberCompareFlag = value;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: number): boolean {\r\n        if (AniStateConditionNumberCompressType.Greater == this._numberCompareFlag)\r\n            return value > this._numberValue;\r\n        else\r\n            return value < this._numberValue;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateBoolCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    private _compareFlag: boolean;\r\n\r\n    /**\r\n     * 创建bool比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._compareFlag = true;\r\n        this._type = AniStateConditionType.Bool;\r\n    }\r\n\r\n    /**\r\n     * 判断类型 \r\n     */\r\n    get compareFlag() {\r\n        return this._compareFlag;\r\n    }\r\n\r\n    set compareFlag(value: boolean) {\r\n        this._compareFlag = value;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: boolean): boolean {\r\n        return this._compareFlag == value;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateTriggerCondition extends AnimatorStateCondition {\r\n    /**\r\n     * 创建trigger比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._type = AniStateConditionType.Trigger;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发,tigger 如果是true,就算条件达成\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: boolean): boolean {\r\n        return value;\r\n    }\r\n}","import { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AniStateConditionType } from \"./AnimatorControllerParse\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorStateCondition } from \"./AnimatorStateCondition\";\r\n\r\nexport class AnimatorTransition2D {\r\n    mute: boolean;\r\n    exitTime: number;//退出时间\r\n    exitByTime: boolean;//是否设置生效时间\r\n    transstartoffset: number;//归一化的时间的下一个state播放位置\r\n    transduration: number;//归一化过度时间 TODO 0-1\r\n    conditions: AnimatorStateCondition[];//\r\n    destState: AnimatorState2D;\r\n    /**\r\n     * 创建一个新的Animatortransition2D\r\n     */\r\n    constructor() {\r\n        this.conditions = [];\r\n        this.exitByTime = true;\r\n        this.exitTime = 1;\r\n        this.transduration = 0;\r\n        this.transstartoffset = 0;\r\n        this.mute = false;\r\n    }\r\n\r\n    /**\r\n     * 增加一个条件\r\n     * @param condition \r\n     */\r\n     addCondition(condition: AnimatorStateCondition): void {\r\n        if (this.conditions.indexOf(condition) == -1) {\r\n            this.conditions.push(condition);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除一个条件\r\n     * @param condition \r\n     */\r\n    removeCondition(condition: AnimatorStateCondition): void {\r\n        let index = this.conditions.indexOf(condition);\r\n        if (index != -1) {\r\n            this.conditions.splice(index, 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 是否启用过渡\r\n    * @param normalizeTime \r\n    * @param paramsMap \r\n    */\r\n    check(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): boolean {\r\n        if (this.mute) {\r\n            return false;\r\n        }\r\n        if (this.exitByTime && (normalizeTime < this.exitTime && !isReplay)) {\r\n            return false;\r\n        }\r\n        if (null == this.conditions || 0 == this.conditions.length) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < this.conditions.length; i++) {\r\n            let con = this.conditions[i];\r\n\r\n            let out = con.checkState(paramsMap[con.name].value);\r\n            if (out) {\r\n                if (con.type == AniStateConditionType.Trigger) {\r\n                    paramsMap[con.name].value = false;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import { Resource } from \"../resource/Resource\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\r\nimport { AnimatorControllerParse, AniParmType, TypeAnimatorConditions, TypeAnimatorControllerData, TypeAnimatorParams, TypeAnimatorState, TypeAnimatorTransition } from \"./AnimatorControllerParse\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorStateCondition, AnimatorStateBoolCondition, AnimatorStateNumberCondition, AnimatorStateTriggerCondition } from \"./AnimatorStateCondition\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * <code>2D动画控制器<code/>\r\n */\r\nexport class AnimatorController2D extends Resource {\r\n    /**\r\n     * @internal\r\n     */\r\n    data: TypeAnimatorControllerData;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clipsID: string[];\r\n\r\n    /**\r\n     * 实例化2D动画控制器\r\n     * @param data \r\n     */\r\n    constructor(data: any) {\r\n        super();\r\n        let obj = AnimatorControllerParse.parse(data);\r\n        this.data = obj.ret;\r\n        this.clipsID = obj.clipsID;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    private getLayers() {\r\n        let layers = this.data.controllerLayers;\r\n        let lArr: AnimatorControllerLayer2D[] = [];\r\n        for (let i = layers.length - 1; i >= 0; i--) {\r\n            let l = layers[i];\r\n            let acl = new AnimatorControllerLayer2D(l.name);\r\n            lArr.unshift(acl);\r\n\r\n\r\n            for (let k in l) {\r\n                if (\"name\" == k || \"states\" == k || null == (l as any)[k]) {\r\n                    continue;\r\n                }\r\n                try {\r\n                    (acl as any)[k] = (l as any)[k];\r\n                } catch (err: any) { }\r\n            }\r\n            this.getState(l.states, acl, this.data);\r\n\r\n        }\r\n        return lArr;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param idCatch \r\n     * @param acl \r\n     * @returns \r\n     */\r\n    private createState(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D) {\r\n        if (!states) return null;\r\n        let ret: Record<string, AnimatorState2D> = {};\r\n        let defID: string = null;\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n            let childStates = obj.states;\r\n            if (childStates) {\r\n                let groupRet = this.createState(childStates, idCatch, acl);\r\n                if (groupRet) {\r\n                    idCatch[obj.id] = groupRet.states[groupRet.id];\r\n                }\r\n                continue;\r\n            }\r\n\r\n            if (0 > Number(obj.id)) {\r\n                if (\"-1\" == obj.id) {\r\n                    let transitions = obj.soloTransitions;\r\n                    if (transitions && 0 < transitions.length) {\r\n                        defID = transitions[0].id;\r\n                    }\r\n                }\r\n                continue;\r\n            }\r\n\r\n            let state = new AnimatorState2D();\r\n            idCatch[obj.id] = state;\r\n            ret[obj.id] = state;\r\n            for (let k in obj) {\r\n                try {\r\n                    if (\"scripts\" == k) {\r\n                        let scripts: string[] = obj[k];\r\n                        if (scripts && Array.isArray(scripts)) {\r\n                            for (let k = scripts.length - 1; k >= 0; k--) {\r\n                                let uuid = scripts[k];\r\n                                if (uuid && 0 == uuid.indexOf(\"res://\")) {\r\n                                    uuid = uuid.substring(6);\r\n                                }\r\n                                let c = ClassUtils.getClass(uuid);\r\n                                if (c) {\r\n                                    state.addScript(c);\r\n                                }\r\n                            }\r\n                        }\r\n                        continue;\r\n                    } else if (\"soloTransitions\" == k) {\r\n                        continue;\r\n                    } else if (null != (obj as any)[k]) {\r\n                        (state as any)[k] = (obj as any)[k];\r\n                    }\r\n                } catch (err: any) { }\r\n            }\r\n\r\n            acl.addState(state);\r\n        }\r\n        return { id: defID, states: ret };\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param acl \r\n     * @param data \r\n     */\r\n    private getState(states: TypeAnimatorState[], acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData) {\r\n        //let ret:\r\n        if (states) {\r\n            let idCatch: Record<string, AnimatorState2D> = {};\r\n            this.createState(states, idCatch, acl);\r\n            this.setTransitions(states, idCatch, acl, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param exitRet \r\n     * @param transitions \r\n     * @param idCatch \r\n     * @param data \r\n     * @param pExitRet \r\n     */\r\n    private setExitTransition(exitRet: Record<string, TypeAnimatorTransition[]>, transitions: TypeAnimatorTransition[], idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData, pExitRet: Record<string, TypeAnimatorTransition[]>) {\r\n        for (let id in exitRet) {\r\n            let state = idCatch[id];\r\n            if (state) {\r\n\r\n                let ats: AnimatorTransition2D[] = state.transitions;\r\n                let sts: AnimatorTransition2D[] = state.soloTransitions;\r\n\r\n                let linArr = exitRet[id];\r\n                for (let i = transitions.length - 1; i >= 0; i--) {\r\n                    let t = transitions[i];\r\n                    if (\"-3\" == t.id) {\r\n                        if (null == pExitRet[id]) {\r\n                            pExitRet[id] = [];\r\n                        }\r\n                        pExitRet[id].push(t);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                    for (let j = linArr.length - 1; j >= 0; j--) {\r\n                        let t2 = linArr[j];\r\n\r\n\r\n                        let ato = new AnimatorTransition2D();\r\n                        ato.destState = idCatch[t.id];\r\n\r\n                        if (t.conditions) {\r\n                            this.addConditions(t.conditions, ato, data);\r\n                        }\r\n\r\n                        if (t2.conditions) {\r\n                            this.addConditions(t2.conditions, ato, data);\r\n                        }\r\n\r\n\r\n                        for (let k in t) {\r\n                            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                                continue;\r\n                            } else {\r\n                                (ato as any)[k] = (t as any)[k];\r\n                            }\r\n                        }\r\n\r\n                        if (t.solo) {\r\n                            sts.unshift(ato);\r\n                        } else {\r\n                            ats.unshift(ato);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getAnimatorTransition2D(o: TypeAnimatorTransition, idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData) {\r\n        let ato = new AnimatorTransition2D();\r\n\r\n        if (idCatch[o.id]) {\r\n            ato.destState = idCatch[o.id];\r\n        }\r\n        if (o.conditions) {\r\n            this.addConditions(o.conditions, ato, data);\r\n        }\r\n\r\n        for (let k in o) {\r\n            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                continue;\r\n            } else {\r\n                (ato as any)[k] = (o as any)[k];\r\n            }\r\n        }\r\n        return ato;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param idCatch \r\n     * @param acl \r\n     * @param data \r\n     * @param pState \r\n     * @returns \r\n     */\r\n    private setTransitions(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData, pState?: TypeAnimatorState) {\r\n        if (!states) return null;\r\n\r\n        let exitRet: Record<string, TypeAnimatorTransition[]> = {};\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n\r\n            if (obj.states) {\r\n                let exitTransition = this.setTransitions(obj.states, idCatch, acl, data, obj);\r\n                if (exitTransition) {\r\n                    let transitions = obj.soloTransitions;\r\n                    if (transitions) {\r\n                        this.setExitTransition(exitTransition, transitions, idCatch, data, exitRet);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n\r\n            if (obj.states) {\r\n                continue;\r\n            }\r\n            if (\"-1\" == obj.id) {\r\n                if (obj.soloTransitions && 0 < obj.soloTransitions.length) {\r\n                    if (null == pState) {\r\n                        acl.defaultState = idCatch[obj.soloTransitions[0].id];\r\n                        acl._enterTransition = this._getAnimatorTransition2D(obj.soloTransitions[0], idCatch, data);\r\n                    } else {\r\n                        idCatch[pState.id] = idCatch[obj.soloTransitions[0].id];\r\n                    }\r\n                    continue;\r\n                }\r\n            } else if (\"-2\" == obj.id) {\r\n                let transitions = obj.soloTransitions;\r\n                if (transitions) {\r\n                    for (let j = transitions.length - 1; j >= 0; j--) {\r\n                        let o = transitions[j];\r\n                        let destState = idCatch[o.id];\r\n                        if (destState) {\r\n                            for (let idk in idCatch) {\r\n                                let state = idCatch[idk];\r\n                                let ato = this._getAnimatorTransition2D(o, idCatch, data)\r\n                                // let ato = new AnimatorTransition2D();\r\n                                // ato.destState = destState;\r\n                                // if (o.conditions) {\r\n                                //     this.addConditions(o.conditions, ato, data);\r\n                                // }\r\n\r\n                                // for (let k in o) {\r\n                                //     if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                                //         continue;\r\n                                //     } else {\r\n                                //         (ato as any)[k] = (o as any)[k];\r\n                                //     }\r\n                                // }\r\n\r\n                                if (o.solo) {\r\n                                    state.soloTransitions.unshift(ato);\r\n                                } else {\r\n                                    state.transitions.unshift(ato);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                continue;\r\n            } else if (\"-3\" == obj.id) {\r\n                continue;\r\n            }\r\n\r\n            let soloTransitions = obj.soloTransitions;\r\n            if (soloTransitions && idCatch[obj.id]) {\r\n\r\n                let ats: AnimatorTransition2D[] = idCatch[obj.id].transitions;\r\n                let sts: AnimatorTransition2D[] = idCatch[obj.id].soloTransitions;\r\n                for (let j = soloTransitions.length - 1; j >= 0; j--) {\r\n                    let o = soloTransitions[j];\r\n                    if (\"-3\" == o.id) {\r\n                        if (null == exitRet[obj.id]) {\r\n                            exitRet[obj.id] = [];\r\n                        }\r\n                        exitRet[obj.id].push(o);\r\n                        continue;\r\n                    }\r\n\r\n                    let ato = this._getAnimatorTransition2D(o,idCatch,data);\r\n\r\n                    if (o.solo) {\r\n                        sts.unshift(ato);\r\n                    } else {\r\n                        ats.unshift(ato);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return exitRet;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param arr \r\n     * @param ato \r\n     * @param data \r\n     * @returns \r\n     */\r\n    private addConditions(arr: TypeAnimatorConditions[], ato: AnimatorTransition2D, data: TypeAnimatorControllerData) {\r\n        let parms = data.animatorParams;\r\n        if (null == parms || 0 == parms.length) return;\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            let o = arr[i];\r\n            let parm: TypeAnimatorParams = null;\r\n            for (let j = parms.length - 1; j >= 0; j--) {\r\n                if (parms[j].id == o.id) {\r\n                    parm = parms[j];\r\n                    break;\r\n                }\r\n            }\r\n            if (null == parm) {\r\n                return;\r\n            }\r\n            let c: AnimatorStateCondition;\r\n            if (parm.type == AniParmType.Bool) {\r\n                let b = new AnimatorStateBoolCondition(parm.name);\r\n                b.compareFlag = Boolean(o.checkValue);\r\n                c = b;\r\n            } else if (parm.type == AniParmType.Float) {\r\n                let n = new AnimatorStateNumberCondition(parm.name);\r\n                n.numberValue = Number(o.checkValue);\r\n                n.compareFlag = o.type;\r\n                c = n;\r\n            } else if (parm.type == AniParmType.Trigger) {\r\n                let t = new AnimatorStateTriggerCondition(parm.name);\r\n                c = t;\r\n            }\r\n            ato.addCondition(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param a \r\n     */\r\n    updateTo(a: Animator2D) {\r\n        let currLayer = (a as any)._controllerLayers;\r\n\r\n        for (let i = 0, len = currLayer.length; i < len; i++) {\r\n            currLayer[i].destroy();\r\n        }\r\n        currLayer.length = 0;\r\n\r\n        let layers = this.getLayers();\r\n        for (let i = 0, len = layers.length; i < len; i++) {\r\n            a.addControllerLayer(layers[i]);\r\n        }\r\n\r\n        let parms = this.data.animatorParams;\r\n        if (parms) {\r\n            let setParm: Record<string, Animation2DParm> = {};\r\n            for (let i = parms.length - 1; i >= 0; i--) {\r\n                let p = parms[i];\r\n                let sp = new Animation2DParm();\r\n                sp.name = p.name;\r\n                sp.type = p.type;\r\n                sp.value = p.val;\r\n                setParm[p.name] = sp;\r\n            }\r\n            a.parameters = setParm;\r\n        }\r\n    }\r\n}","import { Component } from \"./Component\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Collision } from \"../d3/physics/Collision\";\r\nimport { PhysicsColliderComponent } from \"../d3/physics/PhysicsColliderComponent\";\r\nimport { ColliderBase } from \"../physics/Collider2D/ColliderBase\";\r\nimport { Sprite3D } from \"../d3/core/Sprite3D\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * <code>Script</code> 类用于创建脚本的父类，该类为抽象类，不允许实例。\r\n */\r\nexport class Script extends Component {\r\n    declare owner: Sprite | Sprite3D;\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    _isScript(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected setupScript(): void {\r\n        let owner = this.owner;\r\n        let func: Function;\r\n\r\n        if (!(this.onTriggerEnter == Script.prototype.onTriggerEnter)) owner.on(Event.TRIGGER_ENTER, this, this.onTriggerEnter);\r\n        if (!(this.onTriggerStay == Script.prototype.onTriggerStay)) owner.on(Event.TRIGGER_STAY, this, this.onTriggerStay);\r\n        if (!(this.onTriggerExit == Script.prototype.onTriggerExit)) owner.on(Event.TRIGGER_EXIT, this, this.onTriggerExit);\r\n\r\n        if (!(this.onCollisionEnter == Script.prototype.onCollisionEnter)) owner.on(Event.COLLISION_ENTER, this, this.onCollisionEnter);\r\n        if (!(this.onCollisionStay == Script.prototype.onCollisionStay)) owner.on(Event.COLLISION_STAY, this, this.onCollisionStay);\r\n        if (!(this.onCollisionExit == Script.prototype.onCollisionExit)) owner.on(Event.COLLISION_EXIT, this, this.onCollisionExit);\r\n        if (func = this.onJointBreak) owner.on(Event.JOINT_BREAK, this, func);\r\n\r\n        if (func = this.onMouseDown) owner.on(Event.MOUSE_DOWN, this, func);\r\n        if (func = this.onMouseUp) owner.on(Event.MOUSE_UP, this, func);\r\n        if (func = this.onRightMouseDown) owner.on(Event.RIGHT_MOUSE_DOWN, this, func);\r\n        if (func = this.onRightMouseUp) owner.on(Event.RIGHT_MOUSE_UP, this, func);\r\n        if (func = this.onMouseMove) owner.on(Event.MOUSE_MOVE, this, func);\r\n        if (func = this.onMouseDrag) owner.on(Event.MOUSE_DRAG, this, func);\r\n        if (func = this.onMouseDragEnd) owner.on(Event.MOUSE_DRAG_END, this, func);\r\n        if (func = this.onMouseOver) owner.on(Event.MOUSE_OVER, this, func);\r\n        if (func = this.onMouseOut) owner.on(Event.MOUSE_OUT, this, func);\r\n        if (func = this.onMouseClick) owner.on(Event.CLICK, this, func);\r\n        if (func = this.onMouseDoubleClick) owner.on(Event.DOUBLE_CLICK, this, func);\r\n        if (func = this.onMouseRightClick) owner.on(Event.RIGHT_CLICK, this, func);\r\n\r\n        if (func = this.onKeyDown) ILaya.stage.on(Event.KEY_DOWN, this, func);\r\n        if (func = this.onKeyPress) ILaya.stage.on(Event.KEY_PRESS, this, func);\r\n        if (func = this.onKeyUp) ILaya.stage.on(Event.KEY_UP, this, func);\r\n        owner.event(Event._Add_Script);\r\n    }\r\n\r\n    /**\r\n     * 3D物理触发器事件与2D物理碰撞事件，开始碰撞时执行\r\n     */\r\n    onTriggerEnter?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 3D物理触发器事件与2D物理碰撞事件，持续碰撞时执行\r\n     */\r\n    onTriggerStay?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 3D物理触发器事件与2D物理碰撞事件，结束碰撞时执行\r\n     */\r\n    onTriggerExit?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 3D物理碰撞器事件（不适用2D），开始碰撞时执行\r\n     */\r\n    onCollisionEnter?(collision: Collision): void;\r\n\r\n    /**\r\n     * 3D物理碰撞器事件（不适用2D），持续碰撞时执行\r\n     */\r\n    onCollisionStay?(collision: Collision): void;\r\n\r\n    /**\r\n     *3D物理碰撞器事件（不适用2D），结束碰撞时执行\r\n     */\r\n    onCollisionExit?(collision: Collision): void;\r\n\r\n    /**\r\n     * 关节破坏时执行此方法\r\n     */\r\n    onJointBreak?(): void;\r\n\r\n    /**\r\n     * 鼠标按下时执行\r\n     */\r\n    onMouseDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标抬起时执行\r\n     */\r\n    onMouseUp?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键或中键按下时执行\r\n     */\r\n    onRightMouseDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键或中键抬起时执行\r\n     */\r\n    onRightMouseUp?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标在节点上移动时执行\r\n     */\r\n    onMouseMove?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标进入节点时执行\r\n     */\r\n    onMouseOver?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标离开节点时执行\r\n     */\r\n    onMouseOut?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标按住一个物体后，拖拽时执行\r\n     */\r\n    onMouseDrag?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标按住一个物体，拖拽一定距离，释放鼠标按键后执行\r\n     */\r\n    onMouseDragEnd?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标点击时执行\r\n     */\r\n    onMouseClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标双击时执行\r\n     */\r\n    onMouseDoubleClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键点击时执行\r\n     */\r\n    onMouseRightClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘按下时执行\r\n     */\r\n    onKeyDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘产生一个字符时执行\r\n     */\r\n    onKeyPress?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘抬起时执行\r\n     */\r\n    onKeyUp?(evt: Event): void;\r\n}\r\n\r\n","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { TextResource, TextResourceFormat } from \"../resource/TextResource\";\r\n\r\nclass TextAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"text\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.Plain);\r\n        });\r\n    }\r\n}\r\n\r\nclass BytesAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.Buffer);\r\n        });\r\n    }\r\n}\r\n\r\nclass JsonAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.JSON);\r\n        });\r\n    }\r\n}\r\n\r\nclass XMLAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"xml\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.XML);\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"txt\", \"csv\"], TextAssetLoader, Loader.TEXT);\r\nLoader.registerLoader([\"bin\", \"bytes\", \"fui\"], BytesAssetLoader, Loader.BUFFER);\r\nLoader.registerLoader([\"json\"], JsonAssetLoader, Loader.JSON);\r\nLoader.registerLoader([\"xml\"], XMLAssetLoader, Loader.XML);","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nclass AtlasLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let toloadPics: Array<Promise<Texture>> = [];\r\n            if (data.meta && data.meta.image) {\r\n                let folderPath: string = \"\";\r\n                let i = task.url.lastIndexOf(\"/\");\r\n                if (i != -1)\r\n                    folderPath = task.url.substring(0, i + 1);\r\n\r\n                //如果图集带了版本号，需要将图集中包含的图片也需要追加版本号，以此解决浏览器缓存的问题\r\n                let query: string = \"\";\r\n                i = task.url.lastIndexOf(\"?\");\r\n                if (i != -1)\r\n                    query = task.url.substring(i);\r\n\r\n                //带图片信息的类型\r\n                let pics: Array<string> = data.meta.image.split(\",\");\r\n                for (let pic of pics)\r\n                    toloadPics.push(task.loader.load(folderPath + pic + query, null, task.progress.createCallback()));\r\n            } else {  //不带图片信息\r\n                toloadPics.push(task.loader.load(Utils.replaceFileExtension(task.url, \"png\"), null, task.progress.createCallback()));\r\n            }\r\n\r\n            return Promise.all(toloadPics).then(pics => {\r\n                let baseUrl = task.options.baseUrl || \"\";\r\n\r\n                let frames: any = data.frames;\r\n                let directory: string = (data.meta && data.meta.prefix != null) ? data.meta.prefix : task.url.substring(0, task.url.lastIndexOf(\".\")) + \"/\";\r\n                let subTextures: Array<Texture> = [];\r\n\r\n                let scaleRate: number = 1;\r\n                if (data.meta && data.meta.scale && data.meta.scale != 1)\r\n                    scaleRate = parseFloat(data.meta.scale);\r\n\r\n                for (let tPic of pics) {\r\n                    if (tPic) {\r\n                        tPic._addReference();\r\n                        tPic.scaleRate = scaleRate;\r\n                    }\r\n                }\r\n\r\n                for (let name in frames) {\r\n                    let obj = frames[name];\r\n                    let tPic = pics[obj.frame.idx ? obj.frame.idx : 0];\r\n                    if (!tPic)\r\n                        continue;\r\n\r\n                    let url = baseUrl + directory + (obj.filename || name);\r\n                    let tt = Texture.create(tPic, obj.frame.x, obj.frame.y, obj.frame.w, obj.frame.h, obj.spriteSourceSize.x, obj.spriteSourceSize.y, obj.sourceSize.w, obj.sourceSize.h);\r\n                    tt.lock = true;\r\n                    tt._sizeGrid = obj.sizeGrid;\r\n                    tt._stateNum = obj.stateNum;\r\n                    task.loader.cacheRes(url, tt);\r\n                    tt.url = url;\r\n                    subTextures.push(tt);\r\n                }\r\n\r\n                return new AtlasResource(directory, pics, subTextures);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"atlas\"], AtlasLoader, Loader.ATLAS);","import { Component } from \"../components/Component\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Loader, ILoadURL } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { IDecodeObjOptions, SerializeUtil } from \"./SerializeUtil\";\r\n\r\nconst errorList: Array<any> = [];\r\n\r\nexport class HierarchyParser {\r\n    public static parse(data: any, options?: Record<string, any>, errors?: Array<any>): Array<Node> {\r\n        errors = errors || errorList;\r\n        let nodeMap: Record<string, Node> = {};\r\n        let dataList: Array<any> = [];\r\n        let allNodes: Array<Node> = [];\r\n        let outNodes: Array<Node> = [];\r\n        let scene: Scene;\r\n\r\n        let inPrefab: boolean;\r\n        let prefabNodeDict: Map<Node, Record<string, Node>>;\r\n        let skinBaseUrl: string;\r\n        let overrideData: Array<Array<any>>;\r\n\r\n        if (options) {\r\n            inPrefab = options.inPrefab;\r\n            if (inPrefab)\r\n                prefabNodeDict = options.prefabNodeDict;\r\n            skinBaseUrl = options.skinBaseUrl;\r\n            overrideData = options.overrideData;\r\n        }\r\n\r\n        function createChildren(data: any, prefab: Node) {\r\n            for (let child of data._$child) {\r\n                if (child._$child) {\r\n                    let node = createNode(child, prefab);\r\n                    createChildren(child, child._$prefab ? node : prefab);\r\n\r\n                    dataList.push(child);\r\n                    allNodes.push(node);\r\n                }\r\n                else {\r\n                    let node = createNode(child, prefab);\r\n                    dataList.push(child);\r\n                    allNodes.push(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        function createNode(nodeData: any, prefab: Node, runtime?: string): Node {\r\n            let node: Node;\r\n            let pstr: string;\r\n            if (pstr = nodeData._$override) { //prefab里的override节点\r\n                if (prefab && prefabNodeDict) {\r\n                    if (Array.isArray(pstr)) {\r\n                        node = prefab;\r\n                        for (let i = 0, n = pstr.length; i < n; i++) {\r\n                            let map = prefabNodeDict.get(node);\r\n                            node = map?.[pstr[i]];\r\n                            if (!node)\r\n                                break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let map = prefabNodeDict.get(prefab);\r\n                        if (map)\r\n                            node = map[nodeData._$override];\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (pstr = nodeData._$prefab) { //prefab根节点\r\n                    let res = <Prefab>Loader.getRes(URL.getResURLByUUID(pstr), Loader.HIERARCHY);\r\n                    if (res) {\r\n                        if (!prefabNodeDict)\r\n                            prefabNodeDict = new Map();\r\n\r\n                        let overrideData2: Array<any> = [];\r\n                        let testId = nodeData._$id;\r\n                        if (overrideData) {\r\n                            for (let i = 0, n = overrideData.length; i < n; i++) {\r\n                                let arr = overrideData[i];\r\n                                if (arr && arr.length > 0) {\r\n                                    overrideData2[i] = arr.filter(d => {\r\n                                        let od = d._$override || d._$parent;\r\n                                        return Array.isArray(od) && od.length > n - i && od[n - i - 1] == testId;\r\n                                    });\r\n                                }\r\n                                else\r\n                                    overrideData2[i] = arr;\r\n                            }\r\n                        }\r\n\r\n                        overrideData2.push(nodeData._$child);\r\n\r\n                        node = res.create({ inPrefab: true, prefabNodeDict: prefabNodeDict, overrideData: overrideData2 }, errors);\r\n                    }\r\n                }\r\n                else if (pstr = nodeData._$type) {\r\n                    let cls = ClassUtils.getClass(runtime || pstr);\r\n                    if (cls) {\r\n                        try {\r\n                            node = new cls();\r\n                            if (runtime != null && !(node instanceof Node)) {\r\n                                errors.push(new Error(`runtime class invalid - '${runtime}', must derive from Node`));\r\n                                node = null;\r\n                            }\r\n                        }\r\n                        catch (err: any) {\r\n                            errors.push(err);\r\n                        }\r\n                    }\r\n                    else {\r\n                        errors.push(new Error(`unknown type '${runtime || pstr}'`));\r\n                    }\r\n                }\r\n\r\n                if (node)\r\n                    nodeMap[nodeData._$id] = node;\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n        function getNodeByRef(idPath: string | string[]) {\r\n            if (Array.isArray(idPath)) {\r\n                let prefab = nodeMap[idPath[0]];\r\n                if (prefab && idPath.length > 1)\r\n                    return findNodeInPrefab(prefab, idPath, 1);\r\n                else\r\n                    return prefab;\r\n            }\r\n            else\r\n                return nodeMap[idPath];\r\n        }\r\n\r\n        function findNodeInPrefab(prefab: Node, idPath: string | string[], startIndex: number = 0) {\r\n            if (!idPath)\r\n                return prefab;\r\n\r\n            let map = prefabNodeDict?.get(prefab);\r\n            if (!map)\r\n                return null;\r\n\r\n            if (Array.isArray(idPath)) {\r\n                let node: Node;\r\n                for (let i = startIndex, n = idPath.length; i < n; i++) {\r\n                    if (!map)\r\n                        return null;\r\n\r\n                    node = map[idPath[i]];\r\n                    if (!node)\r\n                        break;\r\n\r\n                    map = prefabNodeDict.get(node);\r\n                }\r\n                return node;\r\n            }\r\n            else\r\n                return map[idPath];\r\n        }\r\n\r\n        let bakedOverrideData: Record<string, Array<any>>;\r\n        function getNodeData(node: Node) {\r\n            (<Sprite>node).visible = false;\r\n\r\n            let i = allNodes.indexOf(node);\r\n            let nodeData = dataList[i];\r\n\r\n            if (!overrideData)\r\n                return nodeData;\r\n\r\n            if (bakedOverrideData === undefined)\r\n                bakedOverrideData = SerializeUtil.bakeOverrideData(overrideData);\r\n\r\n            if (bakedOverrideData)\r\n                return SerializeUtil.applyOverrideData(nodeData, bakedOverrideData);\r\n            else\r\n                return nodeData;\r\n        }\r\n\r\n        let runtime: string;\r\n        if (data._$type || data._$prefab) {\r\n            runtime = data._$runtime;\r\n            if (runtime && runtime.startsWith(\"res://\"))\r\n                runtime = runtime.substring(6);\r\n\r\n            let node = createNode(data, null, runtime);\r\n            if (node) {\r\n                if (data._$child)\r\n                    createChildren(data, data._$prefab ? node : null);\r\n\r\n                dataList.push(data);\r\n                allNodes.push(node);\r\n\r\n                if (node instanceof Scene)\r\n                    scene = node;\r\n            }\r\n        }\r\n        else {\r\n            if (data._$child)\r\n                createChildren(data, null);\r\n        }\r\n\r\n        let cnt = dataList.length;\r\n\r\n        //生成树\r\n        let k = 0;\r\n        let outNodeData: Array<any> = [];\r\n        for (let i = 0; i < cnt; i++) {\r\n            let nodeData = dataList[i];\r\n            let node = allNodes[i];\r\n\r\n            let children: Array<any> = nodeData._$child;\r\n            if (children) {\r\n                let num = children.length;\r\n                if (node) {\r\n                    if (nodeData._$prefab) {\r\n                        for (let j = 0; j < num; j++) {\r\n                            let m = k - num + j;\r\n                            let n = outNodes[m];\r\n                            if (n && !n.parent) { //是预制体新增\r\n                                let nodeData2 = outNodeData[m];\r\n                                let parentNode = findNodeInPrefab(node, nodeData2._$parent);\r\n                                if (parentNode) {\r\n                                    let pos = nodeData2._$index;\r\n                                    if (pos != null && pos < parentNode.numChildren)\r\n                                        parentNode.addChildAt(n, pos);\r\n                                    else\r\n                                        parentNode.addChild(n);\r\n                                }\r\n                                else {\r\n                                    //挂接的节点可能被删掉了\r\n                                    node.addChildAt(n, 0);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let j = 0; j < num; j++) {\r\n                            let n = outNodes[k - num + j];\r\n                            if (n) {\r\n                                if (node === scene && n._is3D)\r\n                                    scene._scene3D = <any>n;\r\n                                else\r\n                                    node.addChild(n);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                k -= num;\r\n            }\r\n\r\n            outNodes[k] = node;\r\n            outNodeData[k] = nodeData;\r\n            k++;\r\n        }\r\n        outNodes.length = k;\r\n        outNodes = outNodes.filter(n => n != null);\r\n        let topNode = outNodes[0];\r\n\r\n        //加载所有组件\r\n        let compInitList: Array<any> = [];\r\n        for (let i = 0; i < cnt; i++) {\r\n            let components = dataList[i]._$comp;\r\n            if (!components)\r\n                continue;\r\n\r\n            let node = allNodes[i];\r\n            if (!node)\r\n                continue;\r\n\r\n            for (let compData of components) {\r\n                let comp: Component;\r\n                if (compData._$override) {\r\n                    let cls: any = ClassUtils.getClass(compData._$override);\r\n                    if (cls)\r\n                        comp = node.getComponent(cls);\r\n                }\r\n                else {\r\n                    let cls: any = ClassUtils.getClass(compData._$type);\r\n                    if (cls) {\r\n                        comp = node.getComponent(cls);\r\n                        if (!comp) {\r\n                            try {\r\n                                comp = node.addComponent(cls);\r\n                            }\r\n                            catch (err: any) {\r\n                                errors.push(err);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (comp)\r\n                    compInitList.push(compData, comp);\r\n            }\r\n        }\r\n\r\n        //设置节点属性\r\n        const decodeOptions: IDecodeObjOptions = { outErrors: errors, getNodeByRef, getNodeData };\r\n        for (let i = 0; i < cnt; i++) {\r\n            let nodeData = dataList[i];\r\n            let node = allNodes[i];\r\n            if (node) {\r\n                if (skinBaseUrl != null && (node instanceof Sprite))\r\n                    node._skinBaseUrl = skinBaseUrl;\r\n\r\n                SerializeUtil.decodeObj(nodeData, node, decodeOptions);\r\n\r\n                if (runtime && nodeData._$var && node.name) {\r\n                    try {\r\n                        (<any>topNode)[node.name] = node;\r\n                    }\r\n                    catch (err: any) {\r\n                        errors.push(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //设置组件属性\r\n        cnt = compInitList.length;\r\n        for (let i = 0; i < cnt; i += 2) {\r\n            SerializeUtil.decodeObj(compInitList[i], compInitList[i + 1], decodeOptions);\r\n        }\r\n\r\n        if (inPrefab && prefabNodeDict && topNode) //记录下nodeMap，上层创建prefab时使用\r\n            prefabNodeDict.set(topNode, nodeMap);\r\n\r\n        if (errors == errorList)\r\n            errorList.length = 0;\r\n\r\n        return outNodes;\r\n    }\r\n\r\n    public static collectResourceLinks(data: any, basePath: string) {\r\n        let test: Record<string, string[]> = {};\r\n        let innerUrls: (string | ILoadURL)[] = [];\r\n\r\n        function addInnerUrl(url: string, type: string) {\r\n            if (!url)\r\n                return \"\";\r\n            let entry = test[url];\r\n            if (entry === undefined) {\r\n                let url2: string;\r\n                if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\r\n                    url2 = \"res://\" + url;\r\n                else\r\n                    url2 = URL.join(basePath, url);\r\n                innerUrls.push({ url: url2, type: type });\r\n                test[url] = entry = [url2, type];\r\n            }\r\n            else if (entry.indexOf(type, 1) == -1) {\r\n                entry.push(type);\r\n                innerUrls.push({ url: entry[0], type: type });\r\n            }\r\n            return entry[0];\r\n        }\r\n\r\n        function check(data: any) {\r\n            for (let key in data) {\r\n                let child = data[key];\r\n                if (child == null)\r\n                    continue;\r\n                if (Array.isArray(child)) {\r\n                    for (let item of child) {\r\n                        if (item == null)\r\n                            continue;\r\n\r\n                        if (typeof (item) === \"object\") {\r\n                            if (item._$uuid != null)\r\n                                item._$uuid = addInnerUrl(item._$uuid, SerializeUtil.getLoadTypeByEngineType(item._$type));\r\n                            else if (item._$prefab != null) {\r\n                                item._$prefab = addInnerUrl(item._$prefab, Loader.HIERARCHY);\r\n                                check(item);\r\n                            }\r\n                            else\r\n                                check(item);\r\n                        }\r\n                    }\r\n                }\r\n                else if (typeof (child) === \"object\") {\r\n                    if (child._$uuid != null)\r\n                        child._$uuid = addInnerUrl(child._$uuid, SerializeUtil.getLoadTypeByEngineType(child._$type));\r\n                    else if (child._$prefab != null) {\r\n                        child._$prefab = addInnerUrl(child._$prefab, Loader.HIERARCHY);\r\n                        check(child);\r\n                    }\r\n                    else\r\n                        check(child);\r\n                }\r\n            }\r\n        }\r\n\r\n        check(data);\r\n\r\n        if (data._$preloads) {\r\n            for (let url of data._$preloads)\r\n                innerUrls.push(url);\r\n        }\r\n\r\n        return innerUrls;\r\n    }\r\n}","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { IHierarchyParserAPI, PrefabImpl } from \"../resource/PrefabImpl\";\r\nimport { HierarchyParser } from \"./HierarchyParser\";\r\nimport { LegacyUIParser } from \"./LegacyUIParser\";\r\n\r\nexport class HierarchyLoader implements IResourceLoader {\r\n    static v3: IHierarchyParserAPI = HierarchyParser;\r\n    static v2: IHierarchyParserAPI = null;\r\n    static legacySceneOrPrefab: IHierarchyParserAPI = LegacyUIParser;\r\n\r\n    load(task: ILoadTask) {\r\n        let url = task.url;\r\n        let isModel = task.ext == \"gltf\" || task.ext == \"fbx\" || task.ext == \"glb\";\r\n        if (isModel)\r\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"lh\");\r\n        return task.loader.fetch(url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            if (data._$ver != null)\r\n                return this._load(HierarchyLoader.v3, task, data, 3);\r\n            else if (task.ext == \"ls\" || task.ext == \"lh\")\r\n                return this._load(HierarchyLoader.v2, task, data, 2);\r\n            else if (task.ext == \"scene\" || task.ext == \"prefab\")\r\n                return this._load(HierarchyLoader.legacySceneOrPrefab, task, data, 2);\r\n            else\r\n                return null;\r\n        });\r\n    }\r\n\r\n    //@internal\r\n    private _load(api: IHierarchyParserAPI, task: ILoadTask, data: any, version: number): Promise<Prefab> {\r\n        let basePath = URL.getPath(task.url);\r\n        let links = api.collectResourceLinks(data, basePath);\r\n        return task.loader.load(links, { initiator: task }, task.progress.createCallback()).then((resArray: any[]) => {\r\n            let res = new PrefabImpl(api, data, version);\r\n            res.addDeps(resArray);\r\n            return res;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lh\", \"ls\", \"scene\", \"prefab\"], HierarchyLoader, Loader.HIERARCHY);","/**\r\n * https://en.wikipedia.org/wiki/Radiance_(software)#HDR_image_format\r\n * \r\n * 文件第一行为 \"#?RADIANCE\"\r\n * \r\n * 以 \"#\" 开始为 注释行\r\n * \r\n * 后面有 key=value 形式声明信息\r\n * 包括 \"FORMAT=32-bit_rle_rgbe\" 格式声明\r\n * \r\n * 空行代表 header 结束， \r\n * \r\n * header 信息下一行 描述 图像分辨率和像素数据\r\n * 由 Radiance tools 生成, 一般为 \"-Y height +X width\"\r\n * \r\n * 之后为 图像 二进制像素数据\r\n *  \r\n */\r\n\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\n\r\n/**\r\n * https://floyd.lbl.gov/radiance/framer.html\r\n */\r\nexport class HDRTextureInfo {\r\n\r\n    static HDRTEXTURE: string = \"HDRTEXTURE\";\r\n\r\n    static _parseHDRTexture(data: ArrayBuffer, propertyParams: any = null, constructParams: any[] = null) {\r\n\r\n        let hdrInfo = HDRTextureInfo.getHDRInfo(data);\r\n\r\n        let texture = new Texture2D(hdrInfo.width, hdrInfo.height, hdrInfo.format, false, false, false);\r\n\r\n        texture.setHDRData(hdrInfo);\r\n\r\n        if (propertyParams) {\r\n            if (propertyParams.wrapModeU != null) texture.wrapModeU = propertyParams.wrapModeU;\r\n            if (propertyParams.wrapModeV != null) texture.wrapModeV = propertyParams.wrapModeV;\r\n            if (propertyParams.filterMode != null) texture.filterMode = propertyParams.filterMode;\r\n            if (propertyParams.anisoLevel != null) texture.anisoLevel = propertyParams.anisoLevel;\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param source \r\n     */\r\n    static getHDRInfo(source: ArrayBuffer) {\r\n\r\n        let data = new Uint8Array(source);\r\n        let readByteOffset = 0;\r\n\r\n        const readLine = () => {\r\n            let lineStr = HDRTextureInfo.getLineString(data, readByteOffset);\r\n            // string 带着 '\\n' 就不用 +1\r\n            readByteOffset += lineStr.length + 1;\r\n            return lineStr;\r\n        }\r\n\r\n        // header\r\n        let identifier = readLine();\r\n        // todo  非 Radiance tools 生成文件 identifier 是否还是 RADIANCE\r\n        if (identifier != \"#?RADIANCE\") {\r\n            throw \"HDR image: identifier wrong.\";\r\n        }\r\n\r\n        let commandsMap = new Map();\r\n\r\n        let line = \"\";\r\n        do {\r\n            line = readLine();\r\n            if (line[0] != \"#\") {\r\n                let commands = line.split(\"=\");\r\n                commandsMap.set(commands[0], commands[1]);\r\n            }\r\n\r\n        } while (line != \"\");\r\n        // header end\r\n\r\n        /**\r\n         * FORMAT\r\n         * EXPOSURE\r\n         * COLORCORR\r\n         * SOFTWARE\r\n         * PIXASPECT\r\n         * VIEW\r\n         * PRIMARIES\r\n         */\r\n        let hdrFormat = commandsMap.get(\"FORMAT\");\r\n        /**\r\n         * 32-bit_rle_rgbe\r\n         * 32-bit_rle_xyze\r\n         */\r\n        if (hdrFormat != \"32-bit_rle_rgbe\") {\r\n            throw \"HDR image: unsupported format.\";\r\n        }\r\n\r\n        let resolutionStr = readLine();\r\n        let resolutions = resolutionStr.split(\" \");\r\n\r\n        let decreaseY = resolutions[0] == \"-Y\";\r\n        let decreaseX = resolutions[2] == \"-X\";\r\n\r\n        let height = parseInt(resolutions[1]);\r\n        let width = parseInt(resolutions[3]);\r\n\r\n        // format 固定?\r\n        let hdrInfo = new HDRTextureInfo(source, readByteOffset, decreaseX, decreaseY, width, height, TextureFormat.R32G32B32A32);\r\n\r\n        /**\r\n         * Scanline Records\r\n         * 1. Uncompressed 每像素 4 字节\r\n         * 2. Old run-length encoded\r\n         * 3. New run-length encoded *✓\r\n         */\r\n\r\n\r\n        return hdrInfo;\r\n    }\r\n\r\n    private static getLineString(data: Uint8Array, readByteOffset: number) {\r\n\r\n        let dataLength = data.length;\r\n\r\n        let index = readByteOffset;\r\n\r\n        let res = \"\";\r\n        let char = \"\";\r\n        // do {\r\n        //     char = String.fromCharCode(data[index]);\r\n        //     res = `${res}${char}`;\r\n        //     index++;\r\n        // } while (index < dataLength && char != \"\\n\");\r\n\r\n        while (index < dataLength && char != \"\\n\") {\r\n            res = `${res}${char}`;\r\n            char = String.fromCharCode(data[index]);\r\n            index++;\r\n        }\r\n\r\n        return res;\r\n\r\n    }\r\n\r\n\r\n\r\n    constructor(public source: ArrayBuffer, public byteOffset: number, public decreaseX: boolean, public decreaseY: boolean, public width: number, public height: number, public format: TextureFormat) {\r\n\r\n    }\r\n\r\n    get_32_bit_rle_rgbe(): ArrayBufferView {\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let decreaseX = this.decreaseX;\r\n        let decreaseY = this.decreaseY;\r\n\r\n        let data = new Uint8Array(this.source, this.byteOffset);\r\n        let dataIndex = 0;\r\n\r\n        let rgbeBuffer = new ArrayBuffer(width * 4);\r\n        let rgbeArray = new Uint8Array(rgbeBuffer);\r\n\r\n        let pixelBuffer = new ArrayBuffer(width * height * 4 * 3);\r\n        let pixelArray = new Float32Array(pixelBuffer);\r\n\r\n        // todo decreaseX and decreaseY\r\n        for (let y = height; y > 0; y--) {\r\n\r\n            // begin unnormalized pixel\r\n            let a2 = data[dataIndex++]; // equal to 2\r\n            let b2 = data[dataIndex++]; // equal to 2\r\n            let c = data[dataIndex++]; // upper byte\r\n            let d = data[dataIndex++]; // lower byte\r\n\r\n            let scanlineLength = (c << 8) | d;\r\n\r\n            if (scanlineLength != width) {\r\n                throw \"HDR info: scanlineLength wrong.\";\r\n            }\r\n\r\n            let index = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                let endIndex = (i + 1) * scanlineLength;\r\n\r\n                while (index < endIndex) {\r\n                    let a = data[dataIndex++];\r\n                    let b = data[dataIndex++];\r\n                    if (a > 128) {\r\n                        let count = a - 128;\r\n                        if (count > endIndex - index) {\r\n                            throw \"HDR info: ??\";\r\n                        }\r\n                        while (count-- > 0) {\r\n                            rgbeArray[index++] = b;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let count = a;\r\n                        if (count == 0 || count > endIndex - index) {\r\n                            throw \"HDR info: ??\";\r\n                        }\r\n                        rgbeArray[index++] = b;\r\n                        if (--count > 0) {\r\n                            for (let j = 0; j < count; j++) {\r\n                                rgbeArray[index++] = data[dataIndex++];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < scanlineLength; i++) {\r\n                let r = rgbeArray[i];\r\n                let g = rgbeArray[i + scanlineLength];\r\n                let b = rgbeArray[i + 2 * scanlineLength];\r\n                let e = rgbeArray[i + 3 * scanlineLength];\r\n\r\n                // /// test data\r\n                // /**\r\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129).\r\n                //  */\r\n                // r = 128;\r\n                // g = 64;\r\n                // b = 32;\r\n                // e = 129;\r\n\r\n                let index = (height - y) * scanlineLength * 3 + i * 3;\r\n\r\n                const Ldexp = (mantissa: number, exponent: number) => {\r\n                    if (exponent > 1023) {\r\n                        return mantissa * Math.pow(2, 1023) * Math.pow(2, exponent - 1023);\r\n                    }\r\n\r\n                    if (exponent < -1074) {\r\n                        return mantissa * Math.pow(2, -1074) * Math.pow(2, exponent + 1074);\r\n                    }\r\n\r\n                    return mantissa * Math.pow(2, exponent);\r\n                }\r\n\r\n                if (e > 0) {\r\n                    let exponent = Ldexp(1.0, e - (128 + 8));\r\n                    pixelArray[index] = r * exponent;\r\n                    pixelArray[index + 1] = g * exponent;\r\n                    pixelArray[index + 2] = b * exponent;\r\n                }\r\n                else {\r\n                    pixelArray[index] = 0;\r\n                    pixelArray[index + 1] = 0;\r\n                    pixelArray[index + 2] = 0;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return pixelArray;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://www.radiance-online.org/archived/radsite/radiance/refer/Notes/picture_format.html\r\n     */\r\n    readScanLine(): ArrayBufferView {\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let decreaseX = this.decreaseX;\r\n        let decreaseY = this.decreaseY;\r\n\r\n        let n = 3;\r\n        if (this.format == TextureFormat.R32G32B32A32) {\r\n            n = 4;\r\n        }\r\n\r\n        let pixelArray = new Float32Array(width * height * n);\r\n\r\n        let scanlineArray = new Uint8Array(width * 4);\r\n\r\n        let data = new Uint8Array(this.source, this.byteOffset);\r\n        let dataLength = data.length;\r\n        let dataIndex = 0;\r\n\r\n        const getc = () => {\r\n            // todo  check\r\n            if (dataIndex >= dataLength) {\r\n                throw \"HDR info: data wrong.\";\r\n            }\r\n\r\n            return data[dataIndex++];\r\n        };\r\n\r\n        const wrong = () => {\r\n            throw \"HDR info: data wrong.\";\r\n        }\r\n\r\n        for (let y = (height - 1); y >= 0; y--) {\r\n\r\n            this.readcolors(scanlineArray, getc, wrong);\r\n\r\n            for (let i = 0; i < width; i++) {\r\n\r\n                // color_color func\r\n                let index = 4 * i;\r\n                let byter = scanlineArray[index];\r\n                let byteg = scanlineArray[index + 1];\r\n                let byteb = scanlineArray[index + 2];\r\n                let bytee = scanlineArray[index + 3];\r\n\r\n                // /// test data\r\n                // /**\r\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129)\r\n                //  */\r\n                // byter = 128;\r\n                // byteg = 64;\r\n                // byteb = 32;\r\n                // bytee = 129;\r\n\r\n                let offsetY = y;\r\n                let offsetX = i;\r\n                if (decreaseY) {\r\n                    offsetY = height - 1 - y;\r\n                }\r\n                if (decreaseX) {\r\n                    offsetX = width - 1 - i;\r\n                }\r\n\r\n                let pixelIndex = offsetY * width * n + offsetX * n;\r\n\r\n                if (bytee == 0) {\r\n                    pixelArray[pixelIndex] = 0;\r\n                    pixelArray[pixelIndex + 1] = 0;\r\n                    pixelArray[pixelIndex + 2] = 0;\r\n                    if (n == 4) {\r\n                        pixelArray[pixelIndex + 3] = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    let f = ldexp(1.0, bytee - (128 + 8));\r\n                    pixelArray[pixelIndex] = (byter + 0.5) * f;\r\n                    pixelArray[pixelIndex + 1] = (byteg + 0.5) * f;\r\n                    pixelArray[pixelIndex + 2] = (byteb + 0.5) * f;\r\n                    if (n == 4) {\r\n                        pixelArray[pixelIndex + 3] = 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        return pixelArray;\r\n    }\r\n\r\n    readcolors(scanlineArray: Uint8Array, getc: () => number, wrong: () => void) {\r\n\r\n        const setScanLineData = (w: number, channel: number, value: number) => {\r\n            scanlineArray[w * 4 + channel] = value;\r\n        }\r\n\r\n        let width = this.width;\r\n\r\n        // 第一个数据\r\n        let unnormalizedr = getc();\r\n        let unnormalizedg = getc();\r\n        let unnormalizedb = getc();\r\n        let unnormalizede = getc();\r\n\r\n        if (width < 8 || width > 32767) {\r\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\r\n            return;\r\n        }\r\n\r\n        if (unnormalizedr != 2 || unnormalizedg != 2 || unnormalizedb & 128) {\r\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\r\n            return;\r\n        }\r\n\r\n        if ((unnormalizedb << 8 | unnormalizede) != width) {\r\n            wrong()\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < width;) {\r\n                let code = getc();\r\n                if (code > 128) {\r\n                    code &= 127;\r\n                    let val = getc();\r\n                    if (j + code > width) {\r\n                        wrong();\r\n                    }\r\n                    while (code--) {\r\n                        setScanLineData(j++, i, val);\r\n                    }\r\n                }\r\n                else {\r\n                    if (j + code > width) {\r\n                        wrong();\r\n                    }\r\n                    while (code--) {\r\n                        let val = getc();\r\n                        setScanLineData(j++, i, val);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    olddreadcolors(scanlineArray: Uint8Array, getc: () => number, r: number, g: number, b: number, e: number) {\r\n\r\n        let rshift = 0;\r\n\r\n        let len = this.width;\r\n\r\n        scanlineArray[0] = r;\r\n        scanlineArray[1] = g;\r\n        scanlineArray[2] = b;\r\n        scanlineArray[3] = e;\r\n\r\n        for (let w = 1; w < len; w++) {\r\n            let unnormalizedr = getc();\r\n            let unnormalizedg = getc();\r\n            let unnormalizedb = getc();\r\n            let unnormalizede = getc();\r\n\r\n            let scanIndex = w * 4;\r\n            scanlineArray[scanIndex] = unnormalizedr;\r\n            scanlineArray[scanIndex + 1] = unnormalizedg;\r\n            scanlineArray[scanIndex + 2] = unnormalizedb;\r\n            scanlineArray[scanIndex + 3] = unnormalizede;\r\n\r\n            if (unnormalizedr == 1 && unnormalizedg == 1 && unnormalizedb == 1) {\r\n                let lastIndex = scanIndex - 4;\r\n                for (let i = unnormalizede << rshift; i > 0; i--) {\r\n                    scanlineArray[scanIndex] = scanlineArray[lastIndex];\r\n                    scanlineArray[scanIndex + 1] = scanlineArray[lastIndex + 1];\r\n                    scanlineArray[scanIndex + 2] = scanlineArray[lastIndex + 2];\r\n                    scanlineArray[scanIndex + 3] = scanlineArray[lastIndex + 3];\r\n                    // len--;\r\n                }\r\n                rshift += 8;\r\n            }\r\n            else {\r\n                // len--;\r\n                rshift = 0;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    color_color(col: Vector4, clr: Vector4) {\r\n        let f = 0;\r\n        if (clr.w == 0) {\r\n            col.x = col.y = col.z = 0;\r\n        }\r\n        else {\r\n            f = ldexp(1.0, clr.w - (128 + 8));\r\n            // todo   + 0.5 值会变\r\n            col.x = (clr.x) * f;\r\n            col.y = (clr.y) * f;\r\n            col.z = (clr.z) * f;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nfunction ldexp(value: number, exponent: number): number {\r\n    return value * Math.pow(2, exponent);\r\n}","import { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { IResourceLoader, ILoadTask, Loader, ILoadURL } from \"../net/Loader\";\r\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { RenderTexture } from \"../resource/RenderTexture\";\r\nimport { VideoTexture } from \"../media/VideoTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nvar internalResources: Record<string, Texture2D>;\r\n\r\nclass Texture2DLoader implements IResourceLoader {\r\n    constructor() {\r\n        if (!internalResources) {\r\n            internalResources = {\r\n                \"WhiteTexture.png\": Texture2D.whiteTexture,\r\n                \"BlackTexture.png\": Texture2D.blackTexture,\r\n                \"GrayTexture.png\": Texture2D.grayTexture,\r\n                \"NormalTexture.png\": Texture2D.normalTexture,\r\n            };\r\n        }\r\n    }\r\n\r\n    load(task: ILoadTask) {\r\n        if (task.url.indexOf(\"internal/\") != -1) {\r\n            let tex = internalResources[Utils.getBaseName(task.url)];\r\n            if (tex)\r\n                return Promise.resolve(tex);\r\n        }\r\n\r\n        let meta: any;\r\n        if (!task.url.startsWith(\"data:\")) {\r\n            meta = AssetDb.inst.metaMap[task.url];\r\n            if (!meta && LayaEnv.isPreview) {\r\n                return AssetDb.inst.getMeta(task.url, task.uuid).then(meta => {\r\n                    return this.load2(task, meta);\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.load2(task, meta);\r\n    }\r\n\r\n    protected load2(task: ILoadTask, meta: any) {\r\n        let constructParams: TextureConstructParams;\r\n        let propertyParams: TexturePropertyParams;\r\n        let ext = task.ext;\r\n        let url = task.url;\r\n        if (meta) {\r\n            let platform = Browser.platform;\r\n            let fileIndex = meta.platforms?.[platform] || 0;\r\n            let fileInfo = meta.files?.[fileIndex] || {};\r\n            if (fileInfo.file) {\r\n                url = AssetDb.inst.getSubAssetURL(url, task.uuid, fileInfo.file, fileInfo.ext);\r\n                ext = fileInfo.ext;\r\n            }\r\n\r\n            constructParams = [0, 0, fileInfo.format ?? 1, meta.mipmap, meta.readWrite, meta.sRGB];\r\n            propertyParams = {\r\n                wrapModeU: meta.wrapMode,\r\n                wrapModeV: meta.wrapMode,\r\n                filterMode: meta.filterMode,\r\n                anisoLevel: meta.anisoLevel,\r\n                premultiplyAlpha: !!meta.pma,\r\n                hdrEncodeFormat: meta.hdrEncodeFormat,\r\n            };\r\n        }\r\n        else {\r\n            constructParams = task.options.constructParams;\r\n            propertyParams = task.options.propertyParams;\r\n        }\r\n\r\n        let compress = compressedFormats.indexOf(ext) != -1 ? ext : null;\r\n        if (compress != null) {\r\n            return task.loader.fetch(url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n                if (!data)\r\n                    return null;\r\n\r\n                let tex: BaseTexture;\r\n                switch (compress) {\r\n                    case \"dds\":\r\n                        tex = Texture2D._parseDDS(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"ktx\":\r\n                        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\r\n                        if (ktxInfo.dimension == TextureDimension.Cube) {\r\n                            //这里在core模块，不能直接引用d3里的TextureCube\r\n                            let cls = ClassUtils.getClass(\"TextureCube\");\r\n                            if (cls) {\r\n                                let tc = new cls(ktxInfo.width, ktxInfo.format, ktxInfo.mipmapCount > 1, ktxInfo.sRGB);\r\n                                tc.setKTXData(ktxInfo);\r\n                                tex = tc;\r\n                            }\r\n                            else\r\n                                return null;\r\n                        }\r\n                        else if (ktxInfo.dimension == TextureDimension.Tex2D) {\r\n                            tex = Texture2D._parseKTX(data, propertyParams, constructParams);\r\n                        }\r\n                        break;\r\n                    case \"pvr\":\r\n                        tex = Texture2D._parsePVR(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"hdr\":\r\n                        tex = HDRTextureInfo._parseHDRTexture(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"lanit.ls\":\r\n                        tex = Texture2D._SimpleAnimatorTextureParse(data, propertyParams, constructParams);\r\n                        break;\r\n                }\r\n\r\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\r\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\r\n                    tex = this.move(obsoluteInst, tex);\r\n\r\n                if (propertyParams && propertyParams.hdrEncodeFormat)\r\n                    tex.hdrEncodeFormat = propertyParams.hdrEncodeFormat;\r\n\r\n                if (meta) {\r\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\r\n                    (<any>tex)._stateNum = meta.stateNum;\r\n                }\r\n\r\n                return tex;\r\n            });\r\n        }\r\n        else {\r\n            let options = task.options;\r\n            let premultiplyAlpha = (propertyParams && propertyParams.premultiplyAlpha) ? \"premultiply\" : \"none\";\r\n            if (options.useWorkerLoader && premultiplyAlpha === \"none\")\r\n                options = Object.assign({ workerLoaderOptions: { premultiplyAlpha } }, options);\r\n\r\n            return task.loader.fetch(url, \"image\", task.progress.createCallback(), options).then(img => {\r\n                if (LayaGL.textureContext.needBitmap) {\r\n                    if (img instanceof ImageBitmap)\r\n                        return img;\r\n                    else\r\n                        return createImageBitmap(img, options.workerLoaderOptions || { premultiplyAlpha });\r\n                } else {\r\n                    return img;\r\n                }\r\n            }).then(bitmapimage => {\r\n                if (!bitmapimage)\r\n                    return null;\r\n                let tex: BaseTexture = Texture2D._parseImage(bitmapimage, propertyParams, constructParams);\r\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\r\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\r\n                    tex = this.move(obsoluteInst, tex);\r\n                if (meta) {\r\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\r\n                    (<any>tex)._stateNum = meta.stateNum;\r\n                }\r\n                return tex;\r\n            });\r\n        }\r\n    }\r\n\r\n    private move(obsoluteInst: BaseTexture, tex: BaseTexture) {\r\n        obsoluteInst._texture = tex._texture;\r\n        obsoluteInst.width = tex.width;\r\n        obsoluteInst.height = tex.height;\r\n        obsoluteInst.obsolute = false;\r\n        delete Resource._idResourcesMap[tex.id];\r\n        return obsoluteInst;\r\n    }\r\n}\r\n\r\nclass RenderTextureLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let rt = <RenderTexture>task.obsoluteInst;\r\n            if (rt)\r\n                rt.recreate(data.width, data.height, data.colorFormat, data.depthFormat,\r\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\r\n            else\r\n                rt = new RenderTexture(data.width, data.height, data.colorFormat, data.depthFormat,\r\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\r\n\r\n            if (null != data.anisoLevel)\r\n                rt.anisoLevel = data.anisoLevel;\r\n            if (null != data.filterMode)\r\n                rt.filterMode = data.filterMode;\r\n            if (null != data.wrapModeU)\r\n                rt.wrapModeU = data.wrapModeU;\r\n            if (null != data.wrapModeV)\r\n                rt.wrapModeV = data.wrapModeV;\r\n\r\n            return rt;\r\n        });\r\n    }\r\n}\r\n\r\n\r\nclass VideoTextureLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let inst = <VideoTexture>task.obsoluteInst || new VideoTexture();\r\n        inst.source = task.url;\r\n        return Promise.resolve(inst);\r\n    }\r\n}\r\n\r\nconst propertyParams2d: TexturePropertyParams = { premultiplyAlpha: true };\r\nconst constructParams2d: TextureConstructParams = [null, null, TextureFormat.R8G8B8A8, false, false, true];\r\n\r\nclass TextureLoader implements IResourceLoader {\r\n    wrapTex2D(task: ILoadTask, tex2D: Texture2D) {\r\n        if (!tex2D)\r\n            return null;\r\n\r\n        let tex = <Texture>task.obsoluteInst;\r\n        if (tex) { //recover\r\n            tex.setTo(tex2D);\r\n            tex.obsolute = false;\r\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\r\n            tex._stateNum = (<any>tex2D)._stateNum;\r\n            tex.event(\"reload\");\r\n            if (tex._clipCache) {\r\n                tex._clipCache.forEach(t => {\r\n                    t.event(\"reload\");\r\n                    t._sizeGrid = tex._sizeGrid;\r\n                    t._stateNum = tex._stateNum;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            tex = new Texture(tex2D);\r\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\r\n            tex._stateNum = (<any>tex2D)._stateNum;\r\n        }\r\n\r\n        return tex;\r\n    }\r\n\r\n    load(task: ILoadTask) {\r\n        let tex2D = <Texture2D>task.loader.getRes(task.url, Loader.TEXTURE2D);\r\n        if (!tex2D || tex2D.obsolute) {\r\n            let url: ILoadURL = { url: task.url, type: Loader.TEXTURE2D };\r\n\r\n            if (!task.options.propertyParams)\r\n                url.propertyParams = propertyParams2d;\r\n            else if (task.options.propertyParams.premultiplyAlpha == null)\r\n                url.propertyParams = Object.assign({}, propertyParams2d, task.options.propertyParams);\r\n\r\n            if (!task.options.constructParams)\r\n                url.constructParams = constructParams2d;\r\n            else if (task.options.constructParams[5] == null)\r\n                url.constructParams = Object.assign([], constructParams2d, task.options.constructParams);\r\n            return task.loader.load(url, task.options, task.progress.createCallback()).then(tex2D => {\r\n                return this.wrapTex2D(task, tex2D);\r\n            });\r\n        }\r\n        else\r\n            return Promise.resolve(this.wrapTex2D(task, tex2D));\r\n    }\r\n}\r\n\r\nconst compressedFormats = [\"ktx\", \"pvr\", \"dds\", \"hdr\", \"lanit.ls\"];\r\nconst videoFormats = [\"mp4\", \"webm\"];\r\n\r\nLoader.registerLoader([\"tga\", \"tif\", \"tiff\", \"png\", \"jpg\", \"jpeg\", \"rendertexture\", ...videoFormats, ...compressedFormats], TextureLoader, Loader.IMAGE);\r\nLoader.registerLoader([], Texture2DLoader, Loader.TEXTURE2D);\r\nLoader.registerLoader([\"rendertexture\"], RenderTextureLoader, Loader.TEXTURE2D);\r\nLoader.registerLoader(videoFormats, VideoTextureLoader, Loader.TEXTURE2D);","import { AnimationClip2D } from \"../components/AnimationClip2D\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\n\r\nclass AnimationClip2DLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return AnimationClip2D._parse(data);\r\n        });\r\n    }\r\n}\r\nLoader.registerLoader([\"mc\"], AnimationClip2DLoader);","import { AnimatorController2D } from \"../components/AnimatorController2D\";\r\nimport { TypeAnimatorState } from \"../components/AnimatorControllerParse\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\n\r\nclass AnimationController2DLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            let ret = new AnimatorController2D(data);\r\n            if (ret.data && ret.data.controllerLayers) {\r\n                let layers = ret.data.controllerLayers;\r\n                let promises: Array<any> = [];\r\n                for (let i = layers.length - 1; i >= 0; i--) {\r\n                    let states = layers[i].states;\r\n                    this.loadStates(states, promises, task);\r\n\r\n                }\r\n                return Promise.all(promises).then(() => ret);\r\n            }\r\n            else\r\n                return ret;\r\n        });\r\n    }\r\n\r\n\r\n    loadStates(states: TypeAnimatorState[], promises: Array<any>, task: ILoadTask) {\r\n        let basePath = URL.getPath(task.url);\r\n        for (let j = states.length - 1; j >= 0; j--) {\r\n            if (states[j].clip && states[j].clip._$uuid) {\r\n                let url = URL.getResURLByUUID(states[j].clip._$uuid);\r\n                if (!url.startsWith(\"res://\"))\r\n                    url = URL.join(basePath, url);\r\n                promises.push(task.loader.load(url).then(res => {\r\n                    states[j].clip = res;\r\n                }));\r\n\r\n                // promises.push(task.loader.load(\"res://\" + states[j].clip._$uuid).then(res => {\r\n                //     states[j].clip = res;\r\n                // }));\r\n            }\r\n\r\n            if (states[j].states) {\r\n                this.loadStates(states[j].states, promises, task);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"mcc\"], AnimationController2DLoader);","import { ILoadTask, IResourceLoader, Loader } from \"../net/Loader\";\r\n\r\nexport class NullLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return Promise.resolve(null);\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lighting\"], NullLoader);","import { BitmapFont } from \"../display/BitmapFont\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nclass BitmapFontLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let picUrl = Utils.replaceFileExtension(task.url, \"png\");\r\n        return Promise.all([\r\n            task.loader.fetch(task.url, \"xml\", task.progress.createCallback(0.2), task.options),\r\n            task.loader.load(picUrl, task.options, task.progress.createCallback(0.8))\r\n        ]).then(([xml, tex]) => {\r\n            if (!xml || !tex)\r\n                return null;\r\n\r\n            let font = new BitmapFont();\r\n            font.parseFont(xml, tex);\r\n\r\n            return font;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"fnt\"], BitmapFontLoader, Loader.FONT);","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nconst testString = \"LayaTTFFont\";\r\n\r\nclass TTFFontLoader implements IResourceLoader {\r\n\r\n    load(task: ILoadTask) {\r\n        let fontName = Utils.replaceFileExtension(Utils.getBaseName(task.url), \"\");\r\n        if (LayaEnv.isConch) {\r\n            return task.loader.fetch(task.url, \"arraybuffer\").then(data => {\r\n                if (data)\r\n                    (window as any)[\"conch\"].registerFont(fontName, data);\r\n                return { family: fontName };\r\n            });\r\n        }\r\n        else if ((window as any).FontFace) {\r\n            let fontFace: any = new (window as any).FontFace(fontName, \"url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"')\");\r\n            (document as any).fonts.add(fontFace);\r\n            return fontFace.load().then(() => {\r\n                return fontFace;\r\n            });\r\n        }\r\n        else {\r\n            let fontTxt = \"40px \" + fontName;\r\n            let txtWidth = Browser.measureText(testString, fontTxt).width;\r\n\r\n            let fontStyle: any = Browser.createElement(\"style\");\r\n            fontStyle.type = \"text/css\";\r\n            document.body.appendChild(fontStyle);\r\n            fontStyle.textContent = \"@font-face { font-family:'\" + fontName + \"'; src:url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"');}\";\r\n\r\n            return new Promise((resolve) => {\r\n                let checkComplete = () => {\r\n                    if (Browser.measureText(testString, fontTxt).width != txtWidth)\r\n                        complete();\r\n                };\r\n                let complete = () => {\r\n                    ILaya.systemTimer.clear(this, checkComplete);\r\n                    ILaya.systemTimer.clear(this, complete);\r\n\r\n                    resolve({ family: fontName });\r\n                };\r\n\r\n                ILaya.systemTimer.once(10000, this, complete);\r\n                ILaya.systemTimer.loop(20, this, checkComplete);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"ttf\", \"woff\", \"woff2\", \"otf\"], TTFFontLoader, Loader.TTF);","import { Vector3 } from \"../../maths/Vector3\";\r\nimport { BlendEquationSeparate } from \"../RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../RenderEnum/CullMode\";\r\nimport { StencilOperation } from \"../RenderEnum/StencilOperation\";\r\n\r\n\r\n\r\n/**\r\n * <code>RenderState</code> 类用于控制渲染状态。\r\n */\r\nexport class RenderState {\r\n\t/**剔除枚举_不剔除。*/\r\n\tstatic CULL_NONE: number = CullMode.Off;\r\n\t/**剔除枚举_剔除正面。*/\r\n\tstatic CULL_FRONT: number = CullMode.Front;\r\n\t/**剔除枚举_剔除背面。*/\r\n\tstatic CULL_BACK: number = CullMode.Back;\r\n\r\n\t/**混合枚举_禁用。*/\r\n\tstatic BLEND_DISABLE: number = BlendType.BLEND_DISABLE;\r\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\r\n\tstatic BLEND_ENABLE_ALL: number = BlendType.BLEND_ENABLE_ALL;\r\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\r\n\tstatic BLEND_ENABLE_SEPERATE: number = BlendType.BLEND_ENABLE_SEPERATE;\r\n\r\n\t/**混合参数枚举_零,例：RGB(0,0,0),Alpha:(1)。*/\r\n\tstatic BLENDPARAM_ZERO: number = BlendFactor.Zero;\r\n\t/**混合参数枚举_一,例：RGB(1,1,1),Alpha:(1)。*/\r\n\tstatic BLENDPARAM_ONE: number = BlendFactor.One;\r\n\t/**混合参数枚举_源颜色,例：RGB(Rs, Gs, Bs)，Alpha(As)。*/\r\n\tstatic BLENDPARAM_SRC_COLOR: number = BlendFactor.SourceColor;\r\n\t/**混合参数枚举_一减源颜色,例：RGB(1-Rs, 1-Gs, 1-Bs)，Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_SRC_COLOR: number = BlendFactor.OneMinusSourceColor;\r\n\t/**混合参数枚举_目标颜色,例：RGB(Rd, Gd, Bd),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_DST_COLOR: number = BlendFactor.DestinationColor;\r\n\t/**混合参数枚举_一减目标颜色,例：RGB(1-Rd, 1-Gd, 1-Bd)，Alpha(1-Ad)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_DST_COLOR: number = BlendFactor.OneMinusDestinationColor;\r\n\t/**混合参数枚举_源透明,例:RGB(As, As, As),Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_SRC_ALPHA: number = BlendFactor.SourceAlpha;\r\n\t/**混合参数枚举_一减源阿尔法,例:RGB(1-As, 1-As, 1-As),Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_SRC_ALPHA: number = BlendFactor.OneMinusSourceAlpha;\r\n\t/**混合参数枚举_目标阿尔法，例：RGB(Ad, Ad, Ad),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_DST_ALPHA: number = BlendFactor.DestinationAlpha;\r\n\t/**混合参数枚举_一减目标阿尔法,例：RGB(1-Ad, 1-Ad, 1-Ad),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_DST_ALPHA: number = BlendFactor.OneMinusDestinationAlpha;\r\n\t/**混合参数枚举_阿尔法饱和，例：RGB(min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad)),Alpha(1)。*/\r\n\tstatic BLENDPARAM_SRC_ALPHA_SATURATE: number = BlendFactor.SourceAlphaSaturate;\r\n\t/**混合参数枚举_混合设置颜色 */\r\n\tstatic BLENDPARAM_BLENDCOLOR: number = BlendFactor.BlendColor;\r\n\t/**很合参数枚举_混合颜色取反 */\r\n\tstatic BLENDPARAM_BLEND_ONEMINUS_COLOR: number = BlendFactor.OneMinusBlendColor;\r\n\r\n\t/**混合方程枚举_加法,例：source + destination*/\r\n\tstatic BLENDEQUATION_ADD: number = BlendEquationSeparate.ADD;\r\n\t/**混合方程枚举_减法，例：source - destination*/\r\n\tstatic BLENDEQUATION_SUBTRACT: number = BlendEquationSeparate.SUBTRACT;\r\n\t/**混合方程枚举_反序减法，例：destination - source*/\r\n\tstatic BLENDEQUATION_REVERSE_SUBTRACT: number = BlendEquationSeparate.REVERSE_SUBTRACT;\r\n\t/**混合方程枚举_取最小 TODO */\r\n\tstatic BLENDEQUATION_MIN: number = BlendEquationSeparate.MIN;\r\n\t/**混合方程枚举_取最大 TODO*/\r\n\tstatic BLENDEQUATION_MAX: number = BlendEquationSeparate.MAX;\r\n\r\n\t/**深度测试函数枚举_关闭深度测试。*/\r\n\tstatic DEPTHTEST_OFF: number = CompareFunction.Off;/*WebGLContext.NEVER*/;//TODO:什么鬼\r\n\t/**深度测试函数枚举_从不通过。*/\r\n\tstatic DEPTHTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\r\n\t/**深度测试函数枚举_小于时通过。*/\r\n\tstatic DEPTHTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\r\n\t/**深度测试函数枚举_等于时通过。*/\r\n\tstatic DEPTHTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\r\n\t/**深度测试函数枚举_小于等于时通过。*/\r\n\tstatic DEPTHTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\r\n\t/**深度测试函数枚举_大于时通过。*/\r\n\tstatic DEPTHTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\r\n\t/**深度测试函数枚举_不等于时通过。*/\r\n\tstatic DEPTHTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\r\n\t/**深度测试函数枚举_大于等于时通过。*/\r\n\tstatic DEPTHTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\r\n\t/**深度测试函数枚举_总是通过。*/\r\n\tstatic DEPTHTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\r\n\r\n\r\n\tstatic STENCILTEST_OFF: number = CompareFunction.Off;\r\n\t/**深度测试函数枚举_从不通过。*/\r\n\tstatic STENCILTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\r\n\t/**深度测试函数枚举_小于时通过。*/\r\n\tstatic STENCILTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\r\n\t/**深度测试函数枚举_等于时通过。*/\r\n\tstatic STENCILTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\r\n\t/**深度测试函数枚举_小于等于时通过。*/\r\n\tstatic STENCILTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\r\n\t/**深度测试函数枚举_大于时通过。*/\r\n\tstatic STENCILTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\r\n\t/**深度测试函数枚举_不等于时通过。*/\r\n\tstatic STENCILTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\r\n\t/**深度测试函数枚举_大于等于时通过。*/\r\n\tstatic STENCILTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\r\n\t/**深度测试函数枚举_总是通过。*/\r\n\tstatic STENCILTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\r\n\t/**保持当前值*/\r\n\tstatic STENCILOP_KEEP: number = StencilOperation.Keep;\r\n\t/**将模板缓冲区值设置为0*/\r\n\tstatic STENCILOP_ZERO: number = StencilOperation.Zero;\r\n\t/**将模具缓冲区值设置为指定的参考值*/\r\n\tstatic STENCILOP_REPLACE: number = StencilOperation.Replace;\r\n\t/**增加当前模具缓冲区值+1 */\r\n\tstatic STENCILOP_INCR: number = StencilOperation.IncrementSaturate;\r\n\t/**增加当前模具缓冲区值,超过最大值的时候循环*/\r\n\tstatic STENCILOP_INCR_WRAP: number = StencilOperation.IncrementWrap;\r\n\t/**递减当前模板缓冲区的值*/\r\n\tstatic STENCILOP_DECR: number = StencilOperation.DecrementSaturate;\r\n\t/**递减当前模板缓冲去的值，小于0时会循环*/\r\n\tstatic STENCILOP_DECR_WRAP: number = StencilOperation.DecrementWrap;\r\n\t/**按位反转当前的模板缓冲区的值*/\r\n\tstatic STENCILOP_INVERT: number = StencilOperation.Invert;\r\n\r\n\t/** @internal */\r\n\tstatic readonly Default: Readonly<RenderState> = new RenderState();\r\n\r\n\t/**渲染剔除状态。*/\r\n\tcull: number;\r\n\t/**透明混合。*/\r\n\tblend: number;\r\n\t/**源混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\r\n\tsrcBlend: number;\r\n\t/**目标混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\r\n\tdstBlend: number;\r\n\t/**RGB源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tsrcBlendRGB: number;\r\n\t/**RGB目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tdstBlendRGB: number;\r\n\t/**Alpha源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tsrcBlendAlpha: number;\r\n\t/**Alpha目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tdstBlendAlpha: number;\r\n\t/**混合方程。*/\r\n\tblendEquation: number;\r\n\t/**RGB混合方程。*/\r\n\tblendEquationRGB: number;\r\n\t/**Alpha混合方程。*/\r\n\tblendEquationAlpha: number;\r\n\t/**深度测试函数。*/\r\n\tdepthTest: number;\r\n\t/**是否深度测试。*/\r\n\tdepthWrite: boolean;\r\n\t/**是否模板写入 */\r\n\tstencilWrite: boolean;\r\n\t/**是否开启模板测试 */\r\n\tstencilTest: number;\r\n\t/**模板值 一般会在0-255*/\r\n\tstencilRef: number;\r\n\t/**模板设置值 */\r\n\tstencilOp: Vector3;\r\n\r\n\t/**\r\n\t * 创建一个 <code>RenderState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\tthis.srcBlend = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlend = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.srcBlendRGB = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlendRGB = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.srcBlendAlpha = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlendAlpha = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.blendEquation = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.depthTest = RenderState.DEPTHTEST_LEQUAL;\r\n\t\tthis.depthWrite = true;\r\n\t\tthis.stencilRef = 1;\r\n\t\tthis.stencilTest = RenderState.STENCILTEST_OFF;\r\n\t\tthis.stencilWrite = false;\r\n\t\tthis.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tsetNull() {\r\n\t\tthis.cull = null;\r\n\t\tthis.blend = null;\r\n\t\tthis.srcBlend = null;\r\n\t\tthis.dstBlend = null;\r\n\t\tthis.srcBlendRGB = null;\r\n\t\tthis.dstBlendRGB = null;\r\n\t\tthis.srcBlendAlpha = null;\r\n\t\tthis.dstBlendAlpha = null;\r\n\t\tthis.blendEquation = null;\r\n\t\tthis.blendEquationRGB = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\tthis.depthTest = null;\r\n\t\tthis.depthWrite = null;\r\n\t\tthis.stencilRef = null;\r\n\t\tthis.stencilTest = null;\r\n\t\tthis.stencilWrite = null;\r\n\t\tthis.stencilOp.set(null, null, null);\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆\r\n\t * @param dest \r\n\t */\r\n\tcloneTo(dest: RenderState) {\r\n\t\tdest.cull = this.cull;\r\n\t\tdest.blend = this.blend;\r\n\t\tdest.srcBlend = this.srcBlend;\r\n\t\tdest.dstBlend = this.dstBlend;\r\n\t\tdest.srcBlendRGB = this.srcBlendRGB;\r\n\t\tdest.dstBlendRGB = this.dstBlendRGB;\r\n\t\tdest.srcBlendAlpha = this.srcBlendAlpha;\r\n\t\tdest.dstBlendAlpha = this.dstBlendAlpha;\r\n\t\tdest.blendEquation = this.blendEquation;\r\n\t\tdest.blendEquationRGB = this.blendEquationRGB;\r\n\t\tdest.blendEquationAlpha = this.blendEquationAlpha;\r\n\t\tdest.depthTest = this.depthTest;\r\n\t\tdest.depthWrite = this.depthWrite;\r\n\t\tdest.stencilRef = this.stencilRef;\r\n\t\tdest.stencilTest = this.stencilTest;\r\n\t\tdest.stencilWrite = this.stencilWrite;\r\n\t\tthis.stencilOp.cloneTo(dest.stencilOp);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): RenderState {\r\n\t\tvar dest: RenderState = new RenderState();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { UniformBufferObject } from \"./UniformBufferObject\";\r\n\r\n/**\r\n * 管理\r\n */\r\nexport class UniformBufferBase {\r\n    /**@internal */\r\n    _singgle: boolean;\r\n    /**@internal */\r\n    _mapArray: UniformBufferObject[];\r\n    /**@internal bind pointer*/\r\n    _glPointerID: number;\r\n    /**@internal ubo name*/\r\n    _blockName: string;\r\n    /**@internal */\r\n    _curUniformBuffer:UniformBufferObject;\r\n    /**\r\n     * 实例化一个UBOBase\r\n     * @internal\r\n     * @param name \r\n     * @param pointer \r\n     * @param single \r\n     */\r\n    constructor(name: string, pointer: number, single: boolean) {\r\n        this._mapArray = [];\r\n        this._blockName = name;\r\n        this._singgle = single;\r\n        this._glPointerID = pointer;\r\n    }\r\n\r\n    /**\r\n     * 增加Buffer\r\n     * @internal\r\n     * @param buffer \r\n     */\r\n    add(buffer: UniformBufferObject) {\r\n        let index = this._mapArray.indexOf(buffer);\r\n        if (index == -1)\r\n            this._mapArray.push(buffer);\r\n    }\r\n\r\n    /**\r\n     * 移除Buffer\r\n     * @internal\r\n     * @param buffer \r\n     */\r\n    splitBuffer(buffer: UniformBufferObject) {\r\n        let index = this._mapArray.indexOf(buffer);\r\n        if (index != -1)\r\n            this._mapArray.splice(index, 1);\r\n    }\r\n}","import { BufferUsage, BufferTargetType } from \"./RenderEnum/BufferTargetType\";\r\nimport { SubUniformBufferData } from \"./SubUniformBufferData\";\r\nimport { UniformBufferBase } from \"./UniformBufferBase\";\r\nimport { UnifromBufferData } from \"./UniformBufferData\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n/**\r\n * 类封装WebGL2UniformBufferObect\r\n */\r\nexport class UniformBufferObject extends Buffer {\r\n    static UBONAME_SCENE = \"SceneUniformBlock\";\r\n    static UBONAME_CAMERA = \"CameraUniformBlock\";\r\n    static UBONAME_SPRITE3D = \"SpriteUniformBlock\";\r\n    static UBONAME_SHADOW = \"ShadowUniformBlock\";\r\n    private static commonMap: string[] = [\"CameraUniformBlock\", \"SceneUniformBlock\", \"SpriteUniformBlock\", \"ShadowUniformBlock\"]\r\n\r\n    /**@internal */\r\n    private static _Map: Map<string, UniformBufferBase> = new Map<string, UniformBufferBase>();\r\n\r\n    /**\r\n     * create Uniform Buffer Base\r\n     * @param name Uniform block name(must pitch Shader)\r\n     * @param bufferUsage config usage\r\n     * @param bytelength byte length\r\n     * @returns \r\n     */\r\n    static create(name: string, bufferUsage: number, bytelength: number, isSingle: boolean = false) {\r\n        if (!UniformBufferObject._Map.get(name)) {\r\n            UniformBufferObject._Map.set(name, new UniformBufferBase(name, LayaGL.renderEngine.getUBOPointer(name), isSingle));\r\n        }\r\n        let bufferBase = UniformBufferObject._Map.get(name);\r\n        if (bufferBase._singgle && bufferBase._mapArray.length > 0) {\r\n            return null;\r\n        } else {\r\n            let ubo = LayaGL.renderOBJCreate.createUniformBufferObject(bufferBase._glPointerID, name, bufferUsage, bytelength, isSingle);\r\n            if(bufferBase._singgle) bufferBase.add(ubo);\r\n            return ubo;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Uniform Buffer by name\r\n     * @param name Uniform block name(must pitch Shader)\r\n     * @returns \r\n     */\r\n    static getBuffer(name: string, index: number) {\r\n        let base = UniformBufferObject._Map.get(name);\r\n        if (!base)\r\n            return null;\r\n        return base._mapArray[index];\r\n    }\r\n\r\n    /**@interanl */\r\n    _glPointer: number;\r\n\r\n    /**@internal */\r\n    _updateDataInfo: UnifromBufferData;\r\n\r\n    /**@internal */\r\n    _isSingle: boolean = false;\r\n\r\n    /**buffer name */\r\n    _name: string;\r\n\r\n    /**all byte length */\r\n    byteLength: number;\r\n\r\n    /**\r\n     * @interanl\r\n     */\r\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\r\n        super(BufferTargetType.UNIFORM_BUFFER,bufferUsage);\r\n        this._glPointer = glPointer;\r\n        this.byteLength = byteLength;\r\n        this._name = name;\r\n        this._isSingle = isSingle;\r\n        this.bind();\r\n        if (this._isSingle)\r\n            this._bindUniformBufferBase();\r\n        this._glBuffer.setDataLength(this.byteLength);\r\n    }\r\n\r\n    /**\r\n     * differcnt UBO bind Point\r\n     * @internal\r\n     */\r\n    _bindUniformBufferBase() {\r\n        // const base = UniformBufferObject._Map.get(this._name);\r\n        // if (base._curUniformBuffer != this) {\r\n            this._glBuffer.bindBufferBase(this._glPointer);\r\n            //base._curUniformBuffer = this;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 绑定一段\r\n     * @internal\r\n     */\r\n    _bindBufferRange(offset: number, byteCount: number) {\r\n        this.bind();\r\n        this._glBuffer.bindBufferRange(this._glPointer,offset,byteCount);\r\n        //gl.bindBufferRange(gl.UNIFORM_BUFFER, this._glPointer, this._glBuffer, offset, byteCount);\r\n    }\r\n\r\n    /**\r\n     * 重置buffer长度\r\n     * @param bytelength \r\n     */\r\n    _reset(bytelength: number) {\r\n        \r\n        //destroy\r\n        if (this._glBuffer) {\r\n            this._glBuffer.destroy();\r\n            this._glBuffer = null;\r\n        }\r\n        //create new\r\n        this._byteLength = this.byteLength = bytelength;\r\n        this._glBuffer = LayaGL.renderEngine.createBuffer(this._bufferType,this._bufferUsage);\r\n        if (this._isSingle)\r\n            this._bindUniformBufferBase();\r\n        this._glBuffer.setDataLength(this.byteLength);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    bind(): boolean {\r\n       return this._glBuffer.bindBuffer();\r\n    }\r\n\r\n    /**\r\n     * set UniformBuffer data by UniformBufferData\r\n     * @param buffer Float32Array data\r\n     * @param bufferOffset byteOffset\r\n     * @param byteCount  byteCount\r\n     * @returns \r\n     */\r\n    setData(buffer: Float32Array, bufferOffset: number = 0, byteCount: number = Number.MAX_SAFE_INTEGER): void {\r\n        if (byteCount < 0) return;\r\n        this.bind();\r\n        var needSubData: boolean = !(bufferOffset == 0 && byteCount == this.byteLength);\r\n        if (needSubData) {\r\n            var subData: Uint8Array = new Uint8Array(buffer.buffer, bufferOffset, byteCount);\r\n            //bufferSubData(this._bufferType, bufferOffset, subData);\r\n            this._glBuffer.setData(subData,bufferOffset);\r\n        }\r\n        else {\r\n            // let gl = (LayaGL.instance as WebGL2RenderingContext);                                                 \r\n            // gl.bufferSubData(this._bufferType, bufferOffset, buffer, 0, buffer.length);\r\n            this._glBuffer.setDataEx(buffer,bufferOffset,buffer.length);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set UniformBuffer data by UniformBufferData\r\n     * @param bufferData \r\n     */\r\n    setDataByUniformBufferData(bufferData: UnifromBufferData) {\r\n        if (this._updateDataInfo == bufferData) {\r\n            this.setData(bufferData._buffer, bufferData._updateFlag.x * 4, (bufferData._updateFlag.y - bufferData._updateFlag.x) * 4);\r\n            bufferData._resetUpdateFlag();\r\n        } else {\r\n            this.setData(bufferData._buffer, 0, this.byteLength);\r\n            bufferData._resetUpdateFlag();\r\n            this._updateDataInfo = bufferData;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set Data by subUniformBufferData\r\n     * @param bufferData sub UniformBufferData\r\n     * @param offset \r\n     */\r\n    setDataByByUniformBufferDataOffset(bufferData: SubUniformBufferData, offset: number) {\r\n        let datalength = bufferData.getbyteLength();//offset\r\n        let reallength = bufferData._realByte;//update Count\r\n        bufferData._resetUpdateFlag();\r\n        //let gl = (LayaGL.instance as WebGL2RenderingContext);\r\n        this.bind();\r\n        //gl.bufferSubData(this._bufferType, offset * datalength, bufferData._buffer, 0, reallength / 4);\r\n        this._glBuffer.setDataEx(bufferData._buffer,offset * datalength,reallength / 4);\r\n    }\r\n\r\n    /**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tsuper.destroy();\r\n\t}\r\n}","import { Config } from \"../../Config\";\r\nimport { Config3D } from \"../../Config3D\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { BufferUsage } from \"../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { DefineDatas } from \"../RenderEngine/RenderShader/DefineDatas\";\r\nimport { RenderState } from \"../RenderEngine/RenderShader/RenderState\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderData, ShaderDataType, ShaderDataItem, ShaderDataDefaultValue } from \"../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { UniformBufferObject } from \"../RenderEngine/UniformBufferObject\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Resource } from \"./Resource\";\r\nimport { Event } from \"../events/Event\";\r\n\r\n\r\nexport enum MaterialRenderMode {\r\n    /**渲染状态_不透明。*/\r\n    RENDERMODE_OPAQUE,\r\n    /**渲染状态_阿尔法测试。*/\r\n    RENDERMODE_CUTOUT,\r\n    /**渲染状态__透明。*/\r\n    RENDERMODE_TRANSPARENT,\r\n    /**渲染状态__加色法混合。*/\r\n    RENDERMODE_ADDTIVE,\r\n    /**渲染状态_透明混合。*/\r\n    RENDERMODE_ALPHABLENDED,\r\n    /**渲染状态_自定义 */\r\n    RENDERMODE_CUSTOME\r\n}\r\n\r\n/**\r\n * <code>Material</code> 类用于创建材质。\r\n */\r\nexport class Material extends Resource implements IClone {\r\n    /** 渲染队列_不透明。*/\r\n    static RENDERQUEUE_OPAQUE: number = 2000;\r\n    /** 渲染队列_阿尔法裁剪。*/\r\n    static RENDERQUEUE_ALPHATEST: number = 2450;\r\n    /** 渲染队列_透明。*/\r\n    static RENDERQUEUE_TRANSPARENT: number = 3000;\r\n\r\n    /**着色器变量,透明测试值。*/\r\n    static ALPHATESTVALUE: number;\r\n\r\n    /**材质级着色器宏定义,透明测试。*/\r\n    static SHADERDEFINE_ALPHATEST: ShaderDefine;\r\n    static SHADERDEFINE_MAINTEXTURE: ShaderDefine;\r\n    static SHADERDEFINE_ADDTIVEFOG: ShaderDefine;\r\n    /**\r\n     * 加载材质。\r\n     * @param url 材质地址。\r\n     * @param complete 完成回掉。\r\n     */\r\n    static load(url: string, complete: Handler): void {\r\n        ILaya.loader.load(url, complete, null, Loader.MATERIAL);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __initDefine__(): void {\r\n        Material.SHADERDEFINE_ALPHATEST = Shader3D.getDefineByName(\"ALPHATEST\");\r\n        Material.SHADERDEFINE_MAINTEXTURE = Shader3D.getDefineByName(\"MAINTEXTURE\");\r\n        Material.SHADERDEFINE_ADDTIVEFOG = Shader3D.getDefineByName(\"ADDTIVEFOG\");\r\n        Material.ALPHATESTVALUE = Shader3D.propertyNameToID(\"u_AlphaTestValue\");\r\n        Shader3D.CULL = Shader3D.propertyNameToID(\"s_Cull\");\r\n        Shader3D.BLEND = Shader3D.propertyNameToID(\"s_Blend\");\r\n        Shader3D.BLEND_SRC = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n        Shader3D.BLEND_DST = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n        Shader3D.BLEND_SRC_RGB = Shader3D.propertyNameToID(\"s_BlendSrcRGB\");\r\n        Shader3D.BLEND_DST_RGB = Shader3D.propertyNameToID(\"s_BlendDstRGB\");\r\n        Shader3D.BLEND_SRC_ALPHA = Shader3D.propertyNameToID(\"s_BlendSrcAlpha\");\r\n        Shader3D.BLEND_DST_ALPHA = Shader3D.propertyNameToID(\"s_BlendDstAlpha\");\r\n        Shader3D.BLEND_EQUATION = Shader3D.propertyNameToID(\"s_BlendEquation\");\r\n        Shader3D.BLEND_EQUATION_RGB = Shader3D.propertyNameToID(\"s_BlendEquationRGB\");\r\n        Shader3D.BLEND_EQUATION_ALPHA = Shader3D.propertyNameToID(\"s_BlendEquationAlpha\");\r\n        Shader3D.DEPTH_TEST = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n        Shader3D.DEPTH_WRITE = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n        Shader3D.STENCIL_Ref = Shader3D.propertyNameToID(\"s_StencilRef\");\r\n        Shader3D.STENCIL_TEST = Shader3D.propertyNameToID(\"s_StencilTest\");\r\n        Shader3D.STENCIL_WRITE = Shader3D.propertyNameToID(\"s_StencilWrite\");\r\n        Shader3D.STENCIL_Op = Shader3D.propertyNameToID(\"s_StencilOp\");\r\n    }\r\n\r\n    /**@internal */\r\n    private _matRenderNode: MaterialRenderMode;\r\n    /** @internal */\r\n    _shader: Shader3D;\r\n    /** @private */\r\n    _shaderValues: ShaderData | null;//TODO:剥离贴图ShaderValue\r\n    /** 所属渲染队列. */\r\n    renderQueue: number;\r\n\r\n    /**\r\n     * 着色器数据。\r\n     */\r\n    get shaderData(): ShaderData {\r\n        return this._shaderValues;\r\n    }\r\n\r\n    /**\r\n     * 透明测试模式裁剪值。\r\n     */\r\n    get alphaTestValue(): number {\r\n        return this._shaderValues.getNumber(Material.ALPHATESTVALUE);\r\n    }\r\n\r\n    set alphaTestValue(value: number) {\r\n        this._shaderValues.setNumber(Material.ALPHATESTVALUE, value);\r\n    }\r\n\r\n    /**\r\n     * 是否透明裁剪。\r\n     */\r\n    get alphaTest(): boolean {\r\n        return this.shaderData.hasDefine(Material.SHADERDEFINE_ALPHATEST);\r\n    }\r\n\r\n    set alphaTest(value: boolean) {\r\n        if (value)\r\n            this._shaderValues.addDefine(Material.SHADERDEFINE_ALPHATEST);\r\n        else\r\n            this._shaderValues.removeDefine(Material.SHADERDEFINE_ALPHATEST);\r\n    }\r\n\r\n    /**\r\n     * 增加Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    addDefine(define: ShaderDefine): void {\r\n        this._shaderValues.addDefine(define);\r\n    }\r\n\r\n    /**\r\n     * 移除Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    removeDefine(define: ShaderDefine): void {\r\n        this._shaderValues.removeDefine(define);\r\n    }\r\n\r\n    /**\r\n     * 开启 或 关闭 shader 宏定义\r\n     * @param define \r\n     * @param value true: addDefine, false: removeDefine\r\n     */\r\n    setDefine(define: ShaderDefine, value: boolean) {\r\n        if (value) {\r\n            this._shaderValues.addDefine(define);\r\n        }\r\n        else {\r\n            this._shaderValues.removeDefine(define);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否包含Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    hasDefine(define: ShaderDefine): boolean {\r\n        return this._shaderValues.hasDefine(define);\r\n    }\r\n\r\n    /**\r\n     * 是否写入深度。\r\n     */\r\n    get depthWrite(): boolean {\r\n        return this._shaderValues.getBool(Shader3D.DEPTH_WRITE);\r\n    }\r\n\r\n    set depthWrite(value: boolean) {\r\n        this._shaderValues.setBool(Shader3D.DEPTH_WRITE, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * 剔除方式。\r\n     */\r\n    get cull(): number {\r\n        return this._shaderValues.getInt(Shader3D.CULL);\r\n    }\r\n\r\n    set cull(value: number) {\r\n        this._shaderValues.setInt(Shader3D.CULL, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方式。\r\n     */\r\n    get blend(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND);\r\n    }\r\n\r\n    set blend(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * 混合源。\r\n     */\r\n    get blendSrc(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC);\r\n    }\r\n\r\n    set blendSrc(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC, value);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 混合目标。\r\n     */\r\n    get blendDst(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST);\r\n    }\r\n\r\n    set blendDst(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST, value);\r\n    }\r\n\r\n    /**\r\n     * 混合目标 alpha\r\n     */\r\n    public get blendSrcAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC_ALPHA);\r\n    }\r\n    public set blendSrcAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * 混合原 RGB\r\n     */\r\n    public get blendSrcRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC_RGB);\r\n    }\r\n    /**\r\n     * 混合原 RGB\r\n     */\r\n    public set blendSrcRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC_RGB, value);\r\n    }\r\n\r\n    public get blendDstRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST_RGB);\r\n    }\r\n    public set blendDstRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST_RGB, value);\r\n    }\r\n\r\n    /**\r\n     * 混合目标 alpha\r\n     */\r\n    public get blendDstAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST_ALPHA);\r\n    }\r\n    public set blendDstAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方程\r\n     */\r\n    public get blendEquation(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION);\r\n    }\r\n    public set blendEquation(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方式 RGB\r\n     */\r\n    public get blendEquationRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION_RGB);\r\n    }\r\n    public set blendEquationRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION_RGB, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方式 Alpha\r\n     */\r\n    public get blendEquationAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION_ALPHA);\r\n    }\r\n    public set blendEquationAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * 深度测试方式。\r\n     */\r\n    get depthTest(): number {\r\n        return this._shaderValues.getInt(Shader3D.DEPTH_TEST);\r\n    }\r\n\r\n    set depthTest(value: number) {\r\n        this._shaderValues.setInt(Shader3D.DEPTH_TEST, value);\r\n    }\r\n\r\n    /**\r\n     * 模板测试方式\r\n     */\r\n    get stencilTest(): number {\r\n        return this._shaderValues.getInt(Shader3D.STENCIL_TEST);\r\n    }\r\n\r\n    set stencilTest(value: number) {\r\n        this._shaderValues.setInt(Shader3D.STENCIL_TEST, value);\r\n    }\r\n\r\n    /**\r\n     * 是否写入模板。\r\n     */\r\n    get stencilWrite(): boolean {\r\n        return this._shaderValues.getBool(Shader3D.STENCIL_WRITE);\r\n    }\r\n\r\n    set stencilWrite(value: boolean) {\r\n        this._shaderValues.setBool(Shader3D.STENCIL_WRITE, value);\r\n    }\r\n\r\n    /**\r\n     * 写入模板值\r\n     */\r\n    set stencilRef(value: number) {\r\n        this._shaderValues.setInt(Shader3D.STENCIL_Ref, value);\r\n    }\r\n\r\n    get stencilRef(): number {\r\n        return this._shaderValues.getInt(Shader3D.STENCIL_Ref);\r\n    }\r\n\r\n    /** */\r\n    /**\r\n     * 写入模板测试设置\r\n     * vector(fail, zfail, zpass)\r\n     */\r\n    set stencilOp(value: Vector3) {\r\n        this._shaderValues.setVector3(Shader3D.STENCIL_Op, value);\r\n    }\r\n\r\n    get stencilOp(): Vector3 {\r\n        return this._shaderValues.getVector3(Shader3D.STENCIL_Op);\r\n    }\r\n\r\n    /**\r\n     * 获得材质属性\r\n     */\r\n    get MaterialProperty(): any {\r\n        let propertyMap: any = {};\r\n        var shaderValues = this._shaderValues.getData();\r\n        for (let key in shaderValues) {\r\n            propertyMap[LayaGL.renderEngine.propertyIDToName(parseInt(key))] = shaderValues[key];\r\n        }\r\n        return propertyMap;\r\n    }\r\n\r\n    /**\r\n     * 获得材质宏\r\n     */\r\n    get MaterialDefine(): Array<string> {\r\n        let shaderDefineArray = new Array<string>();\r\n        let defineData = this._shaderValues._defineDatas;\r\n        Shader3D._getNamesByDefineData(defineData, shaderDefineArray);\r\n        return shaderDefineArray;\r\n    }\r\n\r\n    /**\r\n     * 渲染模式。\r\n     */\r\n    set materialRenderMode(value: MaterialRenderMode) {\r\n        this._matRenderNode = value;\r\n        switch (value) {\r\n            case MaterialRenderMode.RENDERMODE_OPAQUE:\r\n                this.alphaTest = false;\r\n                this.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n                this.depthWrite = true;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_DISABLE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_CUTOUT:\r\n                this.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n                this.alphaTest = true;\r\n                this.depthWrite = true;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_DISABLE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_TRANSPARENT:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_ADDTIVE:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_NONE;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                this._shaderValues.addDefine(Material.SHADERDEFINE_ADDTIVEFOG);\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_ALPHABLENDED:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_NONE;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                this._shaderValues.removeDefine(Material.SHADERDEFINE_ADDTIVEFOG);\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_CUSTOME:\r\n                //TODO IDE\r\n                break;\r\n            default:\r\n                console.warn(`Material : renderMode value error - (${value}).`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得材质渲染状态\r\n     */\r\n    get materialRenderMode() {\r\n        return this._matRenderNode;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Material</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._shaderValues = LayaGL.renderOBJCreate.createShaderData(this);\r\n        this.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n        this.alphaTest = false;\r\n        this.cull = RenderState.CULL_BACK;\r\n        this.blend = RenderState.BLEND_DISABLE;\r\n        this.blendSrc = RenderState.BLENDPARAM_ONE;\r\n        this.blendDst = RenderState.BLENDPARAM_ZERO;\r\n        this.blendSrcRGB = RenderState.BLENDPARAM_ONE;\r\n        this.blendDstRGB = RenderState.BLENDPARAM_ZERO;\r\n        this.blendSrcAlpha = RenderState.BLENDPARAM_ONE;\r\n        this.blendDstAlpha = RenderState.BLENDPARAM_ZERO;\r\n        this.blendEquation = RenderState.BLENDEQUATION_ADD;\r\n        this.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\r\n        this.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\r\n        this.depthTest = RenderState.DEPTHTEST_LEQUAL;\r\n        this.depthWrite = true;\r\n        this.stencilRef = 1;\r\n        this.stencilTest = RenderState.STENCILTEST_OFF;\r\n        this.stencilWrite = false;\r\n        this.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\r\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param shader \r\n     * @returns \r\n     */\r\n    private _bindShaderInfo(shader: Shader3D) {\r\n        //update UBOData by Shader\r\n        let subShader = shader.getSubShaderAt(0);//TODO\t\r\n        // ubo\r\n        let shaderUBODatas = subShader._uniformBufferDataMap;\r\n        if (!shaderUBODatas)\r\n            return;\r\n        for (let key of shaderUBODatas.keys()) {\r\n            //create data\r\n            let uboData = shaderUBODatas.get(key).clone();\r\n            //create UBO\r\n            let ubo = UniformBufferObject.create(key, BufferUsage.Dynamic, uboData.getbyteLength(), false);\r\n            this._shaderValues.setUniformBuffer(Shader3D.propertyNameToID(key), ubo);\r\n            this._shaderValues._addCheckUBO(key, ubo, uboData);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 清除UBO\r\n     * @returns \r\n     */\r\n    private _releaseUBOData() {\r\n        if (!this._shaderValues.uniformBufferDatas) {\r\n            return;\r\n        }\r\n        for (let value of this._shaderValues.uniformBufferDatas.values()) {\r\n            value.ubo._updateDataInfo.destroy();\r\n            value.ubo.destroy();\r\n            value.ubo._updateDataInfo = null;\r\n        }\r\n        this._shaderValues.uniformBufferDatas.clear();\r\n        this._shaderValues.uniformBuffersMap.clear();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected _disposeResource(): void {\r\n        this._releaseUBOData();\r\n        this._shaderValues.destroy();\r\n        this._shaderValues = null;\r\n    }\r\n\r\n    get shader() {\r\n        return this._shader;\r\n    }\r\n\r\n    /**\r\n     * get all material uniform property \r\n     * @returns \r\n     */\r\n    effectiveProperty() {\r\n        return this._shader.getSubShaderAt(0)._uniformTypeMap;\r\n    }\r\n\r\n    /**\r\n     * 设置使用Shader名字。\r\n     * @param name 名称。\r\n     */\r\n    setShaderName(name: string): void {\r\n        this._shader = Shader3D.find(name);\r\n        if (!this._shader) {\r\n            //throw new Error(\"Material: unknown shader name.\");\r\n            console.warn(`Material: unknown shader name '${name}'`);\r\n            this._shader = Shader3D.find(\"BLINNPHONG\");\r\n        }\r\n\r\n        if (Config3D._uniformBlock) {\r\n            this._releaseUBOData();\r\n            //bind shader info\r\n            // todo 清理残留 shader data\r\n            this._bindShaderInfo(this._shader);\r\n        }\r\n\r\n        // set default value\r\n        // todo subShader 选择\r\n        let subShader = this._shader.getSubShaderAt(0);\r\n        let defaultValue = subShader._uniformDefaultValue;\r\n        let typeMap = subShader._uniformTypeMap;\r\n        this.applyUniformDefaultValue(typeMap, defaultValue);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    applyUniformDefaultValue(typeMap: Map<string, ShaderDataType>, defaultValue: Record<string, ShaderDataItem>) {\r\n        typeMap.forEach((type, key) => {\r\n            if (defaultValue && defaultValue[key] != undefined) {\r\n                let value = defaultValue[key];\r\n                this.setShaderData(key, type, value);\r\n            }\r\n            else {\r\n                this.setShaderData(key, type, ShaderDataDefaultValue(type));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获得bool属性值\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getBoolByIndex(uniformIndex: number): boolean {\r\n        return this.shaderData.getBool(uniformIndex);\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置bool值\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setBoolByIndex(uniformIndex: number, value: boolean) {\r\n        this.shaderData.setBool(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 活得bool值\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getBool(name: string): boolean {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getBoolByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置bool值\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setBool(name: string, value: boolean) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setBoolByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Float值\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getFloatByIndex(uniformIndex: number): number {\r\n        return this.shaderData.getNumber(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Float值\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setFloatByIndex(uniformIndex: number, value: number) {\r\n        this.shaderData.setNumber(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Float值\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getFloat(name: string): number {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getFloatByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Float值\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setFloat(name: string, value: number) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setFloatByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Int值\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getIntByIndex(uniformIndex: number): number {\r\n        return this.shaderData.getInt(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Int值\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setIntByIndex(uniformIndex: number, value: number) {\r\n        this.shaderData.setInt(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Int值\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getInt(name: string): number {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getIntByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Int值\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setInt(name: string, value: number) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setIntByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector2\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getVector2ByIndex(uniformIndex: number): Vector2 {\r\n        return this.shaderData.getVector2(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector2\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setVector2ByIndex(uniformIndex: number, value: Vector2) {\r\n        this.shaderData.setVector2(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector2\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getVector2(name: string): Vector2 {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector2ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector2\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setVector2(name: string, value: Vector2) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector2ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector3\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getVector3ByIndex(uniformIndex: number): Vector3 {\r\n        return this.shaderData.getVector3(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector3\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setVector3ByIndex(uniformIndex: number, value: Vector3) {\r\n        this.shaderData.setVector3(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector3\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getVector3(name: string) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector3ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector3\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setVector3(name: string, value: Vector3) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector3ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector4\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setVector4ByIndex(uniformIndex: number, value: Vector4) {\r\n        this.shaderData.setVector(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector4\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getVector4ByIndex(uniformIndex: number): Vector4 {\r\n        return this.shaderData.getVector(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector4\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setVector4(name: string, value: Vector4) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector4ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector4\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getVector4(name: string) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector4ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 获得Color\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getColorByIndex(uniformIndex: number): Color {\r\n        return this.shaderData.getColor(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Color\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setColorByIndex(uniformIndex: number, value: Color) {\r\n        this.shaderData.setColor(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Color\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getColor(name: string): Color {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.shaderData.getColor(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Color\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setColor(name: string, value: Color) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setColorByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Matrix4x4\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getMatrix4x4ByIndex(uniformIndex: number): Matrix4x4 {\r\n        return this.shaderData.getMatrix4x4(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Matrix4x4\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setMatrix4x4ByIndex(uniformIndex: number, value: Matrix4x4) {\r\n        this.shaderData.setMatrix4x4(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Matrix4x4\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getMatrix4x4(name: string): Matrix4x4 {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getMatrix4x4ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Matrix4x4\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setMatrix4x4(name: string, value: Matrix4x4) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setMatrix4x4ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获取 matrix3x3\r\n     * @param index \r\n     * @returns \r\n     */\r\n    getMatrix3x3ByIndex(index: number) {\r\n        return this.shaderData.getMatrix3x3(index);\r\n    }\r\n\r\n    /**\r\n     * 设置 matrix3x3\r\n     * @param index \r\n     * @param value \r\n     */\r\n    setMatrix3x3ByIndex(index: number, value: Matrix3x3) {\r\n        this.shaderData.setMatrix3x3(index, value);\r\n    }\r\n\r\n    /**\r\n     * 获取 matrix3x3\r\n     * @param name \r\n     * @returns \r\n     */\r\n    getMatrix3x3(name: string): Matrix3x3 {\r\n        let index = Shader3D.propertyNameToID(name);\r\n        return this.getMatrix3x3ByIndex(index);\r\n    }\r\n\r\n    /**\r\n     * 设置 matrix3x3\r\n     * @param name \r\n     * @param value \r\n     */\r\n    setMatrix3x3(name: string, value: Matrix3x3) {\r\n        let index = Shader3D.propertyNameToID(name);\r\n        this.setMatrix3x3ByIndex(index, value);\r\n    }\r\n\r\n    /**\r\n     * 设置纹理\r\n     * @param uniformIndex 属性索引\r\n     * @param texture \r\n     */\r\n    setTextureByIndex(uniformIndex: number, texture: BaseTexture) {\r\n        this.shaderData.setTexture(uniformIndex, texture);\r\n        if (texture && !texture._texture)//贴图为加载完，需要重设\r\n            texture.once(Event.READY, this, this.reSetTexture);\r\n    }\r\n\r\n    private reSetTexture(texture: BaseTexture) {\r\n        let index = this.shaderData.getSourceIndex(texture);\r\n        if (index != -1) {\r\n            this.setTextureByIndex(index, texture);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得纹理\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getTextureByIndex(uniformIndex: number) {\r\n        return this.shaderData.getTexture(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置纹理\r\n     * @param name 属性名称\r\n     * @param texture \r\n     */\r\n    setTexture(name: string, texture: BaseTexture) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setTextureByIndex(uniformIndex, texture);\r\n    }\r\n\r\n    /**\r\n     * 获得纹理\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getTexture(name: string): BaseTexture {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getTextureByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 获得Buffer\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getBufferByIndex(uniformIndex: number): Float32Array {\r\n        return this.shaderData.getBuffer(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Buffer\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setBufferByIndex(uniformIndex: number, value: Float32Array) {\r\n        this.shaderData.setBuffer(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Buffer\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getBuffer(name: string): Float32Array {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getBufferByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Buffer\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setBuffer(name: string, value: Float32Array) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setBufferByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 设置ShaderData的属性值\r\n     * @param uniformIndex 属性索引\r\n     * @param type 值类型\r\n     * @param value 值\r\n     */\r\n    setShaderDataByIndex(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem) {\r\n        this.shaderData.setShaderData(uniformIndex, type, value);\r\n    }\r\n\r\n    /**\r\n     * 设置ShaderData的属性值\r\n     * @param name 属性名称\r\n     * @param type 值类型\r\n     * @param value 值\r\n     */\r\n    setShaderData(name: string, type: ShaderDataType, value: ShaderDataItem) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setShaderDataByIndex(uniformIndex, type, value);\r\n    }\r\n\r\n    /**\r\n     * 获得ShaderData的属性值\r\n     * @param name 属性名称\r\n     * @param type 值类型\r\n     * @returns \r\n     */\r\n    getShaderData(name: string, type: ShaderDataType): ShaderDataItem {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getShaderDataByIndex(uniformIndex, type);\r\n    }\r\n\r\n    /**\r\n     * 获得ShaderData的属性值\r\n     * @param uniformIndex 属性索引\r\n     * @param type 值类型\r\n     * @returns \r\n     */\r\n    getShaderDataByIndex(uniformIndex: number, type: ShaderDataType): ShaderDataItem {\r\n        return this._shaderValues.getShaderData(uniformIndex, type);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destBaseMaterial: Material = (<Material>destObject);\r\n        destBaseMaterial.name = this.name;\r\n        destBaseMaterial.renderQueue = this.renderQueue;\r\n        destBaseMaterial.setShaderName(this._shader._name);\r\n        this._shaderValues.cloneTo(destBaseMaterial._shaderValues);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Material = new Material();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    //--------------------------------------------兼容-------------------------------------------------\r\n    /**\r\n     * 设置属性值\r\n     * @deprecated\r\n     * @param name \r\n     * @param value \r\n     */\r\n    setShaderPropertyValue(name: string, value: any) {\r\n        let propertyID = Shader3D.propertyNameToID(name);\r\n        this.shaderData.setValueData(propertyID, value);\r\n    }\r\n\r\n    /**\r\n     * 获取属性值\r\n     * @deprecated\r\n     * @param name \r\n     */\r\n    getShaderPropertyValue(name: string): any {\r\n        return this.shaderData.getValueData(Shader3D.propertyNameToID(name));\r\n    }\r\n\r\n    get _defineDatas(): DefineDatas {\r\n        return this._shaderValues._defineDatas;\r\n    }\r\n\r\n    /**\r\n     * override it\r\n     */\r\n    oldparseEndEvent() {\r\n        //TODO\r\n    }\r\n}\r\n\r\n\r\n","import { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\nexport enum TextureCubeFace {\r\n    /**+x */\r\n    PositiveX,\r\n    /**-x */\r\n    NegativeX,\r\n    /**+y */\r\n    PositiveY,\r\n    /**-y */\r\n    NegativeY,\r\n    /**+z */\r\n    PositiveZ,\r\n    /**-z */\r\n    NegativeZ\r\n}\r\n\r\nconst DEFAULT_PIXELS: Uint8Array = new Uint8Array(4);\r\n\r\n/**\r\n * <code>TextureCube</code> 类用于生成立方体纹理。\r\n */\r\nexport class TextureCube extends BaseTexture {\r\n\r\n    /**@private*/\r\n    private static _blackTexture: TextureCube;\r\n    /**@private*/\r\n    private static _grayTexture: TextureCube;\r\n    /**@private*/\r\n    private static _whiteTexture: TextureCube;\r\n\r\n    private static _errorTexture: TextureCube;\r\n\r\n    /**\r\n     * 黑色纯色纹理。\r\n     */\r\n    static get blackTexture() {\r\n        return TextureCube._blackTexture;\r\n    }\r\n\r\n    /**\r\n     * 灰色纯色纹理。\r\n     */\r\n    static get grayTexture() {\r\n        return TextureCube._grayTexture;\r\n    }\r\n\r\n    /**\r\n     * 白色纯色纹理。\r\n     */\r\n    static get whiteTexture() {\r\n        return TextureCube._whiteTexture;\r\n    }\r\n\r\n    static get errorTexture() {\r\n        return TextureCube._errorTexture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__(): void {\r\n        var blackTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var grayTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var writeTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var pixels = DEFAULT_PIXELS;\r\n        pixels[0] = 0, pixels[1] = 0, pixels[2] = 0; pixels[3] = 255;\r\n        blackTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        blackTexture.lock = true;//锁住资源防止被资源管理释放\r\n        pixels[0] = 128, pixels[1] = 128, pixels[2] = 128; pixels[3] = 255;\r\n        grayTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        grayTexture.lock = true;//锁住资源防止被资源管理释放\r\n        pixels[0] = 255, pixels[1] = 255, pixels[2] = 255; pixels[3] = 255;\r\n        writeTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        writeTexture.lock = true;\r\n        TextureCube._grayTexture = grayTexture;\r\n        TextureCube._blackTexture = blackTexture;\r\n        TextureCube._whiteTexture = writeTexture;\r\n        TextureCube._errorTexture = writeTexture;\r\n    }\r\n\r\n    constructor(size: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\r\n        super(size, size, format);\r\n\r\n        this._dimension = TextureDimension.Cube;\r\n\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, size, size, format, mipmap, sRGB, premultiplyAlpha);\r\n        return;\r\n    }\r\n\r\n    // todo source数组 改为 CubeInfo 结构体?\r\n    setImageData(source: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let error = false;\r\n        let k = source.findIndex(s => s != null);\r\n        if (k != -1) {\r\n            let img = source[k];\r\n            if (!source.every(s => s != null && s.width == img.width && s.height == img.height)) //必须满足所有元素不为null且大小相等\r\n                error = true;\r\n        }\r\n        else\r\n            error = true;\r\n\r\n        let texture = this._texture;\r\n        if (!error)\r\n            LayaGL.textureContext.setCubeImageData(texture, source, premultiplyAlpha, invertY);\r\n        else {\r\n            let pixels = DEFAULT_PIXELS;\r\n            LayaGL.textureContext.setCubePixelsData(texture, [pixels, pixels, pixels, pixels, pixels, pixels], premultiplyAlpha, invertY);\r\n        }\r\n    }\r\n\r\n    setPixelsData(source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    updateSubPixelsData(source: ArrayBufferView[], xOffset: number, yOffset: number, width: number, height: number, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setDDSData(ddsInfo: DDSTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    setKTXData(ktxInfo: KTXTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    get defaultTexture(): BaseTexture {\r\n        return TextureCube.grayTexture;\r\n    }\r\n}","import { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Loader, ILoadURL } from \"../net/Loader\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { URL } from \"../net/URL\";\r\n\r\nexport class MaterialParser {\r\n\r\n    static parse(data: any): Material {\r\n        let props: any = data.props;\r\n\r\n        switch (data.version) {\r\n            case \"LAYAMATERIAL:01\":\r\n            case \"LAYAMATERIAL:02\":\r\n            case \"LAYAMATERIAL:03\":\r\n                let mat = MaterialParser.parseLegacy(data);\r\n                mat.oldparseEndEvent();\r\n                return mat;\r\n            case \"LAYAMATERIAL:04\":\r\n                break;\r\n            default:\r\n                throw new Error(`unkonwn material version: ${data.version}`);\r\n        }\r\n\r\n        let mat = new Material();\r\n        mat.setShaderName(props.type);\r\n        let renderQueue: number;\r\n        for (let key in props) {\r\n            switch (key) {\r\n                case \"type\":\r\n                case \"name\":\r\n                    break;\r\n                case \"defines\":\r\n                    let defineNames: any[] = props[key];\r\n                    for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                        let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                        mat._shaderValues.addDefine(define);\r\n                    }\r\n                    break;\r\n                case \"textures\":\r\n                    let textures: any[] = props[key];\r\n                    for (let i = 0, n = textures.length; i < n; i++) {\r\n                        let texture: any = textures[i];\r\n                        let path: string = texture.path;\r\n                        (path) && (mat._shaderValues.setTexture(Shader3D.propertyNameToID(texture.name), Loader.getBaseTexture(path)));\r\n                    }\r\n                    break;\r\n                case \"renderQueue\":\r\n                    renderQueue = props[key];\r\n                    break;\r\n                case \"alphaTest\":\r\n                    mat.alphaTest = props[key];\r\n                    break;\r\n                case \"materialRenderMode\":\r\n                    mat.materialRenderMode = props[key];\r\n                    break;\r\n                default:\r\n                    let property = props[key];\r\n                    let uniName = Shader3D.propertyNameToID(key);\r\n\r\n                    switch (uniName) {\r\n                        case Shader3D.CULL:\r\n                            mat.cull = property;\r\n                            break;\r\n                        case Shader3D.BLEND:\r\n                            mat.blend = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC:\r\n                            mat.blendSrc = property;\r\n                            break;\r\n                        case Shader3D.BLEND_DST:\r\n                            mat.blendDst = property;\r\n                            break;\r\n                        case Shader3D.BLEND_DST_ALPHA:\r\n                            mat.blendDstAlpha = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_ALPHA:\r\n                            mat.blendSrcAlpha = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_RGB:\r\n                            mat.blendSrcRGB = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_RGB:\r\n                            mat.blendDstRGB = property;\r\n                            break;\r\n                        case Shader3D.DEPTH_TEST:\r\n                            mat.depthTest = property;\r\n                            break;\r\n                        case Shader3D.DEPTH_WRITE:\r\n                            mat.depthWrite = !!props[key];\r\n                            break;\r\n                        case Shader3D.STENCIL_TEST:\r\n                            mat.stencilTest = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_Op:\r\n                            mat.stencilOp = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_Ref:\r\n                            mat.stencilRef = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_WRITE:\r\n                            mat.stencilWrite = property;\r\n                            break;\r\n                        default:\r\n                            if (!property.length) {\r\n                                mat._shaderValues.setNumber(uniName, props[key]);\r\n                            } else {\r\n                                var vectorValue = property;\r\n                                switch (vectorValue.length) {\r\n                                    case 2:\r\n                                        mat._shaderValues.setVector2(uniName, new Vector2(vectorValue[0], vectorValue[1]));\r\n                                        break;\r\n                                    case 3:\r\n                                        mat._shaderValues.setVector3(uniName, new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]));\r\n                                        break;\r\n                                    case 4:\r\n                                        if (mat._shaderValues.getColor(uniName)) {\r\n                                            mat._shaderValues.setColor(uniName, new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                        } else\r\n                                            mat._shaderValues.setVector(uniName, new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                        break;\r\n                                    case 9:\r\n                                        let matrix3 = new Matrix3x3();\r\n                                        matrix3.elements = new Float32Array(vectorValue);\r\n                                        mat._shaderValues.setMatrix3x3(uniName, matrix3);\r\n                                        break;\r\n                                    case 16:\r\n                                        let matrix4 = new Matrix4x4();\r\n                                        matrix4.elements = new Float32Array(vectorValue);\r\n                                        mat._shaderValues.setMatrix4x4(uniName, matrix4);\r\n                                        break;\r\n                                    default:\r\n                                        mat._shaderValues.setBuffer(uniName, vectorValue);\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n            }\r\n        }\r\n        if (null != renderQueue) {\r\n            mat.renderQueue = renderQueue;\r\n        }\r\n\r\n        return mat;\r\n    }\r\n\r\n    static collectLinks(data: any, basePath: string) {\r\n        let urls: ILoadURL[] = [];\r\n        let textures: any[] = data.props?.textures;\r\n        if (textures) {\r\n            for (let i = 0, n = textures.length; i < n; i++) {\r\n                let tex2D: any = textures[i];\r\n                let tex2DPath: string = tex2D.path;\r\n                if (tex2DPath) {\r\n                    tex2D.path = URL.join(basePath, tex2DPath);\r\n                    urls.push({ url: tex2D.path, type: Loader.TEXTURE2D, constructParams: tex2D.constructParams, propertyParams: tex2D.propertyParams });\r\n                }\r\n            }\r\n        }\r\n        return urls;\r\n    }\r\n\r\n\r\n    /**\r\n     * @deprecated\r\n     * @inheritDoc\r\n     */\r\n    static parseLegacy(data: any): Material {\r\n        let jsonData: any = data;\r\n        let props: any = jsonData.props;\r\n\r\n        let mat: Material;\r\n        let classType: string = props.type;\r\n        let clas: any = ClassUtils.getClass(classType);\r\n        if (!clas && classType && classType.startsWith(\"Laya.\"))\r\n            clas = ClassUtils.getClass(classType.substring(5));\r\n        if (clas)\r\n            mat = new clas();\r\n        else {\r\n            mat = new Material();\r\n            mat.setShaderName(classType);\r\n        }\r\n\r\n        switch (jsonData.version) {\r\n            case \"LAYAMATERIAL:01\":\r\n            case \"LAYAMATERIAL:02\":\r\n                for (let key in props) {\r\n                    switch (key) {\r\n                        case \"type\":\r\n                            break;\r\n                        case \"vectors\":\r\n                            let vectors = props[key];\r\n                            for (let i = 0, n = vectors.length; i < n; i++) {\r\n                                let vector = vectors[i];\r\n                                let vectorValue = vector.value;\r\n                                switch (vectorValue.length) {\r\n                                    case 2:\r\n                                        (<any>mat)[vector.name] = new Vector2(vectorValue[0], vectorValue[1]);\r\n                                        break;\r\n                                    case 3:\r\n                                        if ((<any>mat)[vector.name] instanceof Color) {\r\n                                            (<any>mat)[vector.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], 1.0);\r\n                                        } else\r\n                                            (<any>mat)[vector.name] = new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]);\r\n                                        break;\r\n                                    case 4:\r\n                                        if ((<any>mat)[vector.name] instanceof Color) {\r\n                                            (<any>mat)[vector.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]);\r\n                                        } else\r\n                                            (<any>mat)[vector.name] = new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]);\r\n                                        break;\r\n                                    default:\r\n                                        throw new Error(\"unkonwn material color length: \" + vectorValue.length);\r\n                                }\r\n                            }\r\n                            break;\r\n                        case \"colors\":\r\n                            let colors = props[key];\r\n                            for (let i = 0, n = colors.length; i < n; i++) {\r\n                                let color = colors[i];\r\n                                let vectorValue = color.value;\r\n                                (<any>mat)[color.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3])\r\n                            }\r\n                            break;\r\n                        case \"textures\":\r\n                            let textures: any[] = props[key];\r\n                            for (let i = 0, n = textures.length; i < n; i++) {\r\n                                let texture: any = textures[i];\r\n                                let path: string = texture.path;\r\n                                (path) && ((<any>mat)[texture.name] = Loader.getBaseTexture(path));\r\n                            }\r\n                            break;\r\n                        case \"defines\":\r\n                            let defineNames: any[] = props[key];\r\n                            for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                                let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                                mat._shaderValues.addDefine(define);\r\n                            }\r\n                            break;\r\n                        case \"renderStates\"://\"LAYAMATERIAL:02\" \r\n                            let renderStatesData: any[] = props[key];\r\n                            let renderStateData: any = renderStatesData[0];\r\n                            mat.blend = renderStateData.blend;\r\n                            mat.cull = this._getRenderStateParams(renderStateData.cull);\r\n                            mat.depthTest = this._getRenderStateParams(renderStateData.depthTest);\r\n                            mat.depthWrite = renderStateData.depthWrite;\r\n                            mat.blendSrc = this._getRenderStateParams(renderStateData.srcBlend);\r\n                            mat.blendDst = this._getRenderStateParams(renderStateData.dstBlend);\r\n                            break;\r\n                        case \"cull\"://\"LAYAMATERIAL:01\"\r\n                            mat.cull = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blend\"://\"LAYAMATERIAL:01\"\r\n                            mat.blend = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"depthWrite\"://\"LAYAMATERIAL:01\" \r\n                            mat.depthWrite = !!props[key];\r\n                            break;\r\n                        case \"srcBlend\"://\"LAYAMATERIAL:01\" \r\n                            mat.blendSrc = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"dstBlend\"://\"LAYAMATERIAL:01\" \r\n                            mat.blendDst = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"depthTest\":\r\n                            mat.depthTest = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blendDst\":\r\n                            mat.blendDst = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blendSrc\":\r\n                            mat.blendSrc = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        default:\r\n                            (<any>mat)[key] = props[key];\r\n                    }\r\n                }\r\n                break;\r\n            case \"LAYAMATERIAL:03\":\r\n                for (let key in props) {\r\n                    switch (key) {\r\n                        case \"type\":\r\n                        case \"name\":\r\n                            break;\r\n                        case \"defines\":\r\n                            let defineNames: any[] = props[key];\r\n                            for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                                let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                                mat._shaderValues.addDefine(define);\r\n                            }\r\n                            break;\r\n                        case \"textures\":\r\n                            let textures: any[] = props[key];\r\n                            for (let i = 0, n = textures.length; i < n; i++) {\r\n                                let texture: any = textures[i];\r\n                                let path: string = texture.path;\r\n                                (path) && (mat._shaderValues.setTexture(Shader3D.propertyNameToID(texture.name), Loader.getBaseTexture(path)));\r\n                            }\r\n                            break;\r\n                        case \"renderQueue\":\r\n                            mat.renderQueue = props[key];\r\n                            break;\r\n                        default:\r\n                            let property = props[key];\r\n                            let uniName = Shader3D.propertyNameToID(key);\r\n\r\n                            switch (uniName) {\r\n                                case Shader3D.CULL:\r\n                                    mat.cull = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND:\r\n                                    mat.blend = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND_SRC:\r\n                                    mat.blendSrc = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND_DST:\r\n                                    mat.blendDst = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.DEPTH_TEST:\r\n                                    mat.depthTest = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.DEPTH_WRITE:\r\n                                    mat.depthWrite = !!props[key];\r\n                                    break;\r\n                                default:\r\n                                    if (!property.length) {\r\n                                        mat._shaderValues.setNumber(uniName, props[key]);\r\n                                    } else {\r\n                                        var vectorValue = property;\r\n                                        switch (vectorValue.length) {\r\n                                            case 2:\r\n                                                mat._shaderValues.setVector2(uniName, new Vector2(vectorValue[0], vectorValue[1]));\r\n                                                break;\r\n                                            case 3:\r\n                                                mat._shaderValues.setVector3(uniName, new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]));\r\n                                                break;\r\n                                            case 4:\r\n                                                if (mat._shaderValues.getColor(uniName)) {\r\n                                                    mat._shaderValues.setColor(uniName, new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                                } else\r\n                                                    mat._shaderValues.setVector(uniName, new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                                break;\r\n                                            default:\r\n                                                throw new Error(\"unkonwn material color length: \" + vectorValue.length);\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n\r\n\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"unkonwn material version: \" + jsonData.version);\r\n        }\r\n        return mat;\r\n    }\r\n\r\n\r\n    /**\r\n        * @deprecated\r\n        * 兼容Blend数据\r\n        */\r\n    private static _getRenderStateParams(type: number) {\r\n        switch (type) {\r\n            case 0x0300:\r\n                return BlendFactor.SourceColor;\r\n            case 0x0301:\r\n                return BlendFactor.OneMinusSourceColor;\r\n            case 0x0306:\r\n                return BlendFactor.DestinationColor;\r\n            case 0x0307:\r\n                return BlendFactor.OneMinusDestinationColor;\r\n            case 0x0302:\r\n                return BlendFactor.SourceAlpha;\r\n            case 0x0303:\r\n                return BlendFactor.OneMinusSourceAlpha;\r\n            case 0x0304:\r\n                return BlendFactor.DestinationAlpha;\r\n            case 0x0305:\r\n                return BlendFactor.OneMinusDestinationAlpha;\r\n            case 0x0308:\r\n                return BlendFactor.SourceAlphaSaturate;\r\n            case 0x8006:\r\n                return BlendEquationSeparate.ADD;\r\n            case 0x800A:\r\n                return BlendEquationSeparate.SUBTRACT;\r\n            case 0x800B:\r\n                return BlendEquationSeparate.REVERSE_SUBTRACT;\r\n            case 0x0200:\r\n                return CompareFunction.Never;\r\n            case 0x0201:\r\n                return CompareFunction.Less;\r\n            case 0x0202:\r\n                return CompareFunction.Equal;\r\n            case 0x0203:\r\n                return CompareFunction.LessEqual;\r\n            case 0x0204:\r\n                return CompareFunction.Greater;\r\n            case 0x0205:\r\n                return CompareFunction.NotEqual;\r\n            case 0x0206:\r\n                return CompareFunction.GreaterEqual;\r\n            case 0x0207:\r\n                return CompareFunction.Always;\r\n            default:\r\n                return type;\r\n        }\r\n    }\r\n}","import { IResourceLoader, ILoadTask, ILoadURL, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { MaterialParser } from \"./MaterialParser\";\r\n\r\nclass MaterialLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.3), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let basePath = URL.getPath(task.url);\r\n            let urls: Array<ILoadURL | string> = MaterialParser.collectLinks(data, basePath);\r\n\r\n            if (data.version === \"LAYAMATERIAL:04\") {\r\n                let shaderName = data.props.type;\r\n                if (!Shader3D.find(shaderName)) {\r\n                    let url = AssetDb.inst.shaderName_to_URL(shaderName);\r\n                    if (url)\r\n                        urls.push(url);\r\n                    else {\r\n                        return AssetDb.inst.shaderName_to_URL_async(shaderName).then(url => {\r\n                            if (url)\r\n                                urls.push(url);\r\n                            else if (data.props.shaderPath)\r\n                                urls.push(URL.join(basePath, data.props.shaderPath));\r\n                            else\r\n                                Loader.warn(`unknown shaderName: ${shaderName}`);\r\n                            return this.load2(task, data, urls);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.load2(task, data, urls);\r\n        });\r\n    }\r\n\r\n    private load2(task: ILoadTask, data: any, urls: Array<any>): Promise<any> {\r\n        if (urls.length == 0) {\r\n            let mat = MaterialParser.parse(data);\r\n            let obsoluteInst = <Material>task.obsoluteInst;\r\n            if (obsoluteInst)\r\n                mat = this.move(obsoluteInst, mat);\r\n            return Promise.resolve(mat);\r\n        }\r\n\r\n        return task.loader.load(urls, task.options, task.progress.createCallback()).then(() => {\r\n            let mat = MaterialParser.parse(data);\r\n\r\n            let obsoluteInst = <Material>task.obsoluteInst;\r\n            if (task.obsoluteInst)\r\n                mat = this.move(obsoluteInst, mat);\r\n            return mat;\r\n        });\r\n    }\r\n\r\n    private move(obsoluteInst: Material, mat: Material) {\r\n        obsoluteInst._shaderValues.reset();\r\n        obsoluteInst.setShaderName(mat._shader.name);\r\n        mat._shaderValues.cloneTo(obsoluteInst._shaderValues);\r\n        obsoluteInst.renderQueue = mat.renderQueue;\r\n        obsoluteInst.materialRenderMode = mat.materialRenderMode;\r\n        obsoluteInst.obsolute = false;\r\n        mat.destroy();\r\n        return obsoluteInst;\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lmat\"], MaterialLoader, Loader.MATERIAL);","export class ParseJSON {\r\n    static parse(str: string) {\r\n        return this.parseStart(str);\r\n    }\r\n\r\n    private static findIndex(str: string, i: number, fstr: string, len: number) {\r\n        var fi = str.indexOf(fstr, i + 1);\r\n        if (0 > fi) {\r\n            fi = len;\r\n        }\r\n        return { str: str.substring(i + 1, fi), i: fi };\r\n\r\n    }\r\n    private static finCurrObj(): any {\r\n        this.type = 1;\r\n        if (null == this.cobj) {\r\n            return null;\r\n        }\r\n        if (0 == this.currArr.length) {\r\n            if (this.cobj.k) {\r\n                this.ret[this.cobj.k] = this.cobj.val;\r\n            }\r\n            return null;\r\n        } else {\r\n            var pobj = this.currArr.pop()!;\r\n            if (this.cobj.k) {\r\n                if (Array.isArray(pobj.val)) {\r\n                    if (null != this.cobj.k) {\r\n                        var obj: any = {};\r\n                        obj[this.cobj.k] = this.cobj.val;\r\n                        pobj.val.push(obj);\r\n                    } else {\r\n                        //没有key，应该创建的时候已经push进去了\r\n                        //pobj.val.push(cobj.val);\r\n                    }\r\n                } else {\r\n                    pobj.val[this.cobj.k] = this.cobj.val;\r\n                }\r\n            } else if (Array.isArray(this.cobj.val)) {\r\n                if (Array.isArray(pobj.val)) {\r\n                    pobj.val.push(this.cobj.val);\r\n                } else {\r\n                    pobj.val = this.cobj.val;\r\n                }\r\n            } else {\r\n                //console.log(\"应该是已经被push过的obj对象，无需处理\");\r\n            }\r\n            return pobj;\r\n        }\r\n    }\r\n\r\n    private static formatVal(str: string | null) {\r\n        if (null == str) {\r\n            return null;\r\n        }\r\n        var numVal = Number(str);\r\n        if (!isNaN(numVal)) {\r\n            return numVal;\r\n        }\r\n\r\n        if (\"false\" == str.toLowerCase()) {\r\n            return false;\r\n        } else if (\"true\" == str.toLowerCase()) {\r\n            return true;\r\n        } else if (\"null\" == str) {\r\n            return null;\r\n        }\r\n\r\n\r\n        return str;\r\n    }\r\n\r\n    private static len: number;\r\n    private static ret: any;\r\n    private static currStr: string | null;\r\n    private static currArr: { k?: string, val: any }[];\r\n    private static cobj: any;\r\n    /**type为0代表没有找到任何状态，1为当前在寻找key，2为当前在寻找val */\r\n    private static type: number;\r\n\r\n    private static finCurrStr() {\r\n        if (null != this.currStr) {\r\n            this.currStr = this.currStr.trim();\r\n            if (\"\" != this.currStr) {\r\n                if (null != this.cobj) {\r\n                    if (Array.isArray(this.cobj.val)) {\r\n                        this.cobj.val.push(this.formatVal(this.currStr));\r\n                    } else {\r\n                        this.cobj.val = this.formatVal(this.currStr);\r\n                        this.cobj = this.finCurrObj();\r\n                    }\r\n                }\r\n                this.currStr = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private static parseStart(str: string) {\r\n        this.len = str.length;\r\n        var i = 0;\r\n        this.ret = {};\r\n        this.currStr = null;\r\n        this.currArr = [];\r\n        this.cobj = null;\r\n        this.type = 0;\r\n\r\n\r\n        while (i < this.len) {\r\n            var c = str.charAt(i);\r\n            if (\"/\" == c) {\r\n                if (i + 1 < this.len) {\r\n                    i += 1;\r\n                    var cNext = str.charAt(i);\r\n                    var cstr = null;\r\n                    if (\"/\" == cNext) {\r\n                        //单行注释\r\n                        cstr = \"\\n\";\r\n                    } else if (\"*\" == cNext) {\r\n                        //多行注释\r\n                        cstr = \"*/\"\r\n                    }\r\n                    if (null != cstr) {\r\n\r\n\r\n\r\n                        this.finCurrStr();\r\n\r\n\r\n                        var fi = str.indexOf(cstr, i);\r\n                        if (0 > fi) {\r\n                            console.log(\"没有找到注释结尾，应该是一直注释到最后了\");\r\n                            i = this.len;\r\n                        } else {\r\n                            i = fi + cstr.length - 1;\r\n                        }\r\n                    }\r\n                }\r\n            } else if (\"}\" == c) {\r\n                if (null != this.cobj) {\r\n                    this.finCurrStr();\r\n                    if (null != this.cobj) {\r\n                        this.cobj = this.finCurrObj();\r\n                    }\r\n                }\r\n                this.currStr = \"\";\r\n                this.type = 1;\r\n                //obj结束\r\n            } else if (\"{\" == c) {\r\n                this.currStr = \"\";\r\n                this.type = 1;\r\n\r\n\r\n\r\n\r\n            } else if (\"'\" == c || \"\\\"\" == c || \"‘\" == c || \"“\" == c) {\r\n                //检测发现这里是字符串\r\n                if (\"‘\" == c) {\r\n                    c = \"’\";\r\n                } else if (\"“\" == c) {\r\n                    c = \"”\";\r\n                }\r\n                var obj = this.findIndex(str, i, c, this.len);\r\n\r\n                if (2 == this.type && null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                    if (null != this.currStr) {\r\n                        this.currStr = this.currStr.trim();\r\n                        if (\"\" != this.currStr) {\r\n                            this.cobj.val.push(this.formatVal(this.currStr));\r\n                        }\r\n                    }\r\n                    this.cobj.val.push(obj.str);\r\n                    this.currStr = \"\";\r\n                } else if (null != this.currStr) {\r\n                    this.currStr += obj.str;\r\n                }\r\n                i = obj.i;\r\n            } else if (\";\" == c || \",\" == c || \"\\n\" == c) {\r\n                this.finCurrStr();\r\n            } else if (\"]\" == c) {\r\n                //数组结束\r\n                if (null != this.currStr && null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                    this.currStr = this.currStr.trim();\r\n                    if (\"\" != this.currStr) {\r\n                        this.cobj.val.push(this.formatVal(this.currStr));\r\n                    }\r\n                }\r\n                if (null != this.cobj) {\r\n                    //数组需要完成两次才算结束出去\r\n                    this.cobj = this.finCurrObj();\r\n                    this.cobj = this.finCurrObj();\r\n                }\r\n                this.currStr = \"\";\r\n            } else if (\"[\" == c) {\r\n                if (2 != this.type) {\r\n                    console.warn(\"没有key值，忽略掉一个数组\");\r\n                } else {\r\n                    if (null != this.cobj) {\r\n                        this.currArr.push(this.cobj);\r\n                    }\r\n                    this.cobj = { val: [] };\r\n                }\r\n            } else if (\":\" == c) {\r\n                if (null != this.currStr && 1 == this.type) {\r\n                    this.type = 2;\r\n                    if (null != this.cobj) {\r\n                        this.currArr.push(this.cobj);\r\n                    }\r\n                    if (null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                        //数组中的obj对象 eg: {b:[{aa:3,bb:4}],}\r\n                        var pcobj = this.cobj;\r\n                        this.cobj = { val: {} };\r\n                        pcobj.val.push(this.cobj.val);\r\n                        this.currArr.push(this.cobj);\r\n\r\n                    }\r\n                    this.cobj = { k: this.currStr.trim(), val: {} };\r\n\r\n\r\n\r\n                    this.currStr = \"\";\r\n                }\r\n            } else if (null != this.currStr) {\r\n                this.currStr += c;\r\n            }\r\n            i++;\r\n        }\r\n        return this.ret;\r\n    }\r\n\r\n\r\n}","import { Shader3D, IShaderObjStructor, IShaderpassStructor } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataType } from \"../RenderEngine/RenderShader/ShaderData\";\r\nimport { ParseJSON } from \"../utils/ParseJSON\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { TextureCube } from \"../resource/TextureCube\";\r\n\r\n\r\nconst CGBlock: string[] = [\"GLSL Start\", \"GLSL End\"];\r\nconst split: string[] = [\"#defineGLSL\", \"#endGLSL\"];\r\nconst shaderBlock: string[] = [\"Shader3D Start\", \"Shader3D End\"];\r\nconst shaderDataOBJ: Record<string, ShaderDataType> = {\r\n    \"Color\": ShaderDataType.Color,\r\n    \"Int\": ShaderDataType.Int,\r\n    \"Bool\": ShaderDataType.Bool,\r\n    \"Float\": ShaderDataType.Float,\r\n    \"Vector2\": ShaderDataType.Vector2,\r\n    \"Vector3\": ShaderDataType.Vector3,\r\n    \"Vector4\": ShaderDataType.Vector4,\r\n    \"Matrix4x4\": ShaderDataType.Matrix4x4,\r\n    \"Matrix3x3\": ShaderDataType.Matrix3x3,\r\n    \"Texture2D\": ShaderDataType.Texture2D,\r\n    \"TextureCube\": ShaderDataType.TextureCube,\r\n    \"Texture2DArray\": ShaderDataType.Texture2DArray,\r\n    \"Texture3D\": ShaderDataType.Texture3D,\r\n};\r\n\r\n//TODO 格式改变\r\nexport class ShaderParser {\r\n\r\n    static parse(data: string, basePath?: string): Shader3D {\r\n        let obj = ShaderParser.getShaderBlock(data);\r\n        let cgmap = ShaderParser.getCGBlock(data);\r\n        ShaderParser.bindCG(obj, cgmap);\r\n        let shader = Shader3D.parse(obj, basePath);\r\n        return shader;\r\n    }\r\n\r\n    static compileToTree(sliceFlag: string[], data: string, sliceIndex: number): string[] {\r\n        if (sliceIndex == sliceFlag.length)\r\n            return [data];\r\n        let slicedata = sliceFlag[sliceIndex];\r\n        let splitmap = data.split(slicedata);\r\n        if (splitmap.length == 1)\r\n            return splitmap;\r\n        let map: string[] = [];\r\n        for (let i = 0, n = splitmap.length; i < n; i++) {\r\n            map = map.concat(ShaderParser.compileToTree(sliceFlag, splitmap[i], sliceIndex + 1));\r\n            (i != n - 1) && map.push(slicedata);\r\n        }\r\n        return map;\r\n    }\r\n\r\n    static getMapKey(value: string) {\r\n        let index = value.indexOf(\"\\n\");\r\n        value = value.slice(0, index).replace(\"\\r\", \"\");\r\n        value = value.slice(0, index).replace(\" \", \"\");\r\n        value = value.trim();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * get Shader Data\r\n     */\r\n    static getShaderBlock(source: string) {\r\n        let shaderObj: IShaderObjStructor = null;\r\n        try {\r\n            let i1 = source.indexOf(shaderBlock[0]);\r\n            if (i1 == -1)\r\n                throw new Error(`no '${shaderBlock[0]}' tag`);\r\n            let i2 = source.indexOf(shaderBlock[1]);\r\n            if (i2 == -1)\r\n                throw new Error(`no '${shaderBlock[1]}' tag`);\r\n            let shaderData = source.substring(i1 + shaderBlock[0].length, i2);\r\n            shaderObj = ParseJSON.parse(shaderData);//TODO new FIle parse(1、去掉繁琐的json格式报错，2、可以有注释)\r\n        } catch (err: any) {\r\n            console.error(\"Shader parse error: \" + err + \"\\n\" + source.substring(0, 100) + \"...\");\r\n        }\r\n        return shaderObj;\r\n    }\r\n\r\n    /**\r\n     * get CG data for map\r\n     * @param source \r\n     * @returns \r\n     */\r\n    static getCGBlock(source: string): { [key: string]: string } {\r\n        let cgmap: { [key: string]: string } = {};\r\n        try {\r\n            let i1 = source.indexOf(CGBlock[0]);\r\n            if (i1 == -1)\r\n                throw new Error(`no '${shaderBlock[0]}' tag`);\r\n            let i2 = source.indexOf(CGBlock[1]);\r\n            if (i2 == -1)\r\n                throw new Error(`no '${shaderBlock[1]}' tag`);\r\n            let cgdata = source.substring(i1, i2);\r\n            let map = ShaderParser.compileToTree(split, cgdata, 0);\r\n            for (let i = 0, n = map.length; i < n; i++) {\r\n                let value = map[i];\r\n                if (value == split[0]) {\r\n                    i += 1\r\n                    let datavalue = map[i];\r\n                    let key = ShaderParser.getMapKey(datavalue);\r\n                    cgmap[key] = datavalue.slice(datavalue.indexOf(\"\\n\"), datavalue.length - 1);\r\n                }\r\n            }\r\n        } catch (err: any) {\r\n            console.error(\"Shader parse error: \" + err + \"\\n\" + source.substring(0, 100) + \"...\");\r\n        }\r\n        return cgmap;\r\n    }\r\n\r\n    static bindCG(shaderObj: IShaderObjStructor, cgmap: { [key: string]: string }) {\r\n        //pass trans\r\n        let passArray = shaderObj.shaderPass as Array<IShaderpassStructor>;\r\n        if (passArray) {\r\n            passArray.forEach(element => {\r\n                if (element.VS) {\r\n                    element.VS = cgmap[element.VS];\r\n                }\r\n                if (element.FS) {\r\n                    element.FS = cgmap[element.FS];\r\n                }\r\n            });\r\n        }\r\n        //attribute map trans\r\n        let attributemap = shaderObj.attributeMap;\r\n        if (attributemap) {\r\n            let indexofAttribute = 0;\r\n            for (let i in attributemap) {\r\n                //TODO  这里的格式要重新理 \"name\":type or \"name\":[type,custom Attribute Location]\r\n                if (attributemap[i] instanceof Array) {\r\n                    let dataArray = attributemap[i];\r\n                    let type = ShaderParser.getShaderDataType(dataArray[0]);\r\n                    if (type == null) {\r\n                        console.warn(`${shaderObj.name}: unkown attribute type '${dataArray[0]}'`);\r\n                        continue;\r\n                    }\r\n                    attributemap[i] = [dataArray[1], type];\r\n                } else {\r\n                    let type = ShaderParser.getShaderDataType(attributemap[i]);\r\n                    if (type == null) {\r\n                        console.warn(`${shaderObj.name}: unkown attribute type '${attributemap[i]}'`);\r\n                        continue;\r\n                    }\r\n                    attributemap[i] = [indexofAttribute, type];\r\n                    indexofAttribute++;\r\n                }\r\n\r\n            }\r\n        }\r\n        //uniform map trans\r\n        let uniformMap = shaderObj.uniformMap;\r\n        if (uniformMap) {\r\n            let defaultmap: any = {};\r\n            shaderObj.defaultValue = defaultmap;\r\n\r\n            let newUniformMap: any = {};\r\n            shaderObj.uniformMap = newUniformMap;\r\n\r\n            for (let k in uniformMap) {\r\n                let entry = uniformMap[k];\r\n                if (entry.serializable === false)\r\n                    continue;\r\n\r\n                let dataType = ShaderParser.getShaderDataType(entry.type);\r\n                if (dataType == null) {\r\n                    console.warn(`${shaderObj.name}: unkown uniform type '${entry.type}'`);\r\n                    continue;\r\n                }\r\n\r\n                if (entry.default != null)\r\n                    defaultmap[k] = ShaderParser.getDefaultData(dataType, entry.default);\r\n\r\n                if (entry.block) {\r\n                    let block: Record<string, ShaderDataType> = newUniformMap[entry.block];\r\n                    if (!block)\r\n                        newUniformMap[entry.block] = block = {};\r\n                    block[k] = dataType;\r\n                }\r\n                else\r\n                    newUniformMap[k] = dataType;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * trans string to ShaderDataType\r\n     * @param value \r\n     * @returns \r\n     */\r\n    static getShaderDataType(value: string): ShaderDataType {\r\n        return shaderDataOBJ[value];\r\n    }\r\n\r\n    /**\r\n     * set ShaderData Value\r\n     * @param type \r\n     * @param data \r\n     * @returns \r\n     */\r\n    static getDefaultData(type: ShaderDataType, data: any) {\r\n        switch (type) {\r\n            case ShaderDataType.Int:\r\n            case ShaderDataType.Float:\r\n            case ShaderDataType.Bool:\r\n                return data;\r\n            case ShaderDataType.Vector2:\r\n                return new Vector2(data[0], data[1]);\r\n            case ShaderDataType.Vector3:\r\n                return new Vector3(data[0], data[1], data[2]);\r\n            case ShaderDataType.Vector4:\r\n                return new Vector4(data[0], data[1], data[2], data[3]);\r\n            case ShaderDataType.Color:\r\n                return new Color(data[0], data[1], data[2], data[3]);\r\n            case ShaderDataType.Matrix4x4:\r\n                let mat = new Matrix4x4();\r\n                mat.cloneByArray(data);\r\n                return mat;\r\n            case ShaderDataType.Matrix3x3:\r\n                let mat3 = new Matrix3x3();\r\n                mat3.cloneByArray(data);\r\n                return mat3;\r\n            case ShaderDataType.Texture2D:\r\n                let tex = null;\r\n                if (data == \"white\")\r\n                    tex = Texture2D.whiteTexture;\r\n                else if (data == \"black\")\r\n                    tex = Texture2D.blackTexture;\r\n                else if (data == \"gray\")\r\n                    tex = Texture2D.grayTexture;\r\n                else if (data == \"normal\")\r\n                    tex = Texture2D.normalTexture;\r\n                return tex;\r\n            case ShaderDataType.TextureCube:\r\n                let texcube = TextureCube.grayTexture;\r\n                if (data == \"white\")\r\n                    texcube = TextureCube.whiteTexture;\r\n                else if (data == \"black\")\r\n                    texcube = TextureCube.blackTexture;\r\n                else if (data == \"gray\")\r\n                    texcube = TextureCube.grayTexture;\r\n                return texcube;\r\n        }\r\n    }\r\n}","\r\nimport { IShaderpassStructor, Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { SubShader } from \"../RenderEngine/RenderShader/SubShader\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { ShaderCompile } from \"../webgl/utils/ShaderCompile\";\r\nimport { URL } from \"../net/URL\";\r\nimport { ShaderParser } from \"./ShaderParser\";\r\n\r\nclass ShaderLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let url = task.url;\r\n        if (task.ext === \"bps\")\r\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"shader\");\r\n\r\n        return task.loader.fetch(url, \"text\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let obj = ShaderParser.getShaderBlock(data);\r\n            let cgmap = ShaderParser.getCGBlock(data);\r\n            ShaderParser.bindCG(obj, cgmap);\r\n\r\n            if (!obj.name || !obj.uniformMap)\r\n                return null;\r\n\r\n            let basePath = URL.getPath(task.url);\r\n            let passArray: IShaderpassStructor[] = obj.shaderPass;\r\n            return Promise.all(passArray.map(pass => ShaderCompile.compileAsync(pass.VS, pass.FS, basePath))).then(compiledObjs => {\r\n                if (compiledObjs.findIndex(obj => obj == null) != -1) {\r\n                    Loader.warn(\"some pass null \" + task.url);\r\n                    return null;\r\n                }\r\n\r\n                let shader = Shader3D.add(obj.name, obj.enableInstancing, obj.supportReflectionProbe);\r\n                shader._surportVolumetricGI = obj.surportVolumetricGI;\r\n                let subshader = new SubShader(obj.attributeMap ? obj.attributeMap : SubShader.DefaultAttributeMap, obj.uniformMap, obj.defaultValue);\r\n                shader.addSubShader(subshader);\r\n\r\n                for (let i in passArray) {\r\n                    let pass = subshader._addShaderPass(compiledObjs[i], passArray[i].pipeline);\r\n                    pass.statefirst = passArray[i].statefirst ?? false;\r\n                    ShaderCompile.getRenderState(passArray[i].renderState, pass.renderState);\r\n                }\r\n                return shader;\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"shader\", \"bps\"], ShaderLoader);","import { IResourceLoader, ILoadTask, Loader } from \"../../net/Loader\";\r\nimport { WebAudioSound } from \"./WebAudioSound\";\r\n\r\nclass WebAudioLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return WebAudioSound.ctx.decodeAudioData(data);\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"mp3\", \"wav\", \"ogg\"], WebAudioLoader, Loader.SOUND);","import { ClassUtils } from \"./utils/ClassUtils\";\r\nimport { Component } from \"./components/Component\";\r\nimport { Animation } from \"./display/Animation\";\r\nimport { AnimationBase } from \"./display/AnimationBase\";\r\nimport { BitmapFont } from \"./display/BitmapFont\";\r\nimport { EffectAnimation } from \"./display/EffectAnimation\";\r\nimport { FrameAnimation } from \"./display/FrameAnimation\";\r\nimport { Input } from \"./display/Input\";\r\nimport { Node } from \"./display/Node\";\r\nimport { Scene } from \"./display/Scene\";\r\nimport { Sprite } from \"./display/Sprite\";\r\nimport { Stage } from \"./display/Stage\";\r\nimport { Text } from \"./display/Text\";\r\nimport { BlurFilter } from \"./filters/BlurFilter\";\r\nimport { ColorFilter } from \"./filters/ColorFilter\";\r\nimport { GlowFilter } from \"./filters/GlowFilter\";\r\nimport { Point } from \"./maths/Point\";\r\nimport { Rectangle } from \"./maths/Rectangle\";\r\nimport { SoundNode } from \"./media/SoundNode\";\r\nimport { VideoNode } from \"./media/VideoNode\";\r\nimport { Texture } from \"./resource/Texture\";\r\nimport { Texture2D } from \"./resource/Texture2D\";\r\nimport { Animator2D } from \"./components/Animator2D\";\r\nimport { AnimatorControllerLayer2D } from \"./components/AnimatorControllerLayer2D\";\r\nimport { AnimatorState2D } from \"./components/AnimatorState2D\";\r\nimport { AnimationClip2D } from \"./components/AnimationClip2D\";\r\nimport { Animation2DParm } from \"./components/Animation2DParm\";\r\nimport { Animation2DCondition } from \"./components/Animation2DCondition\";\r\nimport { Prefab } from \"./resource/HierarchyResource\";\r\nimport { Widget } from \"./components/Widget\";\r\nimport { AnimatorController2D } from \"./components/AnimatorController2D\";\r\nimport { Vector2 } from \"./maths/Vector2\";\r\nimport { Vector3 } from \"./maths/Vector3\";\r\nimport { Vector4 } from \"./maths/Vector4\";\r\nimport { Quaternion } from \"./maths/Quaternion\";\r\nimport { Color } from \"./maths/Color\";\r\nimport { Script } from \"./components/Script\";\r\nimport { Matrix } from \"./maths/Matrix\";\r\nimport { Matrix3x3 } from \"./maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"./maths/Matrix4x4\";\r\n\r\nimport \"./loaders/TextResourceLoader\";\r\nimport \"./loaders/AtlasLoader\";\r\nimport \"./loaders/HierarchyLoader\";\r\nimport \"./loaders/TextureLoader\";\r\nimport \"./loaders/AnimationClip2DLoader\";\r\nimport \"./loaders/AnimationController2DLoader\";\r\nimport \"./loaders/NullLoader\";\r\nimport \"./loaders/BitmapFontLoader\";\r\nimport \"./loaders/TTFFontLoader\";\r\nimport \"./loaders/MaterialLoader\";\r\nimport \"./loaders/ShaderLoader\";\r\nimport \"./media/webaudio/WebAudioLoader\";\r\n\r\nlet c = ClassUtils.regClass;\r\n\r\nc(\"Record\", Object);\r\nc(\"Node\", Node);\r\nc(\"Sprite\", Sprite);\r\nc(\"Widget\", Widget);\r\nc(\"Text\", Text);\r\nc(\"Input\", Input);\r\nc(\"AnimationBase\", AnimationBase);\r\nc(\"Animation\", Animation);\r\nc(\"FrameAnimation\", FrameAnimation);\r\nc(\"EffectAnimation\", EffectAnimation);\r\nc(\"SoundNode\", SoundNode);\r\nc(\"VideoNode\", VideoNode);\r\n\r\nc(\"Scene\", Scene);\r\nc(\"Stage\", Stage);\r\nc(\"Component\", Component);\r\nc(\"Script\", Script);\r\nc(\"BitmapFont\", BitmapFont);\r\nc(\"BlurFilter\", BlurFilter);\r\nc(\"ColorFilter\", ColorFilter);\r\nc(\"GlowFilter\", GlowFilter);\r\nc(\"Point\", Point);\r\nc(\"Rectangle\", Rectangle);\r\nc(\"Texture\", Texture);\r\nc(\"Texture2D\", Texture2D);\r\n\r\nc(\"Prefab\", Prefab);\r\n\r\nc(\"Animator2D\", Animator2D);\r\nc(\"AnimatorControllerLayer2D\", AnimatorControllerLayer2D);\r\nc(\"AnimatorState2D\", AnimatorState2D);\r\nc(\"AnimationClip2D\", AnimationClip2D);\r\nc(\"AnimatorController2D\", AnimatorController2D);\r\nc(\"Animation2DParm\", Animation2DParm);\r\nc(\"Animation2DCondition\", Animation2DCondition);\r\n\r\nc(\"Vector2\", Vector2);\r\nc(\"Vector3\", Vector3);\r\nc(\"Vector4\", Vector4);\r\nc(\"Quaternion\", Quaternion);\r\nc(\"Color\", Color);\r\nc(\"Matrix\", Matrix);\r\nc(\"Matrix3x3\", Matrix3x3);\r\nc(\"Matrix4x4\", Matrix4x4);","/**\r\n * <p> <code>LocalStorage</code> 类用于没有时间限制的数据存储。</p>\r\n */\r\nexport class LocalStorage {\r\n\r\n    /**@ 基础类*/\r\n    static _baseClass: any;\r\n    /**\r\n     *  数据列表。\r\n     */\r\n    static items: any;\r\n    /**\r\n     * 表示是否支持  <code>LocalStorage</code>。\r\n     */\r\n    static support: boolean = false;\r\n    /**@internal */\r\n    static __init__(): boolean {\r\n        if (!LocalStorage._baseClass) {\r\n            LocalStorage._baseClass = Storage;\r\n            Storage.init();\r\n        }\r\n        LocalStorage.items = LocalStorage._baseClass.items;\r\n        LocalStorage.support = LocalStorage._baseClass.support;\r\n        return LocalStorage.support;\r\n    }\r\n\r\n    /**\r\n     * 存储指定键名和键值，字符串类型。\r\n     * @param key 键名。\r\n     * @param value 键值。\r\n     */\r\n    static setItem(key: string, value: string): void {\r\n        LocalStorage._baseClass.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名的值。\r\n     * @param key 键名。\r\n     * @return 字符串型值。\r\n     */\r\n    static getItem(key: string): string {\r\n        return LocalStorage._baseClass.getItem(key);\r\n    }\r\n\r\n    /**\r\n     * 存储指定键名及其对应的 <code>Object</code> 类型值。\r\n     * @param key 键名。\r\n     * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\r\n     */\r\n    static setJSON(key: string, value: any): void {\r\n        LocalStorage._baseClass.setJSON(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名对应的 <code>Object</code> 类型值。\r\n     * @param key 键名。\r\n     * @return <code>Object</code> 类型值\r\n     */\r\n    static getJSON(key: string): any {\r\n        return LocalStorage._baseClass.getJSON(key);\r\n    }\r\n\r\n    /**\r\n     * 删除指定键名的信息。\r\n     * @param key 键名。\r\n     */\r\n    static removeItem(key: string): void {\r\n        LocalStorage._baseClass.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * 清除本地存储信息。\r\n     */\r\n    static clear(): void {\r\n        LocalStorage._baseClass.clear();\r\n    }\r\n}\r\n\r\n\r\n/** @internal */\r\nclass Storage {\r\n\r\n\t/**\r\n\t *  数据列表。\r\n\t */\r\n    static items: any;\r\n\t/**\r\n\t * 表示是否支持  <code>LocalStorage</code>。\r\n\t */\r\n    static support: boolean = false;\r\n\r\n    static init(): void {\r\n        try { Storage.support = true; Storage.items = window.localStorage; Storage.setItem('laya', '1'); Storage.removeItem('laya'); } catch (e) { Storage.support = false; } if (!Storage.support) console.log('LocalStorage is not supprot or browser is private mode.');\r\n    }\r\n\r\n\t/**\r\n\t * 存储指定键名和键值，字符串类型。\r\n\t * @param key 键名。\r\n\t * @param value 键值。\r\n\t */\r\n    static setItem(key: string, value: string): void {\r\n        try {\r\n            Storage.support && Storage.items.setItem(key, value);\r\n        } catch (e) {\r\n            console.warn(\"set localStorage failed\", e);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取指定键名的值。\r\n\t * @param key 键名。\r\n\t * @return 字符串型值。\r\n\t */\r\n    static getItem(key: string): string {\r\n        return Storage.support ? Storage.items.getItem(key) : null;\r\n    }\r\n\r\n\t/**\r\n\t * 存储指定键名和它的 <code>Object</code> 类型值。\r\n\t * @param key 键名。\r\n\t * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\r\n\t */\r\n    static setJSON(key: string, value: any): void {\r\n        try {\r\n            Storage.support && Storage.items.setItem(key, JSON.stringify(value));\r\n        } catch (e) {\r\n            console.warn(\"set localStorage failed\", e);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取指定键名的 <code>Object</code> 类型值。\r\n\t * @param key 键名。\r\n\t * @return <code>Object</code> 类型值\r\n\t */\r\n    static getJSON(key: string): any {\r\n        try{\r\n            let obj = JSON.parse(Storage.support ? Storage.items.getItem(key) : null);\r\n            return obj;\r\n        }catch(err){\r\n            return Storage.items.getItem(key);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 删除指定键名的信息。\r\n\t * @param key 键名。\r\n\t */\r\n    static removeItem(key: string): void {\r\n        Storage.support && Storage.items.removeItem(key);\r\n    }\r\n\r\n\t/**\r\n\t * 清除本地存储信息。\r\n\t */\r\n    static clear(): void {\r\n        Storage.support && Storage.items.clear();\r\n    }\r\n\r\n}\r\n","import { RenderSpriteData, Value2D } from \"./Value2D\";\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\r\n\r\nexport class PrimitiveSV extends Value2D {\r\n    constructor() {\r\n        super(RenderSpriteData.Primitive);\r\n        this._defaultShader = Shader3D.find(\"Sprite2DPrimitive\");\r\n    }\r\n}\r\n\r\n","import { RenderSpriteData, Value2D } from \"./Value2D\";\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { Vector2 } from \"../../../../maths/Vector2\";\r\nimport { Vector4 } from \"../../../../maths/Vector4\";\r\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\";\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\";\r\n\r\nexport class TextureSV extends Value2D {\r\n    strength: number = 0;//TODO  delete？？\r\n\r\n    private _blurInfo: Vector2 = new Vector2();//TODO  shader中没有用\r\n    public get blurInfo(): Vector2 {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_BLURINFO);\r\n    }\r\n    public set blurInfo(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_BLURINFO, value);\r\n    }\r\n\r\n    private _u_blurInfo1: Vector4 = new Vector4();\r\n    public get u_blurInfo1(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_BLURINFO1);\r\n    }\r\n    public set u_blurInfo1(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_BLURINFO1, value);\r\n    }\r\n\r\n    private _u_blurInfo2: Vector4 = new Vector4();\r\n    public get u_blurInfo2(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_BLURINFO2);\r\n    }\r\n    public set u_blurInfo2(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_BLURINFO2, value);\r\n    }\r\n\r\n    private _u_TexRange: Vector4 = new Vector4();\r\n    public get u_TexRange(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_TEXRANGE)\r\n    }\r\n    public set u_TexRange(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_TEXRANGE, value);\r\n    }\r\n    private _colorMat: Matrix4x4 = new Matrix4x4();\r\n    public get colorMat(): Matrix4x4 {\r\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT);\r\n    }\r\n    public set colorMat(value: Matrix4x4) {\r\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT, value);\r\n    }\r\n\r\n    private _colorAlpha: Vector4 = new Vector4();\r\n    public get colorAlpha(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLORALPHA);\r\n    }\r\n    public set colorAlpha(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_COLORALPHA, value);\r\n    }\r\n\r\n    private _strength_sig2_2sig2_gauss1: Vector4 = new Vector4();\r\n    public get strength_sig2_2sig2_gauss1(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1);\r\n    }\r\n    public set strength_sig2_2sig2_gauss1(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1, value);\r\n    }\r\n\r\n    constructor() {\r\n        super(RenderSpriteData.Texture2D);\r\n        this._defaultShader = Shader3D.find(\"Sprite2DTexture\");\r\n        this.blurInfo = this._blurInfo;\r\n        this.u_blurInfo1 = this._u_blurInfo1;\r\n        this.u_blurInfo2 = this._u_blurInfo2;\r\n        this.u_TexRange = this._u_TexRange;\r\n        this.colorMat = this._colorMat;\r\n        this.colorAlpha = this._colorAlpha;\r\n        this.strength_sig2_2sig2_gauss1 = this._strength_sig2_2sig2_gauss1;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    clear(): void {\r\n        this.texture = null;\r\n        //this.shader = null;\r\n        this.defines._defineDatas.clear();\r\n\r\n    }\r\n}\r\n","import { Browser } from \"./Browser\";\r\n/**\r\n * <code>Mouse</code> 类用于控制鼠标光标样式。\r\n */\r\nexport class Mouse {\r\n    /**@private */\r\n    private static _style: any;\r\n    /**@private */\r\n    private static _preCursor: string;\r\n\r\n    /**\r\n     * 设置鼠标样式\r\n     * @param cursorStr\r\n     * 例如auto move no-drop col-resize\r\n     * all-scroll pointer not-allowed row-resize\r\n     * crosshair progress e-resize ne-resize\r\n     * default text n-resize nw-resize\r\n     * help vertical-text s-resize se-resize\r\n     * inherit wait w-resize sw-resize\r\n     */\r\n    static set cursor(cursorStr: string) {\r\n        Mouse._style.cursor = cursorStr;\r\n    }\r\n\r\n    static get cursor(): string {\r\n        return Mouse._style.cursor;\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): any {\r\n        Mouse._style = Browser.document.body.style;\r\n    }\r\n\r\n    /**\r\n     * 隐藏鼠标\r\n     */\r\n    static hide(): void {\r\n        if (Mouse.cursor != \"none\") {\r\n            Mouse._preCursor = Mouse.cursor;\r\n            Mouse.cursor = \"none\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示鼠标\r\n     */\r\n    static show(): void {\r\n        if (Mouse.cursor == \"none\") {\r\n            if (Mouse._preCursor) {\r\n                Mouse.cursor = Mouse._preCursor;\r\n            } else {\r\n                Mouse.cursor = \"auto\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Mesh2D } from \"./Mesh2D\";\r\nimport { RenderParams } from \"../../RenderEngine/RenderEnum/RenderParams\";\r\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n/**\r\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\r\n */\r\nexport class MeshParticle2D extends Mesh2D {\r\n    static const_stride: number = 116;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n    static vertexDeclaration: VertexDeclaration = null;\r\n    static __init__(): void {\r\n        const glfloat = LayaGL.renderEngine.getParams(RenderParams.FLOAT);\r\n        MeshParticle2D._fixattriInfo = [\r\n            glfloat, 4, 0,\t//CornerTextureCoordinate\r\n            glfloat, 3, 16,//pos\r\n            glfloat, 3, 28,//vel\r\n            glfloat, 4, 40,//start color\r\n            glfloat, 4, 56,//end color\r\n            glfloat, 3, 72,//size,rot\r\n            glfloat, 2, 84,//radius\r\n            glfloat, 4, 92,//radian\r\n            glfloat, 1, 108,//AgeAddScale\r\n            glfloat, 1, 112];\r\n\r\n\r\n    }\r\n\r\n    //TODO:coverage\r\n    constructor(maxNum: number) {\r\n        super(MeshParticle2D.const_stride, maxNum * 4 * MeshParticle2D.const_stride, 4);\t\t//ib 先4\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshParticle2D._fixattriInfo);\r\n        this.createQuadIB(maxNum);\r\n        this._quadNum = maxNum;\r\n\r\n        if (!MeshParticle2D.vertexDeclaration) {\r\n            MeshParticle2D.vertexDeclaration = new VertexDeclaration(116, [\r\n                new VertexElement(0, VertexElementFormat.Vector4, 0),\r\n                new VertexElement(16, VertexElementFormat.Vector3, 1),\r\n                new VertexElement(28, VertexElementFormat.Vector3, 2),\r\n                new VertexElement(40, VertexElementFormat.Vector4, 3),\r\n                new VertexElement(56, VertexElementFormat.Vector4, 4),\r\n                new VertexElement(72, VertexElementFormat.Vector3, 5),\r\n                new VertexElement(84, VertexElementFormat.Vector2, 6),\r\n                new VertexElement(92, VertexElementFormat.Vector4, 7),\r\n                new VertexElement(108, VertexElementFormat.Single, 8),\r\n                new VertexElement(112, VertexElementFormat.Single, 9)\r\n            ]);\r\n        }\r\n\r\n        this._vb.vertexDeclaration = MeshParticle2D.vertexDeclaration;\r\n    }\r\n\r\n    setMaxParticleNum(maxNum: number): void {\r\n        this._vb.buffer2D._resizeBuffer(maxNum * 4 * MeshParticle2D.const_stride, false);\r\n        this.createQuadIB(maxNum);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    //TODO:coverage\r\n    static getAMesh(maxNum: number): MeshParticle2D {\r\n        //console.log('getmesh');\r\n        if (MeshParticle2D._POOL.length) {\r\n            var ret: MeshParticle2D = MeshParticle2D._POOL.pop();\r\n            ret.setMaxParticleNum(maxNum);\r\n            return ret;\r\n        }\r\n        return new MeshParticle2D(maxNum);\r\n    }\r\n\r\n    /**\r\n     * 把本对象放到回收池中，以便getMesh能用。\r\n     * @override\r\n     */\r\n    //TODO:coverage\r\n    releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshParticle2D._POOL.push(this);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._vb.deleteBuffer();\r\n        //ib用deletebuffer么\r\n    }\r\n}\r\n\r\n","﻿import { ILaya } from \"./ILaya\";\r\nimport { Input } from \"./laya/display/Input\";\r\nimport { Sprite } from \"./laya/display/Sprite\";\r\nimport { Stage } from \"./laya/display/Stage\";\r\nimport { InputManager } from \"./laya/events/InputManager\";\r\nimport { SoundManager } from \"./laya/media/SoundManager\";\r\nimport { Loader } from \"./laya/net/Loader\";\r\nimport { LocalStorage } from \"./laya/net/LocalStorage\";\r\nimport { Render } from \"./laya/renders/Render\";\r\nimport { RenderSprite } from \"./laya/renders/RenderSprite\";\r\nimport { Context } from \"./laya/resource/Context\";\r\nimport { HTMLCanvas } from \"./laya/resource/HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./laya/resource/RenderTexture2D\";\r\nimport { Texture } from \"./laya/resource/Texture\";\r\nimport { Browser } from \"./laya/utils/Browser\";\r\nimport { CacheManger } from \"./laya/utils/CacheManger\";\r\nimport { ColorUtils } from \"./laya/utils/ColorUtils\";\r\nimport { Timer } from \"./laya/utils/Timer\";\r\nimport { PrimitiveSV } from \"./laya/webgl/shader/d2/value/PrimitiveSV\";\r\nimport { TextureSV } from \"./laya/webgl/shader/d2/value/TextureSV\";\r\nimport { RenderSpriteData, Value2D } from \"./laya/webgl/shader/d2/value/Value2D\";\r\nimport { RenderState2D } from \"./laya/webgl/utils/RenderState2D\";\r\nimport { WebGL } from \"./laya/webgl/WebGL\";\r\nimport { Mouse } from \"./laya/utils/Mouse\";\r\nimport { MeshVG } from \"./laya/webgl/utils/MeshVG\";\r\nimport { MeshParticle2D } from \"./laya/webgl/utils/MeshParticle2D\";\r\nimport { MeshQuadTexture } from \"./laya/webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"./laya/webgl/utils/MeshTexture\";\r\nimport { WeakObject } from \"./laya/utils/WeakObject\";\r\nimport { RenderStateContext } from \"./laya/RenderEngine/RenderStateContext\";\r\nimport { RenderClearFlag } from \"./laya/RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { IStageConfig, LayaEnv } from \"./LayaEnv\";\r\nimport { Color } from \"./laya/maths/Color\";\r\nimport { URL } from \"./laya/net/URL\";\r\nimport { RunDriver } from \"./laya/utils/RunDriver\";\r\nimport { Config } from \"./Config\";\r\nimport { Shader3D } from \"./laya/RenderEngine/RenderShader/Shader3D\";\r\nimport { LayaGL } from \"./laya/layagl/LayaGL\";\r\nimport { Material } from \"./laya/resource/Material\";\r\n\r\n/**\r\n * <code>Laya</code> 是全局对象的引用入口集。\r\n * Laya类引用了一些常用的全局对象，比如Laya.stage：舞台，Laya.timer：时间管理器，Laya.loader：加载管理器，使用时注意大小写。\r\n */\r\nexport class Laya {\r\n    /** 舞台对象的引用。*/\r\n    static stage: Stage = null;\r\n\r\n    /**@private 系统时钟管理器，引擎内部使用*/\r\n    static systemTimer: Timer = null;\r\n    /**@private 组件的物理时钟管理器*/\r\n    static physicsTimer: Timer = null;\r\n    /**游戏主时针，同时也是管理场景，动画，缓动等效果时钟，通过控制本时针缩放，达到快进慢播效果*/\r\n    static timer: Timer = null;\r\n    /** 加载管理器的引用。*/\r\n    static loader: Loader = null;\r\n\r\n    /**@private Render 类的引用。*/\r\n    static render: Render;\r\n\r\n    private static _inited = false;\r\n    private static _initCallbacks: Array<() => void | Promise<void>> = [];\r\n    private static _beforeInitCallbacks: Array<(stageConfig: IStageConfig) => void | Promise<void>> = [];\r\n    private static _afterInitCallbacks: Array<() => void | Promise<void>> = [];\r\n\r\n    /**\r\n     * 初始化引擎。使用引擎需要先初始化引擎。\r\n     */\r\n    static init(stageConfig?: IStageConfig): Promise<void>;\r\n    /**\r\n     * 初始化引擎。使用引擎需要先初始化引擎。\r\n     * @param\twidth 初始化的游戏窗口宽度，又称设计宽度。\r\n     * @param\theight 初始化的游戏窗口高度，又称设计高度。\r\n     */\r\n    static init(width: number, height: number): Promise<void>;\r\n    static init(...args: any[]): Promise<void> {\r\n        if (Laya._inited)\r\n            return Promise.resolve();\r\n        Laya._inited = true;\r\n\r\n        if (!WebGL.enable())\r\n            throw new Error(\"Must support webGL!\");\r\n\r\n        let stageConfig: IStageConfig;\r\n        if (typeof (args[0]) === \"number\") {\r\n            stageConfig = {\r\n                designWidth: args[0],\r\n                designHeight: args[1]\r\n            };\r\n        }\r\n        else\r\n            stageConfig = args[0];\r\n\r\n        Browser.__init__();\r\n        URL.__init__();\r\n\r\n        let laya3D = (<any>window)[\"Laya3D\"];\r\n        if (laya3D) {\r\n            RunDriver.changeWebGLSize = laya3D._changeWebGLSize;\r\n            Render.is3DMode = true;\r\n        }\r\n\r\n        // 创建主画布\r\n        //这个其实在Render中感觉更合理，但是runtime要求第一个canvas是主画布，所以必须在下面的那个离线画布之前\r\n        let mainCanv = Browser.mainCanvas = new HTMLCanvas(true);\r\n        //Render._mainCanvas = mainCanv;\r\n        Laya._setStyleInfo(mainCanv);\r\n        if (!Browser.onKGMiniGame && !Browser.onAlipayMiniGame && !Browser.onTBMiniGame) {\r\n            Browser.container.appendChild(mainCanv.source);//xiaosong add\r\n        }\r\n\r\n        Browser.canvas = new HTMLCanvas(true);\r\n        Browser.context = <CanvasRenderingContext2D>(Browser.canvas.getContext('2d') as any);\r\n        Browser.supportWebAudio = SoundManager.__init__();\r\n        Browser.supportLocalStorage = LocalStorage.__init__();\r\n\r\n        systemTimer = new Timer(false);\r\n        physicsTimer = new Timer(false);\r\n        timer = new Timer(false);\r\n        loader = new Loader();\r\n\r\n        Laya.systemTimer = Timer.gSysTimer = systemTimer;\r\n        Laya.timer = timer;\r\n        Laya.physicsTimer = physicsTimer;\r\n        Laya.loader = loader;\r\n\r\n        ILaya.systemTimer = systemTimer;\r\n        ILaya.physicsTimer = physicsTimer;\r\n        ILaya.timer = timer;\r\n        ILaya.loader = loader;\r\n\r\n        WeakObject.__init__();\r\n        Mouse.__init__();\r\n\r\n        if (LayaEnv.isConch) {\r\n            Laya.enableNative();\r\n        }\r\n        CacheManger.beginCheck();\r\n\r\n        let steps: Array<() => any> = [];\r\n\r\n        if (LayaEnv.beforeInit)\r\n            steps.push(() => LayaEnv.beforeInit(stageConfig));\r\n        steps.push(() => Promise.all(Laya._beforeInitCallbacks.map(func => func(stageConfig))));\r\n\r\n        steps.push(() => LayaGL.renderOBJCreate.createEngine(null, Browser.mainCanvas));\r\n        steps.push(() => Laya.initRender2D(stageConfig));\r\n        if (laya3D)\r\n            steps.push(() => laya3D.__init__());\r\n        steps.push(() => Promise.all(Laya._initCallbacks.map(func => func())));\r\n\r\n        steps.push(() => Promise.all(Laya._afterInitCallbacks.map(func => func())));\r\n\r\n        if (LayaEnv.afterInit)\r\n            steps.push(() => LayaEnv.afterInit());\r\n\r\n        let p = Promise.resolve();\r\n        for (let step of steps)\r\n            p = p.then(step);\r\n\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 适配淘宝小游戏\r\n     * @param mainCanv \r\n     */\r\n    static _setStyleInfo(mainCanv: HTMLCanvas): void {\r\n        let style: any = mainCanv.source.style;\r\n        style.position = 'absolute';\r\n        style.top = style.left = \"0px\";\r\n        style.background = \"#000000\";\r\n    }\r\n\r\n    static initRender2D(stageConfig: IStageConfig) {\r\n        stage = ((<any>window)).stage = ILaya.stage = Laya.stage = new Stage();\r\n\r\n        Shader3D.init();\r\n        MeshQuadTexture.__int__();\r\n        MeshVG.__init__();\r\n        MeshTexture.__init__();\r\n\r\n        Laya.render = Laya.createRender();\r\n        render = Laya.render;\r\n        stage.size(stageConfig.designWidth, stageConfig.designHeight);\r\n        if (stageConfig.scaleMode)\r\n            stage.scaleMode = stageConfig.scaleMode;\r\n        if (stageConfig.screenMode)\r\n            stage.screenMode = stageConfig.screenMode;\r\n        if (stageConfig.alignV)\r\n            stage.alignV = stageConfig.alignV;\r\n        if (stageConfig.alignH)\r\n            stage.alignH = stageConfig.alignH;\r\n        if (Config.isAlpha)\r\n            stage.bgColor = null;\r\n        else if (stageConfig.backgroundColor)\r\n            stage.bgColor = stageConfig.backgroundColor;\r\n\r\n        if (LayaEnv.isConch && (window as any).conch.setGlobalRepaint) {\r\n            (window as any).conch.setGlobalRepaint(stage.setGlobalRepaint.bind(stage));\r\n        }\r\n\r\n        RenderStateContext.__init__();\r\n        MeshParticle2D.__init__();\r\n        RenderSprite.__init__();\r\n        Material.__initDefine__();\r\n        InputManager.__init__(stage, Render.canvas);\r\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\r\n            Input.isAppUseNewInput = true;\r\n        }\r\n        Input.__init__();\r\n        SoundManager.autoStopMusic = true;\r\n        //Init internal 2D Value2D\r\n        Value2D._initone(RenderSpriteData.Texture2D, TextureSV);\r\n        Value2D._initone(RenderSpriteData.Primitive, PrimitiveSV);\r\n    }\r\n\r\n    /**\r\n     * hook function\r\n     * @internal\r\n     * @returns \r\n     */\r\n    static createRender(): Render {\r\n        return new Render(0, 0, Browser.mainCanvas);\r\n    }\r\n\r\n    /**\r\n     * 表示是否捕获全局错误并弹出提示。默认为false。\r\n     * 适用于移动设备等不方便调试的时候，设置为true后，如有未知错误，可以弹窗抛出详细错误堆栈。\r\n     */\r\n    static alertGlobalError(value: boolean) {\r\n        var erralert: number = 0;\r\n        if (value) {\r\n            Browser.window.onerror = function (msg: string, url: string, line: string, column: string, detail: any): void {\r\n                if (erralert++ < 5 && detail)\r\n                    this.alert(\"出错啦，请把此信息截图给研发商\\n\" + msg + \"\\n\" + detail.stack);\r\n            }\r\n        } else {\r\n            Browser.window.onerror = null;\r\n        }\r\n    }\r\n    /**@internal */\r\n    private static _evcode: string = \"eva\" + \"l\";\r\n\r\n    /**@internal */\r\n    static _runScript(script: string): any {\r\n        return Browser.window[Laya._evcode](script);\r\n    }\r\n\r\n    /**\r\n     * 开启DebugPanel\r\n     * @param\tdebugJsPath laya.debugtool.js文件路径\r\n     */\r\n    static enableDebugPanel(debugJsPath: string = \"libs/laya.debugtool.js\"): void {\r\n        if (!(window as any)['Laya'][\"DebugPanel\"]) {\r\n            var script: any = Browser.createElement(\"script\");\r\n            script.onload = function (): void {\r\n                (window as any)['Laya'][\"DebugPanel\"].enable();\r\n            }\r\n            script.src = debugJsPath;\r\n            Browser.document.body.appendChild(script);\r\n        } else {\r\n            (window as any)['Laya'][\"DebugPanel\"].enable();\r\n        }\r\n    }\r\n\r\n    private static isNativeRender_enable: boolean = false;\r\n\r\n    /**@private */\r\n    private static enableNative(): void {\r\n        if (Laya.isNativeRender_enable)\r\n            return;\r\n        Laya.isNativeRender_enable = true;\r\n        RenderState2D.width = Browser.window.innerWidth;\r\n        RenderState2D.height = Browser.window.innerHeight;\r\n\r\n        Stage.clear = function (color: string): void {\r\n            Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\r\n            var c: any[] = ColorUtils.create(color).arrColor;\r\n\r\n            LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, new Color(c[0], c[1], c[2], c[3]), 1);\r\n            // if (c) gl.clearColor(c[0], c[1], c[2], c[3]);\r\n            // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\r\n            RenderState2D.clear();\r\n        }\r\n\r\n        Sprite.drawToCanvas = function (sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): any {\r\n            offsetX -= sprite.x;\r\n            offsetY -= sprite.y;\r\n            offsetX |= 0;\r\n            offsetY |= 0;\r\n            canvasWidth |= 0;\r\n            canvasHeight |= 0;\r\n\r\n            var canv: HTMLCanvas = new HTMLCanvas(false);\r\n            var ctx: Context = canv.getContext('2d') as Context;\r\n            canv.size(canvasWidth, canvasHeight);\r\n\r\n            ctx.asBitmap = true;\r\n            ctx._targets.start();\r\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n            ctx.flush();\r\n            ctx._targets.end();\r\n            ctx._targets.restore();\r\n            return canv;\r\n        }\r\n        //RenderTexture2D.prototype._uv = RenderTexture2D.flipyuv;\r\n        Object[\"defineProperty\"](RenderTexture2D.prototype, \"uv\", {\r\n            \"get\": function (): any {\r\n                return this._uv;\r\n            },\r\n            \"set\": function (v: any): void {\r\n                this._uv = v;\r\n            }\r\n        }\r\n        );\r\n        HTMLCanvas.prototype.getTexture = function (): Texture | RenderTexture2D {\r\n            if (!this._texture) {\r\n                // @ts-ignore\r\n                this._texture = this.context._targets;\r\n                //遗留的奇怪代码，先注释掉\r\n                // @ts-ignore\r\n                this._texture.uv = RenderTexture2D.flipyuv;\r\n                // @ts-ignore\r\n                this._texture.bitmap = this._texture;\r\n            }\r\n            return this._texture;\r\n        }\r\n    }\r\n    /**\r\n     * 引擎各个模块，例如物理，寻路等，如果有初始化逻辑可以在这里注册初始化函数。开发者一般不直接使用。\r\n     * @param callback 模块的初始化函数\r\n     */\r\n    static addInitCallback(callback: () => void | Promise<void>) {\r\n        Laya._initCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * 在引擎初始化前执行自定义逻辑。此时Stage尚未创建，因为可以修改stageConfig实现动态舞台配置。\r\n     * @param callback \r\n     */\r\n    static addBeforeInitCallback(callback: (stageConfig: IStageConfig) => void | Promise<void>): void {\r\n        Laya._beforeInitCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * 在引擎初始化后执行自定义逻辑\r\n     * @param callback \r\n     */\r\n    static addAfterInitCallback(callback: () => void | Promise<void>): void {\r\n        Laya._afterInitCallbacks.push(callback);\r\n    }\r\n}\r\n\r\nILaya.Laya = Laya;\r\nILaya.Loader = Loader;\r\nILaya.Context = Context;\r\nILaya.Browser = Browser;\r\n\r\n/**@internal */\r\nexport var init = Laya.init;\r\n/**@internal */\r\nexport var stage: Stage;\r\n/**@internal */\r\nexport var systemTimer: Timer;\r\n/**@internal */\r\nexport var physicsTimer: Timer;\r\n/**@internal */\r\nexport var timer: Timer;\r\n/**@internal */\r\nexport var loader: Loader;\r\n/**@internal */\r\nexport var render: Render;\r\n/**@internal */\r\nexport var alertGlobalError = Laya.alertGlobalError;\r\n/**@internal */\r\nexport var enableDebugPanel = Laya.enableDebugPanel;\r\n\r\nexport var addInitCallback = Laya.addInitCallback;\r\nexport var addBeforeInitCallback = Laya.addBeforeInitCallback;\r\nexport var addAfterInitCallback = Laya.addAfterInitCallback;","export enum DrawType {\r\n    DrawArray,\r\n    DrawArrayInstance,\r\n    DrawElement,\r\n    DrawElementInstance\r\n}","export enum RenderDrawMode{\r\n    TRIANGLES,\r\n    POINTS,\r\n    LINES\r\n}","export enum RenderIndexMode{\r\n    UNSIGNED_BYTE,\r\n    UNSIGNED_SHORT,\r\n    UNSIGNED_INT\r\n}","export enum TextureCompareMode {\r\n    None,\r\n    LEQUAL,\r\n    GEQUAL,\r\n    LESS,\r\n    GREATER,\r\n    EQUAL,\r\n    NOTEQUAL,\r\n    ALWAYS,\r\n    NEVER\r\n}","/**\r\n * 纹理解码格式。\r\n */\r\nexport enum TextureDecodeFormat {\r\n    /** 常规解码方式,直接采样纹理颜色。*/\r\n    Normal,\r\n    /** 按照RGBM方式解码并计算最终RGB颜色。 */\r\n    RGBM\r\n}","import { BlendEquationSeparate } from \"./RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"./RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"./RenderEnum/BlendType\";\r\n\r\nexport class BlendState {\r\n    static _blend_All_pool: any = {};\r\n    static _blend_seperate_pool: any = {};\r\n    static create(blendType: number, colorBlendhash: BlendComponent, alphaBlendComponent: BlendComponent) {\r\n\r\n    }\r\n    /** Whether to enable blend. */\r\n    blendType: BlendType = 0;\r\n    colorBlendComponent: BlendComponent;\r\n    alphaBlendComponent: BlendComponent;\r\n    constructor(blendType: number) {\r\n\r\n    }\r\n}\r\n\r\nexport class BlendComponent {\r\n    static _pool: any = {};\r\n    static getHash(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number): number {\r\n        return (blendOperationGLData) + (sourceBlendFactor << 3) + (destinationFactor << 7);\r\n    }\r\n    static getBlendComponent(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number) {\r\n        let index = BlendComponent.getHash(blendOperationGLData, sourceBlendFactor, destinationFactor);\r\n        if (!BlendComponent._pool[index])\r\n            BlendComponent._pool[index] = new BlendComponent(blendOperationGLData, sourceBlendFactor, destinationFactor, index);\r\n        return BlendComponent._pool[index];\r\n    }\r\n    _blendOperation: BlendEquationSeparate;\r\n    _blendOperationGLData: number;\r\n    _sourceBlendFactor: BlendFactor;\r\n    _sourceBlendFactorGLData: number;\r\n    _destinationFactor: BlendFactor;\r\n    _destinationFactorGLData: number;\r\n    _hashIndex = 0;\r\n    constructor(blendOperationGLData: BlendEquationSeparate, sourceBlendFactor: BlendFactor, destinationFactor: BlendFactor, hashindex: number) {\r\n        this._hashIndex = hashindex;\r\n        this._blendOperationGLData = blendOperationGLData;\r\n        this._sourceBlendFactor = sourceBlendFactor;\r\n        this._destinationFactor = destinationFactor;\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { ShaderDataType } from \"./RenderShader/ShaderData\";\r\n\r\ntype UniformProperty = { id: number, propertyName: string, uniformtype?: ShaderDataType }\r\nexport class CommandUniformMap {\r\n\r\n\t/**@internal */\r\n\t_idata: { [key: number]: { block?: Object, propertyName: string, uniformtype?: ShaderDataType, blockProperty?: UniformProperty[] } } = {};\r\n\t_stateName: string;\r\n\r\n\tconstructor(stateName: string) {\r\n\t\tthis._stateName = stateName;\r\n\t}\r\n\r\n\thasPtrID(propertyID: number): boolean {\r\n\t\treturn !!(this._idata[propertyID] != null);\r\n\t}\r\n\r\n\tgetMap() {\r\n\t\treturn this._idata;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个Uniform参数\r\n\t * @internal\r\n\t * @param propertyID \r\n\t * @param propertyKey \r\n\t */\r\n\taddShaderUniform(propertyID: number, propertyKey: string, uniformtype: ShaderDataType, block: string = null): void {\r\n\t\tthis._idata[propertyID] = { uniformtype: uniformtype, propertyName: propertyKey, block: block };\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个Uniform\r\n\t * @param propertyID \r\n\t * @param propertyKey \r\n\t */\r\n\taddShaderBlockUniform(propertyID: number, blockname: string, blockProperty: UniformProperty[]): void {\r\n\t\tthis._idata[propertyID] = { propertyName: blockname, blockProperty: blockProperty }\r\n\t\tblockProperty.forEach(element => {\r\n\t\t\tthis.addShaderUniform(element.id, element.propertyName, element.uniformtype, blockname);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n}","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderStateType } from \"./RenderEnum/RenderStateType\";\r\n\r\n/**\r\n * 渲染状态设置命令流\r\n */\r\nexport class RenderStateCommand{\r\n    cmdArray:Map<RenderStateType,any> = new Map();\r\n    constructor(){\r\n\r\n    }\r\n    addCMD(renderstate:RenderStateType,value:number|boolean|Array<number>){\r\n        this.cmdArray.set(renderstate,value);\r\n    }\r\n\r\n    applyCMD(){\r\n        LayaGL.renderEngine.applyRenderStateCMD(this);\r\n    }\r\n\r\n    clear(){\r\n        this.cmdArray.clear();\r\n    }\r\n}","import { Handler } from \"../utils/Handler\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Component } from \"../components/Component\";\r\n\r\n/**\r\n * 效果插件基类，基于对象池管理\r\n */\r\nexport class EffectBase extends Component {\r\n    /**动画持续时间，单位为毫秒*/\r\n    duration: number = 1000;\r\n    /**动画延迟时间，单位为毫秒*/\r\n    delay: number = 0;\r\n    /**重复次数，默认为播放一次*/\r\n    repeat: number = 0;\r\n    /**缓动类型，如果为空，则默认为匀速播放*/\r\n    ease: string;\r\n    /**触发事件，如果为空，则创建时触发*/\r\n    eventName: string;\r\n    /**效用作用的目标对象，如果为空，则是脚本所在的节点本身*/\r\n    target: Sprite;\r\n    /**效果结束后，是否自动移除节点*/\r\n    autoDestroyAtComplete: boolean = true;\r\n\r\n    protected _comlete: Handler;\r\n    protected _tween: Tween;\r\n\r\n    protected _onAwake(): void {\r\n        this.target = this.target || (<Sprite>this.owner);\r\n        if (this.autoDestroyAtComplete) \r\n            this._comlete = Handler.create(this.target, this.target.destroy, null, false);\r\n        if (this.eventName) \r\n            this.owner.on(this.eventName, this, this._exeTween);\r\n        else \r\n            this._exeTween();\r\n    }\r\n\r\n    protected _exeTween(): void {\r\n        this._tween = this._doTween();\r\n        this._tween.repeat = this.repeat;\r\n    }\r\n\r\n    protected _doTween(): Tween {\r\n        return null;\r\n    }\r\n\r\n    onReset(): void {\r\n        this.duration = 1000;\r\n        this.delay = 0;\r\n        this.repeat = 0;\r\n        this.ease = null;\r\n        this.target = null;\r\n        if (this.eventName) {\r\n            this.owner.off(this.eventName, this, this._exeTween);\r\n            this.eventName = null;\r\n        }\r\n        if (this._comlete) {\r\n            this._comlete.recover();\r\n            this._comlete = null;\r\n        }\r\n        if (this._tween) {\r\n            this._tween.clear();\r\n            this._tween = null;\r\n        }\r\n    }\r\n}\r\n\r\n","/**\r\n * <code>Keyboard</code> 类的属性是一些常数，这些常数表示控制游戏时最常用的键。\r\n */\r\nexport class Keyboard {\r\n    /** 与 0 的键控代码值 (48) 关联的常数。*/\r\n    static NUMBER_0: number = 48;\r\n    /** 与 1 的键控代码值 (49) 关联的常数。*/\r\n    static NUMBER_1: number = 49;\r\n    /** 与 2 的键控代码值 (50) 关联的常数。*/\r\n    static NUMBER_2: number = 50;\r\n    /** 与 3 的键控代码值 (51) 关联的常数。*/\r\n    static NUMBER_3: number = 51;\r\n    /** 与 4 的键控代码值 (52) 关联的常数。*/\r\n    static NUMBER_4: number = 52;\r\n    /** 与 5 的键控代码值 (53) 关联的常数。*/\r\n    static NUMBER_5: number = 53;\r\n    /** 与 6 的键控代码值 (54) 关联的常数。*/\r\n    static NUMBER_6: number = 54;\r\n    /** 与 7 的键控代码值 (55) 关联的常数。*/\r\n    static NUMBER_7: number = 55;\r\n    /** 与 8 的键控代码值 (56) 关联的常数。*/\r\n    static NUMBER_8: number = 56;\r\n    /** 与 9 的键控代码值 (57) 关联的常数。*/\r\n    static NUMBER_9: number = 57;\r\n\r\n    /** 与 A 键的键控代码值 (65) 关联的常数。*/\r\n    static A: number = 65;\r\n    /** 与 B 键的键控代码值 (66) 关联的常数。*/\r\n    static B: number = 66;\r\n    /** 与 C 键的键控代码值 (67) 关联的常数。*/\r\n    static C: number = 67;\r\n    /** 与 D 键的键控代码值 (68) 关联的常数。*/\r\n    static D: number = 68;\r\n    /** 与 E 键的键控代码值 (69) 关联的常数。*/\r\n    static E: number = 69;\r\n    /** 与 F 键的键控代码值 (70) 关联的常数。*/\r\n    static F: number = 70;\r\n    /** 与 G 键的键控代码值 (71) 关联的常数。*/\r\n    static G: number = 71;\r\n    /** 与 H 键的键控代码值 (72) 关联的常数。*/\r\n    static H: number = 72;\r\n    /** 与 I 键的键控代码值 (73) 关联的常数。*/\r\n    static I: number = 73;\r\n    /** 与 J 键的键控代码值 (74) 关联的常数。*/\r\n    static J: number = 74;\r\n    /** 与 K 键的键控代码值 (75) 关联的常数。*/\r\n    static K: number = 75;\r\n    /** 与 L 键的键控代码值 (76) 关联的常数。*/\r\n    static L: number = 76;\r\n    /** 与 M 键的键控代码值 (77) 关联的常数。*/\r\n    static M: number = 77;\r\n    /** 与 N 键的键控代码值 (78) 关联的常数。*/\r\n    static N: number = 78;\r\n    /** 与 O 键的键控代码值 (79) 关联的常数。*/\r\n    static O: number = 79;\r\n    /** 与 P 键的键控代码值 (80) 关联的常数。*/\r\n    static P: number = 80;\r\n    /** 与 Q 键的键控代码值 (81) 关联的常数。*/\r\n    static Q: number = 81;\r\n    /** 与 R 键的键控代码值 (82) 关联的常数。*/\r\n    static R: number = 82;\r\n    /** 与 S 键的键控代码值 (83) 关联的常数。*/\r\n    static S: number = 83;\r\n    /** 与 T 键的键控代码值 (84) 关联的常数。*/\r\n    static T: number = 84;\r\n    /** 与 U 键的键控代码值 (85) 关联的常数。*/\r\n    static U: number = 85;\r\n    /** 与 V 键的键控代码值 (86) 关联的常数。*/\r\n    static V: number = 86;\r\n    /** 与 W 键的键控代码值 (87) 关联的常数。*/\r\n    static W: number = 87;\r\n    /** 与 X 键的键控代码值 (88) 关联的常数。*/\r\n    static X: number = 88;\r\n    /** 与 Y 键的键控代码值 (89) 关联的常数。*/\r\n    static Y: number = 89;\r\n    /** 与 Z 键的键控代码值 (90) 关联的常数。*/\r\n    static Z: number = 90;\r\n\r\n    /** 与 F1 的键控代码值 (112) 关联的常数。*/\r\n    static F1: number = 112;\r\n    /** 与 F2 的键控代码值 (113) 关联的常数。*/\r\n    static F2: number = 113;\r\n    /** 与 F3 的键控代码值 (114) 关联的常数。*/\r\n    static F3: number = 114;\r\n    /** 与 F4 的键控代码值 (115) 关联的常数。*/\r\n    static F4: number = 115;\r\n    /** 与 F5 的键控代码值 (116) 关联的常数。*/\r\n    static F5: number = 116;\r\n    /** 与 F6 的键控代码值 (117) 关联的常数。*/\r\n    static F6: number = 117;\r\n    /** 与 F7 的键控代码值 (118) 关联的常数。*/\r\n    static F7: number = 118;\r\n    /** 与 F8 的键控代码值 (119) 关联的常数。*/\r\n    static F8: number = 119;\r\n    /** 与 F9 的键控代码值 (120) 关联的常数。*/\r\n    static F9: number = 120;\r\n    /** 与 F10 的键控代码值 (121) 关联的常数。*/\r\n    static F10: number = 121;\r\n    /** 与 F11 的键控代码值 (122) 关联的常数。*/\r\n    static F11: number = 122;\r\n    /** 与 F12 的键控代码值 (123) 关联的常数。*/\r\n    static F12: number = 123;\r\n    /** 与 F13 的键控代码值 (124) 关联的常数。*/\r\n    static F13: number = 124;\r\n    /** 与 F14 的键控代码值 (125) 关联的常数。*/\r\n    static F14: number = 125;\r\n    /** 与 F15 的键控代码值 (126) 关联的常数。*/\r\n    static F15: number = 126;\r\n\r\n    /** 与数字键盘的伪键控代码 (21) 关联的常数。*/\r\n    static NUMPAD: number = 21;\r\n    /** 与数字键盘上的数字 0 的键控代码值 (96) 关联的常数。*/\r\n    static NUMPAD_0: number = 96;\r\n    /** 与数字键盘上的数字 1 的键控代码值 (97) 关联的常数。*/\r\n    static NUMPAD_1: number = 97;\r\n    /** 与数字键盘上的数字 2 的键控代码值 (98) 关联的常数。*/\r\n    static NUMPAD_2: number = 98;\r\n    /** 与数字键盘上的数字 3 的键控代码值 (99) 关联的常数。*/\r\n    static NUMPAD_3: number = 99;\r\n    /** 与数字键盘上的数字 4 的键控代码值 (100) 关联的常数。*/\r\n    static NUMPAD_4: number = 100;\r\n    /** 与数字键盘上的数字 5 的键控代码值 (101) 关联的常数。*/\r\n    static NUMPAD_5: number = 101;\r\n    /** 与数字键盘上的数字 6 的键控代码值 (102) 关联的常数。*/\r\n    static NUMPAD_6: number = 102;\r\n    /** 与数字键盘上的数字 7 的键控代码值 (103) 关联的常数。*/\r\n    static NUMPAD_7: number = 103;\r\n    /** 与数字键盘上的数字 8 的键控代码值 (104) 关联的常数。*/\r\n    static NUMPAD_8: number = 104;\r\n    /** 与数字键盘上的数字 9 的键控代码值 (105) 关联的常数。*/\r\n    static NUMPAD_9: number = 105;\r\n\r\n    /** 与数字键盘上的加号 (+) 的键控代码值 (107) 关联的常数。*/\r\n    static NUMPAD_ADD: number = 107;\r\n    /** 与数字键盘上的小数点 (.) 的键控代码值 (110) 关联的常数。*/\r\n    static NUMPAD_DECIMAL: number = 110;\r\n    /** 与数字键盘上的除号 (/) 的键控代码值 (111) 关联的常数。*/\r\n    static NUMPAD_DIVIDE: number = 111;\r\n    /** 与数字键盘上的 Enter 的键控代码值 (108) 关联的常数。*/\r\n    static NUMPAD_ENTER: number = 108;\r\n    /** 与数字键盘上的乘号 (*) 的键控代码值 (106) 关联的常数。*/\r\n    static NUMPAD_MULTIPLY: number = 106;\r\n    /** 与数字键盘上的减号 (-) 的键控代码值 (109) 关联的常数。*/\r\n    static NUMPAD_SUBTRACT: number = 109;\r\n    /** 与 ; 键的键控代码值 (186) 关联的常数。*/\r\n    static SEMICOLON: number = 186;\r\n    /** 与 = 键的键控代码值 (187) 关联的常数。*/\r\n    static EQUAL: number = 187;\r\n    /** 与 F15 的键控代码值 (188) 关联的常数。*/\r\n    static COMMA: number = 188;\r\n    /** 与 - 键的键控代码值 (189) 关联的常数。*/\r\n    static MINUS: number = 189;\r\n    /** 与 . 键的键控代码值 (190) 关联的常数。*/\r\n    static PERIOD: number = 190;\r\n    /** 与 / 键的键控代码值 (191) 关联的常数。*/\r\n    static SLASH: number = 191;\r\n    /** 与 ` 键的键控代码值 (192) 关联的常数。*/\r\n    static BACKQUOTE: number = 192;\r\n    /** 与 [ 键的键控代码值 (219) 关联的常数。*/\r\n    static LEFTBRACKET: number = 219;\r\n    /** 与 \\ 键的键控代码值 (220) 关联的常数。*/\r\n    static BACKSLASH: number = 220;\r\n    /** 与 ] 键的键控代码值 (221) 关联的常数。*/\r\n    static RIGHTBRACKET: number = 221;\r\n    /** 与 ' 键的键控代码值 (222) 关联的常数。*/\r\n    static QUOTE: number = 222;\r\n    /** 与 Alternate (Option) 键的键控代码值 (18) 关联的常数。*/\r\n    static ALTERNATE: number = 18;\r\n    /** 与 Backspace 的键控代码值 (8) 关联的常数。*/\r\n    static BACKSPACE: number = 8;\r\n    /** 与 Caps Lock 的键控代码值 (20) 关联的常数。*/\r\n    static CAPS_LOCK: number = 20;\r\n    /** 与 Mac 命令键 (15) 关联的常数。*/\r\n    static COMMAND: number = 15;\r\n    /** 与 Ctrl 的键控代码值 (17) 关联的常数。*/\r\n    static CONTROL: number = 17;\r\n    /** 与 Delete 的键控代码值 (46) 关联的常数。*/\r\n    static DELETE: number = 46;\r\n    /** 与 Enter 的键控代码值 (13) 关联的常数。*/\r\n    static ENTER: number = 13;\r\n    /** 与 Esc 的键控代码值 (27) 关联的常数。*/\r\n    static ESCAPE: number = 27;\r\n    /** 与 Page Up 的键控代码值 (33) 关联的常数。*/\r\n    static PAGE_UP: number = 33;\r\n    /** 与 Page Down 的键控代码值 (34) 关联的常数。*/\r\n    static PAGE_DOWN: number = 34;\r\n    /** 与 End 的键控代码值 (35) 关联的常数。*/\r\n    static END: number = 35;\r\n    /** 与 Home 的键控代码值 (36) 关联的常数。*/\r\n    static HOME: number = 36;\r\n    /** 与向左箭头键的键控代码值 (37) 关联的常数。*/\r\n    static LEFT: number = 37;\r\n    /** 与向上箭头键的键控代码值 (38) 关联的常数。*/\r\n    static UP: number = 38;\r\n    /** 与向右箭头键的键控代码值 (39) 关联的常数。*/\r\n    static RIGHT: number = 39;\r\n    /** 与向下箭头键的键控代码值 (40) 关联的常数。*/\r\n    static DOWN: number = 40;\r\n    /** 与 Shift 的键控代码值 (16) 关联的常数。*/\r\n    static SHIFT: number = 16;\r\n    /** 与空格键的键控代码值 (32) 关联的常数。*/\r\n    static SPACE: number = 32;\r\n    /** 与 Tab 的键控代码值 (9) 关联的常数。*/\r\n    static TAB: number = 9;\r\n    /** 与 Insert 的键控代码值 (45) 关联的常数。*/\r\n    static INSERT: number = 45;\r\n}\r\n\r\n\r\n","/**\r\n * <p><code>KeyLocation</code> 类包含表示在键盘或类似键盘的输入设备上按键位置的常量。</p>\r\n * <p><code>KeyLocation</code> 常数用在键盘事件对象的 <code>keyLocation </code>属性中。</p>\r\n */\r\nexport class KeyLocation {\r\n    /**\r\n     * 表示激活的键不区分位于左侧还是右侧，也不区分是否位于数字键盘（或者是使用对应于数字键盘的虚拟键激活的）。\r\n     */\r\n    static STANDARD: number = 0;\r\n    /**\r\n     * 表示激活的键在左侧键位置（此键有多个可能的位置）。\r\n     */\r\n    static LEFT: number = 1;\r\n    /**\r\n     * 表示激活的键在右侧键位置（此键有多个可能的位置）。\r\n     */\r\n    static RIGHT: number = 2;\r\n    /**\r\n     * <p>表示激活的键位于数字键盘或者是使用对应于数字键盘的虚拟键激活的。</p>\r\n     * <p>注意：此属性只在flash模式下有效。</p>\r\n     * */\r\n    static NUM_PAD: number = 3;\r\n\r\n}\r\n\r\n\r\n","import { ShaderVariable } from \"../RenderEngine/RenderShader/ShaderVariable\";\r\n\r\n/**\r\n * @private\r\n * CommandEncoder Shader变量集合\r\n */\r\nexport class CommandEncoder {\r\n    \r\n    /**@internal shader variable list*/\r\n    _idata: ShaderVariable[] = [];\r\n\r\n    /**\r\n     * 实例化一个ShaderVariable集合\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns Array of ShaderVariable\r\n     */\r\n    getArrayData(): ShaderVariable[] {\r\n        return this._idata;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns count of ShaderVariableArray\r\n     */\r\n    getCount(): number {\r\n        return this._idata.length;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * add one ShaderVariable\r\n     * @param variable \r\n     */\r\n    addShaderUniform(variable: ShaderVariable): void {\r\n        this._idata.push(variable);\r\n    }\r\n\r\n}\r\n\r\n","import { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Stage } from \"../display/Stage\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { ILaya } from \"../../ILaya\";\r\n/**\r\n * ...\r\n * @author ww\r\n */\r\nexport class QuickTestTool {\r\n\r\n    private static showedDic: any = {};\r\n    private static _rendertypeToStrDic: any = {};\r\n    private static _typeToNameDic: any = {};\r\n\r\n    //TODO:coverage\r\n    static getMCDName(type: number): string {\r\n        return QuickTestTool._typeToNameDic[type];\r\n    }\r\n\r\n    //TODO:coverage\r\n    static showRenderTypeInfo(type: any, force: boolean = false): void {\r\n        if (!force && QuickTestTool.showedDic[type])\r\n            return;\r\n        QuickTestTool.showedDic[type] = true;\r\n        if (!QuickTestTool._rendertypeToStrDic[type]) {\r\n            var arr: any[] = [];\r\n            var tType: number;\r\n            tType = 1;\r\n            while (tType <= type) {\r\n                if (tType & type) {\r\n                    arr.push(QuickTestTool.getMCDName(tType & type));\r\n                }\r\n                tType = tType << 1;\r\n            }\r\n            QuickTestTool._rendertypeToStrDic[type] = arr.join(\",\");\r\n        }\r\n        console.log(\"cmd:\", QuickTestTool._rendertypeToStrDic[type]);\r\n\r\n    }\r\n\r\n    //TODO:coverage\r\n    static __init__(): void {\r\n\r\n        QuickTestTool._typeToNameDic[SpriteConst.ALPHA] = \"ALPHA\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM] = \"TRANSFORM\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TEXTURE] = \"TEXTURE\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.GRAPHICS] = \"GRAPHICS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.ONECHILD] = \"ONECHILD\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.CHILDS] = \"CHILDS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM | SpriteConst.ALPHA] = \"TRANSFORM|ALPHA\";\r\n\r\n        QuickTestTool._typeToNameDic[SpriteConst.CANVAS] = \"CANVAS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.BLEND] = \"BLEND\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.FILTERS] = \"FILTERS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.MASK] = \"MASK\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.CLIP] = \"CLIP\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.LAYAGL3D] = \"LAYAGL3D\";\r\n    }\r\n    _renderType: number;\r\n    _repaint: number;\r\n    _x: number;\r\n    _y: number;\r\n    //TODO:coverage\r\n    constructor() {\r\n\r\n    }\r\n    /**\r\n     * 更新、呈现显示对象。由系统调用。\r\n     * @param\tcontext 渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    //TODO:coverage\r\n    render(context: Context, x: number, y: number): void {\r\n        QuickTestTool._addType(this._renderType);\r\n        QuickTestTool.showRenderTypeInfo(this._renderType);\r\n        //if (_renderType == (SpriteConst.IMAGE | SpriteConst.GRAPHICS | SpriteConst.CHILDS))\r\n        //{\r\n        //debugger;\r\n        //}\r\n        RenderSprite.renders[this._renderType]._fun(this, context, x + this._x, y + this._y);\r\n        this._repaint = 0;\r\n    }\r\n\r\n    private static _PreStageRender: Function;\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _stageRender(context: Context, x: number, y: number): void {\r\n        QuickTestTool._countStart();\r\n        QuickTestTool._PreStageRender.call(ILaya.stage, context, x, y);//TODO TS\r\n        QuickTestTool._countEnd();\r\n    }\r\n    private static _countDic: any = {};\r\n\r\n    //TODO:coverage\r\n    private static _countStart(): void {\r\n        var key: string;\r\n        for (key in QuickTestTool._countDic) {\r\n            QuickTestTool._countDic[key] = 0;\r\n        }\r\n    }\r\n    private static _i: number = 0;\r\n\r\n    //TODO:coverage\r\n    private static _countEnd(): void {\r\n        QuickTestTool._i++;\r\n        if (QuickTestTool._i > 60) {\r\n            QuickTestTool.showCountInfo();\r\n            QuickTestTool._i = 0;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    private static _addType(type: number): void {\r\n        if (!QuickTestTool._countDic[type]) {\r\n            QuickTestTool._countDic[type] = 1;\r\n        } else {\r\n            QuickTestTool._countDic[type] += 1;\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static showCountInfo(): void {\r\n        console.log(\"===================\");\r\n        var key: string;\r\n        for (key in QuickTestTool._countDic) {\r\n            console.log(\"count:\" + QuickTestTool._countDic[key]);\r\n            QuickTestTool.showRenderTypeInfo(key, true);\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static enableQuickTest(): void {\r\n        QuickTestTool.__init__();\r\n        Sprite[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"render\"];\r\n        QuickTestTool._PreStageRender = Stage[\"prototype\"][\"render\"];\r\n        Stage[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"_stageRender\"];\r\n    }\r\n}\r\n\r\n\r\n","import { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { Byte } from \"../utils/Byte\"\r\n\r\n/**\r\n * 连接建立成功后调度。\r\n * @eventType Event.OPEN\r\n * */\r\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 接收到数据后调度。\r\n * @eventType Event.MESSAGE\r\n * */\r\n/*[Event(name = \"message\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 连接被关闭后调度。\r\n * @eventType Event.CLOSE\r\n * */\r\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 出现异常后调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Socket</code> 封装了 HTML5 WebSocket ，允许服务器端与客户端进行全双工（full-duplex）的实时通信，并且允许跨域通信。在建立连接后，服务器和 Browser/Client Agent 都能主动的向对方发送或接收文本和二进制数据。</p>\r\n * <p>要使用 <code>Socket</code> 类的方法，请先使用构造函数 <code>new Socket</code> 创建一个 <code>Socket</code> 对象。 <code>Socket</code> 以异步方式传输和接收数据。</p>\r\n */\r\nexport class Socket extends EventDispatcher {\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     */\r\n    static LITTLE_ENDIAN: string = \"littleEndian\";\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    static BIG_ENDIAN: string = \"bigEndian\";\r\n    /**@internal */\r\n    _endian: string;\r\n    /**@private */\r\n    protected _socket: any;\r\n    /**@private */\r\n    private _connected: boolean;\r\n    /**@private */\r\n    private _addInputPosition: number;\r\n    /**@private */\r\n    private _input: any;\r\n    /**@private */\r\n    private _output: any;\r\n\r\n    /**\r\n     * 不再缓存服务端发来的数据，如果传输的数据为字符串格式，建议设置为true，减少二进制转换消耗。\r\n     */\r\n    disableInput: boolean = false;\r\n    /**\r\n     * 用来发送和接收数据的 <code>Byte</code> 类。\r\n     */\r\n    private _byteClass: new () => any;\r\n    /**\r\n     * <p>子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组。必须在调用 connect 或者 connectByUrl 之前进行赋值，否则无效。</p>\r\n     * <p>指定后，只有当服务器选择了其中的某个子协议，连接才能建立成功，否则建立失败，派发 Event.ERROR 事件。</p>\r\n     * @see https://html.spec.whatwg.org/multipage/comms.html#dom-websocket\r\n     */\r\n    protocols: any = [];\r\n\r\n    /**\r\n     * 缓存的服务端发来的数据。\r\n     */\r\n    get input(): any {\r\n        return this._input;\r\n    }\r\n\r\n    /**\r\n     * 表示需要发送至服务端的缓冲区中的数据。\r\n     */\r\n    get output(): any {\r\n        return this._output;\r\n    }\r\n\r\n    /**\r\n     * 表示此 Socket 对象目前是否已连接。\r\n     */\r\n    get connected(): boolean {\r\n        return this._connected;\r\n    }\r\n\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。</p>\r\n     */\r\n    get endian(): string {\r\n        return this._endian;\r\n    }\r\n\r\n    set endian(value: string) {\r\n        this._endian = value;\r\n        if (this._input != null) this._input.endian = value;\r\n        if (this._output != null) this._output.endian = value;\r\n    }\r\n\r\n    /**\r\n     * <p>创建新的 Socket 对象。默认字节序为 Socket.BIG_ENDIAN 。若未指定参数，将创建一个最初处于断开状态的套接字。若指定了有效参数，则尝试连接到指定的主机和端口。</p>\r\n     * @param host\t\t服务器地址。\r\n     * @param port\t\t服务器端口。\r\n     * @param byteClass\t用于接收和发送数据的 Byte 类。如果为 null ，则使用 Byte 类，也可传入 Byte 类的子类。\r\n     * @param protocols\t子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组\r\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\r\n     * @see laya.utils.Byte\r\n     */\r\n    constructor(host: string | null = null, port: number = 0, byteClass: new () => any = null, protocols: any[] | null = null, isSecure: boolean = false) {\r\n        super();\r\n        this._byteClass = byteClass ? byteClass : Byte;\r\n        this.protocols = protocols;\r\n        this.endian = Socket.BIG_ENDIAN;\r\n        if (host && port > 0 && port < 65535) this.connect(host, port, isSecure);\r\n    }\r\n\r\n    /**\r\n     * <p>连接到指定的主机和端口。</p>\r\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\r\n     * @param host\t服务器地址。\r\n     * @param port\t服务器端口。\r\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\r\n     */\r\n    connect(host: string, port: number, isSecure: boolean = false): void {\r\n        this.connectByUrl(`${isSecure ? \"wss\" : \"ws\"}://${host}:${port}`);\r\n    }\r\n\r\n    /**\r\n     * <p>连接到指定的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。</p>\r\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\r\n     * @param url\t要连接的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。\r\n     */\r\n    connectByUrl(url: string): void {\r\n        if (this._socket != null) this.close();\r\n\r\n        this._socket && this.cleanSocket();\r\n\r\n        if (!this.protocols || this.protocols.length == 0) {\r\n            this._socket = new Browser.window.WebSocket(url);\r\n        } else {\r\n            this._socket = new Browser.window.WebSocket(url, this.protocols);\r\n        }\r\n\r\n        this._socket.binaryType = \"arraybuffer\";\r\n\r\n        this._output = new this._byteClass();\r\n        this._output.endian = this.endian;\r\n        this._input = new this._byteClass();\r\n        this._input.endian = this.endian;\r\n        this._addInputPosition = 0;\r\n\r\n        this._socket.onopen = (e: any) => {\r\n            this._onOpen(e);\r\n        };\r\n        this._socket.onmessage = (msg: any): void => {\r\n            this._onMessage(msg);\r\n        };\r\n        this._socket.onclose = (e: any): void => {\r\n            this._onClose(e);\r\n        };\r\n        this._socket.onerror = (e: any): void => {\r\n            this._onError(e);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 清理Socket：关闭Socket链接，关闭事件监听，重置Socket\r\n     */\r\n    cleanSocket(): void {\r\n        this.close();\r\n        this._connected = false;\r\n        this._socket.onopen = null;\r\n        this._socket.onmessage = null;\r\n        this._socket.onclose = null;\r\n        this._socket.onerror = null;\r\n        this._socket = null;\r\n    }\r\n\r\n    /**\r\n     * 关闭连接。\r\n     */\r\n    close(): void {\r\n        if (this._socket != null) {\r\n            try {\r\n                this._socket.close();\r\n            } catch (e) {\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 连接建立成功 。\r\n     */\r\n    protected _onOpen(e: any): void {\r\n        this._connected = true;\r\n        this.event(Event.OPEN, e);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 接收到数据处理方法。\r\n     * @param msg 数据。\r\n     */\r\n    protected _onMessage(msg: any): void {\r\n        if (!msg || !msg.data) return;\r\n        var data: any = msg.data;\r\n        if (this.disableInput && data) {\r\n            this.event(Event.MESSAGE, data);\r\n            return;\r\n        }\r\n        if (this._input.length > 0 && this._input.bytesAvailable < 1) {\r\n            this._input.clear();\r\n            this._addInputPosition = 0;\r\n        }\r\n        var pre: number = this._input.pos;\r\n        !this._addInputPosition && (this._addInputPosition = 0);\r\n        this._input.pos = this._addInputPosition;\r\n\r\n        if (data) {\r\n            if (typeof (data) == 'string') {\r\n                this._input.writeUTFBytes(data);\r\n            } else {\r\n                this._input.writeArrayBuffer(data);\r\n            }\r\n            this._addInputPosition = this._input.pos;\r\n            this._input.pos = pre;\r\n        }\r\n        this.event(Event.MESSAGE, data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 连接被关闭处理方法。\r\n     */\r\n    protected _onClose(e: any): void {\r\n        this._connected = false;\r\n        this.event(Event.CLOSE, e)\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 出现异常处理方法。\r\n     */\r\n    protected _onError(e: any): void {\r\n        this.event(Event.ERROR, e)\r\n    }\r\n\r\n    /**\r\n     * 发送数据到服务器。\r\n     * @param\tdata 需要发送的数据，可以是String或者ArrayBuffer。\r\n     */\r\n    send(data: any): void {\r\n        this._socket.send(data);\r\n    }\r\n\r\n    /**\r\n     * 发送缓冲区中的数据到服务器。\r\n     */\r\n    flush(): void {\r\n        if (this._output && this._output.length > 0) {\r\n            var evt: any;\r\n            try {\r\n                this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));\r\n            } catch (e) {\r\n                evt = e;\r\n            }\r\n            this._output.endian = this.endian;\r\n            this._output.clear();\r\n            if (evt) this.event(Event.ERROR, evt);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","\r\nimport { ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { RenderCapable } from \"../RenderEnum/RenderCapable\";\r\nimport { UniformMapType } from \"./SubShader\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class GLSLCodeGenerator {\r\n\r\n    static glslAttributeString(attributeMap: { [name: string]: [number, ShaderDataType] }) {\r\n\r\n        let res = \"\";\r\n        for (const key in attributeMap) {\r\n            let type = getAttributeType(attributeMap[key][1]);\r\n            if (type != \"\") {\r\n                res = `${res}attribute ${type} ${key};\\n`;\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    static glslUniformString(uniformsMap: UniformMapType, useUniformBlock: boolean) {\r\n\r\n        if (useUniformBlock) {\r\n            let blocksStr = \"\";\r\n            let uniformsStr = \"\";\r\n            for (const key in uniformsMap) {\r\n                // uniform block\r\n                if (typeof uniformsMap[key] == \"object\") {\r\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\r\n                    blocksStr += `uniform ${key} {\\n`;\r\n                    for (const uniformName in blockUniforms) {\r\n                        let dataType = blockUniforms[uniformName];\r\n                        let typeStr = getAttributeType(dataType);\r\n                        if (typeStr != \"\") {\r\n                            blocksStr += `${typeStr} ${uniformName};\\n`;\r\n                        }\r\n                    }\r\n                    blocksStr += \"};\\n\";\r\n                }\r\n                else { // uniform\r\n                    let dataType = <ShaderDataType>uniformsMap[key];\r\n                    let typeStr = getAttributeType(dataType);\r\n                    if (typeStr != \"\") {\r\n                        uniformsStr += `uniform ${typeStr} ${key};\\n`;\r\n                    }\r\n                }\r\n            }\r\n            return blocksStr + uniformsStr;\r\n\r\n        }\r\n        else {\r\n            let uniformsStr = \"\";\r\n            for (const key in uniformsMap) {\r\n                // uniform block\r\n                if (typeof uniformsMap[key] == \"object\") {\r\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\r\n                    for (const uniformName in blockUniforms) {\r\n                        let dataType = blockUniforms[uniformName];\r\n                        let typeStr = getAttributeType(dataType);\r\n                        if (typeStr != \"\") {\r\n                            uniformsStr += `uniform ${typeStr} ${uniformName};\\n`;\r\n                        }\r\n                    }\r\n                }\r\n                else { // uniform\r\n                    let dataType = <ShaderDataType>uniformsMap[key];\r\n                    let typeStr = getAttributeType(dataType);\r\n                    if (typeStr != \"\") {\r\n                        uniformsStr += `uniform ${typeStr} ${key};\\n`;\r\n                    }\r\n                }\r\n            }\r\n            return uniformsStr;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getAttributeType(type: ShaderDataType) {\r\n    switch (type) {\r\n        case ShaderDataType.Int:\r\n            return \"int\";\r\n        case ShaderDataType.Bool:\r\n            return \"bool\";\r\n        case ShaderDataType.Float:\r\n            return \"float\";\r\n        case ShaderDataType.Vector2:\r\n            return \"vec2\";\r\n        case ShaderDataType.Vector3:\r\n            return \"vec3\";\r\n        case ShaderDataType.Vector4:\r\n        case ShaderDataType.Color:\r\n            return \"vec4\";\r\n        case ShaderDataType.Matrix4x4:\r\n            return \"mat4\";\r\n        case ShaderDataType.Matrix3x3:\r\n            return \"mat3\";\r\n        case ShaderDataType.Texture2D:\r\n            return \"sampler2D\";\r\n        case ShaderDataType.TextureCube:\r\n            return \"samplerCube\";\r\n        case ShaderDataType.Texture2DArray:\r\n            if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n                return \"sampler2DArray\";\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        case ShaderDataType.Texture3D:\r\n            if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n                return \"sampler3D\";\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        default:\r\n            return \"\";\r\n    }\r\n}","import { Config3D } from \"../../../Config3D\";\r\nimport { CommandEncoder } from \"../../layagl/CommandEncoder\";\r\nimport { CullMode } from \"../../RenderEngine/RenderEnum/CullMode\";\r\nimport { IRenderShaderInstance } from \"../../RenderEngine/RenderInterface/IRenderShaderInstance\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderData, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderPass } from \"../../RenderEngine/RenderShader/ShaderPass\";\r\nimport { ShaderVariable } from \"../../RenderEngine/RenderShader/ShaderVariable\";\r\nimport { UniformMapType } from \"../../RenderEngine/RenderShader/SubShader\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { ShaderNode } from \"../../webgl/utils/ShaderNode\";\r\nimport { WebGLEngine } from \"../RenderEngine/WebGLEngine/WebGLEngine\";\r\nimport { RenderParams } from \"../RenderEnum/RenderParams\";\r\nimport { GLSLCodeGenerator } from \"./GLSLCodeGenerator\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { Stat } from \"../../utils/Stat\";\r\nimport { RenderState } from \"./RenderState\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>ShaderInstance</code> 类用于实现ShaderInstance。\r\n */\r\nexport class ShaderInstance {\r\n\t/**@internal */\r\n\tprivate _shaderPass: ShaderCompileDefineBase | ShaderPass;\r\n\r\n\tprivate _renderShaderInstance: IRenderShaderInstance;\r\n\r\n\t/**@internal */\r\n\t_sceneUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_cameraUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_spriteUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_materialUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_sprite2DUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\tprivate _customUniformParamsMap: any[] = [];\r\n\r\n\t/**@internal */\r\n\t_uploadMark: number = -1;\r\n\t/**@internal */\r\n\t_uploadMaterial: ShaderData;\r\n\t/**@internal RenderIDTODO*/\r\n\t_uploadRender: any;\r\n\t/** @internal */\r\n\t_uploadRenderType: number = -1;\r\n\t/**@internal CamneraTOD*/\r\n\t_uploadCameraShaderValue: ShaderData;\r\n\t/**@internal SceneIDTODO*/\r\n\t_uploadScene: any;\r\n\r\n\t/**\r\n\t * 创建一个 <code>ShaderInstance</code> 实例。\r\n\t */\r\n\tconstructor(shaderProcessInfo: ShaderProcessInfo, shaderPass: ShaderCompileDefineBase) {\r\n\t\t// shaderProcessInfo.is2D ? this._webGLShaderLanguageProcess2D(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderProcessInfo.uniformMap, shaderProcessInfo.vs, shaderProcessInfo.ps)\r\n\t\tthis._webGLShaderLanguageProcess3D(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderProcessInfo.uniformMap, shaderProcessInfo.vs, shaderProcessInfo.ps);\r\n\t\tif (this._renderShaderInstance._complete) {\r\n\t\t\tthis._shaderPass = shaderPass;\r\n\t\t\tshaderProcessInfo.is2D ? this._create2D() : this._create();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get complete\r\n\t */\r\n\tget complete(): boolean {\r\n\t\treturn this._renderShaderInstance._complete;\r\n\t}\r\n\r\n\tprotected _webGLShaderLanguageProcess3D(defineString: string[],\r\n\t\tattributeMap: { [name: string]: [number, ShaderDataType] },\r\n\t\tuniformMap: UniformMapType, VS: ShaderNode, FS: ShaderNode) {\r\n\r\n\t\tvar clusterSlices = Config3D.lightClusterCount;\r\n\t\tvar defMap: any = {};\r\n\r\n\t\tvar vertexHead: string;\r\n\t\tvar fragmentHead: string;\r\n\t\tvar defineStr: string = \"\";\r\n\r\n\t\t// 拼接 shader attribute\r\n\t\tlet useUniformBlock = Config3D._uniformBlock;\r\n\t\tlet attributeglsl = GLSLCodeGenerator.glslAttributeString(attributeMap);\r\n\t\tlet uniformglsl = GLSLCodeGenerator.glslUniformString(uniformMap, useUniformBlock);\r\n\r\n\t\tif ((LayaGL.renderEngine as WebGLEngine).isWebGL2) {\r\n\t\t\tdefineString.push(\"GRAPHICS_API_GLES3\");\r\n\t\t\tvertexHead =\r\n\t\t\t\t`#version 300 es\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2DArray;\r\n    precision highp sampler3D;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n    precision mediump sampler2DArray;\r\n    precision mediump sampler3D;\r\n#endif\r\nlayout(std140, column_major) uniform;\r\n#define attribute in\r\n#define varying out\r\n#define textureCube texture\r\n#define texture2D texture\r\n${attributeglsl}\r\n${uniformglsl}\r\n`;\r\n\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#version 300 es\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2DArray;\r\n\tprecision highp sampler3D;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n    precision mediump sampler2DArray;\r\n\tprecision mediump sampler3D;\r\n#endif\r\nlayout(std140, column_major) uniform;\r\n#define varying in\r\nout highp vec4 pc_fragColor;\r\n#define gl_FragColor pc_fragColor\r\n#define gl_FragDepthEXT gl_FragDepth\r\n#define texture2D texture\r\n#define textureCube texture\r\n#define texture2DProj textureProj\r\n#define texture2DLodEXT textureLod\r\n#define texture2DProjLodEXT textureProjLod\r\n#define textureCubeLodEXT textureLod\r\n#define texture2DGradEXT textureGrad\r\n#define texture2DProjGradEXT textureProjGrad\r\n#define textureCubeGradEXT textureGrad\r\n${uniformglsl}`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvertexHead =\r\n\t\t\t\t`#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n#endif\r\n${attributeglsl}\r\n${uniformglsl}`;\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#ifdef GL_EXT_shader_texture_lod\r\n    #extension GL_EXT_shader_texture_lod : enable\r\n#endif\r\n\r\n#ifdef GL_OES_standard_derivatives\r\n\t#extension GL_OES_standard_derivatives : enable \r\n#endif\r\n\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n#endif\r\n\r\n#if !defined(GL_EXT_shader_texture_lod)\r\n    #define texture1DLodEXT texture1D\r\n    #define texture2DLodEXT texture2D\r\n    #define texture2DProjLodEXT texture2DProj\r\n    #define textureCubeLodEXT textureCube\r\n#endif\r\n${uniformglsl}`;\r\n\t\t}\r\n\r\n\t\t// todo \r\n\t\tdefineStr += \"#define MAX_LIGHT_COUNT \" + Config3D.maxLightCount + \"\\n\";\r\n\t\tdefineStr += \"#define MAX_LIGHT_COUNT_PER_CLUSTER \" + Config3D._maxAreaLightCountPerClusterAverage + \"\\n\";\r\n\t\tdefineStr += \"#define CLUSTER_X_COUNT \" + clusterSlices.x + \"\\n\";\r\n\t\tdefineStr += \"#define CLUSTER_Y_COUNT \" + clusterSlices.y + \"\\n\";\r\n\t\tdefineStr += \"#define CLUSTER_Z_COUNT \" + clusterSlices.z + \"\\n\";\r\n\t\tdefineStr += \"#define MORPH_MAX_COUNT \" + Config3D.maxMorphTargetCount + \"\\n\";\r\n\t\tdefineStr += \"#define SHADER_CAPAILITY_LEVEL \" + LayaGL.renderEngine.getParams(RenderParams.SHADER_CAPAILITY_LEVEL) + \"\\n\";\r\n\r\n\r\n\r\n\t\tfor (var i: number = 0, n: number = defineString.length; i < n; i++) {\r\n\t\t\tvar def: string = defineString[i];\r\n\t\t\tdefineStr += \"#define \" + def + \"\\n\";\r\n\t\t\tdefMap[def] = true;\r\n\t\t}\r\n\r\n\t\tvar vs: any[] = VS.toscript(defMap, []);\r\n\t\tvar vsVersion: string = '';\r\n\t\tif (vs[0].indexOf('#version') == 0) {\r\n\t\t\tvsVersion = vs[0] + '\\n';\r\n\t\t\tvs.shift();\r\n\t\t}\r\n\r\n\t\tvar ps: any[] = FS.toscript(defMap, []);\r\n\t\tvar psVersion: string = '';\r\n\t\tif (ps[0].indexOf('#version') == 0) {\r\n\t\t\tpsVersion = ps[0] + '\\n';\r\n\t\t\tps.shift();\r\n\t\t};\r\n\t\tlet dstVS = vsVersion + vertexHead + defineStr + vs.join('\\n');\r\n\t\tlet detFS = psVersion + fragmentHead + defineStr + ps.join('\\n');\r\n\t\tthis._renderShaderInstance = LayaGL.renderEngine.createShaderInstance(dstVS, detFS, attributeMap);\r\n\t}\r\n\r\n\tprotected _webGLShaderLanguageProcess2D(defineString: string[],\r\n\t\tattributeMap: { [name: string]: [number, ShaderDataType] },\r\n\t\tuniformMap: UniformMapType, VS: ShaderNode, FS: ShaderNode) {\r\n\t\tvar defMap: any = {};\r\n\r\n\t\tvar vertexHead: string;\r\n\t\tvar fragmentHead: string;\r\n\t\tvar defineStr: string = \"\";\r\n\r\n\t\tif ((LayaGL.renderEngine as WebGLEngine).isWebGL2) {\r\n\t\t\tvertexHead =\r\n\t\t\t\t`#version 300 es\\n\r\n                #define attribute in\r\n                #define varying out\r\n                #define textureCube texture\r\n                #define texture2D texture\\n`;\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#version 300 es\\n\r\n                #define varying in\r\n                out highp vec4 pc_fragColor;\r\n                #define gl_FragColor pc_fragColor\r\n                #define gl_FragDepthEXT gl_FragDepth\r\n                #define texture2D texture\r\n                #define textureCube texture\r\n                #define texture2DProj textureProj\r\n                #define texture2DLodEXT textureLod\r\n                #define texture2DProjLodEXT textureProjLod\r\n                #define textureCubeLodEXT textureLod\r\n                #define texture2DGradEXT textureGrad\r\n                #define texture2DProjGradEXT textureProjGrad\r\n                #define textureCubeGradEXT textureGrad\\n`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvertexHead = \"\"\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#ifdef GL_EXT_shader_texture_lod\r\n                    #extension GL_EXT_shader_texture_lod : enable\r\n                #endif\r\n                #if !defined(GL_EXT_shader_texture_lod)\r\n                    #define texture1DLodEXT texture1D\r\n                    #define texture2DLodEXT texture2D\r\n                    #define texture2DProjLodEXT texture2DProj\r\n                    #define texture3DLodEXT texture3D\r\n                    #define textureCubeLodEXT textureCube\r\n                #endif\\n`;\r\n\t\t}\r\n\r\n\r\n\t\tfor (var i: number = 0, n: number = defineString.length; i < n; i++) {\r\n\t\t\tvar def: string = defineString[i];\r\n\t\t\tdefineStr += \"#define \" + def + \"\\n\";\r\n\t\t\tdefMap[def] = true;\r\n\t\t}\r\n\r\n\t\tvar vs: any[] = VS.toscript(defMap, []);\r\n\t\tvar vsVersion: string = '';\r\n\t\tif (vs[0].indexOf('#version') == 0) {\r\n\t\t\tvsVersion = vs[0] + '\\n';\r\n\t\t\tvs.shift();\r\n\t\t}\r\n\r\n\t\tvar ps: any[] = FS.toscript(defMap, []);\r\n\t\tvar psVersion: string = '';\r\n\t\tif (ps[0].indexOf('#version') == 0) {\r\n\t\t\tpsVersion = ps[0] + '\\n';\r\n\t\t\tps.shift();\r\n\t\t}\r\n\r\n\t\tlet dstVS = vsVersion + vertexHead + defineStr + vs.join('\\n');\r\n\t\tlet detFS = psVersion + fragmentHead + defineStr + ps.join('\\n');\r\n\t\tthis._renderShaderInstance = LayaGL.renderEngine.createShaderInstance(dstVS, detFS, attributeMap);\r\n\t}\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected _create(): void {\r\n\t\tthis._sceneUniformParamsMap = new CommandEncoder();\r\n\t\tthis._cameraUniformParamsMap = new CommandEncoder();\r\n\t\tthis._spriteUniformParamsMap = new CommandEncoder();\r\n\t\tthis._materialUniformParamsMap = new CommandEncoder();\r\n\t\tconst sceneParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Scene3D\");\r\n\t\t//const spriteParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite3D\");//分开，根据不同的Render\r\n\t\tconst cameraParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"BaseCamera\");\r\n\t\tconst customParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Custom\");\r\n\t\tlet i, n;\r\n\t\tlet data: ShaderVariable[] = this._renderShaderInstance.getUniformMap();\r\n\t\tfor (i = 0, n = data.length; i < n; i++) {\r\n\t\t\tlet one: ShaderVariable = data[i];\r\n\t\t\tif (sceneParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._sceneUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (cameraParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._cameraUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (this.hasSpritePtrID(one.dataOffset)) {\r\n\t\t\t\tthis._spriteUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (customParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._customUniformParamsMap || (this._customUniformParamsMap = []);\r\n\t\t\t\tthis._customUniformParamsMap[one.dataOffset] = one;\r\n\t\t\t} else {\r\n\t\t\t\tthis._materialUniformParamsMap.addShaderUniform(one);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected _create2D(): void {\r\n\t\tthis._sprite2DUniformParamsMap = new CommandEncoder();\r\n\t\tthis._materialUniformParamsMap = new CommandEncoder();\r\n\t\tthis._sceneUniformParamsMap = new CommandEncoder();\r\n\t\tconst sprite2DParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2D\");//分开，根据不同的Render\r\n\t\tconst sceneParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2DGlobal\");//分开，根据不同的Render\r\n\t\tlet i, n;\r\n\t\tlet data: ShaderVariable[] = this._renderShaderInstance.getUniformMap();\r\n\t\tfor (i = 0, n = data.length; i < n; i++) {\r\n\t\t\tlet one: ShaderVariable = data[i];\r\n\t\t\tif (sprite2DParms.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._sprite2DUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (sceneParms.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._sceneUniformParamsMap.addShaderUniform(one);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._materialUniformParamsMap.addShaderUniform(one);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate hasSpritePtrID(dataOffset: number): boolean {\r\n\t\tlet commap = this._shaderPass.nodeCommonMap;\r\n\t\tif (!commap) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tfor (let i = 0, n = commap.length; i < n; i++) {\r\n\t\t\t\tif (LayaGL.renderOBJCreate.createGlobalUniformMap(commap[i]).hasPtrID(dataOffset))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\tprotected _disposeResource(): void {\r\n\t\tthis._renderShaderInstance.destroy();\r\n\t\tthis._sceneUniformParamsMap = null;\r\n\t\tthis._cameraUniformParamsMap = null;\r\n\t\tthis._spriteUniformParamsMap = null;\r\n\t\tthis._materialUniformParamsMap = null\r\n\t\tthis._customUniformParamsMap = null;\r\n\r\n\t\tthis._uploadMaterial = null;\r\n\t\tthis._uploadRender = null;\r\n\t\tthis._uploadCameraShaderValue = null;\r\n\t\tthis._uploadScene = null;\r\n\t}\r\n\r\n\t/**\r\n\t * apply shader programe\r\n\t * @returns \r\n\t */\r\n\tbind() {\r\n\t\treturn this._renderShaderInstance.bind();\r\n\t}\r\n\r\n\t/**\r\n\t * upload uniform data\r\n\t * @param shaderUniform \r\n\t * @param shaderDatas \r\n\t * @param uploadUnTexture \r\n\t */\r\n\tuploadUniforms(shaderUniform: CommandEncoder, shaderDatas: ShaderData, uploadUnTexture: boolean) {\r\n\t\tStat.uploadUniform += LayaGL.renderEngine.uploadUniforms(this._renderShaderInstance, shaderUniform, shaderDatas, uploadUnTexture);\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepth(shaderDatas: ShaderData): void {\r\n\t\tif ((<ShaderPass>this._shaderPass).statefirst)\r\n\t\t\tthis.uploadRenderStateBlendDepthByShader(shaderDatas);\r\n\t\telse\r\n\t\t\tthis.uploadRenderStateBlendDepthByMaterial(shaderDatas);\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState frome Shader\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepthByShader(shaderDatas: ShaderData) {\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\r\n\t\tvar depthWrite: any = (renderState.depthWrite ?? datas[Shader3D.DEPTH_WRITE]) ?? RenderState.Default.depthWrite;\r\n\t\tRenderStateContext.setDepthMask(depthWrite);\r\n\t\tvar depthTest: any = (renderState.depthTest ?? datas[Shader3D.DEPTH_TEST]) ?? RenderState.Default.depthTest;\r\n\t\tif (depthTest == RenderState.DEPTHTEST_OFF)\r\n\t\t\tRenderStateContext.setDepthTest(false);\r\n\t\telse {\r\n\t\t\tRenderStateContext.setDepthTest(true);\r\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\r\n\t\t}\r\n\t\t//Stencil\r\n\t\tvar stencilWrite: any = (renderState.stencilWrite ?? datas[Shader3D.STENCIL_WRITE]) ?? RenderState.Default.stencilWrite;\r\n\t\tvar stencilTest: any = (renderState.stencilTest ?? datas[Shader3D.STENCIL_TEST]) ?? RenderState.Default.stencilTest;\r\n\t\tRenderStateContext.setStencilMask(stencilWrite);\r\n\t\tif (stencilWrite) {\r\n\t\t\tvar stencilOp: any = (renderState.stencilOp ?? datas[Shader3D.STENCIL_Op]) ?? RenderState.Default.stencilOp;\r\n\t\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\r\n\t\t}\r\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\r\n\t\t\tRenderStateContext.setStencilTest(false);\r\n\t\t} else {\r\n\t\t\tvar stencilRef: any = (renderState.stencilRef ?? datas[Shader3D.STENCIL_Ref]) ?? RenderState.Default.stencilRef;\r\n\t\t\tRenderStateContext.setStencilTest(true);\r\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\r\n\t\t}\r\n\t\t//blend\r\n\t\tvar blend: any = (renderState.blend ?? datas[Shader3D.BLEND]) ?? RenderState.Default.blend;\r\n\t\tswitch (blend) {\r\n\t\t\tcase RenderState.BLEND_DISABLE:\r\n\t\t\t\tRenderStateContext.setBlend(false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\r\n\t\t\t\tvar blendEquation: any = (renderState.blendEquation ?? datas[Shader3D.BLEND_EQUATION]) ?? RenderState.Default.blendEquation;\r\n\t\t\t\tvar srcBlend: any = (renderState.srcBlend ?? datas[Shader3D.BLEND_SRC]) ?? RenderState.Default.srcBlend;\r\n\t\t\t\tvar dstBlend: any = (renderState.dstBlend ?? datas[Shader3D.BLEND_DST]) ?? RenderState.Default.dstBlend;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\r\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\r\n\t\t\t\tvar blendEquationRGB: any = (renderState.blendEquationRGB ?? datas[Shader3D.BLEND_EQUATION_RGB]) ?? RenderState.Default.blendEquationRGB;\r\n\t\t\t\tvar blendEquationAlpha: any = (renderState.blendEquationAlpha ?? datas[Shader3D.BLEND_EQUATION_ALPHA]) ?? RenderState.Default.blendEquationAlpha;\r\n\t\t\t\tvar srcRGB: any = (renderState.srcBlendRGB ?? datas[Shader3D.BLEND_SRC_RGB]) ?? RenderState.Default.srcBlendRGB;\r\n\t\t\t\tvar dstRGB: any = (renderState.dstBlendRGB ?? datas[Shader3D.BLEND_DST_RGB]) ?? RenderState.Default.dstBlendRGB;\r\n\t\t\t\tvar srcAlpha: any = (renderState.srcBlendAlpha ?? datas[Shader3D.BLEND_SRC_ALPHA]) ?? RenderState.Default.srcBlendAlpha;\r\n\t\t\t\tvar dstAlpha: any = (renderState.dstBlendAlpha ?? datas[Shader3D.BLEND_DST_ALPHA]) ?? RenderState.Default.dstBlendAlpha;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState frome Material\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepthByMaterial(shaderDatas: ShaderData) {\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\r\n\t\t// depth\r\n\t\tvar depthWrite: any = datas[Shader3D.DEPTH_WRITE];\r\n\t\tdepthWrite = depthWrite ?? RenderState.Default.depthWrite;\r\n\t\tRenderStateContext.setDepthMask(depthWrite);\r\n\r\n\t\tvar depthTest: any = datas[Shader3D.DEPTH_TEST];\r\n\t\tdepthTest = depthTest ?? RenderState.Default.depthTest;\r\n\t\tif (depthTest === RenderState.DEPTHTEST_OFF) {\r\n\t\t\tRenderStateContext.setDepthTest(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tRenderStateContext.setDepthTest(true);\r\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\r\n\t\t}\r\n\r\n\t\t//Stencil\r\n\t\tvar stencilWrite: any = datas[Shader3D.STENCIL_WRITE];\r\n\t\tstencilWrite = stencilWrite ?? RenderState.Default.stencilWrite;\r\n\t\tRenderStateContext.setStencilMask(stencilWrite);\r\n\t\tif (stencilWrite) {\r\n\t\t\tvar stencilOp: any = datas[Shader3D.STENCIL_Op];\r\n\t\t\tstencilOp = stencilOp ?? RenderState.Default.stencilOp;\r\n\t\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\r\n\t\t}\r\n\r\n\t\tvar stencilTest: any = datas[Shader3D.STENCIL_TEST];\r\n\t\tstencilTest = stencilTest ?? RenderState.Default.stencilTest;\r\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\r\n\t\t\tRenderStateContext.setStencilTest(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar stencilRef: any = datas[Shader3D.STENCIL_Ref];\r\n\t\t\tstencilRef = stencilRef ?? RenderState.Default.stencilRef;\r\n\t\t\tRenderStateContext.setStencilTest(true);\r\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\r\n\t\t}\r\n\r\n\t\t//blend\r\n\t\tvar blend: any = datas[Shader3D.BLEND];\r\n\t\tblend = blend ?? RenderState.Default.blend;\r\n\t\tswitch (blend) {\r\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\r\n\t\t\t\tvar blendEquation: any = datas[Shader3D.BLEND_EQUATION];\r\n\t\t\t\tblendEquation = blendEquation ?? RenderState.Default.blendEquation;\r\n\t\t\t\tvar srcBlend: any = datas[Shader3D.BLEND_SRC];\r\n\t\t\t\tsrcBlend = srcBlend ?? RenderState.Default.srcBlend;\r\n\t\t\t\tvar dstBlend: any = datas[Shader3D.BLEND_DST];\r\n\t\t\t\tdstBlend = dstBlend ?? RenderState.Default.dstBlend;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\r\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\r\n\t\t\t\tvar blendEquationRGB: any = datas[Shader3D.BLEND_EQUATION_RGB];\r\n\t\t\t\tblendEquationRGB = blendEquationRGB ?? RenderState.Default.blendEquationRGB;\r\n\r\n\t\t\t\tvar blendEquationAlpha: any = datas[Shader3D.BLEND_EQUATION_ALPHA];\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha ?? RenderState.Default.blendEquationAlpha;\r\n\r\n\t\t\t\tvar srcRGB: any = datas[Shader3D.BLEND_SRC_RGB];\r\n\t\t\t\tsrcRGB = srcRGB ?? RenderState.Default.srcBlendRGB;\r\n\r\n\t\t\t\tvar dstRGB: any = datas[Shader3D.BLEND_DST_RGB];\r\n\t\t\t\tdstRGB = dstRGB ?? RenderState.Default.dstBlendRGB;\r\n\r\n\t\t\t\tvar srcAlpha: any = datas[Shader3D.BLEND_SRC_ALPHA];\r\n\t\t\t\tsrcAlpha = srcAlpha ?? RenderState.Default.srcBlendAlpha;\r\n\r\n\t\t\t\tvar dstAlpha: any = datas[Shader3D.BLEND_DST_ALPHA];\r\n\t\t\t\tdstAlpha = dstAlpha ?? RenderState.Default.dstBlendAlpha;\r\n\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_DISABLE:\r\n\t\t\tdefault:\r\n\t\t\t\tRenderStateContext.setBlend(false);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tuploadRenderStateFrontFace(shaderDatas: ShaderData, isTarget: boolean, invertFront: boolean): void {\r\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\t\tvar cull: any = datas[Shader3D.CULL];\r\n\t\tif ((<ShaderPass>this._shaderPass).statefirst) {\r\n\t\t\tcull = renderState.cull ?? cull;\r\n\t\t}\r\n\t\tcull = cull ?? RenderState.Default.cull;\r\n\t\tvar forntFace: number;\r\n\t\tswitch (cull) {\r\n\t\t\tcase RenderState.CULL_NONE:\r\n\t\t\t\tRenderStateContext.setCullFace(false);\r\n\t\t\t\tif (isTarget != invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.CULL_FRONT:\r\n\t\t\t\tRenderStateContext.setCullFace(true);\r\n\t\t\t\tif (isTarget == invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.CULL_BACK:\r\n\t\t\tdefault:\r\n\t\t\t\tRenderStateContext.setCullFace(true);\r\n\t\t\t\tif (isTarget != invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tuploadCustomUniform(index: number, data: any): void {\r\n\t\tLayaGL.renderEngine.uploadCustomUniforms(this._renderShaderInstance, this._customUniformParamsMap, index, data);\r\n\t}\r\n}\r\n\r\n","/**\r\n *  <code>shaderVariable</code> 类用于保存shader变量上传相关信息。\r\n */\r\nexport class ShaderVariable {\r\n\tstatic pointID: number = 0;\r\n\t/**@internal */\r\n\tname: string;\r\n\t/**@internal */\r\n\ttype: number;\r\n\t/**@internal */\r\n\tlocation: number;\r\n\t/**@internal */\r\n\tisArray: boolean;\r\n\t/**@internal */\r\n\ttextureID: number;\r\n\t/**@internal */\r\n\tdataOffset: number;\r\n\r\n\t/**@internal */\r\n\tcaller: any;\r\n\t/**@internal */\r\n\tfun: any;\r\n\t/**@internal */\r\n\tuploadedValue: any[];\r\n\t/**@internal */\r\n\tonID: number;\r\n\r\n\t/**\r\n\t * 创建一个 <code>shaderVariable</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.onID = ShaderVariable.pointID++;\r\n\t\tthis.textureID = -1;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { ITexture3DContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\n/**\r\n * 3D 纹理\r\n */\r\nexport class Texture3D extends BaseTexture {\r\n\r\n    private static _defaultTexture: Texture3D;\r\n\r\n    static get defaultTexture() {\r\n        return this._defaultTexture;\r\n    }\r\n\r\n    /** @internal */\r\n    static __init__() {\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n            this._defaultTexture = new Texture3D(1, 1, 1, TextureFormat.R8G8B8A8, false, false);\r\n            this._defaultTexture.lock = true;\r\n\r\n            this._defaultTexture.setPixelsData(new Uint8Array([255, 255, 255, 255]));\r\n        }\r\n    }\r\n\r\n    depth: number;\r\n\r\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Tex3D;\r\n        this.depth = depth;\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n\r\n        this._texture = context.createTexture3DInternal(this._dimension, width, height, depth, format, mipmap, sRGB, false);\r\n    }\r\n\r\n    /**\r\n    * 设置像素数据\r\n    * @param source 像素数据\r\n    */\r\n    setPixelsData(source: ArrayBufferView) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DPixelsData(texture, source, this.depth, false, false)\r\n    }\r\n\r\n    /**\r\n     * 更新像素数据\r\n     * @param xOffset x 偏移\r\n     * @param yOffset y 偏移\r\n     * @param zOffset z 偏移\r\n     * @param width 更新数据宽度\r\n     * @param height 更新数据高度\r\n     * @param depth 更新数据深度层级\r\n     * @param pixels 像素数据\r\n     * @param mipmapLevel mipmap 等级\r\n     * @param generateMipmap 是否生成 mipmap\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, false, false);\r\n    }\r\n\r\n}","export class Base64Tool {\r\n\r\n    static chars: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    static reg = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;\r\n    static reghead = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,/i;\r\n\r\n    // Use a lookup table to find the index.\r\n    static lookup: Uint8Array = null;\r\n\r\n    static init(): void {\r\n        if (Base64Tool.lookup)\r\n            return;\r\n        Base64Tool.lookup = new Uint8Array(256)\r\n        for (var i: number = 0; i < Base64Tool.chars.length; i++) {\r\n            Base64Tool.lookup[Base64Tool.chars.charCodeAt(i)] = i;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断字符串是否是 base64\r\n     * @param str \r\n     */\r\n    static isBase64String(str: string): boolean {\r\n        return Base64Tool.reg.test(str);\r\n    }\r\n\r\n    /**\r\n     * 编码ArrayBuffer \r\n     * @param arraybuffer\r\n     * @return \r\n     * \r\n     */\r\n    static encode(arraybuffer: ArrayBuffer): string {\r\n        var bytes: Uint8Array = new Uint8Array(arraybuffer), i: number, len: number = bytes[\"length\"], base64: string = \"\";\r\n\r\n        for (i = 0; i < len; i += 3) {\r\n            base64 += Base64Tool.chars[bytes[i] >> 2];\r\n            base64 += Base64Tool.chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n            base64 += Base64Tool.chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n            base64 += Base64Tool.chars[bytes[i + 2] & 63];\r\n        }\r\n\r\n        if ((len % 3) === 2) {\r\n            base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n        }\r\n        else if (len % 3 === 1) {\r\n            base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n        }\r\n\r\n        return base64;\r\n    }\r\n\r\n    /**\r\n     * 解码成ArrayBuffer \r\n     * @param base64\r\n     * @return \r\n     * \r\n     */\r\n    static decode(base64: string): ArrayBuffer {\r\n        Base64Tool.init();\r\n        var bufferLength: number = base64.length * 0.75, len: number = base64.length, i: number, p: number = 0, encoded1: number, encoded2: number, encoded3: number, encoded4: number;\r\n\r\n        if (base64[base64.length - 1] === \"=\") {\r\n            bufferLength--;\r\n            if (base64[base64.length - 2] === \"=\") {\r\n                bufferLength--;\r\n            }\r\n        }\r\n\r\n        var arraybuffer: ArrayBuffer = new ArrayBuffer(bufferLength), bytes: Uint8Array = new Uint8Array(arraybuffer);\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n            encoded1 = Base64Tool.lookup[base64.charCodeAt(i)];\r\n            encoded2 = Base64Tool.lookup[base64.charCodeAt(i + 1)];\r\n            encoded3 = Base64Tool.lookup[base64.charCodeAt(i + 2)];\r\n            encoded4 = Base64Tool.lookup[base64.charCodeAt(i + 3)];\r\n\r\n            if(p + 1 > bufferLength) continue;\r\n            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n            if(p + 1 > bufferLength) continue;\r\n            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n            if(p + 1 > bufferLength) continue;\r\n            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n        }\r\n\r\n        return arraybuffer;\r\n    }\r\n\r\n}","\r\nfunction arrayBufferSlice(this: ArrayBuffer, start: number, end: number): ArrayBuffer {\r\n    var arrU8List: Uint8Array = new Uint8Array(this, start, end - start);\r\n    var newU8List: Uint8Array = new Uint8Array(arrU8List.length);\r\n    newU8List.set(arrU8List);\r\n    return newU8List.buffer;\r\n}\r\n\r\nfunction uint8ArraySlice(this: Uint8Array): Uint8Array {\r\n    var sz: number = this.length;\r\n    var dec: Uint8Array = new Uint8Array(this.length);\r\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\r\n    return dec;\r\n}\r\n\r\nfunction float32ArraySlice(this: Float32Array): Float32Array {\r\n    var sz: number = this.length;\r\n    var dec: Float32Array = new Float32Array(this.length);\r\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\r\n    return dec;\r\n}\r\n\r\nfunction uint16ArraySlice(this: Uint16Array, ...arg: any[]): Uint16Array {\r\n    var sz: number;\r\n    var dec: Uint16Array;\r\n    var i: number;\r\n    if (arg.length === 0) {\r\n        sz = this.length;\r\n        dec = new Uint16Array(sz);\r\n        for (i = 0; i < sz; i++)\r\n            dec[i] = this[i];\r\n\r\n    } else if (arg.length === 2) {\r\n        var start: number = arg[0];\r\n        var end: number = arg[1];\r\n\r\n        if (end > start) {\r\n            sz = end - start;\r\n            dec = new Uint16Array(sz);\r\n            for (i = start; i < end; i++)\r\n                dec[i - start] = this[i];\r\n        } else {\r\n            dec = new Uint16Array(0);\r\n        }\r\n    }\r\n    return dec;\r\n}\r\n\r\nArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = arrayBufferSlice);\r\nFloat32Array.prototype.slice || (Float32Array.prototype.slice = float32ArraySlice);\r\nUint16Array.prototype.slice || (Uint16Array.prototype.slice = uint16ArraySlice);\r\nUint8Array.prototype.slice || (Uint8Array.prototype.slice = uint8ArraySlice);","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n * <code>Log</code> 类用于在界面内显示日志记录信息。\r\n * 注意：在加速器内不可使用\r\n */\r\nexport class Log {\r\n\r\n    /**@private */\r\n    private static _logdiv: any;\r\n    /**@private */\r\n    private static _btn: any;\r\n    /**@private */\r\n    private static _count: number = 0;\r\n    /**最大打印数量，超过这个数量，则自动清理一次，默认为50次*/\r\n    static maxCount: number = 50;\r\n    /**是否自动滚动到底部，默认为true*/\r\n    static autoScrollToBottom: boolean = true;\r\n\r\n    /**\r\n     * 激活Log系统，使用方法Laya.init(800,600,Laya.Log);\r\n     */\r\n    static enable(): void {\r\n        if (!Log._logdiv) {\r\n            Log._logdiv = Browser.createElement('div');\r\n            Log._logdiv.style.cssText = \"border:white;padding:4px;overflow-y:auto;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;\";\r\n            Browser.document.body.appendChild(Log._logdiv);\r\n\r\n            Log._btn = Browser.createElement(\"button\");\r\n            Log._btn.innerText = \"Hide\";\r\n            Log._btn.style.cssText = \"z-index:1000001;position: absolute;left:10px;top:10px;\";\r\n            Log._btn.onclick = Log.toggle;\r\n            Browser.document.body.appendChild(Log._btn);\r\n        }\r\n    }\r\n\r\n    /**隐藏/显示日志面板*/\r\n    static toggle(): void {\r\n        var style: any = Log._logdiv.style;\r\n        if (style.display === \"\") {\r\n            Log._btn.innerText = \"Show\";\r\n            style.display = \"none\";\r\n        } else {\r\n            Log._btn.innerText = \"Hide\";\r\n            style.display = \"\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 增加日志内容。\r\n     * @param\tvalue 需要增加的日志内容。\r\n     */\r\n    static print(value: string): void {\r\n        if (Log._logdiv) {\r\n            //内容太多清理掉\r\n            if (Log._count >= Log.maxCount) Log.clear();\r\n            Log._count++;\r\n\r\n            Log._logdiv.innerText += value + \"\\n\";\r\n            //自动滚动\r\n            if (Log.autoScrollToBottom) {\r\n                if (Log._logdiv.scrollHeight - Log._logdiv.scrollTop - Log._logdiv.clientHeight < 50) {\r\n                    Log._logdiv.scrollTop = Log._logdiv.scrollHeight;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理日志\r\n     */\r\n    static clear(): void {\r\n        Log._logdiv.innerText = \"\";\r\n        Log._count = 0;\r\n    }\r\n}\r\n\r\n","//import { PerfHUD } from \"./PerfHUD\";\r\nlet DATANUM = 300;\r\n/**\r\n * @internal\r\n */\r\nexport class PerfData {\r\n    id: number;\r\n    name: string;\r\n    color: number;\r\n    scale: number = 1.0;\r\n    datas: any[] = new Array(DATANUM);\r\n    datapos: number = 0;\r\n    constructor(id: number, color: number, name: string, scale: number) {\r\n        this.id = id;\r\n        this.color = color;\r\n        this.name = name;\r\n        this.scale = scale;\r\n    }\r\n    addData(v: number): void {\r\n        this.datas[this.datapos] = v;\r\n        this.datapos++;\r\n        this.datapos %= DATANUM;\r\n    }\r\n}\r\n\r\n","import { PerfData } from \"./PerfData\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Context } from \"../resource/Context\"\r\n/**\r\n * @internal\r\n */\r\nexport class PerfHUD extends Sprite {\r\n    private static _lastTm: number = 0;\t//perf Data\r\n    private static _now: () => number = null;\r\n    private datas: any[] = [];\r\n    static DATANUM: number = 300;\r\n\r\n    xdata: any[] = new Array(PerfHUD.DATANUM);\r\n    ydata: any[] = new Array(PerfHUD.DATANUM);\r\n\r\n    hud_width: number = 800;\r\n    hud_height: number = 200;\r\n\r\n    gMinV: number = 0;\r\n    gMaxV: number = 100;\r\n\r\n    private textSpace: number = 40;\t//留给刻度文字的\r\n    static inst: PerfHUD;\r\n\r\n    private _now: Function;\r\n    private sttm: number = 0;\r\n\r\n    static drawTexTm: number = 0;\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        super();\r\n        PerfHUD.inst = this;\r\n        this._renderType |= SpriteConst.CUSTOM;\r\n        this._setCustomRender();\r\n\r\n        this.addDataDef(0, 0xffffff, 'frame', 1.0);\r\n        this.addDataDef(1, 0x00ff00, 'update', 1.0);\r\n        this.addDataDef(2, 0xff0000, 'flush', 1.0);\r\n        PerfHUD._now = performance ? performance.now.bind(performance) : Date.now;\r\n    }\r\n\r\n    //TODO:coverage\r\n    now(): number {\r\n        return PerfHUD._now();\r\n    }\r\n\r\n    //TODO:coverage\r\n    start(): void {\r\n        this.sttm = PerfHUD._now();\r\n    }\r\n\r\n    //TODO:coverage\r\n    end(i: number): void {\r\n        var dt: number = PerfHUD._now() - this.sttm;\r\n        this.updateValue(i, dt);\r\n    }\r\n\r\n    //TODO:coverage\r\n    config(w: number, h: number): void {\r\n        this.hud_width = w;\r\n        this.hud_height = h;\r\n    }\r\n\r\n    //TODO:coverage\r\n    addDataDef(id: number, color: number, name: string, scale: number): void {\r\n        this.datas[id] = new PerfData(id, color, name, scale);\r\n    }\r\n\r\n    //TODO:coverage\r\n    updateValue(id: number, v: number): void {\r\n        this.datas[id].addData(v);\r\n    }\r\n\r\n    //TODO:coverage\r\n    v2y(v: number): number {\r\n        var bb: number = this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\r\n        return this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\r\n    }\r\n\r\n    //TODO:coverage\r\n    drawHLine(ctx: Context, v: number, color: string, text: string): void {\r\n        var sx: number = this._x;\r\n        var ex: number = this._x + this.hud_width;\r\n        var sy: number = this.v2y(v);\r\n        ctx.fillText(text, sx, sy - 6, null, 'green', null);\r\n        sx += this.textSpace;\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(sx, sy, this._x + this.hud_width, 1, null);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * \r\n     * @param ctx \r\n     * @param x \r\n     * @param y \r\n     * @override\r\n     */\r\n    customRender(ctx: Context, x: number, y: number): void {\r\n        var now: number = performance.now();;\r\n        if (PerfHUD._lastTm <= 0) PerfHUD._lastTm = now;\r\n        this.updateValue(0, now - PerfHUD._lastTm);\r\n        PerfHUD._lastTm = now;\r\n\r\n        ctx.save();\r\n        ctx.fillRect(this._x, this._y, this.hud_width, this.hud_height + 4, '#000000cc');\r\n        ctx.globalAlpha = 0.9;\r\n        /*\r\n        for ( var i = 0; i < gMaxV; i+=30) {\r\n            drawHLine(ctx, i, 'green', '' + i);// '' + Math.round(1000 / (i + 1)));\r\n        }\r\n        */\r\n        this.drawHLine(ctx, 0, 'green', '    0');\r\n        this.drawHLine(ctx, 10, 'green', '  10');\r\n        this.drawHLine(ctx, 16.667, 'red', ' ');\r\n        this.drawHLine(ctx, 20, 'green', '50|20');\r\n        this.drawHLine(ctx, 16.667 * 2, 'yellow', '');\r\n        this.drawHLine(ctx, 16.667 * 3, 'yellow', '');\r\n        this.drawHLine(ctx, 16.667 * 4, 'yellow', '');\r\n        this.drawHLine(ctx, 50, 'green', '20|50');\r\n        this.drawHLine(ctx, 100, 'green', '10|100');\r\n\r\n        //数据\r\n        for (var di: number = 0, sz: number = this.datas.length; di < sz; di++) {\r\n            var cd: PerfData = this.datas[di];\r\n            if (!cd) continue;\r\n            var dtlen: number = cd.datas.length;\r\n            var dx: number = (this.hud_width - this.textSpace) / dtlen;\r\n            var cx: number = cd.datapos;\r\n            var _cx: number = this._x + this.textSpace;\r\n            ctx.fillStyle = cd.color;\r\n            //开始部分\r\n            /*\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = cd.color;\r\n            ctx.moveTo(_cx, v2y(cd.datas[cx]* cd.scale) );\r\n            cx++;\r\n            _cx += dx;\r\n            for ( var dtsz:int = dtlen; cx < dtsz; cx++) {\r\n                ctx.lineTo(_cx, v2y(cd.datas[cx]* cd.scale) );\r\n                _cx += dx;\r\n            }\r\n            //剩下的\r\n            for (cx = 0; cx < cd.datapos; cx++) {\r\n                ctx.lineTo(_cx, v2y(cd.datas[cx] * cd.scale));\r\n                _cx += dx;\r\n            }\r\n            ctx.stroke();\r\n            */\r\n            for (var dtsz: number = dtlen; cx < dtsz; cx++) {\r\n                var sty: number = this.v2y(cd.datas[cx] * cd.scale);\r\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\r\n                _cx += dx;\r\n            }\r\n            //剩下的\r\n            for (cx = 0; cx < cd.datapos; cx++) {\r\n                sty = this.v2y(cd.datas[cx] * cd.scale);\r\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\r\n                _cx += dx;\r\n            }\r\n\r\n        }\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\n","import { CacheManger } from \"./CacheManger\";\r\nimport { Pool } from \"./Pool\";\r\n\r\n/**\r\n * @private\r\n * 基于个数的对象缓存管理器\r\n */\r\nexport class PoolCache {\r\n\r\n    //TODO:\r\n    /**\r\n     * 对象在Pool中的标识\r\n     */\r\n    sign: string;\r\n    /**\r\n     * 允许缓存的最大数量\r\n     */\r\n    maxCount: number = 1000;\r\n\r\n    /**\r\n     * 获取缓存的对象列表\r\n     * @return\r\n     *\r\n     */\r\n    getCacheList(): any[] {\r\n        return Pool.getPoolBySign(this.sign);\r\n    }\r\n\r\n    /**\r\n     * 尝试清理缓存\r\n     * @param force 是否强制清理\r\n     *\r\n     */\r\n    tryDispose(force: boolean): void {\r\n        var list: any[];\r\n        list = Pool.getPoolBySign(this.sign);\r\n        if (list.length > this.maxCount) {\r\n            list.splice(this.maxCount, list.length - this.maxCount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加对象缓存管理\r\n     * @param sign 对象在Pool中的标识\r\n     * @param maxCount 允许缓存的最大数量\r\n     *\r\n     */\r\n    static addPoolCacheManager(sign: string, maxCount: number = 100): void {\r\n        var cache: PoolCache;\r\n        cache = new PoolCache();\r\n        cache.sign = sign;\r\n        cache.maxCount = maxCount;\r\n        CacheManger.regCacheByFunction(cache.tryDispose.bind(cache), cache.getCacheList.bind(cache));\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * <code>SingletonList</code> 类用于实现单例队列。\r\n */\r\nexport class SingletonList<T> {\r\n    /**@internal [只读]*/\r\n    elements: Array<T> = [];\r\n    /** @internal [只读]*/\r\n    length: number = 0;\r\n\r\n    /**\r\n     * 创建一个新的 <code>SingletonList</code> 实例。\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _add(element: T): void {\r\n        if (this.length === this.elements.length)\r\n            this.elements.push(element);\r\n        else\r\n            this.elements[this.length] = element;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    add(element: T): void {\r\n        let index = this.elements.indexOf(element);\r\n        if ((typeof (element) != \"number\") && index != -1 && index < this.length)\r\n            return;\r\n        if (this.length === this.elements.length)\r\n            this.elements.push(element);\r\n        else\r\n            this.elements[this.length] = element;\r\n        this.length++;\r\n    }\r\n\r\n    indexof(element:T){\r\n        let index = this.elements.indexOf(element);\r\n        if(index!=-1&&index<this.length)\r\n            return index;\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param element \r\n     */\r\n    remove(element: T): void {\r\n        let index = this.elements.indexOf(element);\r\n        if (index != -1 && index < this.length) {\r\n            this.elements[index] = this.elements[this.length - 1];\r\n            this.length--;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clear(){\r\n        this.elements = [];\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clean(){\r\n        this.elements.length = this.length;\r\n    }\r\n\r\n    destroy() {\r\n        this.elements = null;\r\n    }\r\n}\r\n\r\n\r\n","import { Pool } from \"./Pool\";\r\nimport { Tween } from \"./Tween\";\r\nimport { Browser } from \"./Browser\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Utils } from \"./Utils\";\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 整个缓动结束的时候会调度\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 当缓动到达标签时会调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>TimeLine</code> 是一个用来创建时间轴动画的类。\r\n */\r\nexport class TimeLine extends EventDispatcher {\r\n\r\n    private _labelDic: any;\r\n    private _tweenDic: any = {};\r\n    private _tweenDataList: any[] = [];\r\n    private _endTweenDataList: any[];//以结束时间进行排序\r\n    private _currTime: number = 0;\r\n    private _lastTime: number = 0;\r\n    private _startTime: number = 0;\r\n    /**当前动画数据播放到第几个了*/\r\n    private _index: number = 0;\r\n    /**为TWEEN创建属于自己的唯一标识，方便管理*/\r\n    private _gidIndex: number = 0;\r\n    /**保留所有对象第一次注册动画时的状态（根据时间跳转时，需要把对象的恢复，再计算接下来的状态）*/\r\n    private _firstTweenDic: any = {};\r\n    /**是否需要排序*/\r\n    private _startTimeSort: boolean = false;\r\n    private _endTimeSort: boolean = false;\r\n    /**是否循环*/\r\n    private _loopKey: boolean = false;\r\n    /** 缩放动画播放的速度。*/\r\n    scale: number = 1;\r\n\r\n    private _frameRate: number = 60;\r\n    private _frameIndex: number = 0;\r\n    private _total: number = 0;\r\n\r\n    /**\r\n     * 控制一个对象，从当前点移动到目标点。\r\n     * @param\ttarget\t\t要控制的对象。\r\n     * @param\tprops\t\t要控制对象的属性。\r\n     * @param\tduration\t对象TWEEN的时间。\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\r\n     */\r\n    static to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return (new TimeLine()).to(target, props, duration, ease, offset);\r\n    }\r\n\r\n    /**\r\n     * 从 props 属性，缓动到当前状态。\r\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\r\n     * @param\tprops\t\t要控制对象的属性\r\n     * @param\tduration\t对象TWEEN的时间\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\r\n     */\r\n    static from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return (new TimeLine()).from(target, props, duration, ease, offset);\r\n    }\r\n\r\n    /**\r\n     * 控制一个对象，从当前点移动到目标点。\r\n     * @param\ttarget\t\t要控制的对象。\r\n     * @param\tprops\t\t要控制对象的属性。\r\n     * @param\tduration\t对象TWEEN的时间。\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\r\n     */\r\n    to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return this._create(target, props, duration, ease, offset, true);\r\n    }\r\n\r\n    /**\r\n     * 从 props 属性，缓动到当前状态。\r\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\r\n     * @param\tprops\t\t要控制对象的属性\r\n     * @param\tduration\t对象TWEEN的时间\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\r\n     */\r\n    from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return this._create(target, props, duration, ease, offset, false);\r\n    }\r\n\r\n    /** @private */\r\n    private _create(target: any, props: any, duration: number, ease: Function, offset: number, isTo: boolean): TimeLine {\r\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\r\n        tTweenData.isTo = isTo;\r\n        tTweenData.type = 0;\r\n        tTweenData.target = target;\r\n        tTweenData.duration = duration;\r\n        tTweenData.data = props;\r\n        tTweenData.startTime = this._startTime + offset;\r\n        tTweenData.endTime = tTweenData.startTime + tTweenData.duration;\r\n        tTweenData.ease = ease;\r\n        this._startTime = Math.max(tTweenData.endTime, this._startTime);\r\n        this._tweenDataList.push(tTweenData);\r\n        this._startTimeSort = true;\r\n        this._endTimeSort = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 在时间队列中加入一个标签。\r\n     * @param\tlabel\t标签名称。\r\n     * @param\toffset\t标签相对于上个动画的偏移时间(单位：毫秒)。\r\n     */\r\n    addLabel(label: string, offset: number): TimeLine {\r\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\r\n        tTweenData.type = 1;\r\n        tTweenData.data = label;\r\n        tTweenData.endTime = tTweenData.startTime = this._startTime + offset;\r\n        this._labelDic || (this._labelDic = {});\r\n        this._labelDic[label] = tTweenData;\r\n        this._tweenDataList.push(tTweenData);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 移除指定的标签\r\n     * @param\tlabel\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (this._labelDic && this._labelDic[label]) {\r\n            var tTweenData: tweenData = this._labelDic[label];\r\n            if (tTweenData) {\r\n                var tIndex: number = this._tweenDataList.indexOf(tTweenData);\r\n                if (tIndex > -1) {\r\n                    this._tweenDataList.splice(tIndex, 1);\r\n                }\r\n            }\r\n            delete this._labelDic[label];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 动画从整个动画的某一时间开始。\r\n     * @param\ttime(单位：毫秒)。\r\n     */\r\n    gotoTime(time: number): void {\r\n        if (this._tweenDataList == null || this._tweenDataList.length == 0) return;\r\n        var tTween: Tween;\r\n        var tObject: any;\r\n        for (var p in this._firstTweenDic) {\r\n            tObject = this._firstTweenDic[p];\r\n            if (tObject) {\r\n                for (var tDataP in tObject) {\r\n                    if (tDataP in tObject.diyTarget) {\r\n                        tObject.diyTarget[tDataP] = tObject[tDataP];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween.clear();\r\n            delete this._tweenDic[p];\r\n        }\r\n        this._index = 0;\r\n        this._gidIndex = 0;\r\n        this._currTime = time;\r\n        this._lastTime = Browser.now();\r\n        var tTweenDataCopyList: any[];\r\n        if (this._endTweenDataList == null || this._endTimeSort) {\r\n            this._endTimeSort = false;\r\n            this._endTweenDataList = tTweenDataCopyList = this._tweenDataList.concat();\r\n            //对数据排序\r\n            function Compare(paraA: any, paraB: any): number {\r\n                if (paraA.endTime > paraB.endTime) {\r\n                    return 1;\r\n                } else if (paraA.endTime < paraB.endTime) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            tTweenDataCopyList.sort(Compare);\r\n        } else {\r\n            tTweenDataCopyList = this._endTweenDataList\r\n        }\r\n\r\n        var tTweenData: tweenData;\r\n        //叠加已经经过的关键帧数据\r\n        for (var i: number = 0, n: number = tTweenDataCopyList.length; i < n; i++) {\r\n            tTweenData = tTweenDataCopyList[i];\r\n            if (tTweenData.type == 0) {\r\n                if (time >= tTweenData.endTime) {\r\n                    this._index = Math.max(this._index, i + 1);\r\n                    //把经历过的属性加入到对象中\r\n                    var props: any = tTweenData.data;\r\n                    if (tTweenData.isTo) {\r\n                        for (var tP in props) {\r\n                            tTweenData.target[tP] = props[tP];\r\n                        }\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //创建当前正在行动的TWEEN;\r\n        for (i = 0, n = this._tweenDataList.length; i < n; i++) {\r\n            tTweenData = this._tweenDataList[i];\r\n            if (tTweenData.type == 0) {\r\n                if (time >= tTweenData.startTime && time < tTweenData.endTime) {\r\n                    this._index = Math.max(this._index, i + 1);\r\n                    this._gidIndex++;\r\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\r\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\r\n                    tTween.setStartTime(this._currTime - (time - tTweenData.startTime));\r\n                    tTween._updateEase(this._currTime);\r\n                    tTween.gid = this._gidIndex;\r\n                    this._tweenDic[this._gidIndex] = tTween;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从指定的标签开始播。\r\n     * @param\tLabel 标签名。\r\n     */\r\n    gotoLabel(Label: string): void {\r\n        if (this._labelDic == null) return;\r\n        var tLabelData: tweenData = this._labelDic[Label];\r\n        if (tLabelData) this.gotoTime(tLabelData.startTime);\r\n    }\r\n\r\n    /**\r\n     * 暂停整个动画。\r\n     */\r\n    pause(): void {\r\n        ILaya.timer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 恢复暂停动画的播放。\r\n     */\r\n    resume(): void {\r\n        this.play(this._currTime, this._loopKey);\r\n    }\r\n\r\n    /**\r\n     * 播放动画。\r\n     * @param\ttimeOrLabel 开启播放的时间点或标签名。\r\n     * @param\tloop 是否循环播放。\r\n     */\r\n    play(timeOrLabel: any = 0, loop: boolean = false): void {\r\n        if (!this._tweenDataList) return;\r\n        if (this._startTimeSort) {\r\n            this._startTimeSort = false;\r\n            //对数据排序\r\n            function Compare(paraA: any, paraB: any): number {\r\n                if (paraA.startTime > paraB.startTime) {\r\n                    return 1;\r\n                } else if (paraA.startTime < paraB.startTime) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            this._tweenDataList.sort(Compare);\r\n\r\n            for (var i: number = 0, n: number = this._tweenDataList.length; i < n; i++) {\r\n                var tTweenData: tweenData = this._tweenDataList[i];\r\n                if (tTweenData != null && tTweenData.type == 0) {\r\n                    var tTarget: any = tTweenData.target;\r\n                    var gid: number = (tTarget.$_GID || (tTarget.$_GID = Utils.getGID()));\r\n                    var tSrcData: any = null;\r\n                    //把对象的初始属性保留下来，方便跳转时，回复到初始状态\r\n                    if (this._firstTweenDic[gid] == null) {\r\n                        tSrcData = {};\r\n                        tSrcData.diyTarget = tTarget;\r\n                        this._firstTweenDic[gid] = tSrcData;\r\n                    } else {\r\n                        tSrcData = this._firstTweenDic[gid];\r\n                    }\r\n                    for (var p in tTweenData.data) {\r\n                        if (tSrcData[p] == null) {\r\n                            tSrcData[p] = tTarget[p];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (typeof (timeOrLabel) == 'string') {\r\n            this.gotoLabel(timeOrLabel);\r\n        } else {\r\n            this.gotoTime(timeOrLabel);\r\n        }\r\n        this._loopKey = loop;\r\n        this._lastTime = Browser.now();\r\n        ILaya.timer.frameLoop(1, this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 更新当前动画。\r\n     */\r\n    private _update(): void {\r\n        if (this._currTime >= this._startTime) {\r\n            if (this._loopKey) {\r\n                this._complete();\r\n                if (!this._tweenDataList) return;\r\n                this.gotoTime(0);\r\n            } else {\r\n                for (var p in this._tweenDic) {\r\n                    tTween = this._tweenDic[p];\r\n                    tTween.complete();\r\n                }\r\n                this.pause();\r\n                this._complete();\r\n                return;\r\n            }\r\n        }\r\n\r\n        var tNow: number = Browser.now();\r\n        var tFrameTime: number = tNow - this._lastTime;\r\n        var tCurrTime: number = this._currTime += tFrameTime * this.scale;\r\n        this._lastTime = tNow;\r\n\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween._updateEase(tCurrTime);\r\n        }\r\n\r\n        var tTween: Tween;\r\n        if (this._tweenDataList.length != 0 && this._index < this._tweenDataList.length) {\r\n            var tTweenData: tweenData = this._tweenDataList[this._index];\r\n            if (tCurrTime >= tTweenData.startTime) {\r\n                this._index++;\r\n                //创建TWEEN\r\n                if (tTweenData.type == 0) {\r\n                    this._gidIndex++;\r\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\r\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\r\n                    tTween.setStartTime(tCurrTime);\r\n                    tTween.gid = this._gidIndex;\r\n                    this._tweenDic[this._gidIndex] = tTween;\r\n                    tTween._updateEase(tCurrTime);\r\n                } else {\r\n                    this.event(Event.LABEL, tTweenData.data);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 指定的动画索引处的动画播放完成后，把此动画从列表中删除。\r\n     * @param\tindex\r\n     */\r\n    private _animComplete(index: number): void {\r\n        var tTween: Tween = this._tweenDic[index];\r\n        if (tTween) delete this._tweenDic[index];\r\n    }\r\n\r\n    /** @private */\r\n    private _complete(): void {\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 得到帧索引\r\n     */\r\n    get index(): number {\r\n        return this._frameIndex;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置帧索引\r\n     */\r\n    set index(value: number) {\r\n        this._frameIndex = value;\r\n        this.gotoTime(this._frameIndex / this._frameRate * 1000);\r\n    }\r\n\r\n    /**\r\n     * 得到总帧数。\r\n     */\r\n    get total(): number {\r\n        this._total = Math.floor(this._startTime / 1000 * this._frameRate);\r\n        return this._total;\r\n    }\r\n\r\n    /**\r\n     * 重置所有对象，复用对象的时候使用。\r\n     */\r\n    reset(): void {\r\n        var p: any;\r\n        if (this._labelDic) {\r\n            for (p in this._labelDic) {\r\n                delete this._labelDic[p];\r\n            }\r\n        }\r\n        var tTween: Tween;\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween.clear();\r\n            delete this._tweenDic[p];\r\n        }\r\n        for (p in this._firstTweenDic) {\r\n            delete this._firstTweenDic[p];\r\n        }\r\n        this._endTweenDataList = null;\r\n        if (this._tweenDataList && this._tweenDataList.length) {\r\n            var i: number, len: number;\r\n            len = this._tweenDataList.length;\r\n            for (i = 0; i < len; i++) {\r\n                if (this._tweenDataList[i])\r\n                    this._tweenDataList[i].destroy();\r\n            }\r\n        }\r\n        this._tweenDataList.length = 0;\r\n        this._currTime = 0;\r\n        this._lastTime = 0;\r\n        this._startTime = 0;\r\n        this._index = 0;\r\n        this._gidIndex = 0;\r\n        this.scale = 1;\r\n        ILaya.timer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 彻底销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.reset();\r\n        this._labelDic = null;\r\n        this._tweenDic = null;\r\n        this._tweenDataList = null;\r\n        this._firstTweenDic = null;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nclass tweenData {\r\n    type: number = 0;//0代表TWEEN,1代表标签\r\n    isTo: boolean = true;\r\n    startTime: number;\r\n    endTime: number;\r\n    target: any;\r\n    duration: number;\r\n    ease: Function;\r\n    data: any;\r\n    destroy(): void {\r\n        this.target = null;\r\n        this.ease = null;\r\n        this.data = null;\r\n        this.isTo = true;\r\n        this.type = 0;\r\n        Pool.recover(\"tweenData\", this);\r\n    }\r\n}\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制粒子\r\n * @private\r\n */\r\nexport class DrawParticleCmd {\r\n    static ID: string = \"DrawParticleCmd\";\r\n\r\n    private _templ: any;\r\n\r\n    /**@private */\r\n    static create(_temp: any): DrawParticleCmd {\r\n        var cmd: DrawParticleCmd = Pool.getItemByClass(\"DrawParticleCmd\", DrawParticleCmd);\r\n        cmd._templ = _temp;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this._templ = null;\r\n        Pool.recover(\"DrawParticleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        //这个只有webgl在用\r\n        context.drawParticle(gx, gy, this._templ);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawParticleCmd.ID;\r\n    }\r\n}\r\n\r\n","import { CommandUniformMap } from \"../../../RenderEngine/CommandUniformMap\";\r\n\r\nexport class NativeCommandUniformMap extends CommandUniformMap {\r\n\r\n\tprivate _nativeObj: any;\r\n\r\n    constructor(_nativeObj: any, stateName: string){\r\n        super(stateName);\r\n\t\tthis._nativeObj = _nativeObj;\r\n    }\r\n    hasPtrID(propertyID: number): boolean {\r\n\t\treturn this._nativeObj.hasPtrID(propertyID);\r\n\t}\r\n\r\n\tgetMap() {\r\n\t\treturn this._idata;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个UniformMap\r\n\t * @internal\r\n\t * @param propertyID \r\n\t * @param propertyKey \r\n\t */\r\n\taddShaderUniform(propertyID: number, propertyKey: string): void {\r\n\t\t//this._idata[propertyID] = propertyKey;\r\n        this._nativeObj.addShaderUniform(propertyID, propertyKey);\r\n\t}\r\n}","import { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n/**\r\n * WebglObject 基类\r\n */\r\nexport class NativeGLObject{\r\n    protected _engine:NativeWebGLEngine;\r\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    protected _id:number;\r\n    protected _destroyed: boolean = false;\r\n\r\n    constructor(engine: NativeWebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._id = this._engine._IDCounter++;\r\n    }\r\n\r\n    get destroyed():boolean{\r\n        return this._destroyed;\r\n    }\r\n\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    setResourceManager():void{\r\n    };\r\n\r\n    destroy():void{\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n    }\r\n\r\n}","\r\nimport { WebGLExtension } from \"../WebGLEngine/GLEnum/WebGLExtension\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\n\r\nexport class NativeGLTextureContext extends NativeGLObject implements ITextureContext {\r\n    needBitmap: boolean;\r\n    protected _native: any;\r\n\r\n    constructor(engine: NativeWebGLEngine, native: any) {\r\n        super(engine);\r\n        this._native = native;\r\n        this.needBitmap = false;\r\n    }\r\n\r\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        return this._native.createTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\r\n    }\r\n\r\n    setTextureImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        this._native.setTextureImageData(texture, (source as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexturePixelsData(texture: InternalTexture, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        this._native.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    initVideoTextureData(texture: InternalTexture): void {\r\n        this._native.initVideoTextureData(texture);\r\n    }\r\n\r\n    setTextureSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTextureSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTextureSubImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        throw new Error(\"setTextureSubImageData Method not implemented.\");\r\n    }\r\n\r\n    setTexture3DImageData(texture: InternalTexture, source: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DImageData(texture, (source as any[]).map(function (s) { return s._nativeObj }), depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexture3DPixlesData(texture: InternalTexture, source: ArrayBufferView, depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DPixlesData(texture, source, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexture3DSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTextureHDRData(texture: InternalTexture, hdrInfo: HDRTextureInfo): void {\r\n        let sourceData = hdrInfo.readScanLine();\r\n        throw new Error(\"setTextureHDRData Method not implemented.\");\r\n        this.setTexturePixelsData(texture, sourceData, false, false);\r\n    }\r\n    setTextureDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\r\n        this._native.setTextureKTXData(texture, ddsInfo);\r\n    }\r\n\r\n    setTextureKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\r\n        this._native.setTextureKTXData(texture, ktxInfo);\r\n    }\r\n    setCubeImageData(texture: InternalTexture, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        var images: any[] = [];\r\n        var length = sources.length;\r\n        for (let index = 0; index < length; index++) {\r\n            images.push((sources[index] as any)._nativeObj);\r\n        }\r\n        this._native.setCubeImageData(texture, images, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setCubePixelsData(texture: InternalTexture, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n    setCubeSubPixelData(texture: InternalTexture, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n\r\n    setCubeDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\r\n        this._native.setCubeDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    setCubeKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\r\n        this._native.setCubeKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    setTextureCompareMode(texture: InternalTexture, compareMode: TextureCompareMode): TextureCompareMode {\r\n        return this._native.setTextureCompareMode(texture, compareMode);\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: InternalRenderTarget, faceIndex: number = 0): void {\r\n        this._native.bindRenderTarget(renderTarget, faceIndex);\r\n    }\r\n\r\n    bindoutScreenTarget(): void {\r\n        this._native.bindoutScreenTarget();\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: InternalRenderTarget): void {\r\n        this._native.unbindRenderTarget(renderTarget);\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        return this._native.createRenderTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\r\n        return this._native.createRenderTargetInternal(width, height, colorFormat, depthStencilFormat ? depthStencilFormat : RenderTargetFormat.None, generateMipmap, sRGB, multiSamples);\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\r\n        return this._native.createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples);\r\n    }\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        throw new Error(\"createRenderTextureCubeInternal Method not implemented.\");\r\n    }\r\n    // todo  color 0, 1, 2, 3 ?\r\n    setupRendertargetTextureAttachment(renderTarget: InternalRenderTarget, texture: InternalTexture) {\r\n        this._native.setupRendertargetTextureAttachment(renderTarget, texture);\r\n    }\r\n\r\n    // todo 不同 格式\r\n    readRenderTargetPixelData(renderTarget: InternalRenderTarget, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\r\n        return this._native.readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out);\r\n    }\r\n\r\n    updateVideoTexture(texture: InternalTexture, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.updateVideoTexture(texture, (video as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    getRenderTextureData(internalTex: InternalRenderTarget, x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return this._native.getRenderTextureData(internalTex, x, y, width, height);\r\n    }\r\n}","import { NativeGLTextureContext } from \"./NativeGLTextureContext\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\n\r\n/**\r\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\r\n */\r\nexport class NativeGL2TextureContext extends NativeGLTextureContext {\r\n\r\n    constructor(engine: NativeWebGLEngine, native: any) {\r\n        super(engine, native);\r\n    }\r\n}","import { IndexFormat } from \"../../RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderGeometryElement } from \"../../RenderInterface/RenderPipelineInterface/IRenderGeometryElement\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n//TODO\r\nexport class NativeGLRenderDrawContext extends NativeGLObject implements IRenderDrawContext {\r\n    _nativeObj: any;\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n        this._nativeObj = new (window as any).conchGLRenderDrawContext((engine as any)._nativeObj);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElementsInstanced(mode: MeshTopology, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\r\n        this._nativeObj.drawElementsInstanced(mode, count, type, offset, instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawArraysInstanced(mode: MeshTopology, first: number, count: number, instanceCount: number): void {\r\n        this._nativeObj.drawArraysInstanced(mode, first, count, instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    drawArrays(mode: MeshTopology, first: number, count: number): void {\r\n        this._nativeObj.drawArrays(mode, first, count);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElements(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        this._nativeObj.drawElements(mode, count, type, offset);\r\n    }\r\n\r\n    drawElements2DTemp(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        //todo\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawGeometryElement(geometryElement: IRenderGeometryElement): void {\r\n        this._nativeObj.drawGeometryElement((geometryElement as any)._nativeObj);\r\n    }\r\n\r\n\r\n}","import { BlendType } from \"../../../RenderEngine/RenderEnum/BlendType\";\r\nimport { RenderStateType } from \"../../../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderStateCommand } from \"../../../RenderEngine/RenderStateCommand\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * 渲染状态设置命令流\r\n */\r\nexport class NativeRenderStateCommand extends RenderStateCommand {\r\n    private _nativeObj: any;\r\n    constructor() {\r\n        super();\r\n        this._nativeObj = new (window as any).conchRenderStateCommand();\r\n    }\r\n\r\n    addCMD(renderstate: RenderStateType, value: any) {\r\n        switch (renderstate) {\r\n            case RenderStateType.DepthTest:\r\n            case RenderStateType.DepthMask:\r\n            case RenderStateType.DepthFunc:\r\n            case RenderStateType.StencilTest:\r\n            case RenderStateType.StencilMask:\r\n            case RenderStateType.BlendEquation:\r\n            case RenderStateType.CullFace:\r\n            case RenderStateType.FrontFace:\r\n                this._nativeObj.addCMDInt1(renderstate, value);\r\n                break;\r\n            case RenderStateType.StencilFunc:\r\n            case RenderStateType.BlendFunc:\r\n            case RenderStateType.BlendEquationSeparate:\r\n                this._nativeObj.addCMDInt2(renderstate, value[0], value[1]);\r\n                break;\r\n            case RenderStateType.StencilOp:\r\n                this._nativeObj.addCMDInt3(renderstate, value[0], value[1], value[2]);//TODO\r\n                break;\r\n            case RenderStateType.BlendType:\r\n                this._nativeObj.addCMDInt1(renderstate, value != BlendType.BLEND_DISABLE ? 1 : 0);\r\n                break;\r\n            case RenderStateType.BlendFuncSeperate:\r\n                this._nativeObj.addCMDInt4(renderstate, value[0], value[1], value[2], value[3]);\r\n                break;\r\n            default:\r\n                throw \"unknow type of renderStateType\";\r\n                break;\r\n        }\r\n    }\r\n\r\n    applyCMD() {\r\n        LayaGL.renderEngine.applyRenderStateCMD(this);\r\n    }\r\n\r\n    clear() {\r\n        this._nativeObj.clear();\r\n    }\r\n}","import { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\n\r\n\r\nexport class NativeRenderState {\r\n\t_nativeObj: any;\r\n\r\n\tset cull(value: number) {\r\n\t\tthis._nativeObj.cull = value;\r\n\t}\r\n\tget cull(): number {\r\n\t\treturn this._nativeObj.cull;\r\n\t}\r\n\r\n\tset blend(value: number) {\r\n\t\tthis._nativeObj.blend = value;\r\n\t}\r\n\tget blend(): number {\r\n\t\treturn this._nativeObj.blend;\r\n\t}\r\n\r\n\tset srcBlend(value: number) {\r\n\t\tthis._nativeObj.srcBlend = value;\r\n\t}\r\n\tget srcBlend(): number {\r\n\t\treturn this._nativeObj.srcBlend;\r\n\t}\r\n\r\n\tset dstBlend(value: number) {\r\n\t\tthis._nativeObj.dstBlend = value;\r\n\t}\r\n\tget dstBlend(): number {\r\n\t\treturn this._nativeObj.dstBlend;\r\n\t}\r\n\t\r\n\tset srcBlendRGB(value: number) {\r\n\t\tthis._nativeObj.srcBlendRGB = value;\r\n\t}\r\n\tget srcBlendRGB(): number {\r\n\t\treturn this._nativeObj.srcBlendRGB;\r\n\t}\r\n\t\r\n\tset dstBlendRGB(value: number) {\r\n\t\tthis._nativeObj.dstBlendRGB = value;\r\n\t}\r\n\tget dstBlendRGB(): number {\r\n\t\treturn this._nativeObj.dstBlendRGB;\r\n\t}\r\n\t\r\n\tset srcBlendAlpha(value: number) {\r\n\t\tthis._nativeObj.srcBlendAlpha = value;\r\n\t}\r\n\tget srcBlendAlpha(): number {\r\n\t\treturn this._nativeObj.srcBlendAlpha;\r\n\t}\r\n\t\r\n\tset dstBlendAlpha(value: number) {\r\n\t\tthis._nativeObj.dstBlendAlpha = value;\r\n\t}\r\n\tget dstBlendAlpha(): number {\r\n\t\treturn this._nativeObj.dstBlendAlpha;\r\n\t}\r\n\t\r\n\tset blendEquation(value: number) {\r\n\t\tthis._nativeObj.blendEquation = value;\r\n\t}\r\n\tget blendEquation(): number {\r\n\t\treturn this._nativeObj.blendEquation;\r\n\t}\r\n\t\r\n\tset blendEquationRGB(value: number) {\r\n\t\tthis._nativeObj.blendEquationRGB = value;\r\n\t}\r\n\tget blendEquationRGB(): number {\r\n\t\treturn this._nativeObj.blendEquationRGB;\r\n\t}\r\n\t\r\n\tset blendEquationAlpha(value: number) {\r\n\t\tthis._nativeObj.blendEquationAlpha = value;\r\n\t}\r\n\tget blendEquationAlpha(): number {\r\n\t\treturn this._nativeObj.blendEquationAlpha;\r\n\t}\r\n\t\r\n\tset depthTest(value: number) {\r\n\t\tthis._nativeObj.depthTest = value;\r\n\t}\r\n\tget depthTest(): number {\r\n\t\treturn this._nativeObj.depthTest;\r\n\t}\r\n\t\r\n\tset depthWrite(value: boolean) {\r\n\t\tthis._nativeObj.depthWrite = value;\r\n\t}\r\n\tget depthWrite(): boolean {\r\n\t\treturn this._nativeObj.depthWrite;\r\n\t}\r\n\t\r\n\tset stencilWrite(value: boolean) {\r\n\t\tthis._nativeObj.stencilWrite = value;\r\n\t}\r\n\tget stencilWrite(): boolean {\r\n\t\treturn this._nativeObj.stencilWrite;\r\n\t}\r\n\t\r\n\tset stencilTest(value: number) {\r\n\t\tthis._nativeObj.stencilTest = value;\r\n\t}\r\n\tget stencilTest(): number {\r\n\t\treturn this._nativeObj.stencilTest;\r\n\t}\r\n\t\r\n\tset stencilRef(value: number) {\r\n\t\tthis._nativeObj.stencilRef = value;\r\n\t}\r\n\tget stencilRef(): number {\r\n\t\treturn this._nativeObj.stencilRef;\r\n\t}\r\n\r\n\tset stencilOp(value: Vector3) {\r\n\t\tthis._nativeObj.setStencilOp(value.x, value.y, value.z);\r\n\t}\r\n\tsetNull():void {\r\n\t\tthis._nativeObj.setNull();\r\n\t}\r\n\tconstructor() {\r\n\t\tthis._nativeObj = new (window as any).conchRenderState();\r\n\t}\r\n\r\n}\r\n\r\n\r\n","export enum MemoryDataType{\r\n   ShaderData,\r\n   TextureData,\r\n   VertexData,\r\n   IndexData,\r\n   BaseRenderData,\r\n}","import { Color } from \"../../../maths/Color\";\r\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\r\nimport { Quaternion } from \"../../../maths/Quaternion\";\r\nimport { Vector2 } from \"../../../maths/Vector2\";\r\nimport { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { INativeUploadNode } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/INativeUploadNode\";\r\nimport { MemoryDataType } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/MemoryDataType\";\r\nimport { UploadMemory } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemory\";\r\nimport { UploadMemoryManager } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemoryManager\";\r\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { Resource } from \"../../../resource/Resource\";\r\nimport { Texture } from \"../../../resource/Texture\";\r\nimport { Texture2D } from \"../../../resource/Texture2D\";\r\nimport { NativeUniformBufferObject } from \"./NativeUniformBufferObject\";\r\n\r\n\r\nexport enum NativeShaderDataType {\r\n    Number32,\r\n    Vector2,\r\n    Vector3,\r\n    Vector4,\r\n    Matrix4x4,\r\n    Number32Array,\r\n    Texture,\r\n    ShaderDefine,\r\n    UBO,\r\n}\r\n\r\nexport class NativeShaderData extends ShaderData implements INativeUploadNode {\r\n    private inUploadList: boolean = false;\r\n    _dataType: MemoryDataType;\r\n    nativeObjID: number;\r\n    _nativeObj: any;\r\n    updateMap: Map<number, Function>;\r\n    updataSizeMap: Map<number, number>;\r\n    payload32bitNum: number = 0;\r\n    /**\r\n     * @internal\t\r\n     */\r\n    constructor(ownerResource: Resource = null) {\r\n        super(ownerResource)\r\n        this._initData();\r\n        this._nativeObj = new (window as any).conchShaderData();\r\n        this._nativeObj.setApplyUBOData(this.applyUBOData.bind(this));\r\n        this.nativeObjID = this._nativeObj.nativeID;\r\n        this._dataType = MemoryDataType.ShaderData;\r\n        this.updateMap = new Map();\r\n        this.updataSizeMap = new Map();\r\n    }\r\n\r\n    /**\r\n     * @override interface INativeUploadNode\r\n     * @internal\r\n     */\r\n    getUploadMemoryLength(): number {\r\n        let head = 4;//header\r\n        this.updataSizeMap.forEach((value) => {\r\n            this.payload32bitNum += value;\r\n        });\r\n        return (this.payload32bitNum + head) * 4;\r\n    }\r\n\r\n    /**\r\n     * @override interface INativeUploadNode\r\n     * @internal\r\n     * @param memoryBlock \r\n     * @param stride \r\n     */\r\n    uploadDataTOShareMemory(memoryBlock: UploadMemory, strideInByte: number): boolean {\r\n        if (!this._data) {\r\n            return false;\r\n        }\r\n        let array = memoryBlock.int32Array;\r\n        let strideFloat = strideInByte / 4;\r\n        //type\r\n        array[strideFloat++] = MemoryDataType.ShaderData;\r\n        //instanceID\r\n        array[strideFloat++] = this.nativeObjID;\r\n        //dataLength\r\n        array[strideFloat++] = this.payload32bitNum;\r\n        //Shaderdata property change nums\r\n        array[strideFloat++] = this.updateMap.size;\r\n        this.updateMap.forEach((value, key) => {\r\n            strideFloat += value.call(this, key, memoryBlock, strideFloat);\r\n        });\r\n        this.clearUpload();\r\n        this.inUploadList = false;\r\n        return true;\r\n    }\r\n\r\n    clearUpload() {\r\n        this.payload32bitNum = 0;\r\n        this.updataSizeMap.clear();\r\n        this.updateMap.clear();\r\n    }\r\n\r\n    applyUBOData() {\r\n        if (this._uniformBufferDatas) {\r\n            super.applyUBOData();\r\n        }\r\n\t}\r\n    compressNumber(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Number32 \" + NativeShaderDataType.Number32 + \"stride \" + stride);\r\n        var length = 3;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Number32;\r\n        memoryBlock.float32Array[stride + 2] = this._data[index];\r\n        return length;\r\n    }\r\n\r\n    compressVector2(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector2 \" + NativeShaderDataType.Vector2 + \"stride \" + stride);\r\n        var length = 4;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector2;\r\n        var value: Vector2 = this._data[index];\r\n        memoryBlock.float32Array[stride + 2] = value.x;\r\n        memoryBlock.float32Array[stride + 3] = value.y;\r\n        return length;\r\n    }\r\n\r\n    compressVector3(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector3 \" + NativeShaderDataType.Vector2 + \"stride \" + stride);\r\n        var length = 5;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector3;\r\n        var value: Vector3 = this._data[index];\r\n        memoryBlock.float32Array[stride + 2] = value.x;\r\n        memoryBlock.float32Array[stride + 3] = value.y;\r\n        memoryBlock.float32Array[stride + 4] = value.z;\r\n        return length;\r\n    }\r\n\r\n    compressVector4(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector4 \" + NativeShaderDataType.Vector4 + \"stride \" + stride);\r\n        var length = 6;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector4;\r\n        var value: Vector4 = this._data[index];\r\n        memoryBlock.float32Array[stride + 2] = value.x;\r\n        memoryBlock.float32Array[stride + 3] = value.y;\r\n        memoryBlock.float32Array[stride + 4] = value.z;\r\n        memoryBlock.float32Array[stride + 5] = value.w;\r\n        return length;\r\n    }\r\n    \r\n\r\n    compressMatrix4x4(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Matrix4x4 \" + NativeShaderDataType.Matrix4x4 + \"stride \" + stride);\r\n        var length = 18;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Matrix4x4;\r\n        var value: Matrix4x4 = this._data[index];\r\n        memoryBlock.float32Array.set(value.elements, stride + 2);\r\n        return length;\r\n    }\r\n\r\n    compressNumberArray(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Number32Array \" + NativeShaderDataType.Number32Array + \"stride \" + stride);\r\n        memoryBlock.int32Array[stride] = index\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Number32Array;\r\n        var value: Float32Array = this._data[index];\r\n        memoryBlock.int32Array[stride + 2] = value.length;\r\n        memoryBlock.float32Array.set(value, stride + 3);\r\n        return value.length + 3;\r\n    }\r\n\r\n    compressTexture(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Texture \" + NativeShaderDataType.Texture + \"stride \" + stride);\r\n        var value: any = this._data[index];\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Texture;\r\n        if (value && value instanceof Texture) {\r\n            memoryBlock.int32Array[stride + 2] = (value.bitmap._texture as any).id;\r\n        }\r\n        else if (value && value._texture) {\r\n            memoryBlock.int32Array[stride + 2] = (value._texture as any).id;\r\n        }\r\n        else {\r\n            memoryBlock.int32Array[stride + 2] = (Texture2D.errorTexture._texture as any).id;\r\n        }\r\n        return 3;\r\n    }\r\n\r\n    compressUBO(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        var value:NativeUniformBufferObject = this._data[index];\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.UBO;\r\n        memoryBlock.int32Array[stride + 2] = (value._conchUniformBufferObject as any).nativeID;\r\n        return 3;\r\n    }\r\n\r\n    private configMotionProperty(key: number, length: number, callBack: Function) {\r\n        this.updateMap.set(key, callBack);\r\n        this.updataSizeMap.set(key, length);\r\n        if (!this.inUploadList) {\r\n            this.inUploadList = true;\r\n            UploadMemoryManager.getInstance()._dataNodeList.add(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置布尔。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 布尔。\r\n     */\r\n    setBool(index: number, value: boolean): void {\r\n        super.setBool(index, value);\r\n        this.configMotionProperty(index, 3, this.compressNumber);\r\n    }\r\n\r\n    /**\r\n     * 设置整型。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 整形。\r\n     */\r\n    setInt(index: number, value: number): void {\r\n        //this._data[index] = value;\r\n        super.setInt(index, value);\r\n        this.configMotionProperty(index, 3, this.compressNumber);\r\n    }\r\n\r\n    /**\r\n     * 设置浮点。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 浮点。\r\n     */\r\n    setNumber(index: number, value: number): void {\r\n        super.setNumber(index, value);\r\n        this.configMotionProperty(index, 3, this.compressNumber);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector2向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue Vector2向量。\r\n     */\r\n    setVector2(index: number, value: Vector2): void {\r\n        super.setVector2(index, value);\r\n        this.configMotionProperty(index, 4, this.compressVector2);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector3向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue Vector3向量。\r\n     */\r\n    setVector3(index: number, value: Vector3): void {\r\n        super.setVector3(index, value);\r\n        this.configMotionProperty(index, 5, this.compressVector3);\r\n    }\r\n\r\n    /**\r\n     * 设置向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 向量。\r\n     */\r\n    setVector(index: number, value: Vector4): void {\r\n        super.setVector(index, value);\r\n        this.configMotionProperty(index, 6, this.compressVector4);\r\n    }\r\n\r\n    /**\r\n     * 设置颜色\r\n     * @param index 索引\r\n     * @param value 颜色值\r\n     */\r\n    setColor(index: number, value: Color): void {\r\n        super.setColor(index, value);\r\n        this.configMotionProperty(index, 6, this.compressVector4);\r\n    }\r\n\r\n    /**\r\n     * 设置矩阵。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue  矩阵。\r\n     */\r\n    setMatrix4x4(index: number, value: Matrix4x4): void {\r\n        super.setMatrix4x4(index, value);\r\n        this.configMotionProperty(index, 18, this.compressMatrix4x4);\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置Buffer。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue  buffer数据。\r\n     */\r\n    setBuffer(index: number, value: Float32Array): void {\r\n        super.setBuffer(index, value);\r\n        this.configMotionProperty(index, 3 + value.length, this.compressNumberArray);\r\n    }\r\n\r\n    /**\r\n     * 设置纹理。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 纹理。\r\n     */\r\n    setTexture(index: number, value: BaseTexture): void {\r\n        super.setTexture(index, value);\r\n        this.configMotionProperty(index, 3, this.compressTexture);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param index \r\n     * @param value \r\n     */\r\n    setUniformBuffer(index: number, value: NativeUniformBufferObject) {\r\n        this._data[index] = value;\r\n        this.configMotionProperty(index, 3, this.compressUBO);\r\n    }\r\n\r\n    /**\r\n     * set shader data\r\n     * @deprecated\r\n     * @param index uniformID\r\n     * @param value data\r\n     */\r\n    setValueData(index: number, value: any) {\r\n        // if (!!value.clone)\r\n        //     this._data[index] = value.clone();\r\n        // else\r\n        //     this._data[index] = value;\r\n        //有点恶心\r\n        if (typeof value == \"boolean\") {\r\n            this.setBool(index, <boolean>value);\r\n        } else if (typeof value == \"number\") {\r\n            this.setNumber(index, <number>value);\r\n        } else if (value instanceof Color) {\r\n            this.setColor(index, <Color>value);\r\n        } else if (value instanceof Vector2) {\r\n            this.setVector2(index, <Vector2>value);\r\n        } else if (value instanceof Vector3) {\r\n            this.setVector3(index, <Vector3>value);\r\n        } else if (value instanceof Vector4 || value instanceof Quaternion) {\r\n            this.setVector(index, <Vector4>value);\r\n        } else if (value instanceof Matrix4x4) {\r\n            this.setMatrix4x4(index, <Matrix4x4>value);\r\n        } else if (value.ArrayBuffer != null) {\r\n            this.setBuffer(index, value);\r\n        } else if (value._texture != null) {\r\n            this.setTexture(index, value);\r\n        }\r\n    }\r\n\r\n    cloneTo(destObject: NativeShaderData) {\r\n        var dest: NativeShaderData = <NativeShaderData>destObject;\r\n        for (var k in this._data) {//TODO:需要优化,杜绝is判断，慢\r\n            var value: any = this._data[k];\r\n            if (value != null) {\r\n                if (typeof (value) == 'boolean') {\r\n                    destObject.setBool((k as any), value);\r\n                } else if (typeof (value) == 'number') {\r\n                    destObject.setNumber(k as any, <number>value);\r\n                } else if (value instanceof Vector2) {\r\n                    destObject.setVector2(k as any, <Vector2>value);\r\n                } else if (value instanceof Vector3) {\r\n                    destObject.setVector3(k as any, <Vector3>value);\r\n                } else if (value instanceof Vector4) {\r\n                    destObject.setVector(k as any, <Vector4>value);\r\n                } else if (value instanceof Matrix4x4) {\r\n                    destObject.setMatrix4x4(k as any, <Matrix4x4>value);\r\n                } else if (value instanceof BaseTexture) {\r\n                    destObject.setTexture(k as any, value);\r\n                }\r\n            }\r\n        }\r\n        this._defineDatas.cloneTo(dest._defineDatas);\r\n        this._gammaColorMap.forEach((color, index) => {\r\n\t\t    destObject._gammaColorMap.set(index, color.clone());\r\n\t    })\r\n    }\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: NativeShaderData = new NativeShaderData();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    destroy(): void {\r\n\t\tsuper.destroy();\r\n        this._nativeObj.destroy();\r\n        this._nativeObj = null;\r\n\t}\r\n}","/**\r\n * WebGL mode.\r\n */\r\n export enum WebGLMode {\r\n    /** Auto, use WebGL2.0 if support, or will fallback to WebGL1.0. */\r\n    Auto = 0,\r\n    /** WebGL2.0. */\r\n    WebGL2 = 1,\r\n    /** WebGL1.0, */\r\n    WebGL1 = 2\r\n}","export enum WebGLExtension{\r\n    OES_vertex_array_object,\r\n    ANGLE_instanced_arrays,\r\n    OES_texture_half_float,\r\n    OES_texture_half_float_linear,\r\n    OES_texture_float,\r\n    OES_element_index_uint,\r\n    OES_texture_float_linear,//allows linear filtering with floating-point pixel types for textures.\r\n    EXT_color_buffer_half_float,//Render BufferHalf float color\r\n    EXT_shader_texture_lod,\r\n    WEBGL_depth_texture,\r\n    EXT_sRGB,\r\n    EXT_color_buffer_float,\r\n    EXT_texture_filter_anisotropic,\r\n    WEBGL_compressed_texture_s3tc,\r\n    WEBGL_compressed_texture_s3tc_srgb,\r\n    WEBGL_compressed_texture_pvrtc,\r\n    WEBGL_compressed_texture_etc1,\r\n    WEBGL_compressed_texture_etc,\r\n    WEBGL_compressed_texture_astc,\r\n    OES_standard_derivatives,\r\n}","/**\r\n * 共享内存分配,并且绑定Native共享Buffer\r\n */\r\nexport class CommonMemoryAllocater{\r\n    \r\n    /**\r\n     * 创建内存，并绑定为共享内存\r\n     * @param size \r\n     * @returns \r\n     */\r\n    static creatBlock(size:number):ArrayBuffer{\r\n        const buffer = new ArrayBuffer(size);\r\n        \r\n        //native bind todo:\r\n        //buffer.nativeid = ??\r\n        return buffer;\r\n    }\r\n\r\n    /**\r\n     * 释放共享内存\r\n     * @param buffer \r\n     */\r\n    static freeMemoryBlock(buffer:ArrayBuffer){\r\n        //TODO native free buffer\r\n        buffer = null;\r\n    }\r\n    \r\n    \r\n    \r\n}","import { CommonMemoryAllocater } from \"./CommonMemoryAllocater\";\r\n\r\nexport class NativeMemory {\r\n    static NativeSourceID:number = 0;\r\n    /**@internal 共享内存数据 */\r\n    public _buffer: ArrayBuffer;\r\n    /**@internal 显示数据 */\r\n    static  _sharedBuffer: ArrayBuffer = new ArrayBuffer(256);\r\n    /**@internal 显示数据 */\r\n    protected _idata:Int32Array;\r\n    protected _fdata:Float32Array;\r\n    protected _f64data:Float64Array;\r\n    protected _byteArray:Uint8Array;\r\n    /**数据长度 */\r\n    protected _byteLength: number;\r\n    /**销毁标记 */\r\n    protected _destroyed: boolean;\r\n    /**数据资源 */\r\n    protected _id:number;\r\n    /**\r\n     * 实例化一个共享内存\r\n     * @param size byteLength\r\n     */\r\n    constructor(size: number, shared: boolean) {\r\n        if (shared) {\r\n            if (size > NativeMemory._sharedBuffer.byteLength) {\r\n                throw new Error(\"NativeMemory:shared buffer not enough\");\r\n            }\r\n            this._buffer = NativeMemory._sharedBuffer;\r\n        }\r\n        else {\r\n            this._buffer = CommonMemoryAllocater.creatBlock(size);\r\n        }\r\n        this._idata = new Int32Array(this._buffer);\r\n        this._fdata = new Float32Array(this._buffer);\r\n        this._f64data = new Float64Array(this._buffer);\r\n        this._byteArray = new Uint8Array(this._buffer);\r\n        this._byteLength = size;\r\n    }\r\n\r\n    /**\r\n     * Float32Array Data\r\n     */\r\n    get float32Array(): Float32Array {\r\n        return  this._fdata;\r\n    }\r\n\r\n    get float64Array(): Float64Array {\r\n        return  this._f64data;\r\n    }\r\n    /**\r\n     * Uint16Array Data\r\n     */\r\n    /*get uint16Array(): Uint16Array {\r\n        if (!(this._bufferData instanceof Uint16Array))\r\n            this._bufferData = new Uint16Array(this._buffer);\r\n        return <Uint16Array>this._bufferData;\r\n    }*/\r\n\r\n    /**\r\n     * Uint8Array Data\r\n     */\r\n    get uint8Array(): Uint8Array {\r\n        return this._byteArray;\r\n    }\r\n\r\n    /**\r\n     * Int32Array Data\r\n     */\r\n    get int32Array(): Int32Array {\r\n        return this._idata;\r\n    }\r\n\r\n    /**\r\n     * 设置数据\r\n     * @param data 数据\r\n     * @param stride 字节偏移\r\n     * //TODO 字节对齐\r\n     */\r\n    /*setData(data:Uint8Array|Uint16Array|Uint32Array|Int32Array|Float32Array,stride:number):void{\r\n        if(data instanceof Uint8Array){\r\n           this.uint8Array.set(data,stride/2);\r\n            return;\r\n        }\r\n        else if(data instanceof Uint16Array){\r\n           this.uint16Array.set(data,stride/2);\r\n            return;\r\n        }else{\r\n           this.float32Array.set(data,stride/4);\r\n            return;\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * 设置多个参数\r\n     * @param offset \r\n     * @param args \r\n     * 考虑字节对齐\r\n     */\r\n    /*setDataByParams(offset:number,...args: number[]):void{\r\n        if(args)\r\n        {\r\n            for(let i=0,n:number=args.length;i<n;i++)\r\n            this._bufferData[i+offset]=args[i];\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * 扩充buffer\r\n     * @param size \r\n     * @returns \r\n     */\r\n    /*expand(size: number) {\r\n        if(size<=this._byteLength)\r\n            return;\r\n        this._byteLength = size;\r\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\r\n        this.clear();\r\n        this._buffer = CommonMemoryAllocater.creatBlock(size);\r\n    }*/\r\n\r\n    /**\r\n     * 删除\r\n     * @returns \r\n     */\r\n    destroy() {\r\n        if(this._destroyed)\r\n            return;\r\n        this.clear();\r\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\r\n        this._destroyed = true;\r\n    }\r\n\r\n    /**\r\n     * 清楚\r\n     */\r\n    clear(): void {\r\n        this._idata = null;\r\n        this._fdata = null;\r\n        this._byteArray = null;\r\n    }\r\n}","import { INativeUploadNode } from \"./INativeUploadNode\";\r\nimport { NativeMemory } from \"./NativeMemory\";\r\n\r\nexport class UploadMemory extends NativeMemory{\r\n    \r\n    /**\r\n     * @internal\r\n     * 数据填充的位置\r\n     */\r\n    _currentOffsetInByte:number = 0;\r\n\r\n    constructor(size:number){\r\n        super(size,false);\r\n    }\r\n\r\n    addBlockCell(node: INativeUploadNode, dataSizeInByte: number){\r\n        if (node.uploadDataTOShareMemory(this, this._currentOffsetInByte)) {\r\n            this._currentOffsetInByte += dataSizeInByte;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * check ability of size data\r\n     * @param size \r\n     * @returns \r\n     */\r\n    check(size:number){\r\n        return this._currentOffsetInByte + size < this._byteLength;\r\n    }\r\n\r\n    /**\r\n     * 清空更新数据\r\n     */\r\n    clear(): void {\r\n      this._currentOffsetInByte = 0;\r\n    }\r\n\r\n\r\n}","import { SingletonList } from \"../../../../utils/SingletonList\";\r\nimport { INativeUploadNode } from \"./INativeUploadNode\";\r\nimport { UploadMemory } from \"./UploadMemory\";\r\n\r\n/**\r\n * 用来组织所有的数据更新\r\n * 基本思路如下：每个需要更新native数据的类都继承接口INativeUploadNode，当需要上传数据时，会添加到UploadMemoryMenager.dataNodeList队列中，统一更新数据到共享Buffer中\r\n * 会有一个共享Buffer NativeMemory来记录总共用了几个UploadMemory，每个Upload中有几个UploadMemoryCell，在native中统一的将数据变化全部同步到Native的渲染底层\r\n */\r\nexport class UploadMemoryManager {\r\n    /**\r\n     * each upload block memory size\r\n     * defined 1MB\r\n     */\r\n    static UploadMemorySize: number = 1024 * 1024;\r\n    /*@internal SingleOBJ*/\r\n    private static _instance: UploadMemoryManager = null;\r\n    /**@internal 需要上传数据的Node列表*/\r\n    _dataNodeList: SingletonList<INativeUploadNode> = new SingletonList();\r\n    /**@internal */\r\n    _currentBlock: UploadMemory;\r\n    /**@internal */\r\n    _commandNums: number = 0;\r\n\r\n    /**@native C++ */\r\n    _conchUploadMemoryManager:any;\r\n\r\n    constructor() {\r\n        this._currentBlock = new UploadMemory(UploadMemoryManager.UploadMemorySize);\r\n        this._conchUploadMemoryManager = new (window as any).conchUploadMemoryManager();\r\n    }\r\n    static getInstance(): UploadMemoryManager {\r\n        if (!UploadMemoryManager._instance) {\r\n            UploadMemoryManager._instance = new UploadMemoryManager();\r\n        }\r\n        return UploadMemoryManager._instance;\r\n    }\r\n    private _addNodeCommand(node: INativeUploadNode, sizeInByte: number) {\r\n        this._currentBlock.addBlockCell(node, sizeInByte);\r\n        this._commandNums++;\r\n    }\r\n\r\n    static syncRenderMemory()\r\n    {\r\n        UploadMemoryManager.getInstance()._serialiseData();\r\n        UploadMemoryManager.getInstance().clear();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _serialiseData() {\r\n        const elements = this._dataNodeList.elements;\r\n        for (let i = 0; i < this._dataNodeList.length; i++) {\r\n            let node = elements[i];\r\n            let dataSizeInByte = node.getUploadMemoryLength();//get upload Memory Length\r\n            if (dataSizeInByte > UploadMemoryManager.UploadMemorySize)\r\n                throw \"dataSize is too large, greater than UploadMemorySize,\";\r\n            if (this._currentBlock.check(dataSizeInByte)) { \r\n                 //Deserialization all cmd to native data\r\n                this.uploadData();\r\n                this._addNodeCommand(node, dataSizeInByte);\r\n            } else { \r\n              \r\n                this._addNodeCommand(node, dataSizeInByte);\r\n            }\r\n        }\r\n        this.uploadData();\r\n    }\r\n\r\n    /**强制更新数据 */\r\n    uploadData() {\r\n        if (this._commandNums > 0)\r\n        {\r\n            //Native upload data\r\n            this._conchUploadMemoryManager.uploadData(this._currentBlock._buffer, this._commandNums);\r\n            //clear uploadMemory\r\n            this._commandNums = 0;\r\n            this._currentBlock.clear();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * clear UpdateLoad list\r\n     */\r\n    clear() {\r\n        this._dataNodeList.length = 0;\r\n    }\r\n}","import { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\n\r\n\r\nexport class NativeUniformBufferObject extends UniformBufferObject{\r\n    _conchUniformBufferObject:any = null;\r\n\r\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\r\n        super(glPointer, name, bufferUsage, byteLength, isSingle);\r\n        this._conchUniformBufferObject = new (window as any).conchUniformBufferObject((LayaGL.renderEngine as any)._nativeObj, glPointer);\r\n        this._conchUniformBufferObject.setGLBuffer(this._glBuffer);\r\n    }\r\n}","import { IndexBuffer } from \"../../IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { VertexBuffer } from \"../../VertexBuffer\";\r\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n\r\nexport class NativeGLVertexState extends NativeGLObject implements IRenderVertexState {\r\n\r\n    _vertexDeclaration: VertexDeclaration[] = [];\r\n    _bindedIndexBuffer: IndexBuffer;\r\n    _vertexBuffers: VertexBuffer[];\r\n    _nativeVertexBuffers:any[];\r\n    _nativeObj: any;\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n        this._nativeObj = new (window as any).conchGLVertexState(engine._nativeObj);\r\n        this._nativeVertexBuffers=[];\r\n    }\r\n\r\n    bindVertexArray(): void {\r\n        this._nativeObj.bindVertexArray();\r\n    }\r\n\r\n    unbindVertexArray(): void {\r\n        this._nativeObj.unbindVertexArray();\r\n    }\r\n\r\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\r\n        this._vertexBuffers = vertexBuffer;\r\n        this._nativeVertexBuffers.length = 0;\r\n        vertexBuffer.forEach((element) => {\r\n            this._nativeVertexBuffers.push((element as any)._conchVertexBuffer3D);\r\n        });\r\n        this._nativeObj.applyVertexBuffer(this._nativeVertexBuffers);\r\n    }\r\n\r\n    applyIndexBuffer(indexBuffer: IndexBuffer|null): void {\r\n        //需要强制更新IndexBuffer\r\n        \r\n        if(indexBuffer==null){\r\n            return;\r\n        }\r\n        this._bindedIndexBuffer = indexBuffer;\r\n        this._nativeObj.applyIndexBuffer((indexBuffer as any)._conchIndexBuffer3D);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        this._vertexBuffers = null;\r\n        this._nativeVertexBuffers=[];\r\n        this._bindedIndexBuffer = null;\r\n        super.destroy();\r\n        this._nativeObj.destroy()\r\n    }\r\n} ","import { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n/**\r\n * WebglObject 基类\r\n */\r\nexport class GLObject{\r\n    protected _engine:WebGLEngine;\r\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    protected _id:number;\r\n    protected _destroyed: boolean = false;\r\n\r\n    constructor(engine: WebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._id = this._engine._IDCounter++;\r\n    }\r\n\r\n    get destroyed():boolean{\r\n        return this._destroyed;\r\n    }\r\n\r\n    /**\r\n     * destroy\r\n     * @override\r\n     * @returns \r\n     */\r\n    destroy():void{\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n    }\r\n\r\n}","import { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { WrapMode } from \"../../RenderEnum/WrapMode\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n/** @internal */\r\nexport class WebGLInternalTex extends GLObject implements InternalTexture {\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    readonly resource: WebGLTexture;\r\n    _resourceTarget: number;\r\n\r\n    readonly width: number;\r\n    readonly height: number;\r\n    readonly depth: number;\r\n    readonly isPotSize: boolean;\r\n\r\n    private _mipmap: boolean;\r\n    /**\r\n     * 是否存在 mipmap 数据\r\n     */\r\n    get mipmap(): boolean {\r\n        return this._mipmap;\r\n    }\r\n\r\n    private _mipmapCount: number;\r\n    public get mipmapCount(): number {\r\n        return this._mipmapCount;\r\n    }\r\n\r\n    readonly useSRGBLoad: boolean;\r\n    readonly gammaCorrection: number;\r\n\r\n    // webgl param\r\n    readonly target: number;\r\n    internalFormat: number;\r\n    format: number;\r\n    type: number;\r\n    /**bytelength */\r\n    _gpuMemory: number = 0;\r\n\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n    set gpuMemory(value: number) {\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, -this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, -this._gpuMemory);\r\n        this._gpuMemory = value;\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, this._gpuMemory);\r\n    }\r\n\r\n    constructor(engine: WebGLEngine, target: number, width: number, height: number, depth: number, dimension: TextureDimension, mipmap: boolean, useSRGBLoader: boolean, gammaCorrection: number) {\r\n        super(engine);\r\n\r\n        this.resource = this._gl.createTexture();\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        this.depth = depth;\r\n\r\n        const isPot = (value: number): boolean => {\r\n            return (value & (value - 1)) === 0;\r\n        }\r\n\r\n        this.isPotSize = isPot(width) && isPot(height);\r\n        if (dimension == TextureDimension.Tex3D) {\r\n            this.isPotSize = this.isPotSize && isPot(this.depth);\r\n        }\r\n\r\n        this._mipmap = mipmap && this.isPotSize;\r\n        this._mipmapCount = this._mipmap ? Math.max(Math.ceil(Math.log2(width)) + 1, Math.ceil(Math.log2(height)) + 1) : 1;\r\n        this._maxMipmapLevel = this._mipmapCount - 1;\r\n        this._baseMipmapLevel = 0;\r\n\r\n        this.useSRGBLoad = useSRGBLoader;\r\n        this.gammaCorrection = gammaCorrection;\r\n\r\n        this.target = target;\r\n\r\n        // default value\r\n        // this._filterMode = FilterMode.Bilinear;\r\n        // this._warpU = WrapMode.Repeat;\r\n        // this._warpV = WrapMode.Repeat;\r\n        // this._warpW = WrapMode.Repeat;\r\n        // this._anisoLevel = 4;\r\n\r\n        this.filterMode = FilterMode.Bilinear;\r\n        this.wrapU = WrapMode.Repeat;\r\n        this.wrapV = WrapMode.Repeat;\r\n        this.wrapW = WrapMode.Repeat;\r\n        this.anisoLevel = 4;\r\n\r\n        this.compareMode = TextureCompareMode.None;\r\n    }\r\n\r\n    private _filterMode: FilterMode;\r\n    public get filterMode(): FilterMode {\r\n        return this._filterMode;\r\n    }\r\n    public set filterMode(value: FilterMode) {\r\n        if (this._filterMode != value && this.resource) {\r\n            let gl = this._gl;\r\n            let mipmap = this.mipmap;\r\n            let min = this.getFilteMinrParam(value, mipmap);\r\n            this._setTexParameteri(gl.TEXTURE_MIN_FILTER, min);\r\n            let mag = this.getFilterMagParam(value);\r\n            this._setTexParameteri(gl.TEXTURE_MAG_FILTER, mag);\r\n\r\n            this._filterMode = value;\r\n        }\r\n    }\r\n\r\n    private _warpU: WrapMode;\r\n    public get wrapU(): WrapMode {\r\n        return this._warpU;\r\n    }\r\n    public set wrapU(value: WrapMode) {\r\n        if (this._warpU != value && this.resource) {\r\n            let gl = this._gl;\r\n            let warpParam = this.getWrapParam(value);\r\n            this._setWrapMode(gl.TEXTURE_WRAP_S, warpParam);\r\n            this._warpU = value;\r\n        }\r\n    }\r\n\r\n    private _warpV: WrapMode;\r\n\r\n    public get wrapV(): WrapMode {\r\n        return this._warpV;\r\n    }\r\n\r\n    public set wrapV(value: WrapMode) {\r\n        if (this._warpV != value && this.resource) {\r\n            let gl = this._gl;\r\n            let warpParam = this.getWrapParam(value);\r\n            this._setWrapMode(gl.TEXTURE_WRAP_T, warpParam);\r\n            this._warpV = value;\r\n        }\r\n    }\r\n\r\n    private _warpW: WrapMode;\r\n    public get wrapW(): WrapMode {\r\n        return this._warpW;\r\n    }\r\n    public set wrapW(value: WrapMode) {\r\n        if (this._warpW != value && this.resource) {\r\n            if (this._engine.getCapable(RenderCapable.Texture3D)) {\r\n                let gl = <WebGL2RenderingContext>this._gl;\r\n                let warpParam = this.getWrapParam(value);\r\n                this._setWrapMode(gl.TEXTURE_WRAP_R, warpParam);\r\n            }\r\n            this._warpW = value;\r\n        }\r\n    }\r\n\r\n    private _anisoLevel: number;\r\n    public get anisoLevel(): number {\r\n        return this._anisoLevel;\r\n    }\r\n    public set anisoLevel(value: number) {\r\n        let anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\r\n        if (anisoExt) {\r\n            let gl = this._gl;\r\n            //let maxAnisoLevel = gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n            let maxAnisoLevel = this._engine.getParams(RenderParams.Max_AnisoLevel_Count);\r\n\r\n            let level = Math.max(1, Math.min(maxAnisoLevel, value));\r\n            this._setTexParametexf(anisoExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\r\n            this._anisoLevel = level;\r\n        }\r\n        else {\r\n            this._anisoLevel = 1;\r\n        }\r\n    }\r\n\r\n    private _baseMipmapLevel: number = 0;\r\n\r\n    public set baseMipmapLevel(value: number) {\r\n        if (this._engine.isWebGL2) {\r\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_BASE_LEVEL, value);\r\n        }\r\n        this._baseMipmapLevel = value;\r\n    }\r\n\r\n    public get baseMipmapLevel() {\r\n        return this._baseMipmapLevel;\r\n    }\r\n\r\n    private _maxMipmapLevel: number = 0;\r\n\r\n    public set maxMipmapLevel(value: number) {\r\n        if (this._engine.isWebGL2) {\r\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_MAX_LEVEL, value);\r\n        }\r\n        this._maxMipmapLevel = value;\r\n    }\r\n\r\n    public get maxMipmapLevel() {\r\n        return this._maxMipmapLevel;\r\n    }\r\n\r\n\r\n    private _compareMode: TextureCompareMode;\r\n    public get compareMode(): TextureCompareMode {\r\n        return this._compareMode;\r\n    }\r\n    public set compareMode(value: TextureCompareMode) {\r\n        this._compareMode = value;\r\n    }\r\n\r\n    // todo 设置参数函数 放在 context 里面? \r\n    public _setTexParameteri(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        let target = this.target\r\n        this._engine._bindTexture(target, this.resource);\r\n        gl.texParameteri(target, pname, param);\r\n        this._engine._bindTexture(target, null);\r\n    }\r\n\r\n    public _setTexParametexf(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        let target = this.target\r\n        this._engine._bindTexture(target, this.resource);\r\n        gl.texParameterf(target, pname, param);\r\n        this._engine._bindTexture(target, null);\r\n    }\r\n\r\n    protected getFilteMinrParam(filterMode: FilterMode, mipmap: boolean) {\r\n        let gl = this._gl;\r\n        switch (filterMode) {\r\n            case FilterMode.Point:\r\n                return mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST;\r\n            case FilterMode.Bilinear:\r\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\r\n            case FilterMode.Trilinear:\r\n                return mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR;\r\n            default:\r\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\r\n        }\r\n    }\r\n\r\n    protected getFilterMagParam(filterMode: FilterMode) {\r\n        let gl = this._gl;\r\n        switch (filterMode) {\r\n            case FilterMode.Point:\r\n                return gl.NEAREST;\r\n            case FilterMode.Bilinear:\r\n                return gl.LINEAR;\r\n            case FilterMode.Trilinear:\r\n                return gl.LINEAR;\r\n            default:\r\n                return gl.LINEAR;\r\n        }\r\n    }\r\n\r\n    protected getWrapParam(wrapMode: WrapMode) {\r\n        let gl = this._gl;\r\n        switch (wrapMode) {\r\n            case WrapMode.Repeat:\r\n                return gl.REPEAT;\r\n            case WrapMode.Clamp:\r\n                return gl.CLAMP_TO_EDGE;\r\n            case WrapMode.Mirrored:\r\n                return gl.MIRRORED_REPEAT;\r\n            default:\r\n                return gl.REPEAT;\r\n        }\r\n    }\r\n\r\n    protected _setWrapMode(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        if (!this.isPotSize) {\r\n            param = gl.CLAMP_TO_EDGE;\r\n        }\r\n        this._setTexParameteri(pname, param);\r\n    }\r\n\r\n    dispose(): void {\r\n        let gl = this._gl;\r\n        gl.deleteTexture(this.resource);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, -this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, -this._gpuMemory);\r\n        this._gpuMemory = 0;\r\n    }\r\n}","import { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class WebGLInternalRT extends GLObject implements InternalRenderTarget {\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    _framebuffer: WebGLFramebuffer;\r\n\r\n    _depthbuffer: WebGLRenderbuffer;\r\n\r\n    _msaaFramebuffer: WebGLFramebuffer;\r\n    _msaaRenderbuffer: WebGLRenderbuffer;\r\n\r\n    _isCube: boolean;\r\n    _samples: number;\r\n\r\n    _generateMipmap: boolean;\r\n\r\n    _textures: InternalTexture[];\r\n    _depthTexture: InternalTexture;\r\n\r\n    colorFormat: RenderTargetFormat;\r\n    depthStencilFormat: RenderTargetFormat;\r\n\r\n    isSRGB: boolean;\r\n\r\n    /**bytelength */\r\n    _gpuMemory: number = 0;\r\n\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n    set gpuMemory(value: number) {\r\n\r\n        this._gpuMemory = value;\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory, this._gpuMemory);\r\n    }\r\n\r\n\r\n    constructor(engine: WebGLEngine, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, isCube: boolean, generateMipmap: boolean, samples: number) {\r\n        super(engine);\r\n\r\n        this.colorFormat = colorFormat;\r\n        this.depthStencilFormat = depthStencilFormat;\r\n        this._isCube = isCube;\r\n        this._generateMipmap = generateMipmap;\r\n        this._samples = samples;\r\n\r\n        this._textures = [];\r\n        this._depthTexture = null;\r\n\r\n        this._framebuffer = this._gl.createFramebuffer();\r\n        if (samples > 1) {\r\n            this._msaaFramebuffer = this._gl.createFramebuffer();\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    dispose(): void {\r\n        this._textures.forEach(tex => {\r\n            tex && tex.dispose();\r\n        });\r\n        this._textures = null;\r\n        this._depthTexture && this._depthTexture.dispose();\r\n        this._depthTexture = null;\r\n        this._framebuffer && this._gl.deleteFramebuffer(this._framebuffer);\r\n        this._framebuffer = null;\r\n        this._depthbuffer && this._gl.deleteRenderbuffer(this._depthbuffer);\r\n        this._depthbuffer = null;\r\n\r\n        this._msaaFramebuffer && this._gl.deleteFramebuffer(this._msaaFramebuffer);\r\n        this._msaaFramebuffer = null;\r\n        this._msaaRenderbuffer && this._gl.deleteRenderbuffer(this._msaaRenderbuffer);\r\n        this._msaaRenderbuffer = null;\r\n\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory,-this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory,-this._gpuMemory);\r\n        this._gpuMemory = 0;\r\n    }\r\n}","\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\r\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\n\r\nexport class GLTextureContext extends GLObject implements ITextureContext {\r\n\r\n    protected _sRGB: any;\r\n    protected _oesTextureHalfFloat: any;\r\n    protected _compressdTextureS3tc_srgb: any;\r\n    protected _compressedTextureEtc1: any;\r\n    protected _compressedTextureS3tc: any;\r\n    protected _compressedTextureETC: any;\r\n    protected _compressedTextureASTC: any;\r\n    protected _webgl_depth_texture: any;\r\n    needBitmap: boolean;\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        this.needBitmap = false;\r\n        this._sRGB = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_sRGB)\r\n        this._oesTextureHalfFloat = this._engine._supportCapatable.getExtension(WebGLExtension.OES_texture_half_float)\r\n        this._compressdTextureS3tc_srgb = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb)\r\n        this._compressedTextureEtc1 = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1)\r\n        this._compressedTextureS3tc = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc)\r\n        this._compressedTextureETC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc)\r\n        this._compressedTextureASTC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_astc)\r\n        this._webgl_depth_texture = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_depth_texture);\r\n    }\r\n\r\n    _glParam: {\r\n        internalFormat: number,\r\n        format: number,\r\n        type: number,\r\n    } = {\r\n            internalFormat: 0,\r\n            format: 0,\r\n            type: 0,\r\n        };\r\n\r\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R5G6B5:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\r\n                break;\r\n            case TextureFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case TextureFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case TextureFormat.DXT1:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT3:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT5:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC1RGB:\r\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGBA:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC4x4:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC8x8:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC10x10:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC12x12:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC4x4SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC8x8SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC10x10SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            default:\r\n                throw \"Unknown Texture Format.\";\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    // todo srgb ?\r\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n\r\n        switch (format) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_16:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_SHORT;\r\n                break;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                this._glParam.internalFormat = gl.DEPTH_STENCIL;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._webgl_depth_texture.UNSIGNED_INT_24_8_WEBGL;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.STENCIL_8:\r\n            default:\r\n                throw \"render texture format wrong.\"\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number } {\r\n        // todo\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    glRenderTargetAttachment(format: RenderTargetFormat) {\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return gl.DEPTH_ATTACHMENT;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return gl.DEPTH_STENCIL_ATTACHMENT;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return gl.DEPTH_ATTACHMENT;\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return gl.STENCIL_ATTACHMENT;\r\n            case RenderTargetFormat.R8G8B8:\r\n            case RenderTargetFormat.R8G8B8A8:\r\n            case RenderTargetFormat.R16G16B16:\r\n            case RenderTargetFormat.R16G16B16A16:\r\n            case RenderTargetFormat.R32G32B32:\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                return gl.COLOR_ATTACHMENT0;\r\n            default:\r\n                throw \"render format.\"\r\n        }\r\n    }\r\n\r\n    protected getTarget(dimension: TextureDimension): number {\r\n        let gl = this._gl;\r\n        switch (dimension) {\r\n            case TextureDimension.Tex2D:\r\n                return gl.TEXTURE_2D;\r\n            case TextureDimension.Cube:\r\n                return gl.TEXTURE_CUBE_MAP;\r\n            default:\r\n                throw \"texture dimension wrong in WebGL1.\"\r\n        }\r\n    }\r\n\r\n    public getFormatPixelsParams(format: TextureFormat) {\r\n\r\n        let formatParams: { channels: number, bytesPerPixel: number, dataTypedCons: any, typedSize: number } = {\r\n            channels: 0,\r\n            bytesPerPixel: 0,\r\n            dataTypedCons: Uint8Array,\r\n            typedSize: 1\r\n        }\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8A8:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 4;\r\n                formatParams.dataTypedCons = Uint8Array\r\n                formatParams.typedSize = 1;\r\n                return formatParams;\r\n            case TextureFormat.R8G8B8:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 3;\r\n                formatParams.dataTypedCons = Uint8Array\r\n                formatParams.typedSize = 1;\r\n                return formatParams;\r\n            case TextureFormat.R5G6B5:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 2;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R16G16B16:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 6;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R16G16B16A16:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 8;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R32G32B32:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 12;\r\n                formatParams.dataTypedCons = Float32Array\r\n                formatParams.typedSize = 4;\r\n                return formatParams;\r\n            case TextureFormat.R32G32B32A32:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 16;\r\n                formatParams.dataTypedCons = Float32Array\r\n                formatParams.typedSize = 4;\r\n                return formatParams;\r\n            default:\r\n                return formatParams;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * caculate texture memory\r\n     * @param tex \r\n     * @returns \r\n     */\r\n    getGLtexMemory(tex: WebGLInternalTex, depth: number = 1): number {\r\n        let gl = this._gl;\r\n        let channels = 0;\r\n        let singlebyte = 0;\r\n        let bytelength = 0;\r\n\r\n        let srgb = this._sRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n        let srgb_alpha = this._sRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\r\n\r\n        switch (tex.internalFormat) {\r\n            case srgb:\r\n            case gl.RGB:\r\n                channels = 3;\r\n                break;\r\n            case srgb_alpha:\r\n            case gl.RGBA:\r\n                channels = 4;\r\n                break;\r\n            default:\r\n                channels = 0;\r\n                break;\r\n        }\r\n        switch (tex.type) {\r\n            case gl.UNSIGNED_BYTE:\r\n                singlebyte = 1;\r\n                break;\r\n            case gl.UNSIGNED_SHORT_5_6_5:\r\n                singlebyte = 2 / 3;\r\n                break;\r\n            case gl.FLOAT:\r\n                singlebyte = 4;\r\n                break;\r\n            case this._oesTextureHalfFloat.HALF_FLOAT_OES:\r\n                singlebyte = 2;\r\n                break;\r\n            default:\r\n                singlebyte = 0;\r\n                break;\r\n        }\r\n        bytelength = channels * singlebyte * tex.width * tex.height;\r\n        if (tex.mipmap) {\r\n            bytelength *= 1.333;\r\n        }\r\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\r\n            bytelength *= 6;\r\n        else if (tex.target == gl.TEXTURE_2D)\r\n            bytelength *= 1;\r\n\r\n        return bytelength;\r\n    }\r\n\r\n    getGLRTTexMemory(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number, cube: boolean) {\r\n        let getpixelbyte = (rtFormat: RenderTargetFormat) => {\r\n            let pixelByte = 0;\r\n            switch (rtFormat) {\r\n                case RenderTargetFormat.R8G8B8:\r\n                    pixelByte = 3;\r\n                    break;\r\n                case RenderTargetFormat.R8G8B8A8:\r\n                    pixelByte = 4;\r\n                    break;\r\n                case RenderTargetFormat.R16G16B16A16:\r\n                    pixelByte = 8;\r\n                    break;\r\n                case RenderTargetFormat.R32G32B32:\r\n                    pixelByte = 12;\r\n                    break;\r\n                case RenderTargetFormat.R32G32B32A32:\r\n                    pixelByte = 16;\r\n                    break;\r\n                case RenderTargetFormat.R16G16B16:\r\n                    pixelByte = 6;\r\n                    break;\r\n                case RenderTargetFormat.DEPTH_16:\r\n                    pixelByte = 2;\r\n                    break;\r\n                case RenderTargetFormat.STENCIL_8:\r\n                    pixelByte = 1;\r\n                    break;\r\n                case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                    pixelByte = 4;\r\n                    break;\r\n                case RenderTargetFormat.DEPTH_32:\r\n                    pixelByte = 4;\r\n                    break;\r\n            }\r\n            return pixelByte;\r\n        }\r\n        let colorPixelbyte = getpixelbyte(colorFormat);\r\n        let depthPixelbyte = getpixelbyte(depthStencilFormat);\r\n        if (multiSamples > 1)//多重采样\r\n            colorPixelbyte *= 2;\r\n        if (cube)//box\r\n            colorPixelbyte *= 6;\r\n        if (generateMipmap)//mipmap\r\n            colorPixelbyte *= 1.333;\r\n        let colorMemory = colorPixelbyte * width * height;\r\n        let depthMemory = depthPixelbyte * width * height;\r\n        return colorMemory + depthMemory;\r\n    }\r\n\r\n    // protected getRenderTargetDepthFormat(format: RenderTargetDepthFormat): { internalFormat: number, attachment: number } {\r\n    //     let gl = this.gl;\r\n    //     switch (format) {\r\n    //         case RenderTargetDepthFormat.DEPTH_16:\r\n    //             return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_24_8:\r\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTH_32:\r\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.STENCIL_8:\r\n    //             return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_NONE:\r\n    //             return null;\r\n    //         default:\r\n    //             throw \"RenderTargetDepthFormat wrong.\"\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * 根据 format 判断是否支持 SRGBload\r\n     * @param format \r\n     * @returns \r\n     */\r\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n            case TextureFormat.R8G8B8A8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\r\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    supportGenerateMipmap(format: TextureFormat | RenderTargetFormat) {\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n            case RenderTargetFormat.DEPTH_32:\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return false;\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断 纹理格式 本身是否是 SRGB格式\r\n     * @param format \r\n     * @returns \r\n     */\r\n    isSRGBFormat(format: TextureFormat | RenderTargetFormat) {\r\n        switch (format) {\r\n            case TextureFormat.ETC2SRGB:\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n            case TextureFormat.ASTC4x4SRGB:\r\n            case TextureFormat.ASTC6x6SRGB:\r\n            case TextureFormat.ASTC8x8SRGB:\r\n            case TextureFormat.ASTC10x10SRGB:\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean, premultipliedAlpha: boolean): InternalTexture {\r\n\r\n        // todo  一些format 不支持自动生成mipmap\r\n\r\n        // todo  这个判断, 若纹理本身格式不支持？\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n        if (premultipliedAlpha) {//预乘法和SRGB同时开启，会有颜色白边问题\r\n            useSRGBExt = false;\r\n        }\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            gammaCorrection = 2.2;\r\n        }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        //Resource:\r\n        //internalTex.gpuMemory = this.getGLtexMemory(format, width, height, dimension, generateMipmap);\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        if (texture.width != source.width || texture.height != source.height) {\r\n            // todo ?\r\n            console.warn(\"setTextureImageData: size not match\");\r\n        }\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        //texture.\r\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        //resource TODO\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTextureSubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = source.width;\r\n        let height = source.height;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texSubImage2D(target, 0, x, y, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        //texture.\r\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        //resource TODO\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n\r\n    initVideoTextureData(texture: WebGLInternalTex) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let gl = texture._gl;\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texImage2D(target, 0, texture.internalFormat, width, height, 0, format, type, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n    }\r\n\r\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        // todo check pixels size\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        // gl.texImage2D(target, 0, internalFormat, format, type, source);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, source);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        // todo check pixels size\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source);\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let source = ddsInfo.source;\r\n        let dataOffset = ddsInfo.dataOffset;\r\n        let bpp = ddsInfo.bpp;\r\n        let blockBytes = ddsInfo.blockBytes;\r\n        let mipmapCount = ddsInfo.mipmapCount;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let memory = 0;\r\n        for (let index = 0; index < mipmapCount; index++) {\r\n\r\n            // todo  size 计算 方式\r\n            let dataLength = (((Math.max(4, mipmapWidth) / 4) * Math.max(4, mipmapHeight)) / 4) * blockBytes;\r\n            let sourceData = new Uint8Array(source, dataOffset, dataLength);\r\n\r\n            gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n            memory += sourceData.length;\r\n            dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\r\n\r\n            mipmapWidth *= 0.5;\r\n            mipmapHeight *= 0.5;\r\n            mipmapWidth = Math.max(1.0, mipmapWidth);\r\n            mipmapHeight = Math.max(1.0, mipmapHeight);\r\n        }\r\n        texture.gpuMemory = memory;//TODO 不太准\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n            if (compressed) {\r\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n            else {\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData: ArrayBufferView = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                memory += sourceData.byteLength;\r\n            }\r\n\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\r\n            if (compressed) {\r\n                // todo\r\n            }\r\n            else {\r\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        texture.gpuMemory = memory;//TODO 不太准\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\r\n        let hdrPixelData = hdrInfo.readScanLine();\r\n        this.setTexturePixelsData(texture, hdrPixelData, false, false);\r\n    }\r\n\r\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texImage2D(target, 0, internalFormat, format, type, sources[index]);\r\n        }\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        if (source) {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\r\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, source[index]);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        else {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\r\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, null);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeSubPixelData(texture: WebGLInternalTex, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ];\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source[index]);\r\n        }\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n\r\n    setCubeDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        // let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let source = ddsInfo.source;\r\n        let dataOffset = ddsInfo.dataOffset;\r\n        let bpp = ddsInfo.bpp;\r\n        let blockBytes = ddsInfo.blockBytes;\r\n        let mipmapCount = ddsInfo.mipmapCount;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        fourSize = true;\r\n        let gl = texture._gl;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n        let formatParams = this.getFormatPixelsParams(ddsInfo.format);\r\n        let channelsByte = formatParams.bytesPerPixel / formatParams.channels;\r\n\r\n        let dataTypeConstur = ddsInfo.format == TextureFormat.R32G32B32A32 ? Float32Array : Uint16Array;\r\n        let memory = 0;\r\n        if (!ddsInfo.compressed) {\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                let mipmapWidth = width;\r\n                let mipmapHeight = height;\r\n                for (let index = 0; index < mipmapCount; index++) {\r\n                    let dataLength = mipmapWidth * mipmapHeight * formatParams.channels;\r\n                    let sourceData = new dataTypeConstur(source, dataOffset, dataLength);\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                    dataOffset += dataLength * channelsByte;\r\n                    mipmapWidth *= 0.5;\r\n                    mipmapHeight *= 0.5;\r\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\r\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                let mipmapWidth = width;\r\n                let mipmapHeight = height;\r\n                for (let index = 0; index < mipmapCount; index++) {\r\n                    let dataLength = Math.max(4, mipmapWidth) / 4 * Math.max(4, mipmapHeight) / 4 * blockBytes;\r\n\r\n                    let sourceData = new Uint8Array(source, dataOffset, dataLength);\r\n\r\n                    (texture.mipmap || index == 0) && gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                    dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\r\n\r\n                    mipmapWidth *= 0.5;\r\n                    mipmapHeight *= 0.5;\r\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\r\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\r\n                }\r\n            }\r\n        }\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        // let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = ktxInfo.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n            // todo  cube 在一起？\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n\r\n                if (compressed) {\r\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                    gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                else {\r\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                    let typedSize = imageSize / pixelParams.typedSize;\r\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                dataOffset += imageSize;\r\n                dataOffset += 3 - ((imageSize + 3) % 4);\r\n            }\r\n\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                if (compressed) {\r\n                    // todo\r\n                }\r\n                else {\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\r\n                }\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = memory;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\r\n        return TextureCompareMode.None;\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\r\n        let gl = this._gl;\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        if (renderTarget._isCube) {\r\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\r\n        }\r\n\r\n    }\r\n\r\n    bindoutScreenTarget(): void {\r\n        let gl = this._gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\r\n        let gl = renderTarget._gl;\r\n\r\n        if (renderTarget._generateMipmap) {\r\n            renderTarget._textures.forEach(tex => {\r\n                let target = (<WebGLInternalTex>tex).target;\r\n                this._engine._bindTexture(target, tex.resource);\r\n                gl.generateMipmap(target);\r\n                this._engine._bindTexture(target, null);\r\n            });\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        let useSRGBExt = false;\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let gammaCorrection = 1.0;\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     // todo \r\n        //     // gammaCorrection = 2.2;\r\n        // }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = internalTex._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, glFormat, type, null);\r\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        let useSRGBExt = false;\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let gammaCorrection = 1.0;\r\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     gammaCorrection = 2.2;\r\n        // }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = internalTex._gl;\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texImage2D(target, 0, internalFormat, size, size, 0, glFormat, type, null);\r\n        }\r\n        this._engine._bindTexture(internalTex.target, null);\r\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        multiSamples = 1;\r\n\r\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\r\n        renderTarget.colorFormat = colorFormat;\r\n        renderTarget.depthStencilFormat = depthStencilFormat;\r\n        renderTarget._textures.push(texture);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        // color\r\n        let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n        // depth\r\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n        if (depthBufferParam) {\r\n            let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n            renderTarget._depthbuffer = depthbuffer;\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n        }\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        multiSamples = 1;\r\n\r\n        // let texture = this.createRenderTextureInternal(dimension, size, size, colorFormat, generateMipmap, sRGB);\r\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\r\n        renderTarget._textures.push(texture);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n        if (depthBufferParam) {\r\n            let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n            renderTarget._depthbuffer = depthbuffer;\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number) {\r\n\r\n        // todo  多个 gl\r\n        let gl = this._gl;\r\n\r\n        let renderbuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return renderbuffer;\r\n    }\r\n\r\n    // todo  color 0, 1, 2, 3 ?\r\n    setupRendertargetTextureAttachment(renderTarget: WebGLInternalRT, texture: WebGLInternalTex) {\r\n        let gl = renderTarget._gl;\r\n\r\n        renderTarget._depthTexture = texture;\r\n\r\n        let depthbuffer = renderTarget._depthbuffer;\r\n        depthbuffer && gl.deleteRenderbuffer(depthbuffer);\r\n        renderTarget._depthbuffer = null;\r\n        let attachment = this.glRenderTargetAttachment(renderTarget.depthStencilFormat);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture.resource, 0);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n\r\n    readRenderTargetPixelData(renderTarget: WebGLInternalRT, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\r\n\r\n        let gl = renderTarget._gl;\r\n\r\n        this.bindRenderTarget(renderTarget);\r\n\r\n        let frameState = gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\r\n\r\n        if (!frameState) {\r\n            this.unbindRenderTarget(renderTarget);\r\n            return null;\r\n        }\r\n        switch (renderTarget.colorFormat) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.UNSIGNED_BYTE, out);\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.UNSIGNED_BYTE, out);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\r\n                break;\r\n        }\r\n        this.unbindRenderTarget(renderTarget);\r\n        return out;\r\n    }\r\n\r\n    updateVideoTexture(texture: WebGLInternalTex, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        let gl = texture._gl;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        // todo 用 sub 会慢\r\n        //gl.texSubImage2D(target, 0, 0, 0, format, type, video);\r\n        gl.texImage2D(target, 0, internalFormat, format, type, video);\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    getRenderTextureData(internalTex: WebGLInternalRT, x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        if (internalTex.colorFormat == RenderTargetFormat.None)\r\n            return null;\r\n        let gl = internalTex._gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, internalTex._framebuffer);\r\n        var canRead: boolean = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\r\n        if (!canRead) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            return null;\r\n        }\r\n        let size = width * height;\r\n        let format, type;\r\n        var pixels;\r\n        switch (internalTex.colorFormat) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                format = gl.RGB;\r\n                type = gl.UNSIGNED_BYTE;\r\n                pixels = new Uint8Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                format = gl.RGBA;\r\n                type = gl.UNSIGNED_BYTE;\r\n                pixels = new Uint8Array(size * 4);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                format = gl.RGB;\r\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\r\n                pixels = new Uint16Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                format = gl.RGBA;\r\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\r\n                pixels = new Uint16Array(size * 4);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                format = gl.RGB;\r\n                type = gl.FLOAT;\r\n                pixels = new Float32Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                format = gl.RGBA;\r\n                type = gl.FLOAT;\r\n                pixels = new Float32Array(size * 4);\r\n                break;\r\n            default:\r\n                return null;\r\n        }\r\n        gl.readPixels(x, y, width, height, format, type, pixels);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        return pixels;\r\n    }\r\n\r\n}","import { GLTextureContext } from \"./GLTextureContext\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\r\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { ITexture3DContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\n\r\n/**\r\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\r\n */\r\nexport class GL2TextureContext extends GLTextureContext implements ITexture3DContext {\r\n\r\n    declare protected _gl: WebGL2RenderingContext;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n    }\r\n\r\n    protected getTarget(dimension: TextureDimension): number {\r\n        let target: number = -1;\r\n        switch (dimension) {\r\n            case TextureDimension.Cube:\r\n                target = this._gl.TEXTURE_CUBE_MAP;\r\n                break;\r\n            case TextureDimension.Tex2D:\r\n                target = this._gl.TEXTURE_2D;\r\n                break;\r\n            case TextureDimension.Texture2DArray:\r\n                target = this._gl.TEXTURE_2D_ARRAY;\r\n                break;\r\n            case TextureDimension.Tex3D:\r\n                target = this._gl.TEXTURE_3D;\r\n                break;\r\n            default:\r\n                throw \"Unknow Texture Target\";\r\n        }\r\n        return target;\r\n    }\r\n\r\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R5G6B5:\r\n                this._glParam.internalFormat = gl.RGB565;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\r\n                break;\r\n            case TextureFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA32F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB32F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB16F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA16F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case TextureFormat.DXT1:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n                // this._glParam.format = gl.RGBA;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT3:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT5:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC1RGB:\r\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGBA:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC4x4:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC8x8:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC10x10:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC12x12:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC4x4SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC8x8SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC10x10SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            default:\r\n                throw \"Unknown Texture Format.\";\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number; } {\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return { internalFormat: gl.DEPTH24_STENCIL8, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return { internalFormat: gl.DEPTH_COMPONENT32F, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.R8G8B8:\r\n                return { internalFormat: useSRGB ? gl.SRGB8 : gl.RGB8, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                return { internalFormat: useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R16G16B16:\r\n                return { internalFormat: gl.RGB16F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                return { internalFormat: gl.RGBA16F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R32G32B32:\r\n                return { internalFormat: gl.RGB32F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                return { internalFormat: gl.RGBA32F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n\r\n        switch (format) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB16F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA16F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB32F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA32F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_16:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT16;\r\n                this._glParam.format = gl.DEPTH_COMPONENT;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                this._glParam.internalFormat = gl.DEPTH24_STENCIL8;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT_24_8;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT32F;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.STENCIL_8:\r\n                break;\r\n            default:\r\n                throw \"depth texture format wrong.\"\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    getGLtexMemory(tex: WebGLInternalTex, depth: number = 1): number {\r\n        let gl = this._gl;\r\n        let channels = 0;\r\n        let singlebyte = 0;\r\n        let bytelength = 0;\r\n        switch (tex.internalFormat) {\r\n            case gl.SRGB8:\r\n            case gl.RGB8:\r\n            case gl.RGB565:\r\n            case gl.RGB32F:\r\n            case gl.RGB16F:\r\n                channels = 3;\r\n                break;\r\n            case gl.SRGB8_ALPHA8:\r\n            case gl.RGBA8:\r\n            case gl.RGBA32F:\r\n            case gl.RGBA16F:\r\n                channels = 4;\r\n                break;\r\n            default:\r\n                channels = 0;\r\n                break;\r\n        }\r\n        switch (tex.type) {\r\n            case gl.UNSIGNED_BYTE:\r\n                singlebyte = 1;\r\n                break;\r\n            case gl.UNSIGNED_SHORT_5_6_5:\r\n                singlebyte = 2 / 3;\r\n                break;\r\n            case gl.FLOAT:\r\n                singlebyte = 4;\r\n                break;\r\n            case gl.HALF_FLOAT:\r\n                singlebyte = 2;\r\n                break;\r\n            default:\r\n                singlebyte = 0;\r\n                break;\r\n        }\r\n        bytelength = channels * singlebyte * tex.width * tex.height;\r\n        if (tex.mipmap) {\r\n            bytelength *= 1.333;\r\n        }\r\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\r\n            bytelength *= 6;\r\n        else if (tex.target == gl.TEXTURE_2D)\r\n            bytelength *= 1;\r\n        else if (tex.target == gl.TEXTURE_2D_ARRAY)\r\n            bytelength *= depth;\r\n        return bytelength;\r\n    }\r\n\r\n    // todo webgl2 srgb 判断\r\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\r\n            case TextureFormat.R8G8B8A8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB);\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\r\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        if (texture.width != source.width || texture.height != source.height) {\r\n            // todo ?\r\n            console.warn(\"setTextureImageData: size not match\");\r\n        }\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTextureSubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        //gl.texStorage2D(target, mipmapCount, internalFormat, source.width, source.height);\r\n        gl.texSubImage2D(target, 0, x, y, source.width, source.height, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (source) {\r\n            gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    createTexture3DInternal(dimension: TextureDimension, width: number, height: number, depth: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean, premultipliedAlpha: boolean): InternalTexture {\r\n        // todo  一些format 不支持自动生成mipmap\r\n\r\n        // todo  这个判断, 若纹理本身格式不支持？\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n        if (premultipliedAlpha) {//预乘法和SRGB同时开启，会有颜色白边问题\r\n            useSRGBExt = false;\r\n        }\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            gammaCorrection = 2.2;\r\n        }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, depth, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    setTexture3DImageData(texture: WebGLInternalTex, sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\r\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\r\n        for (let index = 0; index < depth; index++) {\r\n            gl.texSubImage3D(target, 0, 0, 0, index, width, height, 1, format, type, sources[index]);\r\n        }\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTexture3DPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\r\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\r\n        if (source) {\r\n            gl.texSubImage3D(target, 0, 0, 0, 0, width, height, depth, format, type, source);\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTexture3DSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texSubImage3D(target, mipmapLevel, xOffset, yOffset, zOffset, width, height, depth, format, type, source);\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\r\n        let sourceData = hdrInfo.readScanLine();\r\n\r\n        this.setTexturePixelsData(texture, sourceData, false, false);\r\n    }\r\n\r\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size \r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            if (compressed) {\r\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n            else {\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texSubImage2D(target, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = memory;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        let gl = this._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let t = cubeFace[index];\r\n            // gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\r\n            gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\r\n        }\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        let gl = this._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ];\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        if (source) {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                gl.texSubImage2D(t, 0, 0, 0, width, height, format, type, source[index]);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo): void {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let gl = this._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = ktxInfo.mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let t = cubeFace[face];\r\n\r\n                if (compressed) {\r\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                    gl.compressedTexImage2D(t, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                else {\r\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                    let typedSize = imageSize / pixelParams.typedSize;\r\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                    gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                dataOffset += imageSize;\r\n                dataOffset += 3 - ((imageSize + 3) % 4);\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n\r\n    }\r\n\r\n\r\n    //TODO miner\r\n    getCubeKTXRGBMData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n        let rightFaceData = [];\r\n        let leftFaceData = [];\r\n        let upFaceData = [];\r\n        let downFaceData = [];\r\n        let backFaceData = [];\r\n        let frontFaceData = [];\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let gl = this._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let t = cubeFace[face];\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                memory += sourceData.byteLength;\r\n            }\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n        }\r\n\r\n        mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n        mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\r\n        let gl = this._gl;\r\n        switch (compareMode) {\r\n            case TextureCompareMode.LEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.GEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.LESS:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LESS);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.GREATER:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GREATER);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.EQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.EQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.NOTEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NOTEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.ALWAYS:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.ALWAYS);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.NEVER:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NEVER);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.None:\r\n            default:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.NONE);\r\n                break;\r\n        }\r\n        return compareMode;\r\n\r\n    }\r\n\r\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number): WebGLRenderbuffer {\r\n        // todo  多个 gl\r\n        let gl = this._gl;\r\n\r\n        let renderbuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n\r\n        if (samples > 1) {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, samples, internalFormat, width, height);\r\n        }\r\n        else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return renderbuffer;\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n\r\n        let gammaCorrection = 1.0;\r\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     gammaCorrection = 2.2;\r\n        // }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = this._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, width, height);\r\n\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\r\n        renderTarget._textures.push(texture);\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        if (renderTarget._samples > 1) {\r\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\r\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, sRGB);\r\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(width, height, renderbufferParam.internalFormat, renderTarget._samples);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n            let framebuffer = renderTarget._framebuffer;\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            // color\r\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            // color\r\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n\r\n        return renderTarget;\r\n\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\r\n        renderTarget.colorFormat = colorFormat;\r\n        renderTarget.depthStencilFormat = depthStencilFormat;\r\n        renderTarget._textures.push(texture);\r\n        renderTarget.isSRGB = sRGB;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        if (renderTarget._samples > 1) {\r\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\r\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, false);\r\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(size, size, renderbufferParam.internalFormat, renderTarget._samples);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n\r\n        let gammaCorrection = 1.0;\r\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     gammaCorrection = 2.2;\r\n        // }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = this._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, size, size);\r\n\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        return internalTex;\r\n\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\r\n        let gl = this._gl;\r\n\r\n        if (renderTarget._isCube) {\r\n            let framebuffer = renderTarget._framebuffer;\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\r\n        }\r\n\r\n        if (renderTarget._samples > 1) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget._msaaFramebuffer);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        }\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\r\n        let gl = this._gl;\r\n        if (renderTarget._samples > 1) {\r\n\r\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, renderTarget._msaaFramebuffer);\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, renderTarget._framebuffer);\r\n\r\n            let texture = renderTarget._textures[0];\r\n\r\n            // todo 不用clear ?\r\n            // gl.clearBufferfv(gl.COLOR, 0, [0, 0, 0, 0]);\r\n            // gl.clearBufferfi(gl.DEPTH_STENCIL, 0, 1.0, 0);\r\n\r\n            // todo  blit mask\r\n            let biltMask = gl.COLOR_BUFFER_BIT;\r\n            if (renderTarget._depthTexture) {\r\n                biltMask |= gl.DEPTH_BUFFER_BIT;\r\n            }\r\n\r\n            gl.blitFramebuffer(0, 0, texture.width, texture.height, 0, 0, texture.width, texture.height, biltMask, gl.NEAREST);\r\n        }\r\n        if (renderTarget._generateMipmap) {\r\n            renderTarget._textures.forEach(tex => {\r\n                let target = (<WebGLInternalTex>tex).target;\r\n                this._engine._bindTexture(target, tex.resource);\r\n                gl.generateMipmap(target);\r\n                this._engine._bindTexture(target, null);\r\n            });\r\n        }\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GLBuffer extends GLObject implements IRenderBuffer {\r\n    //GLParams\r\n    _glBuffer: WebGLBuffer;\r\n    _glTarget: number;\r\n    _glUsage: number;\r\n    //Common Enum\r\n    _glTargetType: BufferTargetType;\r\n    _glBufferUsageType: BufferUsage;\r\n    //size\r\n    _byteLength: number = 0;\r\n\r\n    constructor(engine: WebGLEngine, targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n        super(engine)\r\n        this._glTargetType = targetType;\r\n        this._glBufferUsageType = bufferUsageType;\r\n        this._getGLTarget(this._glTargetType);\r\n        this._getGLUsage(this._glBufferUsageType);\r\n        this._glBuffer = this._gl.createBuffer();\r\n    }\r\n\r\n    private _getGLUsage(usage: BufferUsage) {\r\n        switch (usage) {\r\n            case BufferUsage.Static:\r\n                this._glUsage = this._gl.STATIC_DRAW;\r\n                break;\r\n            case BufferUsage.Dynamic:\r\n                this._glUsage = this._gl.DYNAMIC_DRAW;\r\n                break;\r\n            case BufferUsage.Stream:\r\n                this._glUsage = this._gl.STREAM_DRAW;\r\n                break;\r\n            default:\r\n                console.error(\"usage is not standard\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _getGLTarget(target: BufferTargetType) {\r\n        switch (target) {\r\n            case BufferTargetType.ARRAY_BUFFER:\r\n                this._glTarget = this._gl.ARRAY_BUFFER\r\n                break;\r\n            case BufferTargetType.UNIFORM_BUFFER:\r\n                this._glTarget = (<WebGL2RenderingContext>this._gl).UNIFORM_BUFFER;\r\n                break;\r\n            case BufferTargetType.ELEMENT_ARRAY_BUFFER:\r\n                this._glTarget = this._gl.ELEMENT_ARRAY_BUFFER\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _memorychange(bytelength: number) {\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.BufferMemory, bytelength);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, bytelength);\r\n    }\r\n\r\n    bindBuffer(): boolean {\r\n        if (this._engine._getbindBuffer(this._glTargetType) != this) {\r\n            this._gl.bindBuffer(this._glTarget, this._glBuffer);\r\n            this._engine._setbindBuffer(this._glTargetType, this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    unbindBuffer() {\r\n        if (this._engine._getbindBuffer(this._glTargetType) == this) {\r\n            this._gl.bindBuffer(this._glTarget, null);\r\n            this._engine._setbindBuffer(this._glTargetType, null);\r\n        }\r\n    }\r\n\r\n    orphanStorage() {\r\n        this.bindBuffer();\r\n        this.setDataLength(this._byteLength);\r\n    }\r\n\r\n    setDataLength(srcData: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        this._memorychange(-this._byteLength);\r\n        this._byteLength = srcData;\r\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n        this.unbindBuffer();\r\n        this._memorychange(this._byteLength);\r\n    }\r\n\r\n\r\n\r\n\r\n    setData(srcData: ArrayBuffer | ArrayBufferView, offset: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\r\n        this.unbindBuffer();\r\n    }\r\n    setDataEx(srcData: ArrayBuffer | ArrayBufferView, offset: number, length: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\r\n        this.unbindBuffer();\r\n    }\r\n    // setData(srcData: ArrayBuffer | ArrayBufferView | number, offset?: number, length?: number): void {\r\n    //     let gl = this._gl;\r\n    //     this.bindBuffer();\r\n    //     if (typeof srcData == \"number\") {\r\n    //         this._byteLength = srcData as number;\r\n    //         gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n    //     }\r\n    //     if (offset != undefined && length == undefined) {\r\n    //         gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\r\n    //     }\r\n    //     if(offset != undefined && length != undefined) {\r\n    //         gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\r\n    //     }\r\n    //     this.unbindBuffer();\r\n    // }\r\n\r\n\r\n    //TODO:\r\n    bindBufferBase(glPointer: number) {\r\n        if (this._engine._getBindUBOBuffer(glPointer) != this) {\r\n            const gl = <WebGL2RenderingContext>this._gl;\r\n            gl.bindBufferBase(this._glTarget, glPointer, this._glBuffer);\r\n            this._engine._setBindUBOBuffer(glPointer, this);\r\n        }\r\n    }\r\n\r\n    //TODO:\r\n    bindBufferRange(glPointer: number, offset: number, byteCount: number) {\r\n        const gl = <WebGL2RenderingContext>this._gl;\r\n        gl.bindBufferRange(this._glTarget, glPointer, this._glBuffer, offset, byteCount);\r\n    }\r\n\r\n    resizeBuffer(dataLength: number) {\r\n        this.bindBuffer();\r\n        const gl = this._gl;\r\n        this._byteLength = dataLength;\r\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        gl.deleteBuffer(this._glBuffer);\r\n        this._memorychange(-this._byteLength);\r\n        this._byteLength = 0;\r\n        this._engine = null;\r\n        this._glBuffer = null;\r\n        this._glTarget = null;\r\n        this._glUsage = null;\r\n        this._gl = null;\r\n\r\n    }\r\n}","// @ts-nocheck\r\nexport class VertexArrayObject {\r\n    constructor() {\r\n    }\r\n}\r\n\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var glErrorShadow = {};\r\n\r\n    function error(msg) {\r\n        if (window.console && window.console.error) {\r\n            window.console.error(msg);\r\n        }\r\n    }\r\n\r\n    function log(msg) {\r\n        if (window.console && window.console.log) {\r\n            window.console.log(msg);\r\n        }\r\n    }\r\n\r\n    function synthesizeGLError(err, opt_msg) {\r\n        glErrorShadow[err] = true;\r\n        if (opt_msg !== undefined) {\r\n            error(opt_msg)\r\n        }\r\n    }\r\n\r\n    function wrapGLError(gl) {\r\n        var f = gl.getError;\r\n        gl.getError = function () {\r\n            var err;\r\n            do {\r\n                err = f.apply(gl);\r\n                if (err != gl.NO_ERROR) {\r\n                    glErrorShadow[err] = true;\r\n                }\r\n            } while (err != gl.NO_ERROR);\r\n\r\n            for (var err1 in glErrorShadow) {\r\n                if (glErrorShadow[err1]) {\r\n                    delete glErrorShadow[err1];\r\n                    return parseInt(err1);\r\n                }\r\n            }\r\n            return gl.NO_ERROR;\r\n        };\r\n    }\r\n\r\n    var WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\r\n        var gl = ext.gl;\r\n\r\n        this.ext = ext;\r\n        this.isAlive = true;\r\n        this.hasBeenBound = false;\r\n\r\n        this.elementArrayBuffer = null;\r\n        this.attribs = new Array(ext.maxVertexAttribs);\r\n        for (var n = 0; n < this.attribs.length; n++) {\r\n            var attrib = new (WebGLVertexArrayObjectOES as any).VertexAttrib(gl);\r\n            this.attribs[n] = attrib;\r\n        }\r\n\r\n        this.maxAttrib = 0;\r\n    };\r\n\r\n    (WebGLVertexArrayObjectOES as any).VertexAttrib = function VertexAttrib(gl) {\r\n        this.enabled = false;\r\n        this.buffer = null;\r\n        this.size = 4;\r\n        this.type = gl.FLOAT;\r\n        this.normalized = false;\r\n        this.stride = 16;\r\n        this.offset = 0;\r\n\r\n        this.cached = \"\";\r\n        this.recache();\r\n    };\r\n    (WebGLVertexArrayObjectOES as any).VertexAttrib.prototype.recache = function recache() {\r\n        this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(\":\");\r\n    };\r\n\r\n    var OESVertexArrayObject = function OESVertexArrayObject(gl) {\r\n        var self = this;\r\n        this.gl = gl;\r\n\r\n        wrapGLError(gl);\r\n\r\n        var original = this.original = {\r\n            getParameter: gl.getParameter,\r\n            enableVertexAttribArray: gl.enableVertexAttribArray,\r\n            disableVertexAttribArray: gl.disableVertexAttribArray,\r\n            bindBuffer: gl.bindBuffer,\r\n            getVertexAttrib: gl.getVertexAttrib,\r\n            vertexAttribPointer: gl.vertexAttribPointer\r\n        };\r\n\r\n        gl.getParameter = function getParameter(pname) {\r\n            if (pname == self.VERTEX_ARRAY_BINDING_OES) {\r\n                if (self.currentVertexArrayObject == self.defaultVertexArrayObject) {\r\n                    return null;\r\n                } else {\r\n                    return self.currentVertexArrayObject;\r\n                }\r\n            }\r\n            return original.getParameter.apply(this, arguments);\r\n        };\r\n\r\n        gl.enableVertexAttribArray = function enableVertexAttribArray(index) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\r\n            var attrib = vao.attribs[index];\r\n            attrib.enabled = true;\r\n            return original.enableVertexAttribArray.apply(this, arguments);\r\n        };\r\n        gl.disableVertexAttribArray = function disableVertexAttribArray(index) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\r\n            var attrib = vao.attribs[index];\r\n            attrib.enabled = false;\r\n            return original.disableVertexAttribArray.apply(this, arguments);\r\n        };\r\n\r\n        gl.bindBuffer = function bindBuffer(target, buffer) {\r\n            switch (target) {\r\n                case gl.ARRAY_BUFFER:\r\n                    self.currentArrayBuffer = buffer;\r\n                    break;\r\n                case gl.ELEMENT_ARRAY_BUFFER:\r\n                    self.currentVertexArrayObject.elementArrayBuffer = buffer;\r\n                    break;\r\n            }\r\n            return original.bindBuffer.apply(this, arguments);\r\n        };\r\n\r\n        gl.getVertexAttrib = function getVertexAttrib(index, pname) {\r\n            var vao = self.currentVertexArrayObject;\r\n            var attrib = vao.attribs[index];\r\n            switch (pname) {\r\n                case gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:\r\n                    return attrib.buffer;\r\n                case gl.VERTEX_ATTRIB_ARRAY_ENABLED:\r\n                    return attrib.enabled;\r\n                case gl.VERTEX_ATTRIB_ARRAY_SIZE:\r\n                    return attrib.size;\r\n                case gl.VERTEX_ATTRIB_ARRAY_STRIDE:\r\n                    return attrib.stride;\r\n                case gl.VERTEX_ATTRIB_ARRAY_TYPE:\r\n                    return attrib.type;\r\n                case gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:\r\n                    return attrib.normalized;\r\n                default:\r\n                    return original.getVertexAttrib.apply(this, arguments);\r\n            }\r\n        };\r\n\r\n        gl.vertexAttribPointer = function vertexAttribPointer(indx, size, type, normalized, stride, offset) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, indx);\r\n            var attrib = vao.attribs[indx];\r\n            attrib.buffer = self.currentArrayBuffer;\r\n            attrib.size = size;\r\n            attrib.type = type;\r\n            attrib.normalized = normalized;\r\n            attrib.stride = stride;\r\n            attrib.offset = offset;\r\n            attrib.recache();\r\n            return original.vertexAttribPointer.apply(this, arguments);\r\n        };\r\n\r\n        if (gl.instrumentExtension) {\r\n            gl.instrumentExtension(this, \"OES_vertex_array_object\");\r\n        }\r\n\r\n        gl.canvas.addEventListener('webglcontextrestored', function () {\r\n            log(\"OESVertexArrayObject emulation library context restored\");\r\n            self.reset_();\r\n        }, true);\r\n\r\n        this.reset_();\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85B5;\r\n\r\n    OESVertexArrayObject.prototype.reset_ = function reset_() {\r\n        var contextWasLost = this.vertexArrayObjects !== undefined;\r\n        if (contextWasLost) {\r\n            for (var ii = 0; ii < this.vertexArrayObjects.length; ++ii) {\r\n                this.vertexArrayObjects.isAlive = false;\r\n            }\r\n        }\r\n        var gl = this.gl;\r\n        this.maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n\r\n        this.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\r\n        this.currentVertexArrayObject = null;\r\n        this.currentArrayBuffer = null;\r\n        this.vertexArrayObjects = [this.defaultVertexArrayObject];\r\n\r\n        this.bindVertexArrayOES(null);\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\r\n        var arrayObject = new WebGLVertexArrayObjectOES(this);\r\n        this.vertexArrayObjects.push(arrayObject);\r\n        return arrayObject;\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\r\n        arrayObject.isAlive = false;\r\n        this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\r\n        if (this.currentVertexArrayObject == arrayObject) {\r\n            this.bindVertexArrayOES(null);\r\n        }\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\r\n        if (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\r\n            if ((arrayObject as any).hasBeenBound && (arrayObject as any).ext == this) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\r\n        var gl = this.gl;\r\n        if (arrayObject && !arrayObject.isAlive) {\r\n            synthesizeGLError(gl.INVALID_OPERATION, \"bindVertexArrayOES: attempt to bind deleted arrayObject\");\r\n            return;\r\n        }\r\n        var original = this.original;\r\n\r\n        var oldVAO = this.currentVertexArrayObject;\r\n        this.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\r\n        this.currentVertexArrayObject.hasBeenBound = true;\r\n        var newVAO = this.currentVertexArrayObject;\r\n\r\n        if (oldVAO == newVAO) {\r\n            return;\r\n        }\r\n\r\n        if (!oldVAO || newVAO.elementArrayBuffer != oldVAO.elementArrayBuffer) {\r\n            original.bindBuffer.call(gl, gl.ELEMENT_ARRAY_BUFFER, newVAO.elementArrayBuffer);\r\n        }\r\n\r\n        var currentBinding = this.currentArrayBuffer;\r\n        var maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\r\n        for (var n = 0; n <= maxAttrib; n++) {\r\n            var attrib = newVAO.attribs[n];\r\n            var oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\r\n\r\n            if (!oldVAO || attrib.enabled != oldAttrib.enabled) {\r\n                if (attrib.enabled) {\r\n                    original.enableVertexAttribArray.call(gl, n);\r\n                } else {\r\n                    original.disableVertexAttribArray.call(gl, n);\r\n                }\r\n            }\r\n\r\n            if (attrib.enabled) {\r\n                var bufferChanged = false;\r\n                if (!oldVAO || attrib.buffer != oldAttrib.buffer) {\r\n                    if (currentBinding != attrib.buffer) {\r\n                        original.bindBuffer.call(gl, gl.ARRAY_BUFFER, attrib.buffer);\r\n                        currentBinding = attrib.buffer;\r\n                    }\r\n                    bufferChanged = true;\r\n                }\r\n\r\n                if (bufferChanged || attrib.cached != oldAttrib.cached) {\r\n                    original.vertexAttribPointer.call(gl, n, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentArrayBuffer != currentBinding) {\r\n            original.bindBuffer.call(gl, gl.ARRAY_BUFFER, this.currentArrayBuffer);\r\n        }\r\n    };\r\n\r\n    (window as any)._setupVertexArrayObject = function (gl) {\r\n        var original_getSupportedExtensions = gl.getSupportedExtensions;\r\n        gl.getSupportedExtensions = function getSupportedExtensions() {\r\n            var list = original_getSupportedExtensions.call(this) || [];\r\n            if (list.indexOf(\"OES_vertex_array_object\") < 0) {\r\n                list.push(\"OES_vertex_array_object\");\r\n            }\r\n            return list;\r\n        };\r\n\r\n        var original_getExtension = gl.getExtension;\r\n\r\n        gl.getExtension = function getExtension(name) {\r\n            var ext = original_getExtension.call(this, name);\r\n            if (ext) {\r\n                return ext;\r\n            }\r\n            if (name !== \"OES_vertex_array_object\") {\r\n                return null;\r\n            }\r\n\r\n            if (!this.__OESVertexArrayObject) {\r\n                console.log(\"Setup OES_vertex_array_object polyfill\");\r\n                this.__OESVertexArrayObject = new OESVertexArrayObject(this);\r\n            }\r\n            return this.__OESVertexArrayObject;\r\n        };\r\n    };\r\n}());\r\n","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { VertexArrayObject } from \"./VertexArrayObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GlCapable {\r\n    /**@internal */\r\n    private _extentionVendorPrefixes: string[] = [\"\", \"WEBKIT_\", \"MOZ_\"];\r\n    /**@internal */\r\n    private _gl: any;\r\n    /**@internal */\r\n    private _extensionMap: Map<WebGLExtension, any>;\r\n    /**@internal */\r\n    private _capabilityMap: Map<RenderCapable, boolean>;\r\n\r\n\r\n    constructor(glEngine: WebGLEngine) {\r\n        this._gl = glEngine.gl;\r\n        this.initExtension(glEngine.isWebGL2);\r\n        this.initCapable(glEngine.isWebGL2);\r\n    }\r\n\r\n    private initCapable(isWebgl2: boolean) {\r\n        this._capabilityMap = new Map();\r\n        //Index Uint32\r\n        let value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_element_index_uint));\r\n        this._capabilityMap.set(RenderCapable.Element_Index_Uint32, value);\r\n        //FLoat32Texture\r\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_float));\r\n        this._capabilityMap.set(RenderCapable.TextureFormat_R32G32B32A32, value);\r\n        //halfFloatTexture\r\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_half_float));\r\n        this._capabilityMap.set(RenderCapable.TextureFormat_R16G16B16A16, value);\r\n        //anistropic\r\n        value = !!(this.getExtension(WebGLExtension.EXT_texture_filter_anisotropic));\r\n        this._capabilityMap.set(RenderCapable.Texture_anisotropic, value);\r\n\r\n        // half float renderable\r\n        if (isWebgl2) {\r\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) || !!this.getExtension(WebGLExtension.EXT_color_buffer_half_float);\r\n        }\r\n        else {\r\n            value = ((!!this.getExtension(WebGLExtension.OES_texture_half_float)) || (!!this.getExtension(WebGLExtension.EXT_color_buffer_half_float))) && (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\r\n        }\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R16G16B16A16, value);\r\n\r\n        // float renderable\r\n        if (isWebgl2) {\r\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) && !!this.getExtension(WebGLExtension.OES_texture_float_linear);\r\n        }\r\n        else {\r\n            // OES_texture_float implicitly enables the WEBGL_color_buffer_float extension (if supported)\r\n            value = (!!this.getExtension(WebGLExtension.OES_texture_float)) && (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\r\n        }\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R32G32B32A32, value);\r\n\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.WEBGL_depth_texture));\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_Depth, value);\r\n        value = isWebgl2;\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_ShadowMap, value);\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_vertex_array_object));\r\n        this._capabilityMap.set(RenderCapable.Vertex_VAO, value);\r\n        value = (isWebgl2 || (!!this.getExtension(WebGLExtension.ANGLE_instanced_arrays)));\r\n        this._capabilityMap.set(RenderCapable.DrawElement_Instance, value);\r\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_shader_texture_lod));\r\n        this._capabilityMap.set(RenderCapable.Shader_TextureLod, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_pvrtc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_PVRTC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC1, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_astc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ASTC, value);\r\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_sRGB))\r\n        this._capabilityMap.set(RenderCapable.Texture_SRGB, value);\r\n        value = (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\r\n        this._capabilityMap.set(RenderCapable.Texture_FloatLinearFiltering, value);\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\r\n        this._capabilityMap.set(RenderCapable.Texture_HalfFloatLinearFiltering, value);\r\n        value = isWebgl2;\r\n        this._capabilityMap.set(RenderCapable.MSAA, value);\r\n        this._capabilityMap.set(RenderCapable.UnifromBufferObject, value);\r\n        this._capabilityMap.set(RenderCapable.Texture3D, value);\r\n    }\r\n\r\n    private initExtension(isWebgl2: boolean) {\r\n        this._extensionMap = new Map();\r\n        const setExtensionMap = (extension: WebGLExtension, value: any, map: Map<WebGLExtension, any>) => {\r\n            value && map.set(extension, value);\r\n        }\r\n        const _extTextureFilterAnisotropic = this._getExtension(\"EXT_texture_filter_anisotropic\");\r\n        setExtensionMap(WebGLExtension.EXT_texture_filter_anisotropic, _extTextureFilterAnisotropic, this._extensionMap);\r\n        const _compressedTextureS3tc = this._getExtension(\"WEBGL_compressed_texture_s3tc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc, _compressedTextureS3tc, this._extensionMap);\r\n        const _compressdTextureS3tc_srgb = this._getExtension(\"WEBGL_compressed_texture_s3tc_srgb\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb, _compressdTextureS3tc_srgb, this._extensionMap);\r\n        const _compressedTexturePvrtc = this._getExtension(\"WEBGL_compressed_texture_pvrtc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_pvrtc, _compressedTexturePvrtc, this._extensionMap);\r\n        const _compressedTextureEtc1 = this._getExtension(\"WEBGL_compressed_texture_etc1\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc1, _compressedTextureEtc1, this._extensionMap);\r\n        const _compressedTextureETC = this._getExtension(\"WEBGL_compressed_texture_etc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc, _compressedTextureETC, this._extensionMap);\r\n        const _compressedTextureASTC = this._getExtension(\"WEBGL_compressed_texture_astc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_astc, _compressedTextureASTC, this._extensionMap);\r\n        const _oesTextureFloatLinear = this._getExtension(\"OES_texture_float_linear\");\r\n        setExtensionMap(WebGLExtension.OES_texture_float_linear, _oesTextureFloatLinear, this._extensionMap);\r\n        const _extColorBufferHalfFloat = this._getExtension(\"EXT_color_buffer_half_float\");\r\n        setExtensionMap(WebGLExtension.EXT_color_buffer_half_float, _extColorBufferHalfFloat, this._extensionMap);\r\n        if (isWebgl2) {\r\n            const _extColorBufferFloat = this._getExtension(\"EXT_color_buffer_float\");\r\n            setExtensionMap(WebGLExtension.EXT_color_buffer_float, _extColorBufferFloat, this._extensionMap);\r\n        } else {\r\n            VertexArrayObject;//强制引用\r\n            if ((window as any)._setupVertexArrayObject) //兼容VAO\r\n                (window as any)._setupVertexArrayObject(this._gl);\r\n            const _vaoExt = this._getExtension(\"OES_vertex_array_object\");\r\n            setExtensionMap(WebGLExtension.OES_vertex_array_object, _vaoExt, this._extensionMap);\r\n            const _angleInstancedArrays = this._getExtension(\"ANGLE_instanced_arrays\");\r\n            setExtensionMap(WebGLExtension.ANGLE_instanced_arrays, _angleInstancedArrays, this._extensionMap);\r\n            const _oesTextureHalfFloat = this._getExtension(\"OES_texture_half_float\");\r\n            setExtensionMap(WebGLExtension.OES_texture_half_float, _oesTextureHalfFloat, this._extensionMap);\r\n            const _oesTextureHalfFloatLinear = this._getExtension(\"OES_texture_half_float_linear\");\r\n            setExtensionMap(WebGLExtension.OES_texture_half_float_linear, _oesTextureHalfFloatLinear, this._extensionMap);\r\n            const _oesTextureFloat = this._getExtension(\"OES_texture_float\");\r\n            setExtensionMap(WebGLExtension.OES_texture_float, _oesTextureFloat, this._extensionMap);\r\n\r\n            const _oes_element_index_uint = this._getExtension(\"OES_element_index_uint\");\r\n            setExtensionMap(WebGLExtension.OES_element_index_uint, _oes_element_index_uint, this._extensionMap);\r\n            const _extShaderTextureLod = this._getExtension(\"EXT_shader_texture_lod\");\r\n            setExtensionMap(WebGLExtension.EXT_shader_texture_lod, _extShaderTextureLod, this._extensionMap);\r\n            const _webgl_depth_texture = this._getExtension(\"WEBGL_depth_texture\");\r\n            setExtensionMap(WebGLExtension.WEBGL_depth_texture, _webgl_depth_texture, this._extensionMap);\r\n            const _sRGB = this._getExtension(\"EXT_sRGB\");\r\n            setExtensionMap(WebGLExtension.EXT_sRGB, _sRGB, this._extensionMap);\r\n\r\n            const OES_standard_derivatives = this._getExtension(\"OES_standard_derivatives\");\r\n            setExtensionMap(WebGLExtension.OES_standard_derivatives, OES_standard_derivatives, this._extensionMap);\r\n        }\r\n    }\r\n\r\n    getCapable(type: RenderCapable): boolean {\r\n        return this._capabilityMap.get(type);\r\n    }\r\n\r\n    getExtension(type: WebGLExtension): any {\r\n        if (this._extensionMap.has(type))\r\n            return this._extensionMap.get(type);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _getExtension(name: string) {\r\n        const prefixes: string[] = this._extentionVendorPrefixes;\r\n        for (const k in prefixes) {\r\n            var ext = this._gl.getExtension(prefixes[k] + name);\r\n            if (ext)\r\n                return ext;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n/**\r\n * \r\n */\r\nexport class GLParams{\r\n    _engine: WebGLEngine;\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    _glParamsData:Map<RenderParams,number>;\r\n    constructor(engine: WebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._initParams();\r\n    }\r\n\r\n    private _initParams(){\r\n        const gl = this._gl;\r\n        this._glParamsData = new Map();\r\n        this._glParamsData.set(RenderParams.Max_Active_Texture_Count,gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS));\r\n        const maxVertexUniform:number = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\r\n        const maxFragUniform:number = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\r\n        this._glParamsData.set(RenderParams.Max_Uniform_Count,Math.min(maxVertexUniform,maxFragUniform));\r\n        this._glParamsData.set(RenderParams.MAX_Texture_Size,gl.getParameter(gl.MAX_TEXTURE_SIZE));\r\n        this._glParamsData.set(RenderParams.MAX_Texture_Image_Uint,gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\r\n        if(this._engine.getCapable(RenderCapable.Texture_anisotropic)){\r\n            const anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\r\n            this._glParamsData.set(RenderParams.Max_AnisoLevel_Count,gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\r\n        }\r\n        if(this._engine.isWebGL2)\r\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,35);\r\n        else\r\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,30);\r\n        this._glParamsData.set(RenderParams.FLOAT,gl.FLOAT);\r\n        this._glParamsData.set(RenderParams.UNSIGNED_BYTE,gl.UNSIGNED_BYTE);\r\n        this._glParamsData.set(RenderParams.UNSIGNED_SHORT,gl.UNSIGNED_SHORT);\r\n        this._glParamsData.set(RenderParams.BYTE,gl.BYTE);\r\n\r\n    }\r\n\r\n    getParams(params:RenderParams):number{\r\n        return this._glParamsData.get(params);\r\n    }\r\n}","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { GLShaderInstance } from \"./GLShaderInstance\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n\r\nexport class GLRender2DContext extends GLObject implements IRender2DContext {\r\n    private shaderInstance:GLShaderInstance;\r\n    private cacheShaderProgram:any;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        //this.shaderInstance = new GLShaderInstance(engine, null, null, null);\r\n    }\r\n\r\n    activeTexture(textureID: number): void {\r\n        if (this._engine._activedTextureID !== textureID) {\r\n            this._gl.activeTexture(textureID);\r\n            this._engine._activedTextureID = textureID;\r\n        }\r\n    }\r\n\r\n    bindTexture(target: number, texture: WebGLTexture): void {\r\n        this._engine._bindTexture(target, texture);\r\n    }\r\n\r\n    bindUseProgram(webglProgram: any):boolean {\r\n        if(this.cacheShaderProgram==webglProgram)\r\n            return false;\r\n        this._gl.useProgram(webglProgram);\r\n        this._engine._glUseProgram = null;;\r\n        return true;\r\n    }\r\n\r\n}","import { RenderGeometryElementOBJ } from \"../../../d3/RenderObjs/RenderObj/RenderGeometryElementOBJ\";\r\nimport { DrawType } from \"../../RenderEnum/DrawType\";\r\nimport { IndexFormat } from \"../../RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\"\r\n\r\n//TODO\r\nexport class GLRenderDrawContext extends GLObject implements IRenderDrawContext {\r\n    /**@internal */\r\n    private _angleInstancedArrays: any;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        if (!this._engine.isWebGL2) {\r\n            this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @returns \r\n     */\r\n    getMeshTopology(mode: MeshTopology): number {\r\n        switch (mode) {\r\n            case MeshTopology.Points:\r\n                return this._gl.POINTS;\r\n            case MeshTopology.Lines:\r\n                return this._gl.LINES;\r\n            case MeshTopology.LineLoop:\r\n                return this._gl.LINE_LOOP;\r\n            case MeshTopology.LineStrip:\r\n                return this._gl.LINE_STRIP;\r\n            case MeshTopology.Triangles:\r\n                return this._gl.TRIANGLES;\r\n            case MeshTopology.TriangleStrip:\r\n                return this._gl.TRIANGLE_STRIP;\r\n            case MeshTopology.TriangleFan:\r\n                return this._gl.TRIANGLE_FAN;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param type \r\n     * @returns \r\n     */\r\n    getIndexType(type: IndexFormat): number {\r\n        switch (type) {\r\n            case IndexFormat.UInt8:\r\n                return this._gl.UNSIGNED_BYTE;\r\n            case IndexFormat.UInt16:\r\n                return this._gl.UNSIGNED_SHORT;\r\n            case IndexFormat.UInt32:\r\n                return this._gl.UNSIGNED_INT;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElementsInstanced(mode: number, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).drawElementsInstanced(mode, count, type, offset, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, instanceCount);\r\n\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3 * instanceCount);\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).drawArraysInstanced(mode, first, count, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, (count - 2) * instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param first \r\n     * @param count \r\n     */\r\n    drawArrays(mode: number, first: number, count: number): void {\r\n        this._gl.drawArrays(mode, first, count);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, (count - 2));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param count \r\n     * @param type \r\n     * @param offset \r\n     */\r\n    drawElements(mode: number, count: number, type: IndexFormat, offset: number): void {\r\n        this._gl.drawElements(mode, count, type, offset);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param count \r\n     * @param type \r\n     * @param offset \r\n     */\r\n    drawElements2DTemp(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        mode = this.getMeshTopology(mode);\r\n        type = this.getIndexType(type);\r\n        this._gl.drawElements(mode, count, type, offset);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param geometryElement \r\n     */\r\n    drawGeometryElement(geometryElement: RenderGeometryElementOBJ): void {\r\n        geometryElement.bufferState.bind();\r\n        let element = geometryElement.drawParams.elements;\r\n        let length = geometryElement.drawParams.length;\r\n        switch (geometryElement.drawType) {\r\n            case DrawType.DrawArray:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawArrays(geometryElement._glmode, element[i], element[i + 1]);\r\n                }\r\n                break;\r\n            case DrawType.DrawElement:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawElements(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i]);\r\n                }\r\n                break;\r\n            case DrawType.DrawArrayInstance:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawArraysInstanced(geometryElement._glmode, element[i], element[i + 1], geometryElement.instanceCount);\r\n                }\r\n                break;\r\n            case DrawType.DrawElementInstance:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawElementsInstanced(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i], geometryElement.instanceCount);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}","import { BlendEquationSeparate } from \"../../RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../../RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../../RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../../RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../../RenderEnum/CullMode\";\r\nimport { RenderStateType } from \"../../RenderEnum/RenderStateType\";\r\nimport { StencilOperation } from \"../../RenderEnum/StencilOperation\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GLRenderState {\r\n    //Depth\r\n    /**@internal */\r\n    private _depthTest: boolean = true;\r\n    /**@internal */\r\n    private _depthMask: boolean = true;\r\n    /**@internal */\r\n    private _depthFunc: number;\r\n    //stencil\r\n    /**@internal */\r\n    private _stencilTest: boolean = false;\r\n    /**@internal */\r\n    private _stencilFunc: number;\r\n    /**@internal */\r\n    private _stencilMask: boolean;\r\n    /**@internal */\r\n    private _stencilRef: number\r\n    /**@internal */\r\n    private _stencilOp_fail: number;\r\n    /**@internal */\r\n    private _stencilOp_zfail: number;\r\n    /**@internal */\r\n    private _stencilOp_zpass: number;\r\n    //blender\r\n    /**@internal */\r\n    private _blend: boolean = false;\r\n    /**@internal */\r\n    private _blendEquation: number;\r\n    /**@internal */\r\n    private _blendEquationRGB: number;\r\n    /**@internal */\r\n    private _blendEquationAlpha: number;\r\n    /**@internal */\r\n    private _sFactor: number;\r\n    /**@internal */\r\n    private _dFactor: number;\r\n    /**@internal */\r\n    private _sFactorRGB: number;\r\n    /**@internal */\r\n    private _dFactorRGB: number;\r\n    /**@internal */\r\n    private _sFactorAlpha: number;\r\n    /**@internal */\r\n    private _dFactorAlpha: number;\r\n    //cull\r\n    /**@internal */\r\n    private _cullFace: boolean = false;\r\n    /**@internal */\r\n    private _frontFace: number;\r\n\r\n    /**@internal */\r\n    _engine: WebGLEngine;\r\n    /**@internal */\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    /**\r\n     * intance glRenderState\r\n     * @param engine \r\n     */\r\n    constructor(engine: WebGLEngine) {\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._initState();\r\n    }\r\n\r\n    /**\r\n     * init\r\n     */\r\n    private _initState() {\r\n        //TODO:并不完全\r\n        const gl = this._gl;\r\n        this.setDepthFunc(CompareFunction.Less);\r\n        this.setBlendEquationSeparate(BlendEquationSeparate.ADD, BlendEquationSeparate.ADD);\r\n        this._blendEquation = BlendEquationSeparate.ADD;\r\n        this._sFactor = BlendFactor.One;\r\n        this._dFactor = BlendFactor.Zero;\r\n        this._sFactorAlpha = BlendFactor.One;\r\n        this._dFactorAlpha = BlendFactor.One;\r\n    }\r\n\r\n    /**\r\n     * get gl blend factor\r\n     * @param factor \r\n     * @returns \r\n     */\r\n    _getBlendFactor(factor: BlendFactor) {\r\n        const gl = this._gl;\r\n        switch (factor) {\r\n            case BlendFactor.Zero:\r\n                return gl.ZERO;\r\n            case BlendFactor.One:\r\n                return gl.ONE;\r\n            case BlendFactor.SourceColor:\r\n                return gl.SRC_COLOR;\r\n            case BlendFactor.OneMinusSourceColor:\r\n                return gl.ONE_MINUS_SRC_COLOR;\r\n            case BlendFactor.DestinationColor:\r\n                return gl.DST_COLOR;\r\n            case BlendFactor.OneMinusDestinationColor:\r\n                return gl.ONE_MINUS_DST_COLOR;\r\n            case BlendFactor.SourceAlpha:\r\n                return gl.SRC_ALPHA;\r\n            case BlendFactor.OneMinusSourceAlpha:\r\n                return gl.ONE_MINUS_SRC_ALPHA;\r\n            case BlendFactor.DestinationAlpha:\r\n                return gl.DST_ALPHA;\r\n            case BlendFactor.OneMinusDestinationAlpha:\r\n                return gl.ONE_MINUS_DST_ALPHA;\r\n            case BlendFactor.SourceAlphaSaturate:\r\n                return gl.SRC_ALPHA_SATURATE;\r\n            case BlendFactor.BlendColor:\r\n                return gl.CONSTANT_COLOR;\r\n            case BlendFactor.OneMinusBlendColor:\r\n                return gl.ONE_MINUS_CONSTANT_COLOR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl blend operation\r\n     * @param factor \r\n     * @returns \r\n     */\r\n    _getBlendOperation(factor: BlendEquationSeparate) {\r\n        const gl = this._gl;\r\n        switch (factor) {\r\n            case BlendEquationSeparate.ADD:\r\n                return gl.FUNC_ADD;\r\n            case BlendEquationSeparate.SUBTRACT:\r\n                return gl.FUNC_SUBTRACT;\r\n            case BlendEquationSeparate.REVERSE_SUBTRACT:\r\n                return gl.FUNC_REVERSE_SUBTRACT;\r\n            // case BlendEquationSeparate.MIN:\r\n            //     return -1;\r\n            // case BlendEquationSeparate.MAX:\r\n            //     return -1;\r\n            default:\r\n                throw \"Unknow type\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl compare fun factor\r\n     * @param compareFunction \r\n     * @returns \r\n     */\r\n    _getGLCompareFunction(compareFunction: CompareFunction): number {\r\n        const gl = this._gl;\r\n        switch (compareFunction) {\r\n            case CompareFunction.Never:\r\n                return gl.NEVER;\r\n            case CompareFunction.Less:\r\n                return gl.LESS;\r\n            case CompareFunction.Equal:\r\n                return gl.EQUAL;\r\n            case CompareFunction.LessEqual:\r\n                return gl.LEQUAL;\r\n            case CompareFunction.Greater:\r\n                return gl.GREATER;\r\n            case CompareFunction.NotEqual:\r\n                return gl.NOTEQUAL;\r\n            case CompareFunction.GreaterEqual:\r\n                return gl.GEQUAL;\r\n            case CompareFunction.Always:\r\n                return gl.ALWAYS;\r\n            default:\r\n                return gl.LEQUAL; // todo\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl stencil operation\r\n     * @param compareFunction \r\n     * @returns \r\n     */\r\n    _getGLStencilOperation(compareFunction: StencilOperation): number {\r\n        const gl = this._gl;\r\n        switch (compareFunction) {\r\n            case StencilOperation.Keep:\r\n                return gl.KEEP;\r\n            case StencilOperation.Zero:\r\n                return gl.ZERO;\r\n            case StencilOperation.Replace:\r\n                return gl.REPLACE;\r\n            case StencilOperation.IncrementSaturate:\r\n                return gl.INCR;\r\n            case StencilOperation.DecrementSaturate:\r\n                return gl.DECR;\r\n            case StencilOperation.Invert:\r\n                return gl.INVERT;\r\n            case StencilOperation.IncrementWrap:\r\n                return gl.INCR_WRAP;\r\n            case StencilOperation.DecrementWrap:\r\n                return gl.DECR_WRAP;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl frontface factor\r\n     * @param cullmode \r\n     * @returns \r\n     */\r\n    _getGLFrontfaceFactor(cullmode: CullMode) {\r\n        if (cullmode == CullMode.Front)\r\n            return this._gl.CCW;\r\n        else\r\n            return this._gl.CW;\r\n    }\r\n\r\n    //Depth\r\n    /**\r\n     * @internal\r\n     */\r\n    setDepthTest(value: boolean): void {\r\n        value !== this._depthTest && (this._depthTest = value, value ? this._gl.enable(this._gl.DEPTH_TEST) : this._gl.disable(this._gl.DEPTH_TEST));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setDepthMask(value: boolean): void {\r\n        value !== this._depthMask && (this._depthMask = value, this._gl.depthMask(value));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * value {CompareType}\r\n     */\r\n    setDepthFunc(value: number): void {\r\n        value !== this._depthFunc && (this._depthFunc = value, this._gl.depthFunc(this._getGLCompareFunction(value)));\r\n    }\r\n\r\n\r\n    //stencil\r\n    /**\r\n     * @internal\r\n     */\r\n    setStencilTest(value: boolean): void {\r\n        value !== this._stencilTest && (this._stencilTest = value, value ? this._gl.enable(this._gl.STENCIL_TEST) : this._gl.disable(this._gl.STENCIL_TEST));\r\n    }\r\n\r\n    /**\r\n     * 模板写入开关\r\n     * @param value \r\n     */\r\n    setStencilMask(value: boolean): void {\r\n        value !== this._stencilMask && (this._stencilMask = value, value ? this._gl.stencilMask(0xff) : this._gl.stencilMask(0x00));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setStencilFunc(fun: number, ref: number): void {\r\n        if (fun != this._stencilFunc || ref != this._stencilRef) {\r\n            this._stencilFunc = fun;\r\n            this._stencilRef = ref;\r\n            this._gl.stencilFunc(this._getGLCompareFunction(fun), ref, 0xff);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    setstencilOp(fail: number, zfail: number, zpass: number) {\r\n        if (this._stencilOp_fail != fail || this._stencilOp_zfail != zfail || this._stencilOp_zpass != zpass) {\r\n            this._stencilOp_fail = fail;\r\n            this._stencilOp_zfail = zfail;\r\n            this._stencilOp_zpass = zpass;\r\n            this._gl.stencilOp(this._getGLStencilOperation(fail), this._getGLStencilOperation(zfail), this._getGLStencilOperation(zpass));\r\n        }\r\n    }\r\n\r\n    //blend()\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlend(value: boolean): void {\r\n        value !== this._blend && (this._blend = value, value ? this._gl.enable(this._gl.BLEND) : this._gl.disable(this._gl.BLEND));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendEquation(blendEquation: number): void {\r\n        if (blendEquation !== this._blendEquation) {\r\n            this._blendEquation = blendEquation;\r\n            this._blendEquationRGB = this._blendEquationAlpha = null;\r\n            this._gl.blendEquation(this._getBlendOperation(blendEquation));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendEquationSeparate(blendEquationRGB: number, blendEquationAlpha: number): void {\r\n        if (blendEquationRGB !== this._blendEquationRGB || blendEquationAlpha !== this._blendEquationAlpha) {\r\n            this._blendEquationRGB = blendEquationRGB;\r\n            this._blendEquationAlpha = blendEquationAlpha;\r\n            this._blendEquation = null;\r\n            this._gl.blendEquationSeparate(this._getBlendOperation(blendEquationRGB), this._getBlendOperation(blendEquationAlpha));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendFunc(sFactor: number, dFactor: number, force: boolean = false): void {\r\n        // 有个iOS的bug，用原来的写法有时候会出错\r\n        if (force || sFactor !== this._sFactor || dFactor !== this._dFactor) {\r\n            this._sFactor = sFactor;\r\n            this._dFactor = dFactor;\r\n            this._sFactorRGB = null;\r\n            this._dFactorRGB = null;\r\n            this._sFactorAlpha = null;\r\n            this._dFactorAlpha = null;\r\n            this._gl.blendFunc(this._getBlendFactor(sFactor), this._getBlendFactor(dFactor));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendFuncSeperate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void {\r\n        if (srcRGB !== this._sFactorRGB || dstRGB !== this._dFactorRGB || srcAlpha !== this._sFactorAlpha || dstAlpha !== this._dFactorAlpha) {\r\n            this._sFactorRGB = srcRGB;\r\n            this._dFactorRGB = dstRGB;\r\n            this._sFactorAlpha = srcAlpha;\r\n            this._dFactorAlpha = dstAlpha;\r\n            this._sFactor = null;\r\n            this._dFactor = null;\r\n            this._gl.blendFuncSeparate(this._getBlendFactor(srcRGB), this._getBlendFactor(dstRGB), this._getBlendFactor(srcAlpha), this._getBlendFactor(dstAlpha));\r\n        }\r\n    }\r\n\r\n    //cull\r\n    /**\r\n     * @internal\r\n     */\r\n    setCullFace(value: boolean): void {\r\n        value !== this._cullFace && (this._cullFace = value, value ? this._gl.enable(this._gl.CULL_FACE) : this._gl.disable(this._gl.CULL_FACE));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setFrontFace(value: number): void {\r\n        value !== this._frontFace && (this._frontFace = value, this._gl.frontFace(this._getGLFrontfaceFactor(value)));\r\n    }\r\n\r\n    /**\r\n     * apply RenderState list\r\n     * @param cmd \r\n     */\r\n    applyRenderStateCommand(cmd: RenderStateCommand) {\r\n        let cmdArray = cmd.cmdArray;\r\n        cmdArray.forEach((value, key) => {\r\n            switch (key) {\r\n                case RenderStateType.DepthTest:\r\n                    this.setDepthTest(value);\r\n                    break;\r\n                case RenderStateType.DepthMask:\r\n                    this.setDepthMask(value);\r\n                    break;\r\n                case RenderStateType.DepthFunc:\r\n                    this.setDepthFunc(value);\r\n                    break;\r\n                case RenderStateType.StencilTest:\r\n                    this.setStencilTest(value);\r\n                    break;\r\n                case RenderStateType.StencilMask:\r\n                    this.setStencilMask(value);\r\n                    break;\r\n                case RenderStateType.StencilFunc:\r\n                    this.setStencilFunc(value[0], value[1]);\r\n                    break;\r\n                case RenderStateType.StencilOp:\r\n                    this.setstencilOp(value[0], value[1], value[2]);//TODO\r\n                    break;\r\n                case RenderStateType.BlendType:\r\n                    this.setBlend(value != BlendType.BLEND_DISABLE);\r\n                    break;\r\n                case RenderStateType.BlendEquation:\r\n                    this.setBlendEquation(value);\r\n                    break;\r\n                case RenderStateType.BlendEquationSeparate:\r\n                    this.setBlendEquationSeparate(value[0], value[1]);//TODO\r\n                    break;\r\n                case RenderStateType.BlendFunc:\r\n                    this.setBlendFunc(value[0], value[1]);\r\n                    break;\r\n                case RenderStateType.BlendFuncSeperate:\r\n                    this.setBlendFuncSeperate(value[0], value[1], value[2], value[3]);\r\n                    break;\r\n                case RenderStateType.CullFace:\r\n                    this.setCullFace(value);\r\n                    break;\r\n                case RenderStateType.FrontFace:\r\n                    this.setFrontFace(value);\r\n                    break;\r\n                default:\r\n                    throw \"unknow type of renderStateType\";\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n}","import { LayaEnv } from \"../../../../LayaEnv\";\r\nimport { TextureCube } from \"../../../resource/TextureCube\";\r\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../../../maths/Vector2\";\r\nimport { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { Texture2D } from \"../../../resource/Texture2D\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\r\nimport { UniformBufferObject } from \"../../UniformBufferObject\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { Matrix3x3 } from \"../../../maths/Matrix3x3\";\r\n\r\n\r\nexport class GLShaderInstance extends GLObject implements IRenderShaderInstance {\r\n\r\n    _engine: WebGLEngine;\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    /**@internal */\r\n    private _vs: string;\r\n    /**@internal */\r\n    private _ps: string;\r\n    /**@internal TextureId*/\r\n    private _curActTexIndex: number;\r\n    /**@internal */\r\n    private _vshader: WebGLShader;\r\n    /**@internal */\r\n    private _pshader: WebGLShader;\r\n    /**@internal */\r\n    private _program: WebGLProgram;\r\n    /**@internal */\r\n    private _attributeMap: { [name: string]: [number, ShaderDataType] };\r\n    /**@internal */\r\n    private _uniformMap: ShaderVariable[];\r\n    /**@internal */\r\n    // todo 没用到\r\n    private _uniformObjectMap: { [key: string]: ShaderVariable };\r\n    /**@internal */\r\n    _complete: boolean = true;\r\n\r\n    constructor(engine: WebGLEngine, vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }) {\r\n        super(engine);\r\n        this._vs = vs;\r\n        this._ps = ps;\r\n        this._attributeMap = attributeMap;\r\n        this._uniformMap = [];\r\n        this._create();\r\n    }\r\n\r\n    private _create(): void {\r\n\r\n        const gl: WebGLRenderingContext = this._gl;\r\n        this._program = gl.createProgram();\r\n        this._vshader = this._createShader(gl, this._vs, gl.VERTEX_SHADER);\r\n        this._pshader = this._createShader(gl, this._ps, gl.FRAGMENT_SHADER);\r\n        gl.attachShader(this._program, this._vshader);\r\n        gl.attachShader(this._program, this._pshader);\r\n\r\n        for (var k in this._attributeMap)//根据声明调整location,便于VAO使用\r\n            gl.bindAttribLocation(this._program, this._attributeMap[k][0], k);\r\n        gl.linkProgram(this._program);\r\n        const bo = gl.getProgramParameter(this._program, gl.LINK_STATUS);\r\n\r\n        if (!bo) {\r\n            var info = gl.getProgramInfoLog(this._program);\r\n            console.error(new Error('Could not compile WebGL program. \\n\\n' + info));\r\n            this._complete = false;\r\n            return;\r\n        }\r\n\r\n        //Uniform\r\n        //Unifrom Objcet\r\n        const nUniformNum: number = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS);\r\n\r\n        this.useProgram();\r\n        this._curActTexIndex = 0;\r\n        let one: ShaderVariable, i: number;\r\n        for (i = 0; i < nUniformNum; i++) {\r\n            var uniformData: WebGLActiveInfo = gl.getActiveUniform(this._program, i);\r\n            var uniName: string = uniformData.name;\r\n            let location: WebGLUniformLocation = gl.getUniformLocation(this._program, uniName);\r\n            if (!location && location != 0)\r\n                continue;\r\n            one = new ShaderVariable();\r\n            one.location = location as number;\r\n            if (uniName.indexOf('[0]') > 0) {\r\n                one.name = uniName = uniName.substr(0, uniName.length - 3);\r\n                one.isArray = true;\r\n            } else {\r\n                one.name = uniName;\r\n                one.isArray = false;\r\n            }\r\n            one.type = uniformData.type;\r\n            this._addShaderUnifiormFun(one);\r\n            this._uniformMap.push(one);\r\n            one.dataOffset = this._engine.propertyNameToID(uniName);\r\n        }\r\n        if (this._engine.isWebGL2) {\r\n            this._uniformObjectMap = {};\r\n            var nUniformBlock: number = gl.getProgramParameter(this._program, (gl as WebGL2RenderingContext).ACTIVE_UNIFORM_BLOCKS);\r\n            for (i = 0; i < nUniformBlock; i++) {\r\n                let gl2 = (gl as WebGL2RenderingContext);\r\n                var uniformBlockName: string = gl2.getActiveUniformBlockName(this._program, i);\r\n                one = new ShaderVariable();\r\n                one.name = uniformBlockName;\r\n                one.isArray = false;\r\n                one.type = (gl as WebGL2RenderingContext).UNIFORM_BUFFER;\r\n                one.dataOffset = this._engine.propertyNameToID(uniformBlockName);\r\n                let location = one.location = gl2.getUniformBlockIndex(this._program, uniformBlockName);\r\n                gl2.uniformBlockBinding(this._program, location, this._engine.getUBOPointer(uniformBlockName));\r\n                this._uniformObjectMap[one.name] = one;\r\n                this._uniformMap.push(one);\r\n                this._addShaderUnifiormFun(one);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _legalUBObyteLength(bytelength: number): number {\r\n        return Math.ceil(bytelength / 16) * 16;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    private _createShader(gl: WebGLRenderingContext, str: string, type: number): any {\r\n        var shader: WebGLShader = gl.createShader(type);\r\n        gl.shaderSource(shader, str);\r\n        gl.compileShader(shader);\r\n        if (this._engine._isShaderDebugMode && !gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            if (!LayaEnv.isPlaying) {\r\n                console.warn(gl.getShaderInfoLog(shader));\r\n            } else {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n            }\r\n        }\r\n        return shader;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _addShaderUnifiormFun(one: ShaderVariable): void {\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        one.caller = this;\r\n        var isArray: boolean = one.isArray;\r\n        switch (one.type) {\r\n            case gl.BOOL:\r\n                one.fun = this._uniform1i;\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.INT:\r\n                one.fun = isArray ? this._uniform1iv : this._uniform1i;//TODO:优化\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.FLOAT:\r\n                one.fun = isArray ? this._uniform1fv : this._uniform1f;\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.FLOAT_VEC2:\r\n                one.fun = isArray ? this._uniform_vec2v : this._uniform_vec2;\r\n                one.uploadedValue = new Array(2);\r\n                break;\r\n            case gl.FLOAT_VEC3:\r\n                one.fun = isArray ? this._uniform_vec3v : this._uniform_vec3;\r\n                one.uploadedValue = new Array(3);\r\n                break;\r\n            case gl.FLOAT_VEC4:\r\n                one.fun = isArray ? this._uniform_vec4v : this._uniform_vec4;\r\n                one.uploadedValue = new Array(4);\r\n                break;\r\n            case gl.FLOAT_MAT2:\r\n                one.fun = this._uniformMatrix2fv;\r\n                break;\r\n            case gl.FLOAT_MAT3:\r\n                one.fun = this._uniformMatrix3fv;\r\n                break;\r\n            case gl.FLOAT_MAT4:\r\n                one.fun = isArray ? this._uniformMatrix4fv : this._uniformMatrix4f;\r\n                break;\r\n            case gl.SAMPLER_2D:\r\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_SHADOW:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler2D;\r\n                break;\r\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_ARRAY:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler2DArray;\r\n                break;\r\n            case 0x8b5f://sampler3D\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler3D;\r\n                break;\r\n            case gl.SAMPLER_CUBE:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_samplerCube;\r\n                break;\r\n            case (gl as WebGL2RenderingContext).UNIFORM_BUFFER:\r\n                one.fun = this._uniform_UniformBuffer;\r\n                break;\r\n            default:\r\n                throw new Error(\"compile shader err!\");\r\n        }\r\n    }\r\n\r\n    getUniformMap(): ShaderVariable[] {\r\n        return this._uniformMap;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    bind(): boolean {\r\n        return this.useProgram();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    useProgram(): boolean {\r\n        if (this._engine._glUseProgram === this)\r\n            return false;\r\n        this._gl.useProgram(this._program);\r\n        this._engine._glUseProgram = this;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    _uniform1f(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value) {\r\n            this._gl.uniform1f(one.location, uploadedValue[0] = value);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    _uniform1fv(one: any, value: any): number {\r\n        if (value.length < 4) {\r\n            var uploadedValue: any[] = one.uploadedValue;\r\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n                this._gl.uniform1fv(one.location, value);\r\n                uploadedValue[0] = value[0];\r\n                uploadedValue[1] = value[1];\r\n                uploadedValue[2] = value[2];\r\n                uploadedValue[3] = value[3];\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            this._gl.uniform1fv(one.location, value);\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec2(one: any, v: Vector2): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y) {\r\n            this._gl.uniform2f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec2v(one: any, value: Float32Array): number {\r\n        if (value.length < 2) {\r\n            var uploadedValue: any[] = one.uploadedValue;\r\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n                this._gl.uniform2fv(one.location, value);\r\n                uploadedValue[0] = value[0];\r\n                uploadedValue[1] = value[1];\r\n                uploadedValue[2] = value[2];\r\n                uploadedValue[3] = value[3];\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            this._gl.uniform2fv(one.location, value);\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3(one: any, v: Vector3): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z) {\r\n            this._gl.uniform3f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3v(one: any, v: Float32Array): number {\r\n        this._gl.uniform3fv(one.location, v);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4(one: any, v: Vector4): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z || uploadedValue[3] !== v.w) {\r\n            this._gl.uniform4f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z, uploadedValue[3] = v.w);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4v(one: any, v: Float32Array): number {\r\n        this._gl.uniform4fv(one.location, v);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix2fv(one: any, value: any): number {\r\n        this._gl.uniformMatrix2fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix3fv(one: any, m: Matrix3x3): number {\r\n        let value = m.elements;\r\n        this._gl.uniformMatrix3fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix4f(one: any, m: Matrix4x4): number {\r\n        var value: Float32Array = m.elements;\r\n        this._gl.uniformMatrix4fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix4fv(one: any, m: Float32Array): number {\r\n        this._gl.uniformMatrix4fv(one.location, false, m);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform1i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value) {\r\n            this._gl.uniform1i(one.location, uploadedValue[0] = value);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform1iv(one: any, value: any): number {\r\n        this._gl.uniform1iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_ivec2(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1]) {\r\n            this._gl.uniform2i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_ivec2v(one: any, value: any): number {\r\n        this._gl.uniform2iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2]) {\r\n            this._gl.uniform3i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3vi(one: any, value: any): number {\r\n        this._gl.uniform3iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n            this._gl.uniform4i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2], uploadedValue[3] = value[3]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4vi(one: any, value: any): number {\r\n        this._gl.uniform4iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_sampler2D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_2D, value);\r\n        return 0;\r\n    }\r\n\r\n    _uniform_sampler2DArray(one: any, texture: BaseTexture): number {\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGL2RenderingContext = this._gl as WebGL2RenderingContext;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_2D_ARRAY, value);\r\n        return 0;\r\n    }\r\n\r\n    _uniform_sampler3D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGL2RenderingContext = this._gl as WebGL2RenderingContext;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_3D, value);\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_samplerCube(one: any, texture: BaseTexture): number {//TODO:TEXTURTECUBE ARRAY\r\n        var value: any = texture ? texture._getSource() : TextureCube.errorTexture._getSource();\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_CUBE_MAP, value);\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param one \r\n     * @param value \r\n     * @returns \r\n     */\r\n    _uniform_UniformBuffer(one: any, value: UniformBufferObject) {\r\n        value._bindUniformBufferBase();\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _bindTexture(textureID: number, target: number, texture: WebGLTexture): void {\r\n        const gl = this._gl;\r\n        if (this._engine._activedTextureID !== textureID) {\r\n            gl.activeTexture(textureID);\r\n            this._engine._activedTextureID = textureID;\r\n        }\r\n        const texID = this._engine._activedTextureID - this._gl.TEXTURE0;\r\n        if (this._engine._activeTextures[texID] !== texture) {\r\n            gl.bindTexture(target, texture);\r\n            this._engine._activeTextures[texID] = texture;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        gl.deleteShader(this._vshader);\r\n        gl.deleteShader(this._pshader);\r\n        gl.deleteProgram(this._program);\r\n        this._vshader = null;\r\n        this._pshader = null;\r\n        this._program = null;\r\n        this._attributeMap = null;\r\n        this._uniformMap = null;\r\n        this._uniformObjectMap = null;\r\n        this._gl = null;\r\n        this._engine = null;\r\n    }\r\n\r\n}","import { IndexBuffer } from \"../../IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { VertexBuffer } from \"../../VertexBuffer\";\r\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n\r\nexport class GLVertexState extends GLObject implements IRenderVertexState {\r\n    private _angleInstancedArrays: any;\r\n    private _vaoExt: any | null;\r\n    private _vao: WebGLVertexArrayObject | WebGLVertexArrayObjectOES;\r\n\r\n    _vertexDeclaration: VertexDeclaration[] = [];\r\n    _bindedIndexBuffer: IndexBuffer;\r\n    _vertexBuffers: VertexBuffer[];\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        if (!engine.isWebGL2)\r\n            this._vaoExt = engine._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object);\r\n        this._vao = this.createVertexArray();\r\n        this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private createVertexArray(): any {\r\n        if (this._engine.isWebGL2)\r\n            return (<WebGL2RenderingContext>this._gl).createVertexArray();\r\n        else\r\n            return this._vaoExt.createVertexArrayOES();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private deleteVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).deleteVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.deleteVertexArrayOES(this._vao);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    bindVertexArray(): void {\r\n        if (this._engine._GLBindVertexArray == this)\r\n            return;\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.bindVertexArrayOES(this._vao);\r\n        this._engine._GLBindVertexArray = this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    unbindVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(null);\r\n        else\r\n            this._vaoExt.bindVertexArrayOES(null);\r\n        this._engine._GLBindVertexArray = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    isVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).isVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.isVertexArrayOES(this._vao);\r\n    }\r\n\r\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\r\n        //Clear front VAO\r\n        this.clearVAO();\r\n        this._vertexBuffers = vertexBuffer;\r\n        if (this._engine._GLBindVertexArray == this) {\r\n            this._vertexDeclaration.length = vertexBuffer.length;\r\n            var i = 0;\r\n            vertexBuffer.forEach(element => {\r\n                var verDec: VertexDeclaration = element.vertexDeclaration;\r\n                this._vertexDeclaration[i++] = element.vertexDeclaration;\r\n                var valueData: any = verDec._shaderValues;\r\n                element.bind();\r\n                for (var k in valueData) {\r\n                    var loc: number = parseInt(k);\r\n                    var attribute: any[] = valueData[k];\r\n                    this._gl.enableVertexAttribArray(loc);\r\n                    this._gl.vertexAttribPointer(loc, attribute[0], attribute[1], !!attribute[2], attribute[3], attribute[4]);\r\n                    if (element.instanceBuffer)\r\n                        this.vertexAttribDivisor(loc, 1);\r\n                }\r\n            });\r\n        } else {\r\n            throw \"BufferState: must call bind() function first.\";\r\n        }\r\n\r\n    }\r\n\r\n    //绑定之前需要先处理了前面的\r\n    clearVAO(){\r\n        for(let i = 0,n=this._vertexDeclaration.length;i<n;i++){\r\n            var verDec: VertexDeclaration = this._vertexDeclaration[i];\r\n            var valueData: any = verDec._shaderValues;\r\n            for (var k in valueData) {\r\n                var loc: number = parseInt(k);\r\n                this._gl.disableVertexAttribArray(loc);\r\n            }\r\n        }\r\n    }\r\n\r\n    applyIndexBuffer(indexBuffer: IndexBuffer | null): void {\r\n        //需要强制更新IndexBuffer\r\n\r\n        if (indexBuffer == null) {\r\n            return;\r\n        }\r\n        if (this._engine._GLBindVertexArray == this) {\r\n            if (this._bindedIndexBuffer !== indexBuffer) {\r\n                indexBuffer.bind();//TODO:可和vao合并bind\r\n                this._bindedIndexBuffer = indexBuffer;\r\n            }\r\n        } else {\r\n            throw \"BufferState: must call bind() function first.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n         * @internal\r\n         */\r\n    vertexAttribDivisor(index: number, divisor: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).vertexAttribDivisor(index, divisor);\r\n        else\r\n            this._angleInstancedArrays.vertexAttribDivisorANGLE(index, divisor);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        this.deleteVertexArray();\r\n        this._gl = null;\r\n        this._engine = null;\r\n    }\r\n} ","import { LayaEnv } from \"../../../../LayaEnv\";\r\nimport { CommandEncoder } from \"../../../layagl/CommandEncoder\";\r\nimport { Color } from \"../../../maths/Color\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\r\nimport { IRenderEngineFactory } from \"../../RenderInterface/IRenderEngineFactory\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { ShaderData, ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { GL2TextureContext } from \"./GL2TextureContext\";\r\nimport { GLBuffer } from \"./GLBuffer\";\r\nimport { GlCapable } from \"./GlCapable\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLMode } from \"./GLEnum/WebGLMode\";\r\nimport { GLParams } from \"./GLParams\";\r\nimport { GLRender2DContext } from \"./GLRender2DContext\";\r\nimport { GLRenderDrawContext } from \"./GLRenderDrawContext\";\r\nimport { GLRenderState } from \"./GLRenderState\";\r\nimport { GLShaderInstance } from \"./GLShaderInstance\";\r\nimport { GLTextureContext } from \"./GLTextureContext\";\r\nimport { GLVertexState } from \"./GLVertexState\";\r\nimport { WebGlConfig } from \"./WebGLConfig\";\r\n\r\n/**\r\n * 封装Webgl\r\n */\r\nexport class WebGLEngine implements IRenderEngine {\r\n\r\n    _context: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    private _config: WebGlConfig;\r\n\r\n    private _isWebGL2: boolean;\r\n\r\n    private _webglMode: WebGLMode;\r\n\r\n    /**@internal */\r\n    private _propertyNameMap: any = {};\r\n    /**@internal */\r\n    private _propertyNameCounter: number = 0;\r\n    /**@internal */\r\n    _renderOBJCreateContext: IRenderEngineFactory;\r\n\r\n    /**@internal */\r\n    _IDCounter: number = 0;\r\n\r\n    /**@internal ShaderDebugMode*/\r\n    _isShaderDebugMode: boolean = true;\r\n\r\n    /**@internal gl.TextureID*/\r\n    _glTextureIDParams: Array<number>;\r\n\r\n    /**@internal bind active Texture*/\r\n    _activedTextureID: number;\r\n\r\n    /**@internal bindTexture */\r\n    //RenderTexture TODO\r\n    _activeTextures: WebGLTexture[];\r\n\r\n    /**\r\n    * @internal\r\n    * bind GLVertexArray\r\n    */\r\n    _GLBindVertexArray: GLVertexState;\r\n\r\n    /**\r\n    * @internal\r\n    * 支持功能\r\n    */\r\n    _supportCapatable: GlCapable;\r\n\r\n    /**\r\n     * @internal\r\n     * bind Program\r\n     */\r\n    _glUseProgram: GLShaderInstance;\r\n\r\n    //bind glBuffer by glBuffer target\r\n    //key BufferTargetType\r\n    private _GLBufferBindMap: { [key: number]: GLBuffer | null };\r\n\r\n    private _curUBOPointer: number = 0;\r\n    //记录绑定UBO的glPointer\r\n    private _GLUBOPointerMap: Map<string, number> = new Map();\r\n    //记录绑定Pointer的UBO\r\n    private _GLBindPointerUBOMap: Map<number, GLBuffer> = new Map();\r\n    //bind viewport\r\n    private _lastViewport: Vector4;\r\n    private _lastScissor: Vector4;\r\n\r\n    //bind clearColor\r\n    private _lastClearColor: Color = new Color;\r\n    private _lastClearDepth: number = 1;\r\n\r\n    //GL参数\r\n    private _GLParams: GLParams;\r\n\r\n    //GL纹理生成\r\n    private _GLTextureContext: GLTextureContext | GL2TextureContext;\r\n    //Gl Draw\r\n    private _GLRenderDrawContext: GLRenderDrawContext;\r\n\r\n    private _GL2DRenderContext: GLRender2DContext;\r\n\r\n    //GLRenderState\r\n    _GLRenderState: GLRenderState;\r\n\r\n    // //TODO:管理Buffer\r\n    // private _bufferResourcePool: any;\r\n    // //TODO:管理Texture\r\n    // private _textureResourcePool: any;\r\n    // //TODO:管理FrameBuffer\r\n    // private _RenderBufferResource: any;\r\n\r\n    //GPU统计数据\r\n    private _GLStatisticsInfo: Map<RenderStatisticsInfo, number> = new Map();\r\n\r\n    constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\r\n        this._config = config;\r\n        this._isWebGL2 = false;\r\n        //init data\r\n        this._lastViewport = new Vector4(0, 0, 0, 0);\r\n        this._lastClearColor = new Color(0, 0, 0, 0);\r\n        this._lastScissor = new Vector4(0, 0, 0, 0);\r\n        this._webglMode = webglMode;\r\n        this._initStatisticsInfo();\r\n    }\r\n\r\n    /**\r\n     * GL Context\r\n     * @member {WebGLRenderingContext}\r\n     */\r\n    get gl() {\r\n        return this._context;\r\n    }\r\n\r\n    get isWebGL2() {\r\n        return this._isWebGL2;\r\n    }\r\n\r\n    get webglConfig() {\r\n        return this._config;\r\n    }\r\n\r\n    private _initStatisticsInfo() {\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.DrawCall, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.InstanceDrawCall, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.Triangle, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.UniformUpload, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.TextureMemeory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.GPUMemory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.RenderTextureMemory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.BufferMemory, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param info \r\n     * @param value \r\n     */\r\n    _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\r\n        this._GLStatisticsInfo.set(info, this._GLStatisticsInfo.get(info) + value);\r\n    }\r\n\r\n    /**\r\n     * 清除\r\n     * @internal\r\n     * @param info \r\n     */\r\n    clearStatisticsInfo(info: RenderStatisticsInfo) {\r\n        this._GLStatisticsInfo.set(info, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param info \r\n     * @returns \r\n     */\r\n    getStatisticsInfo(info: RenderStatisticsInfo): number {\r\n        return this._GLStatisticsInfo.get(info);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param glPointer \r\n     * @returns \r\n     */\r\n    _getBindUBOBuffer(glPointer: number): GLBuffer {\r\n        return this._GLBindPointerUBOMap.get(glPointer);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param glPointer \r\n     * @param buffer \r\n     */\r\n    _setBindUBOBuffer(glPointer: number, buffer: GLBuffer): void {\r\n        this._GLBindPointerUBOMap.set(glPointer, buffer);\r\n    }\r\n\r\n    /**\r\n     * create GL\r\n     * @param canvas \r\n     */\r\n    initRenderEngine(canvas: any) {\r\n        let names;\r\n        let gl;\r\n        switch (this._webglMode) {\r\n            case WebGLMode.Auto:\r\n                names = [\"webgl2\", \"experimental-webgl2\", \"webgl\", \"experimental-webgl\"];\r\n                break;\r\n            case WebGLMode.WebGL1:\r\n                names = [\"webgl\", \"experimental-webgl\"];\r\n                break;\r\n            case WebGLMode.WebGL2:\r\n                names = [\"webgl2\", \"experimental-webgl2\"];\r\n                break;\r\n        }\r\n        for (var i: number = 0; i < names.length; i++) {\r\n            try {\r\n                gl = canvas.getContext(names[i], this._config);\r\n                // gl.drawingBufferColorSpace = \"display-p3\";\r\n            } catch (e) {\r\n            }\r\n            if (gl) {\r\n                if (names[i] === 'webgl2' || names[i] === 'experimental-webgl2') {\r\n                    this._isWebGL2 = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this._context = gl;\r\n\r\n        //init Other\r\n        this._initBindBufferMap();\r\n        this._supportCapatable = new GlCapable(this);\r\n        this._GLParams = new GLParams(this);\r\n        this._GLRenderState = new GLRenderState(this);\r\n        this._glTextureIDParams = [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3, gl.TEXTURE4, gl.TEXTURE5, gl.TEXTURE6, gl.TEXTURE7, gl.TEXTURE8, gl.TEXTURE9, gl.TEXTURE10, gl.TEXTURE11, gl.TEXTURE12, gl.TEXTURE13, gl.TEXTURE14, gl.TEXTURE15, gl.TEXTURE16, gl.TEXTURE17, gl.TEXTURE18, gl.TEXTURE19, gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23, gl.TEXTURE24, gl.TEXTURE25, gl.TEXTURE26, gl.TEXTURE27, gl.TEXTURE28, gl.TEXTURE29, gl.TEXTURE30, gl.TEXTURE31];\r\n        this._activedTextureID = gl.TEXTURE0;//默认激活纹理区为0;\r\n        this._activeTextures = [];\r\n        this._GLTextureContext = this.isWebGL2 ? new GL2TextureContext(this) : new GLTextureContext(this);\r\n        this._GLRenderDrawContext = new GLRenderDrawContext(this);\r\n        this._GL2DRenderContext = new GLRender2DContext(this);\r\n    }\r\n\r\n    private _initBindBufferMap() {\r\n        this._GLBufferBindMap = {};\r\n        this._GLBufferBindMap[BufferTargetType.ARRAY_BUFFER] = null;\r\n        this._GLBufferBindMap[BufferTargetType.ELEMENT_ARRAY_BUFFER] = null;\r\n        this._GLBufferBindMap[BufferTargetType.UNIFORM_BUFFER] = null;\r\n    }\r\n\r\n\r\n    _getbindBuffer(target: BufferTargetType) {\r\n        return this._GLBufferBindMap[target];\r\n    }\r\n\r\n    _setbindBuffer(target: BufferTargetType, buffer: GLBuffer | null) {\r\n        this._GLBufferBindMap[target] = buffer;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param target \r\n     * @param texture \r\n     */\r\n    _bindTexture(target: number, texture: WebGLTexture) {\r\n        const texID = this._activedTextureID - this._context.TEXTURE0;\r\n        if (this._activeTextures[texID] !== texture) {\r\n            this._context.bindTexture(target, texture);\r\n            this._activeTextures[texID] = texture;\r\n        }\r\n    }\r\n\r\n    bindTexture(texture: BaseTexture) {\r\n        this._bindTexture(texture._texture.target, texture._getSource());\r\n    }\r\n\r\n    applyRenderStateCMD(cmd: RenderStateCommand): void {\r\n        this._GLRenderState.applyRenderStateCommand(cmd);\r\n    }\r\n\r\n    //get capable of webgl\r\n    getCapable(capatableType: RenderCapable): boolean {\r\n        return this._supportCapatable.getCapable(capatableType);\r\n    }\r\n\r\n    viewport(x: number, y: number, width: number, height: number): void {\r\n        const gl = this._context;\r\n        const lv = this._lastViewport;\r\n        if (LayaEnv.isConch) {\r\n            gl.viewport(x, y, width, height);\r\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\r\n            gl.viewport(x, y, width, height);\r\n            lv.setValue(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    scissor(x: number, y: number, width: number, height: number) {\r\n        const gl = this._context;\r\n        const lv = this._lastScissor;\r\n        if (LayaEnv.isConch) {\r\n            gl.scissor(x, y, width, height);\r\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\r\n            gl.scissor(x, y, width, height);\r\n            lv.setValue(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    scissorTest(value: boolean) {\r\n        if (value)\r\n            this._context.enable(this._context.SCISSOR_TEST);\r\n        else\r\n            this._context.disable(this._context.SCISSOR_TEST);\r\n    }\r\n\r\n\r\n\r\n    clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\r\n        var flag: number;\r\n        //this.gl.enable(this._gl.SCISSOR_TEST)\r\n        if (clearFlag & RenderClearFlag.Color) {\r\n            if (clearcolor && !this._lastClearColor.equal(clearcolor)) {\r\n                this._context.clearColor(clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a);\r\n                clearcolor.cloneTo(this._lastClearColor);\r\n            }\r\n            flag |= this.gl.COLOR_BUFFER_BIT;\r\n        }\r\n        if (clearFlag & RenderClearFlag.Depth) {\r\n            if (this._lastClearDepth != clearDepth) {\r\n                this._context.clearDepth(clearDepth);\r\n                this._lastClearDepth = clearDepth;\r\n            }\r\n            this._GLRenderState.setDepthMask(true);\r\n            flag |= this._context.DEPTH_BUFFER_BIT;\r\n        }\r\n        if (clearFlag & RenderClearFlag.Stencil) {\r\n            this._context.clearStencil(0);\r\n            this._GLRenderState.setStencilMask(true);\r\n            flag |= this._context.STENCIL_BUFFER_BIT;\r\n        }\r\n        if (flag)\r\n            this._context.clear(flag);\r\n        //this._gl.disable(this._gl.SCISSOR_TEST);\r\n    }\r\n\r\n    copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\r\n        this._bindTexture(texture._texture.target, texture._getSource());\r\n        this._context.copyTexSubImage2D(texture._texture.target, level, xoffset, yoffset, x, y, width, height);\r\n    }\r\n\r\n    colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\r\n        this._context.colorMask(r, g, b, a);\r\n    }\r\n\r\n    getParams(params: RenderParams): number {\r\n        return this._GLParams.getParams(params);\r\n    }\r\n\r\n\r\n    createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\r\n        //TODO SourceManager\r\n        return new GLBuffer(this, targetType, bufferUsageType);\r\n    }\r\n\r\n    createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\r\n        //TODO SourceManager\r\n        return new GLShaderInstance(this, vs, ps, attributeMap);\r\n    }\r\n\r\n    createVertexState(): IRenderVertexState {\r\n        return new GLVertexState(this);\r\n    }\r\n\r\n    getUBOPointer(name: string): number {\r\n        if (!this._GLUBOPointerMap.has(name))\r\n            this._GLUBOPointerMap.set(name, this._curUBOPointer++);\r\n        return this._GLUBOPointerMap.get(name);\r\n    }\r\n\r\n\r\n\r\n    getTextureContext(): ITextureContext {\r\n        return this._GLTextureContext;\r\n    }\r\n\r\n    //TODO 先写完测试，这种封装过于死板\r\n    getDrawContext(): IRenderDrawContext {\r\n        return this._GLRenderDrawContext;\r\n    }\r\n\r\n    get2DRenderContext(): IRender2DContext {\r\n        return this._GL2DRenderContext;\r\n    }\r\n\r\n    getCreateRenderOBJContext(): IRenderEngineFactory {\r\n        return this._renderOBJCreateContext;\r\n    }\r\n\r\n    // //TODO:\r\n    // propertyNameToID(name: string): number {\r\n    //   return this.propertyNameToID(name);\r\n    // }\r\n\r\n    /**\r\n   * 通过Shader属性名称获得唯一ID。\r\n   * @param name Shader属性名称。\r\n   * @return 唯一ID。\r\n   */\r\n    propertyNameToID(name: string): number {\r\n        if (this._propertyNameMap[name] != null) {\r\n            return this._propertyNameMap[name];\r\n        } else {\r\n            var id: number = this._propertyNameCounter++;\r\n            this._propertyNameMap[name] = id;\r\n            this._propertyNameMap[id] = name;\r\n            return id;\r\n        }\r\n    }\r\n\r\n    propertyIDToName(id: number): string {\r\n        return this._propertyNameMap[id];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    uploadUniforms(shader: GLShaderInstance, commandEncoder: CommandEncoder, shaderData: ShaderData, uploadUnTexture: boolean): number {\r\n        shaderData.applyUBO && shaderData.applyUBOData();\r\n        var data: any = shaderData._data;\r\n        var shaderUniform: any[] = commandEncoder.getArrayData();\r\n        var shaderCall: number = 0;\r\n        for (var i: number = 0, n: number = shaderUniform.length; i < n; i++) {\r\n            var one: any/*ShaderVariable*/ = shaderUniform[i];\r\n            if (uploadUnTexture || one.textureID !== -1) {//如uniform为纹理切换Shader时需要重新上传\r\n                var value: any = data[one.dataOffset];\r\n                if (value != null)\r\n                    shaderCall += one.fun.call(one.caller, one, value);\r\n            }\r\n        }\r\n        return shaderCall;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    uploadCustomUniforms(shader: GLShaderInstance, custom: any[], index: number, data: any): number {\r\n        shader.bind();\r\n        var shaderCall: number = 0;\r\n        var one: ShaderVariable = custom[index];\r\n        if (one && data != null)\r\n            shaderCall += one.fun.call(one.caller, one, data);\r\n        return shaderCall;\r\n    }\r\n\r\n    createRenderStateComand(): RenderStateCommand {\r\n        return new RenderStateCommand();\r\n    }\r\n\r\n    unbindVertexState(): void {\r\n        if (this.isWebGL2)\r\n            (<WebGL2RenderingContext>this._context).bindVertexArray(null);\r\n        else\r\n            this._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object).bindVertexArrayOES(null);\r\n        this._GLBindVertexArray = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","\r\n/**\r\n * 阿拉伯文的转码。把unicode的阿拉伯文字母编码转成他们的老的能描述不同写法的编码。\r\n *  这个是从GitHub上 Javascript-Arabic-Reshaper 项目转来的\r\n * https://github.com/louy/Javascript-Arabic-Reshaper/blob/master/src/index.js\r\n */\r\n/**\r\n\t * Javascript Arabic Reshaper by Louy Alakkad\r\n\t * https://github.com/louy/Javascript-Arabic-Reshaper\r\n\t * Based on (http://git.io/vsnAd)\r\n\t */\r\nexport class ArabicReshaper {\r\n    private static charsMap: any[] = [[0x0621, 0xFE80, null, null, null], /* HAMZA */\r\n    [0x0622, 0xFE81, null, null, 0xFE82], /* ALEF_MADDA */\r\n    [0x0623, 0xFE83, null, null, 0xFE84], /* ALEF_HAMZA_ABOVE */\r\n    [0x0624, 0xFE85, null, null, 0xFE86], /* WAW_HAMZA */\r\n    [0x0625, 0xFE87, null, null, 0xFE88], /* ALEF_HAMZA_BELOW */\r\n    [0x0626, 0xFE89, 0xFE8B, 0xFE8C, 0xFE8A], /* YEH_HAMZA */\r\n    [0x0627, 0xFE8D, null, null, 0xFE8E], /* ALEF */\r\n    [0x0628, 0xFE8F, 0xFE91, 0xFE92, 0xFE90], /* BEH */\r\n    [0x0629, 0xFE93, null, null, 0xFE94], /* TEH_MARBUTA */\r\n    [0x062A, 0xFE95, 0xFE97, 0xFE98, 0xFE96], /* TEH */\r\n    [0x062B, 0xFE99, 0xFE9B, 0xFE9C, 0xFE9A], /* THEH */\r\n    [0x062C, 0xFE9D, 0xFE9F, 0xFEA0, 0xFE9E], /* JEEM */\r\n    [0x062D, 0xFEA1, 0xFEA3, 0xFEA4, 0xFEA2], /* HAH */\r\n    [0x062E, 0xFEA5, 0xFEA7, 0xFEA8, 0xFEA6], /* KHAH */\r\n    [0x062F, 0xFEA9, null, null, 0xFEAA], /* DAL */\r\n    [0x0630, 0xFEAB, null, null, 0xFEAC], /* THAL */\r\n    [0x0631, 0xFEAD, null, null, 0xFEAE], /* REH */\r\n    [0x0632, 0xFEAF, null, null, 0xFEB0], /* ZAIN */\r\n    [0x0633, 0xFEB1, 0xFEB3, 0xFEB4, 0xFEB2], /* SEEN */\r\n    [0x0634, 0xFEB5, 0xFEB7, 0xFEB8, 0xFEB6], /* SHEEN */\r\n    [0x0635, 0xFEB9, 0xFEBB, 0xFEBC, 0xFEBA], /* SAD */\r\n    [0x0636, 0xFEBD, 0xFEBF, 0xFEC0, 0xFEBE], /* DAD */\r\n    [0x0637, 0xFEC1, 0xFEC3, 0xFEC4, 0xFEC2], /* TAH */\r\n    [0x0638, 0xFEC5, 0xFEC7, 0xFEC8, 0xFEC6], /* ZAH */\r\n    [0x0639, 0xFEC9, 0xFECB, 0xFECC, 0xFECA], /* AIN */\r\n    [0x063A, 0xFECD, 0xFECF, 0xFED0, 0xFECE], /* GHAIN */\r\n    [0x0640, 0x0640, 0x0640, 0x0640, 0x0640], /* TATWEEL */\r\n    [0x0641, 0xFED1, 0xFED3, 0xFED4, 0xFED2], /* FEH */\r\n    [0x0642, 0xFED5, 0xFED7, 0xFED8, 0xFED6], /* QAF */\r\n    [0x0643, 0xFED9, 0xFEDB, 0xFEDC, 0xFEDA], /* KAF */\r\n    [0x0644, 0xFEDD, 0xFEDF, 0xFEE0, 0xFEDE], /* LAM */\r\n    [0x0645, 0xFEE1, 0xFEE3, 0xFEE4, 0xFEE2], /* MEEM */\r\n    [0x0646, 0xFEE5, 0xFEE7, 0xFEE8, 0xFEE6], /* NOON */\r\n    [0x0647, 0xFEE9, 0xFEEB, 0xFEEC, 0xFEEA], /* HEH */\r\n    [0x0648, 0xFEED, null, null, 0xFEEE], /* WAW */\r\n    [0x0649, 0xFEEF, null, null, 0xFEF0], /* ALEF_MAKSURA */\r\n    [0x064A, 0xFEF1, 0xFEF3, 0xFEF4, 0xFEF2], /* YEH */\r\n    [0x067E, 0xFB56, 0xFB58, 0xFB59, 0xFB57], /* PEH */\r\n    [0x06CC, 0xFBFC, 0xFBFE, 0xFBFF, 0xFBFD], /* Farsi Yeh */\r\n    [0x0686, 0xFB7A, 0xFB7C, 0xFB7D, 0xFB7B], /* Tcheh */\r\n    [0x06A9, 0xFB8E, 0xFB90, 0xFB91, 0xFB8F], /* Keheh */\r\n    [0x06AF, 0xFB92, 0xFB94, 0xFB95, 0xFB93], /* Gaf */\r\n    [0x0698, 0xFB8A, null, null, 0xFB8B]];\r\n    private static combCharsMap: any[] = [[[0x0644, 0x0622], 0xFEF5, null, null, 0xFEF6], /* LAM_ALEF_MADDA */\r\n    [[0x0644, 0x0623], 0xFEF7, null, null, 0xFEF8], /* LAM_ALEF_HAMZA_ABOVE */\r\n    [[0x0644, 0x0625], 0xFEF9, null, null, 0xFEFA], /* LAM_ALEF_HAMZA_BELOW */\r\n    [[0x0644, 0x0627], 0xFEFB, null, null, 0xFEFC]];\r\n    private static transChars: any[] = [0x0610, /* ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM */\r\n        0x0612, /* ARABIC SIGN ALAYHE ASSALLAM */\r\n        0x0613, /* ARABIC SIGN RADI ALLAHOU ANHU */\r\n        0x0614, /* ARABIC SIGN TAKHALLUS */\r\n        0x0615, /* ARABIC SMALL HIGH TAH */\r\n        0x064B, /* ARABIC FATHATAN */\r\n        0x064C, /* ARABIC DAMMATAN */\r\n        0x064D, /* ARABIC KASRATAN */\r\n        0x064E, /* ARABIC FATHA */\r\n        0x064F, /* ARABIC DAMMA */\r\n        0x0650, /* ARABIC KASRA */\r\n        0x0651, /* ARABIC SHADDA */\r\n        0x0652, /* ARABIC SUKUN */\r\n        0x0653, /* ARABIC MADDAH ABOVE */\r\n        0x0654, /* ARABIC HAMZA ABOVE */\r\n        0x0655, /* ARABIC HAMZA BELOW */\r\n        0x0656, /* ARABIC SUBSCRIPT ALEF */\r\n        0x0657, /* ARABIC INVERTED DAMMA */\r\n        0x0658, /* ARABIC MARK NOON GHUNNA */\r\n        0x0670, /* ARABIC LETTER SUPERSCRIPT ALEF */\r\n        0x06D6, /* ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA */\r\n        0x06D7, /* ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA */\r\n        0x06D8, /* ARABIC SMALL HIGH MEEM INITIAL FORM */\r\n        0x06D9, /* ARABIC SMALL HIGH LAM ALEF */\r\n        0x06DA, /* ARABIC SMALL HIGH JEEM */\r\n        0x06DB, /* ARABIC SMALL HIGH THREE DOTS */\r\n        0x06DC, /* ARABIC SMALL HIGH SEEN */\r\n        0x06DF, /* ARABIC SMALL HIGH ROUNDED ZERO */\r\n        0x06E0, /* ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO */\r\n        0x06E1, /* ARABIC SMALL HIGH DOTLESS HEAD OF KHAH */\r\n        0x06E2, /* ARABIC SMALL HIGH MEEM ISOLATED FORM */\r\n        0x06E3, /* ARABIC SMALL LOW SEEN */\r\n        0x06E4, /* ARABIC SMALL HIGH MADDA */\r\n        0x06E7, /* ARABIC SMALL HIGH YEH */\r\n        0x06E8, /* ARABIC SMALL HIGH NOON */\r\n        0x06EA, /* ARABIC EMPTY CENTRE LOW STOP */\r\n        0x06EB, /* ARABIC EMPTY CENTRE HIGH STOP */\r\n        0x06EC, /* ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE */\r\n        0x06ED];\r\n\r\n\r\n    //TODO:coverage\r\n    characterMapContains(c: number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\r\n            if (ArabicReshaper.charsMap[i][0] === c) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getCharRep(c: number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\r\n            if (ArabicReshaper.charsMap[i][0] === c) {\r\n                return ArabicReshaper.charsMap[i];\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getCombCharRep(c1:number, c2:number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.combCharsMap.length; ++i) {\r\n            if (ArabicReshaper.combCharsMap[i][0][0] === c1 && ArabicReshaper.combCharsMap[i][0][1] === c2) {\r\n                return ArabicReshaper.combCharsMap[i];\r\n            }\r\n        }\r\n\r\n        // We should never reach here...\r\n        // istanbul ignore next\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    isTransparent(c:number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.transChars.length; ++i) {\r\n            if (ArabicReshaper.transChars[i] === c) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getOriginalCharsFromCode(code:number): string {\r\n        var j: number;\r\n\r\n        for (j = 0; j < ArabicReshaper.charsMap.length; ++j) {\r\n            if (ArabicReshaper.charsMap[j].indexOf(code) > -1) {\r\n                return String.fromCharCode(ArabicReshaper.charsMap[j][0]);\r\n            }\r\n        }\r\n\r\n        for (j = 0; j < ArabicReshaper.combCharsMap.length; ++j) {\r\n            if (ArabicReshaper.combCharsMap[j].indexOf(code) > -1) {\r\n                return String.fromCharCode(ArabicReshaper.combCharsMap[j][0][0]) +\r\n                    String.fromCharCode(ArabicReshaper.combCharsMap[j][0][1]);\r\n            }\r\n        }\r\n\r\n        return String.fromCharCode(code);\r\n    }\r\n\r\n    /**\r\n     * 转换函数。从normal转到presentB\r\n     * 这个返回的字符串可以直接按照从左到右的顺序渲染。\r\n     * 例如\r\n     * graphics.fillText(convertArabic('سلام'),....)\r\n     * \r\n    */\r\n    //TODO:coverage\r\n    convertArabic(normal:any): string {\r\n        var crep: any,\r\n            combcrep: any,\r\n            shaped: string = '';\r\n\r\n        for (var i: number = 0; i < normal.length; ++i) {\r\n            var current: number = normal.charCodeAt(i);\r\n            if (this.characterMapContains(current)) {\r\n                var prev: any = null,\r\n                    next: any = null,\r\n                    prevID: number = i - 1,\r\n                    nextID: number = i + 1;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  Transparent characters have no effect in the shaping process.\r\n\t\t\t\t  So, ignore all the transparent characters that are BEFORE the\r\n\t\t\t\t  current character.\r\n\t\t\t\t  */\r\n                for (; prevID >= 0; --prevID) {\r\n                    if (!this.isTransparent(normal.charCodeAt(prevID))) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                prev = (prevID >= 0) ? normal.charCodeAt(prevID) : null;\r\n                crep = prev ? this.getCharRep(prev) : false;\r\n                if (!crep || crep[2] == null && crep[3] == null) {\r\n                    prev = null; // prev character doesn’t connect with its successor\r\n                }\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  Transparent characters have no effect in the shaping process.\r\n\t\t\t\t  So, ignore all the transparent characters that are AFTER the\r\n\t\t\t\t  current character.\r\n\t\t\t\t  */\r\n                for (; nextID < normal.length; ++nextID) {\r\n                    if (!this.isTransparent(normal.charCodeAt(nextID))) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                next = (nextID < normal.length) ? normal.charCodeAt(nextID) : null;\r\n                crep = next ? this.getCharRep(next) : false;\r\n                if (!crep || crep[3] == null && crep[4] == null) {\r\n                    next = null; // next character doesn’t connect with its predecessor\r\n                }\r\n\r\n                /* Combinations */\r\n                if (current === 0x0644 && next != null &&\r\n                    (next === 0x0622 || next === 0x0623 || next === 0x0625 || next === 0x0627)) {\r\n                    combcrep = this.getCombCharRep(current, next);\r\n                    if (prev != null) {\r\n                        shaped += String.fromCharCode(combcrep[4]);\r\n                    } else {\r\n                        shaped += String.fromCharCode(combcrep[1]);\r\n                    }\r\n\r\n                    ++i;\r\n                    continue;\r\n                }\r\n\r\n                crep = this.getCharRep(current);\r\n\r\n                /* Medial */\r\n                if (prev != null && next != null && crep[3] != null) {\r\n                    shaped += String.fromCharCode(crep[3]);\r\n                    continue;\r\n                } else /* Final */\r\n                    if (prev != null && crep[4] != null) {\r\n                        shaped += String.fromCharCode(crep[4]);\r\n                        continue;\r\n                    } else /* Initial */\r\n                        if (next != null && crep[2] != null) {\r\n                            shaped += String.fromCharCode(crep[2]);\r\n                            continue;\r\n                        } else /* Isolated */ {\r\n                            shaped += String.fromCharCode(crep[1]);\r\n                        }\r\n            } else {\r\n                shaped += String.fromCharCode(current);\r\n            }\r\n        }\r\n\r\n        return shaped;\r\n    }/*;*/\r\n\r\n    // convert from Arabic Presentation Forms B\r\n    //TODO:coverage\r\n    convertArabicBack(apfb:any): string {\r\n        var toReturn: string = '',\r\n            selectedChar: number;\r\n\r\n        var i: number;\r\n\r\n        for (i = 0; i < apfb.length; ++i) {\r\n            selectedChar = apfb.charCodeAt(i);\r\n\r\n            toReturn += this.getOriginalCharsFromCode(selectedChar);\r\n        }\r\n        return toReturn;\r\n    }\r\n}\r\n\r\n\r\n","export class MatirxArray {\r\n\r\n    /**\r\n     * 4*4矩阵数组相乘。\r\n     * o=a*b;\r\n     * @param\ta 4*4矩阵数组。\r\n     * @param\tb 4*4矩阵数组。\r\n     * @param\to 4*4矩阵数组。\r\n     */\r\n    //TODO:coverage\r\n    static ArrayMul(a: any[], b: any[], o: any[]): void {\r\n        if (!a) {\r\n            MatirxArray.copyArray(b, o);\r\n            return;\r\n        }\r\n\r\n        if (!b) {\r\n            MatirxArray.copyArray(a, o);\r\n            return;\r\n        }\r\n\r\n        var ai0: number, ai1: number, ai2: number, ai3: number;\r\n        for (var i: number = 0; i < 4; i++) {\r\n            ai0 = a[i];\r\n            ai1 = a[i + 4];\r\n            ai2 = a[i + 8];\r\n            ai3 = a[i + 12];\r\n            o[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\r\n            o[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\r\n            o[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\r\n            o[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static copyArray(f: any[], t: any[]): void {\r\n        if (!f) return;\r\n        if (!t) return;\r\n        for (var i: number = 0; i < f.length; i++) {\r\n            t[i] = f[i];\r\n        }\r\n    }\r\n}\r\n\r\n","export class AnimatorState2DScript {\r\n    /**\r\n     * 动画状态开始时执行。\r\n     */\r\n    onStateEnter(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 动画状态更新时执行。\r\n     */\r\n    onStateUpdate(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 动画状态退出时执行。\r\n     */\r\n    onStateExit(): void {\r\n\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Ease } from \"../utils/Ease\";\r\nimport { Handler } from \"../utils/Handler\";\r\n\r\n/**\r\n * @Script {name:ButtonEffect}\r\n * @author ww\r\n */\r\nexport class ButtonEffect {\r\n\r\n    private _tar: Sprite;\r\n    private _curState: number = 0;\r\n    private _curTween: Tween;\r\n    /**\r\n     * effectScale\r\n     * @prop {name:effectScale,type:number, tips:\"缩放值\",default:\"1.5\"}\r\n     */\r\n    effectScale: number = 1.5;\r\n    /**\r\n     * tweenTime\r\n     * @prop {name:tweenTime,type:number, tips:\"缓动时长\",default:\"300\"}\r\n     */\r\n    tweenTime: number = 300;\r\n    /**\r\n     * effectEase\r\n     * @prop {name:effectEase,type:ease, tips:\"效果缓动类型\"}\r\n     */\r\n    effectEase: string;\r\n    /**\r\n     * backEase\r\n     * @prop {name:backEase,type:ease, tips:\"恢复缓动类型\"}\r\n     */\r\n    backEase: string;\r\n\r\n    /**\r\n     * 设置控制对象 \r\n     * @param tar\r\n     */\r\n    set target(tar: Sprite) {\r\n        this._tar = tar;\r\n        tar.on(Event.MOUSE_DOWN, this, this.toChangedState);\r\n        tar.on(Event.MOUSE_UP, this, this.toInitState);\r\n        tar.on(Event.MOUSE_OUT, this, this.toInitState);\r\n    }\r\n\r\n    private toChangedState(): void {\r\n        this._curState = 1;\r\n        if (this._curTween) Tween.clear(this._curTween);\r\n        this._curTween = Tween.to(this._tar, { scaleX: this.effectScale, scaleY: this.effectScale }, this.tweenTime, (Ease as any)[this.effectEase], Handler.create(this, this.tweenComplete));\r\n    }\r\n\r\n    private toInitState(): void {\r\n        if (this._curState == 2) return;\r\n        if (this._curTween) Tween.clear(this._curTween);\r\n        this._curState = 2;\r\n        this._curTween = Tween.to(this._tar, { scaleX: 1, scaleY: 1 }, this.tweenTime, (Ease as any)[this.backEase], Handler.create(this, this.tweenComplete));\r\n    }\r\n    private tweenComplete(): void {\r\n        this._curState = 0;\r\n        this._curTween = null;\r\n    }\r\n}\r\n\r\n\r\n","import { EffectBase } from \"././EffectBase\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\n/**\r\n * 淡入效果\r\n */\r\nexport class FadeIn extends EffectBase {\r\n    /**\r\n     * @override\r\n     */\r\n    protected _doTween(): Tween {\r\n        this.target.alpha = 0;\r\n        return Tween.to(this.target, { alpha: 1 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\r\n    }\r\n}\r\n\r\n","import { EffectBase } from \"././EffectBase\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\n/**\r\n * 淡出效果\r\n */\r\nexport class FadeOut extends EffectBase {\r\n    /**\r\n     * @override\r\n     */\r\n    protected _doTween(): Tween {\r\n        this.target.alpha = 1;\r\n        return Tween.to(this.target, { alpha: 0 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\r\n    }\r\n}\r\n\r\n","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n\r\nexport class NativeGLRender2DContext extends NativeGLObject implements IRender2DContext {\r\n\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n    }\r\n\r\n    activeTexture(textureID: number): void {\r\n\r\n    }\r\n\r\n    bindTexture(target: number, texture: WebGLTexture): void {\r\n    }\r\n\r\n    bindUseProgram(webglProgram: any):boolean {\r\n        return true;\r\n    }\r\n\r\n}","import { NativeRenderStateCommand } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/NativeRenderStateCommand\";\r\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { IRenderEngineFactory } from \"../../../RenderEngine/RenderInterface/IRenderEngineFactory\";\r\nimport { RenderState } from \"../../../RenderEngine/RenderShader/RenderState\";\r\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderInstance } from \"../../../RenderEngine/RenderShader/ShaderInstance\";\r\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { NativeCommandUniformMap } from \"./NativeCommandUniformMap\";\r\nimport { NativeRenderState } from \"./NativeRenderState\";\r\nimport { NativeShaderData } from \"./NativeShaderData\";\r\nimport { NativeUniformBufferObject } from \"./NativeUniformBufferObject\";\r\n\r\n\r\nexport class NativeGLRenderEngineFactory implements IRenderEngineFactory {\r\n\r\n\r\n\r\n    createShaderData(): ShaderData {\r\n        return new NativeShaderData();\r\n    }\r\n\r\n    createShaderInstance(shaderProcessInfo:ShaderProcessInfo, shaderPass: ShaderCompileDefineBase): ShaderInstance {\r\n        //return new NativeShaderInstance(vs, ps, attributeMap, shaderPass) as unknown as ShaderInstance;\r\n        //TODO\r\n        return null;\r\n    }\r\n\r\n    createRenderStateComand(): NativeRenderStateCommand {\r\n        return new NativeRenderStateCommand();\r\n    }\r\n    createRenderState(): RenderState {\r\n        return new NativeRenderState() as unknown as RenderState;\r\n    }\r\n\r\n    createUniformBufferObject(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean): UniformBufferObject {\r\n        return new NativeUniformBufferObject(glPointer, name, bufferUsage, byteLength, isSingle);\r\n    }\r\n\r\n    createGlobalUniformMap(blockName: string): NativeCommandUniformMap{\r\n        return new NativeCommandUniformMap((window as any).conchCommandUniformMap.createGlobalUniformMap(blockName), blockName);\r\n    }\r\n\r\n    createEngine(config:any,canvas:any){\r\n        //TODO:\r\n        return Promise.resolve();\r\n    }\r\n}","import { CommandEncoder } from \"../../../layagl/CommandEncoder\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { NativeGL2TextureContext } from \"./NativeGL2TextureContext\";\r\nimport { WebGLMode } from \"../WebGLEngine/GLEnum/WebGLMode\";\r\nimport { NativeGLRender2DContext } from \"./NativeGLRender2DContext\";\r\nimport { NativeGLTextureContext } from \"./NativeGLTextureContext\";\r\nimport { NativeGLVertexState } from \"./NativeGLVertexState\";\r\nimport { WebGlConfig } from \"../WebGLEngine/WebGLConfig\";\r\nimport { NativeGLRenderDrawContext } from \"./NativeGLRenderDrawContext\";\r\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { Color } from \"../../../maths/Color\";\r\nimport { NativeRenderStateCommand } from \"./NativeRenderStateCommand\";\r\nimport { IRenderEngineFactory } from \"../../RenderInterface/IRenderEngineFactory\";\r\n\r\n\r\n/**\r\n * @private 封装Webgl\r\n */\r\nexport class NativeWebGLEngine implements IRenderEngine {\r\n\r\n  _context: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n  private _config: WebGlConfig;\r\n\r\n  /**@internal ShaderDebugMode*/\r\n  _isShaderDebugMode: boolean = true;\r\n\r\n  private _GLTextureContext: NativeGLTextureContext;\r\n  //Gl Draw\r\n  private _GLRenderDrawContext: NativeGLRenderDrawContext;\r\n\r\n  private _GL2DRenderContext: NativeGLRender2DContext;\r\n\r\n  /**@internal */\r\n  _renderOBJCreateContext:IRenderEngineFactory;\r\n\r\n  _nativeObj: any;\r\n\r\n  /**@internal */\r\n  _IDCounter: number;\r\n\r\n  constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\r\n    this._nativeObj = new (window as any).conchWebGLEngine(webglMode);\r\n  }\r\n  \r\n  createRenderStateComand(): RenderStateCommand {\r\n    return new NativeRenderStateCommand();\r\n  }\r\n  getUBOPointer(name: string): number {\r\n    return this._nativeObj.getUBOPointer(name);\r\n  }\r\n\r\n  _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\r\n    this._nativeObj.addStatisticsInfo(info, value);\r\n  }\r\n  /**\r\n * 清除\r\n * @internal\r\n * @param info \r\n */\r\n  clearStatisticsInfo(info: RenderStatisticsInfo) {\r\n    this._nativeObj.clearStatisticsInfo(info);\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   * @param info \r\n   * @returns \r\n   */\r\n  getStatisticsInfo(info: RenderStatisticsInfo): number {\r\n    return this._nativeObj.getStatisticsInfo(info);\r\n  }\r\n  /**\r\n   * GL Context\r\n   * @member {WebGLRenderingContext}\r\n   */\r\n  get gl() {\r\n    return this._context;\r\n  }\r\n\r\n  get isWebGL2() {\r\n    return this._nativeObj.isWebGL2;\r\n  }\r\n\r\n  get webglConfig() {\r\n    return this._config;\r\n  }\r\n\r\n  /**\r\n   * create GL\r\n   * @param canvas \r\n   */\r\n  initRenderEngine(canvas: any) {\r\n    this._nativeObj.initRenderEngine();\r\n    this._GLRenderDrawContext = new NativeGLRenderDrawContext(this);\r\n\r\n    if (this.isWebGL2) {\r\n      this._GLTextureContext = new NativeGL2TextureContext(this, new (window as any).conchGL2TextureContext(this._nativeObj));\r\n    }\r\n    else {\r\n      this._GLTextureContext = new NativeGLTextureContext(this, new (window as any).conchGLTextureContext(this._nativeObj));\r\n    }\r\n  }\r\n\r\n  bindTexture(texture: BaseTexture) {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  applyRenderStateCMD(cmd: RenderStateCommand): void {\r\n    this._nativeObj.applyRenderStateCommand((cmd as any)._nativeObj);\r\n  }\r\n\r\n  //get capable of webgl\r\n  getCapable(capatableType: RenderCapable): boolean {\r\n    return this._nativeObj.getCapable(capatableType);\r\n  }\r\n\r\n  viewport(x: number, y: number, width: number, height: number): void {\r\n    this._nativeObj.viewport(x, y, width, height);\r\n  }\r\n\r\n  scissor(x: number, y: number, width: number, height: number) {\r\n    this._nativeObj.scissor(x, y, width, height);\r\n  }\r\n\r\n  scissorTest(value: boolean) {\r\n    this._nativeObj.scissorTest(value);\r\n  }\r\n\r\n  clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\r\n    if (clearcolor)\r\n      this._nativeObj.clearRenderTexture(clearFlag, true, clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a, clearDepth);\r\n    else\r\n      this._nativeObj.clearRenderTexture(clearFlag, false, Color.BLACK.r, Color.BLACK.g, Color.BLACK.b, Color.BLACK.a, clearDepth);\r\n  }\r\n\r\n  copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\r\n    this._nativeObj.copySubFrameBuffertoTex(texture._texture, level, xoffset, yoffset, x, y, width, height);\r\n  }\r\n\r\n  colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\r\n    this._nativeObj.colorMask(r, g, b, a);\r\n  }\r\n\r\n  getParams(params: RenderParams): number {\r\n    return this._nativeObj.getParams(params);\r\n  }\r\n\r\n\r\n  createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\r\n    //TODO SourceManager\r\n    return new (window as any).conchGLBuffer(this._nativeObj, targetType, bufferUsageType);\r\n  }\r\n\r\n  createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  createVertexState(): IRenderVertexState {\r\n    return new NativeGLVertexState(this);\r\n  }\r\n\r\n  getTextureContext(): ITextureContext {\r\n    return this._GLTextureContext;\r\n  }\r\n\r\n  //TODO 先写完测试，这种封装过于死板\r\n  getDrawContext(): IRenderDrawContext {\r\n    return this._GLRenderDrawContext;\r\n  }\r\n\r\n  get2DRenderContext(): IRender2DContext {\r\n    return this._GL2DRenderContext;\r\n  }\r\n\r\n  getCreateRenderOBJContext(): IRenderEngineFactory {\r\n    return this._renderOBJCreateContext;\r\n  }\r\n\r\n  propertyNameToID(name: string): number {\r\n    return this._nativeObj.propertyNameToID(name);\r\n  }\r\n\r\n  propertyIDToName(id: number): string {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  uploadUniforms(shader: IRenderShaderInstance, commandEncoder: CommandEncoder, shaderData: any, uploadUnTexture: boolean): number {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  uploadCustomUniforms(shader: IRenderShaderInstance, custom: any[], index: number, data: any): number {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  unbindVertexState(): void{\r\n    this._nativeObj.unbindVertexState && this._nativeObj.unbindVertexState();\r\n  }\r\n}\r\n\r\n\r\n","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\n\r\n\r\n/**\r\n * <code>SpotLight</code> 类用于创建RenderTextureCube。\r\n */\r\nexport class RenderTextureCube extends RenderTexture {\r\n\r\n    /**\r\n     * +x, -x, +y, -y, +z, -z\r\n     */\r\n    faceIndex: number;\r\n\r\n    /**\r\n     * 实例化一个RendertextureCube\r\n     * @param size 像素\r\n     * @param colorFormat 颜色格式\r\n     * @param depthFormat 深度格式\r\n     * @param generateMipmap 是否生成mipmap\r\n     * @param multiSamples \r\n     */\r\n    constructor(size: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number) {\r\n        super(size, size, colorFormat, depthFormat, generateMipmap, multiSamples);\r\n        this.faceIndex = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _createRenderTarget(): void {\r\n        this._dimension = TextureDimension.Cube;\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetCubeInternal(this.width, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\r\n\r\n        this._texture = this._renderTarget._textures[0];\r\n    }\r\n\r\n    _start() {\r\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\r\n        if (RenderTexture._currentActive != this) {\r\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\r\n            RenderTexture._currentActive = this;\r\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget, this.faceIndex);\r\n        }\r\n    }\r\n\r\n}","import { SoundChannel } from \"./SoundChannel\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\n\r\n/**\r\n * <code>Sound</code> 类是用来播放控制声音的类。\r\n * 引擎默认有两套声音方案，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\r\n */\r\nexport class Sound extends EventDispatcher {\r\n\r\n    /**\r\n     * 加载声音。\r\n     * @param url 地址。\r\n     */\r\n    load(url: string): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 播放声音。\r\n     * @param startTime 开始时间,单位秒\r\n     * @param loops 循环次数,0表示一直循环\r\n     * @return 声道 SoundChannel 对象。\r\n     */\r\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     */\r\n    get duration(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 释放声音资源。\r\n     */\r\n    dispose(): void {\r\n\r\n    }\r\n}\r\n\r\n","/**\r\n * @private\r\n * <code>StringKey</code> 类用于存取字符串对应的数字。\r\n */\r\nexport class StringKey {\r\n\r\n    private _strsToID: any = {};\r\n    private _idToStrs: any[] = [];\r\n    private _length: number = 0;\r\n    //TODO:\r\n\r\n    /**\r\n     * 添加一个字符。\r\n     * @param\tstr 字符，将作为key 存储相应生成的数字。\r\n     * @return 此字符对应的数字。\r\n     */\r\n    //TODO:coverage\r\n    add(str: string): number {\r\n        var index: any = this._strsToID[str];\r\n        if (index != null) return index;\r\n\r\n        this._idToStrs[this._length] = str;\r\n        return this._strsToID[str] = this._length++;\r\n    }\r\n\r\n    /**\r\n     * 获取指定字符对应的ID。\r\n     * @param\tstr 字符。\r\n     * @return 此字符对应的ID。\r\n     */\r\n    //TODO:coverage\r\n    getID(str: string): number {\r\n        var index: any = this._strsToID[str];\r\n        return index == null ? -1 : index;\r\n    }\r\n\r\n    /**\r\n     * 根据指定ID获取对应字符。\r\n     * @param  id ID。\r\n     * @return 此id对应的字符。\r\n     */\r\n    //TODO:coverage\r\n    getName(id: number): string {\r\n        var str: any = this._idToStrs[id];\r\n        return str == null ? undefined : str;\r\n    }\r\n}\r\n\r\n","import { UniformBufferParamsType, UnifromBufferData } from \"./UniformBufferData\";\r\nexport class SubUniformBufferData extends UnifromBufferData{\r\n    \r\n    /**@internal */\r\n    _offset:number;\r\n\r\n    /**@interanl */\r\n    _isInPool:boolean = false;\r\n\r\n    /**@interanl */\r\n    _needUpdate:boolean = false;\r\n\r\n    /**@internal */\r\n    _realByte = 0;\r\n    /**\r\n     * create UniformBufferData Instance\r\n     * @param uniformParamsStat Params describe\r\n     */\r\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>,bufferOffset:number) {\r\n        super(uniformParamsStat);\r\n        this._offset = bufferOffset;\r\n        this._realByte = this._bytelength;\r\n        this._bytelength =Math.ceil(this._bytelength/256)*256;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @private\r\n */\r\nexport class System {\r\n    /**\r\n     * 替换指定名称的定义。用来动态更改类的定义。\r\n     * @param\tname 属性名。\r\n     * @param\tclassObj 属性值。\r\n     */\r\n    //TODO:coverage\r\n    static changeDefinition(name: string, classObj: any): void {\r\n        (window as any).Laya[name] = classObj;\r\n        var str: string = name + \"=classObj\";\r\n        window['eval'](str);\r\n    }\r\n}\r\n\r\n","\r\nimport { Config } from \"../../../../Config\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\nimport { CommandUniformMap } from \"../../../RenderEngine/CommandUniformMap\";\r\nimport { WebGLMode } from \"../../../RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode\";\r\nimport { WebGlConfig } from \"../../../RenderEngine/RenderEngine/WebGLEngine/WebGLConfig\";\r\nimport { WebGLEngine } from \"../../../RenderEngine/RenderEngine/WebGLEngine/WebGLEngine\";\r\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { IRenderEngineFactory } from \"../../../RenderEngine/RenderInterface/IRenderEngineFactory\";\r\nimport { RenderState } from \"../../../RenderEngine/RenderShader/RenderState\";\r\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderInstance } from \"../../../RenderEngine/RenderShader/ShaderInstance\";\r\nimport { RenderStateCommand } from \"../../../RenderEngine/RenderStateCommand\";\r\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../../webgl/utils/ShaderCompileDefineBase\";\r\n\r\nexport class WebGLRenderEngineFactory implements IRenderEngineFactory {\r\n\r\n    /**@internal */\r\n    private globalBlockMap: any = {};\r\n\r\n    createShaderData(): ShaderData {\r\n        return new ShaderData();\r\n    }  \r\n\r\n \r\n    createShaderInstance(shaderProcessInfo: ShaderProcessInfo, shaderPass: ShaderCompileDefineBase): ShaderInstance {\r\n        return new ShaderInstance(shaderProcessInfo, shaderPass);\r\n    }\r\n\r\n    \r\n    createRenderStateComand(): RenderStateCommand {\r\n        return new RenderStateCommand();\r\n    }\r\n\r\n    createRenderState(): RenderState {\r\n        return new RenderState();\r\n    }\r\n\r\n    createUniformBufferObject(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean): UniformBufferObject {\r\n        return new UniformBufferObject(glPointer, name, bufferUsage, byteLength, isSingle);\r\n    }\r\n\r\n    createGlobalUniformMap(blockName: string): CommandUniformMap {\r\n        let comMap = this.globalBlockMap[blockName];\r\n        if (!comMap)\r\n            comMap = this.globalBlockMap[blockName] = new CommandUniformMap(blockName);;\r\n        return comMap;\r\n    }\r\n\r\n    createEngine(config: any, canvas: any): Promise<void> {\r\n        let engine: WebGLEngine;\r\n        let glConfig: WebGlConfig = { stencil: Config.isStencil, alpha: Config.isAlpha, antialias: Config.isAntialias, premultipliedAlpha: Config.premultipliedAlpha, preserveDrawingBuffer: Config.preserveDrawingBuffer, depth: Config.isDepth, failIfMajorPerformanceCaveat: Config.isfailIfMajorPerformanceCaveat, powerPreference: Config.powerPreference };\r\n\r\n        //TODO  other engine\r\n        const webglMode: WebGLMode = Config.useWebGL2 ? WebGLMode.Auto : WebGLMode.WebGL1;\r\n        engine = new WebGLEngine(glConfig, webglMode);\r\n        engine.initRenderEngine(canvas._source);\r\n        var gl: WebGLRenderingContext = engine._context;//TODO 优化\r\n        if (Config.printWebglOrder)\r\n            this._replaceWebglcall(gl);\r\n\r\n        if (gl) {\r\n            new LayaGL();\r\n        }\r\n        LayaGL.renderEngine = engine;\r\n        LayaGL.textureContext = engine.getTextureContext();\r\n        LayaGL.renderDrawContext = engine.getDrawContext();\r\n        LayaGL.render2DContext = engine.get2DRenderContext();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**@private test function*/\r\n    private _replaceWebglcall(gl: any) {\r\n        var tempgl: { [key: string]: any } = {};\r\n        for (const key in gl) {\r\n            if (typeof gl[key] == \"function\" && key != \"getError\" && key != \"__SPECTOR_Origin_getError\" && key != \"__proto__\") {\r\n                tempgl[key] = gl[key];\r\n                gl[key] = function () {\r\n                    let arr: IArguments[] = [];\r\n                    for (let i = 0; i < arguments.length; i++) {\r\n                        arr.push(arguments[i]);\r\n                    }\r\n                    let result = tempgl[key].apply(gl, arr);\r\n\r\n                    //console.log(RenderInfo.loopCount + \":gl.\" + key + \":\" + arr);\r\n                    let err = gl.getError();\r\n                    if (err) {\r\n                        //console.log(err);\r\n                        debugger;\r\n                    }\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n \r\n"],"mappings":"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ve,SAASyyC,MAAQzyC,SAASue,iBAAiB,WAC3Cve,SAASg1J,UAAYh1J,SAASue,iBAAiB,cAC/Cve,SAASi1J,UAAYj1J,SAASue,iBAAiB,cAC/Cve,SAASk1J,cAAgBl1J,SAASue,iBAAiB,iBACnDve,SAASm1J,cAAgBn1J,SAASue,iBAAiB,iBACnDve,SAASo1J,gBAAkBp1J,SAASue,iBAAiB,mBACrDve,SAASq1J,gBAAkBr1J,SAASue,iBAAiB,mBACrDve,SAASs1J,eAAiBt1J,SAASue,iBAAiB,mBACpDve,SAASu1J,mBAAqBv1J,SAASue,iBAAiB,sBACxDve,SAASw1J,qBAAuBx1J,SAASue,iBAAiB,wBAC1Dve,SAASy1J,WAAaz1J,SAASue,iBAAiB,eAChDve,SAAS01J,YAAc11J,SAASue,iBAAiB,gBACjDve,SAAS21J,YAAc31J,SAASue,iBAAiB,gBACjDve,SAAS41J,aAAe51J,SAASue,iBAAiB,iBAClDve,SAAS61J,cAAgB71J,SAASue,iBAAiB,kBACnDve,SAAS81J,WAAa91J,SAASue,iBAAiB,c,CAehDkrB,iBACA,OAAOjxE,KAAKutD,a,CAMZgwI,qBACA,OAAOv9L,KAAKutD,cAAc7L,UAAUw6I,SAASI,e,CAG7CiB,mBAAev/L,GACfgC,KAAKutD,cAAc5L,UAAUu6I,SAASI,eAAgBt+L,E,CAMtDw/L,gBACA,OAAOx9L,KAAKixE,WAAW9vB,UAAU+6I,SAASC,uB,CAG1CqB,cAAUx/L,GACNA,EACAgC,KAAKutD,cAActM,UAAUi7I,SAASC,wBAEtCn8L,KAAKutD,cAAcrM,aAAag7I,SAASC,uB,CAOjDl7I,UAAUzb,GACNxlC,KAAKutD,cAActM,UAAUzb,E,CAOjC0b,aAAa1b,GACTxlC,KAAKutD,cAAcrM,aAAa1b,E,CAQpCi4J,UAAUj4J,EAAsBxnC,GACxBA,EACAgC,KAAKutD,cAActM,UAAUzb,GAG7BxlC,KAAKutD,cAAcrM,aAAa1b,E,CAQxC2b,UAAU3b,GACN,OAAOxlC,KAAKutD,cAAcpM,UAAU3b,E,CAMpCb,iBACA,OAAO3kC,KAA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"}